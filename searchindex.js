Search.setIndex({"docnames": ["api/nltk", "api/nltk.app", "api/nltk.app.chartparser", "api/nltk.app.chartparser_app", "api/nltk.app.chunkparser", "api/nltk.app.chunkparser_app", "api/nltk.app.collocations", "api/nltk.app.collocations_app", "api/nltk.app.concordance", "api/nltk.app.concordance_app", "api/nltk.app.nemo", "api/nltk.app.nemo_app", "api/nltk.app.rdparser", "api/nltk.app.rdparser_app", "api/nltk.app.srparser", "api/nltk.app.srparser_app", "api/nltk.app.wordfreq_app", "api/nltk.app.wordnet", "api/nltk.app.wordnet_app", "api/nltk.book", "api/nltk.ccg", "api/nltk.ccg.BackwardApplication", "api/nltk.ccg.BackwardBx", "api/nltk.ccg.BackwardCombinator", "api/nltk.ccg.BackwardComposition", "api/nltk.ccg.BackwardSx", "api/nltk.ccg.BackwardT", "api/nltk.ccg.CCGChart", "api/nltk.ccg.CCGChartParser", "api/nltk.ccg.CCGEdge", "api/nltk.ccg.CCGLeafEdge", "api/nltk.ccg.CCGLexicon", "api/nltk.ccg.DirectedBinaryCombinator", "api/nltk.ccg.ForwardApplication", "api/nltk.ccg.ForwardCombinator", "api/nltk.ccg.ForwardComposition", "api/nltk.ccg.ForwardSubstitution", "api/nltk.ccg.ForwardT", "api/nltk.ccg.UndirectedBinaryCombinator", "api/nltk.ccg.UndirectedComposition", "api/nltk.ccg.UndirectedFunctionApplication", "api/nltk.ccg.UndirectedSubstitution", "api/nltk.ccg.UndirectedTypeRaise", "api/nltk.ccg.api", "api/nltk.ccg.chart", "api/nltk.ccg.combinator", "api/nltk.ccg.lexicon", "api/nltk.ccg.logic", "api/nltk.chat", "api/nltk.chat.eliza", "api/nltk.chat.eliza_chat", "api/nltk.chat.iesha", "api/nltk.chat.iesha_chat", "api/nltk.chat.rude", "api/nltk.chat.rude_chat", "api/nltk.chat.suntsu", "api/nltk.chat.suntsu_chat", "api/nltk.chat.util", "api/nltk.chat.zen", "api/nltk.chat.zen_chat", "api/nltk.chunk", "api/nltk.chunk.ChunkScore", "api/nltk.chunk.RegexpChunkParser", "api/nltk.chunk.RegexpParser", "api/nltk.chunk.accuracy", "api/nltk.chunk.api", "api/nltk.chunk.conllstr2tree", "api/nltk.chunk.conlltags2tree", "api/nltk.chunk.ieerstr2tree", "api/nltk.chunk.named_entity", "api/nltk.chunk.ne_chunk", "api/nltk.chunk.ne_chunk_sents", "api/nltk.chunk.regexp", "api/nltk.chunk.tagstr2tree", "api/nltk.chunk.tree2conllstr", "api/nltk.chunk.tree2conlltags", "api/nltk.chunk.util", "api/nltk.classify", "api/nltk.classify.api", "api/nltk.classify.decisiontree", "api/nltk.classify.maxent", "api/nltk.classify.megam", "api/nltk.classify.naivebayes", "api/nltk.classify.positivenaivebayes", "api/nltk.classify.rte_classify", "api/nltk.classify.scikitlearn", "api/nltk.classify.senna", "api/nltk.classify.svm", "api/nltk.classify.tadm", "api/nltk.classify.textcat", "api/nltk.classify.util", "api/nltk.classify.weka", "api/nltk.cli", "api/nltk.cluster", "api/nltk.cluster.api", "api/nltk.cluster.em", "api/nltk.cluster.gaac", "api/nltk.cluster.kmeans", "api/nltk.cluster.util", "api/nltk.collections", "api/nltk.collocations", "api/nltk.collocations.BigramCollocationFinder", "api/nltk.collocations.QuadgramCollocationFinder", "api/nltk.collocations.TrigramCollocationFinder", "api/nltk.compat", "api/nltk.corpus", "api/nltk.corpus.europarl_raw", "api/nltk.corpus.reader", "api/nltk.corpus.reader.AlignedCorpusReader", "api/nltk.corpus.reader.AlpinoCorpusReader", "api/nltk.corpus.reader.BNCCorpusReader", "api/nltk.corpus.reader.BracketParseCorpusReader", "api/nltk.corpus.reader.CHILDESCorpusReader", "api/nltk.corpus.reader.CMUDictCorpusReader", "api/nltk.corpus.reader.CategorizedBracketParseCorpusReader", "api/nltk.corpus.reader.CategorizedPlaintextCorpusReader", "api/nltk.corpus.reader.CategorizedSentencesCorpusReader", "api/nltk.corpus.reader.CategorizedTaggedCorpusReader", "api/nltk.corpus.reader.ChasenCorpusReader", "api/nltk.corpus.reader.ChunkedCorpusReader", "api/nltk.corpus.reader.ComparativeSentencesCorpusReader", "api/nltk.corpus.reader.ConllChunkCorpusReader", "api/nltk.corpus.reader.ConllCorpusReader", "api/nltk.corpus.reader.CrubadanCorpusReader", "api/nltk.corpus.reader.DependencyCorpusReader", "api/nltk.corpus.reader.EuroparlCorpusReader", "api/nltk.corpus.reader.FramenetCorpusReader", "api/nltk.corpus.reader.IEERCorpusReader", "api/nltk.corpus.reader.IPIPANCorpusReader", "api/nltk.corpus.reader.IndianCorpusReader", "api/nltk.corpus.reader.KNBCorpusReader", "api/nltk.corpus.reader.LinThesaurusCorpusReader", "api/nltk.corpus.reader.MTECorpusReader", "api/nltk.corpus.reader.MWAPPDBCorpusReader", "api/nltk.corpus.reader.MacMorphoCorpusReader", "api/nltk.corpus.reader.NKJPCorpusReader", "api/nltk.corpus.reader.NPSChatCorpusReader", "api/nltk.corpus.reader.NombankCorpusReader", "api/nltk.corpus.reader.NonbreakingPrefixesCorpusReader", "api/nltk.corpus.reader.OpinionLexiconCorpusReader", "api/nltk.corpus.reader.PPAttachmentCorpusReader", "api/nltk.corpus.reader.PanLexLiteCorpusReader", "api/nltk.corpus.reader.PanlexSwadeshCorpusReader", "api/nltk.corpus.reader.Pl196xCorpusReader", "api/nltk.corpus.reader.PlaintextCorpusReader", "api/nltk.corpus.reader.PortugueseCategorizedPlaintextCorpusReader", "api/nltk.corpus.reader.PropbankCorpusReader", "api/nltk.corpus.reader.ProsConsCorpusReader", "api/nltk.corpus.reader.RTECorpusReader", "api/nltk.corpus.reader.ReviewsCorpusReader", "api/nltk.corpus.reader.SemcorCorpusReader", "api/nltk.corpus.reader.SensevalCorpusReader", "api/nltk.corpus.reader.SentiSynset", "api/nltk.corpus.reader.SentiWordNetCorpusReader", "api/nltk.corpus.reader.SinicaTreebankCorpusReader", "api/nltk.corpus.reader.StringCategoryCorpusReader", "api/nltk.corpus.reader.SwadeshCorpusReader", "api/nltk.corpus.reader.SwitchboardCorpusReader", "api/nltk.corpus.reader.TEICorpusView", "api/nltk.corpus.reader.TaggedCorpusReader", "api/nltk.corpus.reader.TimitCorpusReader", "api/nltk.corpus.reader.TimitTaggedCorpusReader", "api/nltk.corpus.reader.ToolboxCorpusReader", "api/nltk.corpus.reader.TwitterCorpusReader", "api/nltk.corpus.reader.UdhrCorpusReader", "api/nltk.corpus.reader.UnicharsCorpusReader", "api/nltk.corpus.reader.VerbnetCorpusReader", "api/nltk.corpus.reader.WordListCorpusReader", "api/nltk.corpus.reader.WordNetCorpusReader", "api/nltk.corpus.reader.WordNetICCorpusReader", "api/nltk.corpus.reader.XMLCorpusReader", "api/nltk.corpus.reader.YCOECorpusReader", "api/nltk.corpus.reader.aligned", "api/nltk.corpus.reader.api", "api/nltk.corpus.reader.bcp47", "api/nltk.corpus.reader.bnc", "api/nltk.corpus.reader.bracket_parse", "api/nltk.corpus.reader.categorized_sents", "api/nltk.corpus.reader.chasen", "api/nltk.corpus.reader.childes", "api/nltk.corpus.reader.chunked", "api/nltk.corpus.reader.cmudict", "api/nltk.corpus.reader.comparative_sents", "api/nltk.corpus.reader.conll", "api/nltk.corpus.reader.crubadan", "api/nltk.corpus.reader.dependency", "api/nltk.corpus.reader.framenet", "api/nltk.corpus.reader.ieer", "api/nltk.corpus.reader.indian", "api/nltk.corpus.reader.ipipan", "api/nltk.corpus.reader.knbc", "api/nltk.corpus.reader.lin", "api/nltk.corpus.reader.markdown", "api/nltk.corpus.reader.mte", "api/nltk.corpus.reader.nkjp", "api/nltk.corpus.reader.nombank", "api/nltk.corpus.reader.nps_chat", "api/nltk.corpus.reader.opinion_lexicon", "api/nltk.corpus.reader.panlex_lite", "api/nltk.corpus.reader.panlex_swadesh", "api/nltk.corpus.reader.pl196x", "api/nltk.corpus.reader.plaintext", "api/nltk.corpus.reader.ppattach", "api/nltk.corpus.reader.propbank", "api/nltk.corpus.reader.pros_cons", "api/nltk.corpus.reader.reviews", "api/nltk.corpus.reader.rte", "api/nltk.corpus.reader.semcor", "api/nltk.corpus.reader.senseval", "api/nltk.corpus.reader.sentiwordnet", "api/nltk.corpus.reader.sinica_treebank", "api/nltk.corpus.reader.string_category", "api/nltk.corpus.reader.switchboard", "api/nltk.corpus.reader.tagged", "api/nltk.corpus.reader.timit", "api/nltk.corpus.reader.toolbox", "api/nltk.corpus.reader.twitter", "api/nltk.corpus.reader.udhr", "api/nltk.corpus.reader.util", "api/nltk.corpus.reader.verbnet", "api/nltk.corpus.reader.wordlist", "api/nltk.corpus.reader.wordnet", "api/nltk.corpus.reader.xmldocs", "api/nltk.corpus.reader.ycoe", "api/nltk.corpus.util", "api/nltk.data", "api/nltk.decorators", "api/nltk.downloader", "api/nltk.downloader.download", "api/nltk.downloader.download_gui", "api/nltk.downloader.download_shell", "api/nltk.draw", "api/nltk.draw.CFGDemo", "api/nltk.draw.CFGEditor", "api/nltk.draw.ProductionList", "api/nltk.draw.TreeView", "api/nltk.draw.cfg", "api/nltk.draw.dispersion", "api/nltk.draw.dispersion_plot", "api/nltk.draw.draw_trees", "api/nltk.draw.table", "api/nltk.draw.tree", "api/nltk.draw.util", "api/nltk.featstruct", "api/nltk.featstruct.FeatDict", "api/nltk.featstruct.FeatList", "api/nltk.featstruct.FeatStruct", "api/nltk.featstruct.FeatStructReader", "api/nltk.featstruct.Feature", "api/nltk.featstruct.RangeFeature", "api/nltk.featstruct.SLASH", "api/nltk.featstruct.SlashFeature", "api/nltk.featstruct.TYPE", "api/nltk.featstruct.conflicts", "api/nltk.featstruct.subsumes", "api/nltk.featstruct.unify", "api/nltk.grammar", "api/nltk.grammar.CFG", "api/nltk.grammar.DependencyGrammar", "api/nltk.grammar.DependencyProduction", "api/nltk.grammar.Nonterminal", "api/nltk.grammar.PCFG", "api/nltk.grammar.ProbabilisticDependencyGrammar", "api/nltk.grammar.ProbabilisticProduction", "api/nltk.grammar.Production", "api/nltk.grammar.induce_pcfg", "api/nltk.grammar.nonterminals", "api/nltk.grammar.read_grammar", "api/nltk.help", "api/nltk.inference", "api/nltk.inference.CfgReadingCommand", "api/nltk.inference.DiscourseTester", "api/nltk.inference.DrtGlueReadingCommand", "api/nltk.inference.Mace", "api/nltk.inference.MaceCommand", "api/nltk.inference.ParallelProverBuilder", "api/nltk.inference.ParallelProverBuilderCommand", "api/nltk.inference.Prover9", "api/nltk.inference.Prover9Command", "api/nltk.inference.ReadingCommand", "api/nltk.inference.ResolutionProver", "api/nltk.inference.ResolutionProverCommand", "api/nltk.inference.TableauProver", "api/nltk.inference.TableauProverCommand", "api/nltk.inference.api", "api/nltk.inference.discourse", "api/nltk.inference.nonmonotonic", "api/nltk.inference.resolution", "api/nltk.inference.tableau", "api/nltk.internals", "api/nltk.jsontags", "api/nltk.langnames", "api/nltk.lazyimport", "api/nltk.lm", "api/nltk.lm.AbsoluteDiscountingInterpolated", "api/nltk.lm.KneserNeyInterpolated", "api/nltk.lm.Laplace", "api/nltk.lm.Lidstone", "api/nltk.lm.MLE", "api/nltk.lm.NgramCounter", "api/nltk.lm.StupidBackoff", "api/nltk.lm.Vocabulary", "api/nltk.lm.WittenBellInterpolated", "api/nltk.lm.api", "api/nltk.lm.counter", "api/nltk.lm.models", "api/nltk.lm.preprocessing", "api/nltk.lm.smoothing", "api/nltk.lm.util", "api/nltk.metrics", "api/nltk.metrics.AnnotationTask", "api/nltk.metrics.BigramAssocMeasures", "api/nltk.metrics.ConfusionMatrix", "api/nltk.metrics.ContingencyMeasures", "api/nltk.metrics.Paice", "api/nltk.metrics.QuadgramAssocMeasures", "api/nltk.metrics.TrigramAssocMeasures", "api/nltk.metrics.accuracy", "api/nltk.metrics.agreement", "api/nltk.metrics.aline", "api/nltk.metrics.approxrand", "api/nltk.metrics.association", "api/nltk.metrics.binary_distance", "api/nltk.metrics.custom_distance", "api/nltk.metrics.distance", "api/nltk.metrics.edit_distance", "api/nltk.metrics.edit_distance_align", "api/nltk.metrics.f_measure", "api/nltk.metrics.fractional_presence", "api/nltk.metrics.ghd", "api/nltk.metrics.interval_distance", "api/nltk.metrics.jaccard_distance", "api/nltk.metrics.log_likelihood", "api/nltk.metrics.masi_distance", "api/nltk.metrics.pk", "api/nltk.metrics.precision", "api/nltk.metrics.presence", "api/nltk.metrics.ranks_from_scores", "api/nltk.metrics.ranks_from_sequence", "api/nltk.metrics.recall", "api/nltk.metrics.scores", "api/nltk.metrics.segmentation", "api/nltk.metrics.spearman", "api/nltk.metrics.spearman_correlation", "api/nltk.metrics.windowdiff", "api/nltk.misc", "api/nltk.misc.babelfish", "api/nltk.misc.chomsky", "api/nltk.misc.minimalset", "api/nltk.misc.sort", "api/nltk.misc.wordfinder", "api/nltk.parse", "api/nltk.parse.BllipParser", "api/nltk.parse.BottomUpChartParser", "api/nltk.parse.BottomUpLeftCornerChartParser", "api/nltk.parse.BottomUpProbabilisticChartParser", "api/nltk.parse.CoreNLPDependencyParser", "api/nltk.parse.CoreNLPParser", "api/nltk.parse.DependencyEvaluator", "api/nltk.parse.DependencyGraph", "api/nltk.parse.EarleyChartParser", "api/nltk.parse.FeatureBottomUpChartParser", "api/nltk.parse.FeatureBottomUpLeftCornerChartParser", "api/nltk.parse.FeatureEarleyChartParser", "api/nltk.parse.FeatureIncrementalBottomUpChartParser", "api/nltk.parse.FeatureIncrementalBottomUpLeftCornerChartParser", "api/nltk.parse.FeatureIncrementalChartParser", "api/nltk.parse.FeatureIncrementalTopDownChartParser", "api/nltk.parse.FeatureTopDownChartParser", "api/nltk.parse.IncrementalBottomUpChartParser", "api/nltk.parse.IncrementalBottomUpLeftCornerChartParser", "api/nltk.parse.IncrementalChartParser", "api/nltk.parse.IncrementalLeftCornerChartParser", "api/nltk.parse.IncrementalTopDownChartParser", "api/nltk.parse.InsideChartParser", "api/nltk.parse.LeftCornerChartParser", "api/nltk.parse.LongestChartParser", "api/nltk.parse.MaltParser", "api/nltk.parse.NaiveBayesDependencyScorer", "api/nltk.parse.NonprojectiveDependencyParser", "api/nltk.parse.ProbabilisticNonprojectiveParser", "api/nltk.parse.ProbabilisticProjectiveDependencyParser", "api/nltk.parse.ProjectiveDependencyParser", "api/nltk.parse.RandomChartParser", "api/nltk.parse.RecursiveDescentParser", "api/nltk.parse.ShiftReduceParser", "api/nltk.parse.SteppingChartParser", "api/nltk.parse.SteppingRecursiveDescentParser", "api/nltk.parse.SteppingShiftReduceParser", "api/nltk.parse.TopDownChartParser", "api/nltk.parse.TransitionParser", "api/nltk.parse.UnsortedChartParser", "api/nltk.parse.ViterbiParser", "api/nltk.parse.api", "api/nltk.parse.bllip", "api/nltk.parse.chart", "api/nltk.parse.corenlp", "api/nltk.parse.earleychart", "api/nltk.parse.evaluate", "api/nltk.parse.featurechart", "api/nltk.parse.generate", "api/nltk.parse.malt", "api/nltk.parse.pchart", "api/nltk.parse.recursivedescent", "api/nltk.parse.shiftreduce", "api/nltk.parse.stanford", "api/nltk.parse.util", "api/nltk.parse.viterbi", "api/nltk.probability", "api/nltk.probability.ConditionalFreqDist", "api/nltk.probability.ConditionalProbDist", "api/nltk.probability.CrossValidationProbDist", "api/nltk.probability.DictionaryConditionalProbDist", "api/nltk.probability.DictionaryProbDist", "api/nltk.probability.ELEProbDist", "api/nltk.probability.FreqDist", "api/nltk.probability.HeldoutProbDist", "api/nltk.probability.KneserNeyProbDist", "api/nltk.probability.LaplaceProbDist", "api/nltk.probability.LidstoneProbDist", "api/nltk.probability.MLEProbDist", "api/nltk.probability.MutableProbDist", "api/nltk.probability.SimpleGoodTuringProbDist", "api/nltk.probability.UniformProbDist", "api/nltk.probability.WittenBellProbDist", "api/nltk.probability.add_logs", "api/nltk.probability.entropy", "api/nltk.probability.log_likelihood", "api/nltk.probability.sum_logs", "api/nltk.sem", "api/nltk.sem.ApplicationExpression", "api/nltk.sem.Assignment", "api/nltk.sem.Boxer", "api/nltk.sem.DRS", "api/nltk.sem.DrtExpression", "api/nltk.sem.Expression", "api/nltk.sem.FStructure", "api/nltk.sem.LogicalExpressionException", "api/nltk.sem.Model", "api/nltk.sem.Undefined", "api/nltk.sem.Valuation", "api/nltk.sem.Variable", "api/nltk.sem.arity", "api/nltk.sem.binding_ops", "api/nltk.sem.boolean_ops", "api/nltk.sem.chat80", "api/nltk.sem.clause", "api/nltk.sem.cooper_storage", "api/nltk.sem.drt", "api/nltk.sem.drt_glue_demo", "api/nltk.sem.equality_preds", "api/nltk.sem.evaluate", "api/nltk.sem.evaluate_sents", "api/nltk.sem.extract_rels", "api/nltk.sem.glue", "api/nltk.sem.hole", "api/nltk.sem.interpret_sents", "api/nltk.sem.is_rel", "api/nltk.sem.lfg", "api/nltk.sem.linearlogic", "api/nltk.sem.logic", "api/nltk.sem.parse_sents", "api/nltk.sem.read_logic", "api/nltk.sem.read_valuation", "api/nltk.sem.relextract", "api/nltk.sem.root_semrep", "api/nltk.sem.rtuple", "api/nltk.sem.set2rel", "api/nltk.sem.skolemize", "api/nltk.sem.util", "api/nltk.sentiment", "api/nltk.sentiment.SentimentAnalyzer", "api/nltk.sentiment.SentimentIntensityAnalyzer", "api/nltk.sentiment.sentiment_analyzer", "api/nltk.sentiment.util", "api/nltk.sentiment.vader", "api/nltk.stem", "api/nltk.stem.ARLSTem", "api/nltk.stem.ARLSTem2", "api/nltk.stem.Cistem", "api/nltk.stem.ISRIStemmer", "api/nltk.stem.LancasterStemmer", "api/nltk.stem.PorterStemmer", "api/nltk.stem.RSLPStemmer", "api/nltk.stem.RegexpStemmer", "api/nltk.stem.SnowballStemmer", "api/nltk.stem.WordNetLemmatizer", "api/nltk.stem.api", "api/nltk.stem.isri", "api/nltk.stem.lancaster", "api/nltk.stem.porter", "api/nltk.stem.regexp", "api/nltk.stem.rslp", "api/nltk.stem.snowball", "api/nltk.stem.util", "api/nltk.stem.wordnet", "api/nltk.tag", "api/nltk.tag.AffixTagger", "api/nltk.tag.BigramTagger", "api/nltk.tag.BrillTagger", "api/nltk.tag.BrillTaggerTrainer", "api/nltk.tag.CRFTagger", "api/nltk.tag.ClassifierBasedPOSTagger", "api/nltk.tag.ClassifierBasedTagger", "api/nltk.tag.DefaultTagger", "api/nltk.tag.HiddenMarkovModelTagger", "api/nltk.tag.HiddenMarkovModelTrainer", "api/nltk.tag.HunposTagger", "api/nltk.tag.NgramTagger", "api/nltk.tag.PerceptronTagger", "api/nltk.tag.RegexpTagger", "api/nltk.tag.SennaChunkTagger", "api/nltk.tag.SennaNERTagger", "api/nltk.tag.SennaTagger", "api/nltk.tag.TnT", "api/nltk.tag.TrigramTagger", "api/nltk.tag.UnigramTagger", "api/nltk.tag.api", "api/nltk.tag.brill", "api/nltk.tag.brill_trainer", "api/nltk.tag.crf", "api/nltk.tag.hmm", "api/nltk.tag.hunpos", "api/nltk.tag.mapping", "api/nltk.tag.perceptron", "api/nltk.tag.pos_tag", "api/nltk.tag.pos_tag_sents", "api/nltk.tag.senna", "api/nltk.tag.sequential", "api/nltk.tag.stanford", "api/nltk.tag.util", "api/nltk.tbl", "api/nltk.tbl.api", "api/nltk.tbl.demo", "api/nltk.tbl.erroranalysis", "api/nltk.tbl.feature", "api/nltk.tbl.rule", "api/nltk.tbl.template", "api/nltk.test", "api/nltk.test.all", "api/nltk.test.childes_fixt", "api/nltk.test.classify_fixt", "api/nltk.test.conftest", "api/nltk.test.gensim_fixt", "api/nltk.test.gluesemantics_malt_fixt", "api/nltk.test.portuguese_en_fixt", "api/nltk.test.probability_fixt", "api/nltk.test.setup_fixt", "api/nltk.test.unit", "api/nltk.test.unit.lm", "api/nltk.test.unit.lm.test_counter", "api/nltk.test.unit.lm.test_models", "api/nltk.test.unit.lm.test_preprocessing", "api/nltk.test.unit.lm.test_vocabulary", "api/nltk.test.unit.test_aline", "api/nltk.test.unit.test_bllip", "api/nltk.test.unit.test_brill", "api/nltk.test.unit.test_cfd_mutation", "api/nltk.test.unit.test_cfg2chomsky", "api/nltk.test.unit.test_chunk", "api/nltk.test.unit.test_classify", "api/nltk.test.unit.test_collocations", "api/nltk.test.unit.test_concordance", "api/nltk.test.unit.test_corenlp", "api/nltk.test.unit.test_corpora", "api/nltk.test.unit.test_corpus_views", "api/nltk.test.unit.test_data", "api/nltk.test.unit.test_disagreement", "api/nltk.test.unit.test_distance", "api/nltk.test.unit.test_downloader", "api/nltk.test.unit.test_freqdist", "api/nltk.test.unit.test_hmm", "api/nltk.test.unit.test_json2csv_corpus", "api/nltk.test.unit.test_json_serialization", "api/nltk.test.unit.test_metrics", "api/nltk.test.unit.test_naivebayes", "api/nltk.test.unit.test_nombank", "api/nltk.test.unit.test_pl196x", "api/nltk.test.unit.test_pos_tag", "api/nltk.test.unit.test_ribes", "api/nltk.test.unit.test_rte_classify", "api/nltk.test.unit.test_seekable_unicode_stream_reader", "api/nltk.test.unit.test_senna", "api/nltk.test.unit.test_stem", "api/nltk.test.unit.test_tag", "api/nltk.test.unit.test_tgrep", "api/nltk.test.unit.test_tokenize", "api/nltk.test.unit.test_twitter_auth", "api/nltk.test.unit.test_util", "api/nltk.test.unit.test_wordnet", "api/nltk.test.unit.translate", "api/nltk.test.unit.translate.test_bleu", "api/nltk.test.unit.translate.test_gdfa", "api/nltk.test.unit.translate.test_ibm1", "api/nltk.test.unit.translate.test_ibm2", "api/nltk.test.unit.translate.test_ibm3", "api/nltk.test.unit.translate.test_ibm4", "api/nltk.test.unit.translate.test_ibm5", "api/nltk.test.unit.translate.test_ibm_model", "api/nltk.test.unit.translate.test_meteor", "api/nltk.test.unit.translate.test_nist", "api/nltk.test.unit.translate.test_stack_decoder", "api/nltk.text", "api/nltk.text.ConcordanceIndex", "api/nltk.text.ContextIndex", "api/nltk.text.Text", "api/nltk.text.TextCollection", "api/nltk.text.TokenSearcher", "api/nltk.tgrep", "api/nltk.tgrep.ancestors", "api/nltk.tgrep.tgrep_compile", "api/nltk.tgrep.tgrep_nodes", "api/nltk.tgrep.tgrep_positions", "api/nltk.tgrep.tgrep_tokenize", "api/nltk.tgrep.treepositions_no_leaves", "api/nltk.tgrep.unique_ancestors", "api/nltk.tokenize", "api/nltk.tokenize.BlanklineTokenizer", "api/nltk.tokenize.LegalitySyllableTokenizer", "api/nltk.tokenize.LineTokenizer", "api/nltk.tokenize.MWETokenizer", "api/nltk.tokenize.NLTKWordTokenizer", "api/nltk.tokenize.PunktSentenceTokenizer", "api/nltk.tokenize.RegexpTokenizer", "api/nltk.tokenize.ReppTokenizer", "api/nltk.tokenize.SExprTokenizer", "api/nltk.tokenize.SpaceTokenizer", "api/nltk.tokenize.StanfordSegmenter", "api/nltk.tokenize.SyllableTokenizer", "api/nltk.tokenize.TabTokenizer", "api/nltk.tokenize.TextTilingTokenizer", "api/nltk.tokenize.ToktokTokenizer", "api/nltk.tokenize.TreebankWordDetokenizer", "api/nltk.tokenize.TreebankWordTokenizer", "api/nltk.tokenize.TweetTokenizer", "api/nltk.tokenize.WhitespaceTokenizer", "api/nltk.tokenize.WordPunctTokenizer", "api/nltk.tokenize.api", "api/nltk.tokenize.blankline_tokenize", "api/nltk.tokenize.casual", "api/nltk.tokenize.casual_tokenize", "api/nltk.tokenize.destructive", "api/nltk.tokenize.legality_principle", "api/nltk.tokenize.line_tokenize", "api/nltk.tokenize.mwe", "api/nltk.tokenize.nist", "api/nltk.tokenize.punkt", "api/nltk.tokenize.regexp", "api/nltk.tokenize.regexp_tokenize", "api/nltk.tokenize.repp", "api/nltk.tokenize.sent_tokenize", "api/nltk.tokenize.sexpr", "api/nltk.tokenize.sexpr_tokenize", "api/nltk.tokenize.simple", "api/nltk.tokenize.sonority_sequencing", "api/nltk.tokenize.stanford", "api/nltk.tokenize.stanford_segmenter", "api/nltk.tokenize.texttiling", "api/nltk.tokenize.toktok", "api/nltk.tokenize.treebank", "api/nltk.tokenize.util", "api/nltk.tokenize.word_tokenize", "api/nltk.tokenize.wordpunct_tokenize", "api/nltk.toolbox", "api/nltk.toolbox.StandardFormat", "api/nltk.toolbox.ToolboxData", "api/nltk.toolbox.ToolboxSettings", "api/nltk.translate", "api/nltk.translate.AlignedSent", "api/nltk.translate.Alignment", "api/nltk.translate.IBMModel", "api/nltk.translate.IBMModel1", "api/nltk.translate.IBMModel2", "api/nltk.translate.IBMModel3", "api/nltk.translate.IBMModel4", "api/nltk.translate.IBMModel5", "api/nltk.translate.PhraseTable", "api/nltk.translate.StackDecoder", "api/nltk.translate.alignment_error_rate", "api/nltk.translate.api", "api/nltk.translate.bleu", "api/nltk.translate.bleu_score", "api/nltk.translate.chrf", "api/nltk.translate.chrf_score", "api/nltk.translate.extract", "api/nltk.translate.gale_church", "api/nltk.translate.gdfa", "api/nltk.translate.gleu", "api/nltk.translate.gleu_score", "api/nltk.translate.grow_diag_final_and", "api/nltk.translate.ibm1", "api/nltk.translate.ibm2", "api/nltk.translate.ibm3", "api/nltk.translate.ibm4", "api/nltk.translate.ibm5", "api/nltk.translate.ibm_model", "api/nltk.translate.meteor", "api/nltk.translate.meteor_score", "api/nltk.translate.metrics", "api/nltk.translate.nist", "api/nltk.translate.nist_score", "api/nltk.translate.phrase_based", "api/nltk.translate.ribes", "api/nltk.translate.ribes_score", "api/nltk.translate.stack_decoder", "api/nltk.translate.trace", "api/nltk.tree", "api/nltk.tree.ImmutableMultiParentedTree", "api/nltk.tree.ImmutableParentedTree", "api/nltk.tree.ImmutableProbabilisticTree", "api/nltk.tree.ImmutableTree", "api/nltk.tree.MultiParentedTree", "api/nltk.tree.ParentedTree", "api/nltk.tree.ProbabilisticTree", "api/nltk.tree.Tree", "api/nltk.tree.TreePrettyPrinter", "api/nltk.tree.bracket_parse", "api/nltk.tree.chomsky_normal_form", "api/nltk.tree.collapse_unary", "api/nltk.tree.immutable", "api/nltk.tree.parented", "api/nltk.tree.parsing", "api/nltk.tree.prettyprinter", "api/nltk.tree.probabilistic", "api/nltk.tree.sinica_parse", "api/nltk.tree.transforms", "api/nltk.tree.un_chomsky_normal_form", "api/nltk.treeprettyprinter", "api/nltk.treetransforms", "api/nltk.twitter", "api/nltk.twitter.Authenticate", "api/nltk.twitter.Query", "api/nltk.twitter.Streamer", "api/nltk.twitter.TweetViewer", "api/nltk.twitter.TweetWriter", "api/nltk.twitter.Twitter", "api/nltk.twitter.api", "api/nltk.twitter.common", "api/nltk.twitter.credsfromfile", "api/nltk.twitter.twitter_demo", "api/nltk.twitter.twitterclient", "api/nltk.twitter.util", "api/nltk.util", "api/nltk.wsd", "api/nltk.wsd.lesk", "contribute", "data", "howto", "howto/bleu", "howto/bnc", "howto/ccg", "howto/ccg_semantics", "howto/chat80", "howto/childes", "howto/chunk", "howto/classify", "howto/collections", "howto/collocations", "howto/concordance", "howto/corpus", "howto/crubadan", "howto/data", "howto/dependency", "howto/discourse", "howto/drt", "howto/featgram", "howto/featstruct", "howto/framenet", "howto/generate", "howto/gensim", "howto/gluesemantics", "howto/gluesemantics_malt", "howto/grammar", "howto/grammartestsuites", "howto/inference", "howto/internals", "howto/japanese", "howto/lm", "howto/logic", "howto/meteor", "howto/metrics", "howto/misc", "howto/nonmonotonic", "howto/paice", "howto/parse", "howto/portuguese_en", "howto/probability", "howto/propbank", "howto/relextract", "howto/resolution", "howto/semantics", "howto/sentiment", "howto/sentiwordnet", "howto/simple", "howto/stem", "howto/tag", "howto/tokenize", "howto/toolbox", "howto/translate", "howto/tree", "howto/treeprettyprinter", "howto/treetransforms", "howto/util", "howto/wordnet", "howto/wordnet_lch", "howto/wsd", "index", "install", "news", "py-modindex", "team"], "filenames": ["api\\nltk.rst", "api\\nltk.app.rst", "api\\nltk.app.chartparser.rst", "api\\nltk.app.chartparser_app.rst", "api\\nltk.app.chunkparser.rst", "api\\nltk.app.chunkparser_app.rst", "api\\nltk.app.collocations.rst", "api\\nltk.app.collocations_app.rst", "api\\nltk.app.concordance.rst", "api\\nltk.app.concordance_app.rst", "api\\nltk.app.nemo.rst", "api\\nltk.app.nemo_app.rst", "api\\nltk.app.rdparser.rst", "api\\nltk.app.rdparser_app.rst", "api\\nltk.app.srparser.rst", "api\\nltk.app.srparser_app.rst", "api\\nltk.app.wordfreq_app.rst", "api\\nltk.app.wordnet.rst", "api\\nltk.app.wordnet_app.rst", "api\\nltk.book.rst", "api\\nltk.ccg.rst", "api\\nltk.ccg.BackwardApplication.rst", "api\\nltk.ccg.BackwardBx.rst", "api\\nltk.ccg.BackwardCombinator.rst", "api\\nltk.ccg.BackwardComposition.rst", "api\\nltk.ccg.BackwardSx.rst", "api\\nltk.ccg.BackwardT.rst", "api\\nltk.ccg.CCGChart.rst", "api\\nltk.ccg.CCGChartParser.rst", "api\\nltk.ccg.CCGEdge.rst", "api\\nltk.ccg.CCGLeafEdge.rst", "api\\nltk.ccg.CCGLexicon.rst", "api\\nltk.ccg.DirectedBinaryCombinator.rst", "api\\nltk.ccg.ForwardApplication.rst", "api\\nltk.ccg.ForwardCombinator.rst", "api\\nltk.ccg.ForwardComposition.rst", "api\\nltk.ccg.ForwardSubstitution.rst", "api\\nltk.ccg.ForwardT.rst", "api\\nltk.ccg.UndirectedBinaryCombinator.rst", "api\\nltk.ccg.UndirectedComposition.rst", "api\\nltk.ccg.UndirectedFunctionApplication.rst", "api\\nltk.ccg.UndirectedSubstitution.rst", "api\\nltk.ccg.UndirectedTypeRaise.rst", "api\\nltk.ccg.api.rst", "api\\nltk.ccg.chart.rst", "api\\nltk.ccg.combinator.rst", "api\\nltk.ccg.lexicon.rst", "api\\nltk.ccg.logic.rst", "api\\nltk.chat.rst", "api\\nltk.chat.eliza.rst", "api\\nltk.chat.eliza_chat.rst", "api\\nltk.chat.iesha.rst", "api\\nltk.chat.iesha_chat.rst", "api\\nltk.chat.rude.rst", "api\\nltk.chat.rude_chat.rst", "api\\nltk.chat.suntsu.rst", "api\\nltk.chat.suntsu_chat.rst", "api\\nltk.chat.util.rst", "api\\nltk.chat.zen.rst", "api\\nltk.chat.zen_chat.rst", "api\\nltk.chunk.rst", "api\\nltk.chunk.ChunkScore.rst", "api\\nltk.chunk.RegexpChunkParser.rst", "api\\nltk.chunk.RegexpParser.rst", "api\\nltk.chunk.accuracy.rst", "api\\nltk.chunk.api.rst", "api\\nltk.chunk.conllstr2tree.rst", "api\\nltk.chunk.conlltags2tree.rst", "api\\nltk.chunk.ieerstr2tree.rst", "api\\nltk.chunk.named_entity.rst", "api\\nltk.chunk.ne_chunk.rst", "api\\nltk.chunk.ne_chunk_sents.rst", "api\\nltk.chunk.regexp.rst", "api\\nltk.chunk.tagstr2tree.rst", "api\\nltk.chunk.tree2conllstr.rst", "api\\nltk.chunk.tree2conlltags.rst", "api\\nltk.chunk.util.rst", "api\\nltk.classify.rst", "api\\nltk.classify.api.rst", "api\\nltk.classify.decisiontree.rst", "api\\nltk.classify.maxent.rst", "api\\nltk.classify.megam.rst", "api\\nltk.classify.naivebayes.rst", "api\\nltk.classify.positivenaivebayes.rst", "api\\nltk.classify.rte_classify.rst", "api\\nltk.classify.scikitlearn.rst", "api\\nltk.classify.senna.rst", "api\\nltk.classify.svm.rst", "api\\nltk.classify.tadm.rst", "api\\nltk.classify.textcat.rst", "api\\nltk.classify.util.rst", "api\\nltk.classify.weka.rst", "api\\nltk.cli.rst", "api\\nltk.cluster.rst", "api\\nltk.cluster.api.rst", "api\\nltk.cluster.em.rst", "api\\nltk.cluster.gaac.rst", "api\\nltk.cluster.kmeans.rst", "api\\nltk.cluster.util.rst", "api\\nltk.collections.rst", "api\\nltk.collocations.rst", "api\\nltk.collocations.BigramCollocationFinder.rst", "api\\nltk.collocations.QuadgramCollocationFinder.rst", "api\\nltk.collocations.TrigramCollocationFinder.rst", "api\\nltk.compat.rst", "api\\nltk.corpus.rst", "api\\nltk.corpus.europarl_raw.rst", "api\\nltk.corpus.reader.rst", "api\\nltk.corpus.reader.AlignedCorpusReader.rst", "api\\nltk.corpus.reader.AlpinoCorpusReader.rst", "api\\nltk.corpus.reader.BNCCorpusReader.rst", "api\\nltk.corpus.reader.BracketParseCorpusReader.rst", "api\\nltk.corpus.reader.CHILDESCorpusReader.rst", "api\\nltk.corpus.reader.CMUDictCorpusReader.rst", "api\\nltk.corpus.reader.CategorizedBracketParseCorpusReader.rst", "api\\nltk.corpus.reader.CategorizedPlaintextCorpusReader.rst", "api\\nltk.corpus.reader.CategorizedSentencesCorpusReader.rst", "api\\nltk.corpus.reader.CategorizedTaggedCorpusReader.rst", "api\\nltk.corpus.reader.ChasenCorpusReader.rst", "api\\nltk.corpus.reader.ChunkedCorpusReader.rst", "api\\nltk.corpus.reader.ComparativeSentencesCorpusReader.rst", "api\\nltk.corpus.reader.ConllChunkCorpusReader.rst", "api\\nltk.corpus.reader.ConllCorpusReader.rst", "api\\nltk.corpus.reader.CrubadanCorpusReader.rst", "api\\nltk.corpus.reader.DependencyCorpusReader.rst", "api\\nltk.corpus.reader.EuroparlCorpusReader.rst", "api\\nltk.corpus.reader.FramenetCorpusReader.rst", "api\\nltk.corpus.reader.IEERCorpusReader.rst", "api\\nltk.corpus.reader.IPIPANCorpusReader.rst", "api\\nltk.corpus.reader.IndianCorpusReader.rst", "api\\nltk.corpus.reader.KNBCorpusReader.rst", "api\\nltk.corpus.reader.LinThesaurusCorpusReader.rst", "api\\nltk.corpus.reader.MTECorpusReader.rst", "api\\nltk.corpus.reader.MWAPPDBCorpusReader.rst", "api\\nltk.corpus.reader.MacMorphoCorpusReader.rst", "api\\nltk.corpus.reader.NKJPCorpusReader.rst", "api\\nltk.corpus.reader.NPSChatCorpusReader.rst", "api\\nltk.corpus.reader.NombankCorpusReader.rst", "api\\nltk.corpus.reader.NonbreakingPrefixesCorpusReader.rst", "api\\nltk.corpus.reader.OpinionLexiconCorpusReader.rst", "api\\nltk.corpus.reader.PPAttachmentCorpusReader.rst", "api\\nltk.corpus.reader.PanLexLiteCorpusReader.rst", "api\\nltk.corpus.reader.PanlexSwadeshCorpusReader.rst", "api\\nltk.corpus.reader.Pl196xCorpusReader.rst", "api\\nltk.corpus.reader.PlaintextCorpusReader.rst", "api\\nltk.corpus.reader.PortugueseCategorizedPlaintextCorpusReader.rst", "api\\nltk.corpus.reader.PropbankCorpusReader.rst", "api\\nltk.corpus.reader.ProsConsCorpusReader.rst", "api\\nltk.corpus.reader.RTECorpusReader.rst", "api\\nltk.corpus.reader.ReviewsCorpusReader.rst", "api\\nltk.corpus.reader.SemcorCorpusReader.rst", "api\\nltk.corpus.reader.SensevalCorpusReader.rst", "api\\nltk.corpus.reader.SentiSynset.rst", "api\\nltk.corpus.reader.SentiWordNetCorpusReader.rst", "api\\nltk.corpus.reader.SinicaTreebankCorpusReader.rst", "api\\nltk.corpus.reader.StringCategoryCorpusReader.rst", "api\\nltk.corpus.reader.SwadeshCorpusReader.rst", "api\\nltk.corpus.reader.SwitchboardCorpusReader.rst", "api\\nltk.corpus.reader.TEICorpusView.rst", "api\\nltk.corpus.reader.TaggedCorpusReader.rst", "api\\nltk.corpus.reader.TimitCorpusReader.rst", "api\\nltk.corpus.reader.TimitTaggedCorpusReader.rst", "api\\nltk.corpus.reader.ToolboxCorpusReader.rst", "api\\nltk.corpus.reader.TwitterCorpusReader.rst", "api\\nltk.corpus.reader.UdhrCorpusReader.rst", "api\\nltk.corpus.reader.UnicharsCorpusReader.rst", "api\\nltk.corpus.reader.VerbnetCorpusReader.rst", "api\\nltk.corpus.reader.WordListCorpusReader.rst", "api\\nltk.corpus.reader.WordNetCorpusReader.rst", "api\\nltk.corpus.reader.WordNetICCorpusReader.rst", "api\\nltk.corpus.reader.XMLCorpusReader.rst", "api\\nltk.corpus.reader.YCOECorpusReader.rst", "api\\nltk.corpus.reader.aligned.rst", "api\\nltk.corpus.reader.api.rst", "api\\nltk.corpus.reader.bcp47.rst", "api\\nltk.corpus.reader.bnc.rst", "api\\nltk.corpus.reader.bracket_parse.rst", "api\\nltk.corpus.reader.categorized_sents.rst", "api\\nltk.corpus.reader.chasen.rst", "api\\nltk.corpus.reader.childes.rst", "api\\nltk.corpus.reader.chunked.rst", "api\\nltk.corpus.reader.cmudict.rst", "api\\nltk.corpus.reader.comparative_sents.rst", "api\\nltk.corpus.reader.conll.rst", "api\\nltk.corpus.reader.crubadan.rst", "api\\nltk.corpus.reader.dependency.rst", "api\\nltk.corpus.reader.framenet.rst", "api\\nltk.corpus.reader.ieer.rst", "api\\nltk.corpus.reader.indian.rst", "api\\nltk.corpus.reader.ipipan.rst", "api\\nltk.corpus.reader.knbc.rst", "api\\nltk.corpus.reader.lin.rst", "api\\nltk.corpus.reader.markdown.rst", "api\\nltk.corpus.reader.mte.rst", "api\\nltk.corpus.reader.nkjp.rst", "api\\nltk.corpus.reader.nombank.rst", "api\\nltk.corpus.reader.nps_chat.rst", "api\\nltk.corpus.reader.opinion_lexicon.rst", "api\\nltk.corpus.reader.panlex_lite.rst", "api\\nltk.corpus.reader.panlex_swadesh.rst", "api\\nltk.corpus.reader.pl196x.rst", "api\\nltk.corpus.reader.plaintext.rst", "api\\nltk.corpus.reader.ppattach.rst", "api\\nltk.corpus.reader.propbank.rst", "api\\nltk.corpus.reader.pros_cons.rst", "api\\nltk.corpus.reader.reviews.rst", "api\\nltk.corpus.reader.rte.rst", "api\\nltk.corpus.reader.semcor.rst", "api\\nltk.corpus.reader.senseval.rst", "api\\nltk.corpus.reader.sentiwordnet.rst", "api\\nltk.corpus.reader.sinica_treebank.rst", "api\\nltk.corpus.reader.string_category.rst", "api\\nltk.corpus.reader.switchboard.rst", "api\\nltk.corpus.reader.tagged.rst", "api\\nltk.corpus.reader.timit.rst", "api\\nltk.corpus.reader.toolbox.rst", "api\\nltk.corpus.reader.twitter.rst", "api\\nltk.corpus.reader.udhr.rst", "api\\nltk.corpus.reader.util.rst", "api\\nltk.corpus.reader.verbnet.rst", "api\\nltk.corpus.reader.wordlist.rst", "api\\nltk.corpus.reader.wordnet.rst", "api\\nltk.corpus.reader.xmldocs.rst", "api\\nltk.corpus.reader.ycoe.rst", "api\\nltk.corpus.util.rst", "api\\nltk.data.rst", "api\\nltk.decorators.rst", "api\\nltk.downloader.rst", "api\\nltk.downloader.download.rst", "api\\nltk.downloader.download_gui.rst", "api\\nltk.downloader.download_shell.rst", "api\\nltk.draw.rst", "api\\nltk.draw.CFGDemo.rst", "api\\nltk.draw.CFGEditor.rst", "api\\nltk.draw.ProductionList.rst", "api\\nltk.draw.TreeView.rst", "api\\nltk.draw.cfg.rst", "api\\nltk.draw.dispersion.rst", "api\\nltk.draw.dispersion_plot.rst", "api\\nltk.draw.draw_trees.rst", "api\\nltk.draw.table.rst", "api\\nltk.draw.tree.rst", "api\\nltk.draw.util.rst", "api\\nltk.featstruct.rst", "api\\nltk.featstruct.FeatDict.rst", "api\\nltk.featstruct.FeatList.rst", "api\\nltk.featstruct.FeatStruct.rst", "api\\nltk.featstruct.FeatStructReader.rst", "api\\nltk.featstruct.Feature.rst", "api\\nltk.featstruct.RangeFeature.rst", "api\\nltk.featstruct.SLASH.rst", "api\\nltk.featstruct.SlashFeature.rst", "api\\nltk.featstruct.TYPE.rst", "api\\nltk.featstruct.conflicts.rst", "api\\nltk.featstruct.subsumes.rst", "api\\nltk.featstruct.unify.rst", "api\\nltk.grammar.rst", "api\\nltk.grammar.CFG.rst", "api\\nltk.grammar.DependencyGrammar.rst", "api\\nltk.grammar.DependencyProduction.rst", "api\\nltk.grammar.Nonterminal.rst", "api\\nltk.grammar.PCFG.rst", "api\\nltk.grammar.ProbabilisticDependencyGrammar.rst", "api\\nltk.grammar.ProbabilisticProduction.rst", "api\\nltk.grammar.Production.rst", "api\\nltk.grammar.induce_pcfg.rst", "api\\nltk.grammar.nonterminals.rst", "api\\nltk.grammar.read_grammar.rst", "api\\nltk.help.rst", "api\\nltk.inference.rst", "api\\nltk.inference.CfgReadingCommand.rst", "api\\nltk.inference.DiscourseTester.rst", "api\\nltk.inference.DrtGlueReadingCommand.rst", "api\\nltk.inference.Mace.rst", "api\\nltk.inference.MaceCommand.rst", "api\\nltk.inference.ParallelProverBuilder.rst", "api\\nltk.inference.ParallelProverBuilderCommand.rst", "api\\nltk.inference.Prover9.rst", "api\\nltk.inference.Prover9Command.rst", "api\\nltk.inference.ReadingCommand.rst", "api\\nltk.inference.ResolutionProver.rst", "api\\nltk.inference.ResolutionProverCommand.rst", "api\\nltk.inference.TableauProver.rst", "api\\nltk.inference.TableauProverCommand.rst", "api\\nltk.inference.api.rst", "api\\nltk.inference.discourse.rst", "api\\nltk.inference.nonmonotonic.rst", "api\\nltk.inference.resolution.rst", "api\\nltk.inference.tableau.rst", "api\\nltk.internals.rst", "api\\nltk.jsontags.rst", "api\\nltk.langnames.rst", "api\\nltk.lazyimport.rst", "api\\nltk.lm.rst", "api\\nltk.lm.AbsoluteDiscountingInterpolated.rst", "api\\nltk.lm.KneserNeyInterpolated.rst", "api\\nltk.lm.Laplace.rst", "api\\nltk.lm.Lidstone.rst", "api\\nltk.lm.MLE.rst", "api\\nltk.lm.NgramCounter.rst", "api\\nltk.lm.StupidBackoff.rst", "api\\nltk.lm.Vocabulary.rst", "api\\nltk.lm.WittenBellInterpolated.rst", "api\\nltk.lm.api.rst", "api\\nltk.lm.counter.rst", "api\\nltk.lm.models.rst", "api\\nltk.lm.preprocessing.rst", "api\\nltk.lm.smoothing.rst", "api\\nltk.lm.util.rst", "api\\nltk.metrics.rst", "api\\nltk.metrics.AnnotationTask.rst", "api\\nltk.metrics.BigramAssocMeasures.rst", "api\\nltk.metrics.ConfusionMatrix.rst", "api\\nltk.metrics.ContingencyMeasures.rst", "api\\nltk.metrics.Paice.rst", "api\\nltk.metrics.QuadgramAssocMeasures.rst", "api\\nltk.metrics.TrigramAssocMeasures.rst", "api\\nltk.metrics.accuracy.rst", "api\\nltk.metrics.agreement.rst", "api\\nltk.metrics.aline.rst", "api\\nltk.metrics.approxrand.rst", "api\\nltk.metrics.association.rst", "api\\nltk.metrics.binary_distance.rst", "api\\nltk.metrics.custom_distance.rst", "api\\nltk.metrics.distance.rst", "api\\nltk.metrics.edit_distance.rst", "api\\nltk.metrics.edit_distance_align.rst", "api\\nltk.metrics.f_measure.rst", "api\\nltk.metrics.fractional_presence.rst", "api\\nltk.metrics.ghd.rst", "api\\nltk.metrics.interval_distance.rst", "api\\nltk.metrics.jaccard_distance.rst", "api\\nltk.metrics.log_likelihood.rst", "api\\nltk.metrics.masi_distance.rst", "api\\nltk.metrics.pk.rst", "api\\nltk.metrics.precision.rst", "api\\nltk.metrics.presence.rst", "api\\nltk.metrics.ranks_from_scores.rst", "api\\nltk.metrics.ranks_from_sequence.rst", "api\\nltk.metrics.recall.rst", "api\\nltk.metrics.scores.rst", "api\\nltk.metrics.segmentation.rst", "api\\nltk.metrics.spearman.rst", "api\\nltk.metrics.spearman_correlation.rst", "api\\nltk.metrics.windowdiff.rst", "api\\nltk.misc.rst", "api\\nltk.misc.babelfish.rst", "api\\nltk.misc.chomsky.rst", "api\\nltk.misc.minimalset.rst", "api\\nltk.misc.sort.rst", "api\\nltk.misc.wordfinder.rst", "api\\nltk.parse.rst", "api\\nltk.parse.BllipParser.rst", "api\\nltk.parse.BottomUpChartParser.rst", "api\\nltk.parse.BottomUpLeftCornerChartParser.rst", "api\\nltk.parse.BottomUpProbabilisticChartParser.rst", "api\\nltk.parse.CoreNLPDependencyParser.rst", "api\\nltk.parse.CoreNLPParser.rst", "api\\nltk.parse.DependencyEvaluator.rst", "api\\nltk.parse.DependencyGraph.rst", "api\\nltk.parse.EarleyChartParser.rst", "api\\nltk.parse.FeatureBottomUpChartParser.rst", "api\\nltk.parse.FeatureBottomUpLeftCornerChartParser.rst", "api\\nltk.parse.FeatureEarleyChartParser.rst", "api\\nltk.parse.FeatureIncrementalBottomUpChartParser.rst", "api\\nltk.parse.FeatureIncrementalBottomUpLeftCornerChartParser.rst", "api\\nltk.parse.FeatureIncrementalChartParser.rst", "api\\nltk.parse.FeatureIncrementalTopDownChartParser.rst", "api\\nltk.parse.FeatureTopDownChartParser.rst", "api\\nltk.parse.IncrementalBottomUpChartParser.rst", "api\\nltk.parse.IncrementalBottomUpLeftCornerChartParser.rst", "api\\nltk.parse.IncrementalChartParser.rst", "api\\nltk.parse.IncrementalLeftCornerChartParser.rst", "api\\nltk.parse.IncrementalTopDownChartParser.rst", "api\\nltk.parse.InsideChartParser.rst", "api\\nltk.parse.LeftCornerChartParser.rst", "api\\nltk.parse.LongestChartParser.rst", "api\\nltk.parse.MaltParser.rst", "api\\nltk.parse.NaiveBayesDependencyScorer.rst", "api\\nltk.parse.NonprojectiveDependencyParser.rst", "api\\nltk.parse.ProbabilisticNonprojectiveParser.rst", "api\\nltk.parse.ProbabilisticProjectiveDependencyParser.rst", "api\\nltk.parse.ProjectiveDependencyParser.rst", "api\\nltk.parse.RandomChartParser.rst", "api\\nltk.parse.RecursiveDescentParser.rst", "api\\nltk.parse.ShiftReduceParser.rst", "api\\nltk.parse.SteppingChartParser.rst", "api\\nltk.parse.SteppingRecursiveDescentParser.rst", "api\\nltk.parse.SteppingShiftReduceParser.rst", "api\\nltk.parse.TopDownChartParser.rst", "api\\nltk.parse.TransitionParser.rst", "api\\nltk.parse.UnsortedChartParser.rst", "api\\nltk.parse.ViterbiParser.rst", "api\\nltk.parse.api.rst", "api\\nltk.parse.bllip.rst", "api\\nltk.parse.chart.rst", "api\\nltk.parse.corenlp.rst", "api\\nltk.parse.earleychart.rst", "api\\nltk.parse.evaluate.rst", "api\\nltk.parse.featurechart.rst", "api\\nltk.parse.generate.rst", "api\\nltk.parse.malt.rst", "api\\nltk.parse.pchart.rst", "api\\nltk.parse.recursivedescent.rst", "api\\nltk.parse.shiftreduce.rst", "api\\nltk.parse.stanford.rst", "api\\nltk.parse.util.rst", "api\\nltk.parse.viterbi.rst", "api\\nltk.probability.rst", "api\\nltk.probability.ConditionalFreqDist.rst", "api\\nltk.probability.ConditionalProbDist.rst", "api\\nltk.probability.CrossValidationProbDist.rst", "api\\nltk.probability.DictionaryConditionalProbDist.rst", "api\\nltk.probability.DictionaryProbDist.rst", "api\\nltk.probability.ELEProbDist.rst", "api\\nltk.probability.FreqDist.rst", "api\\nltk.probability.HeldoutProbDist.rst", "api\\nltk.probability.KneserNeyProbDist.rst", "api\\nltk.probability.LaplaceProbDist.rst", "api\\nltk.probability.LidstoneProbDist.rst", "api\\nltk.probability.MLEProbDist.rst", "api\\nltk.probability.MutableProbDist.rst", "api\\nltk.probability.SimpleGoodTuringProbDist.rst", "api\\nltk.probability.UniformProbDist.rst", "api\\nltk.probability.WittenBellProbDist.rst", "api\\nltk.probability.add_logs.rst", "api\\nltk.probability.entropy.rst", "api\\nltk.probability.log_likelihood.rst", "api\\nltk.probability.sum_logs.rst", "api\\nltk.sem.rst", "api\\nltk.sem.ApplicationExpression.rst", "api\\nltk.sem.Assignment.rst", "api\\nltk.sem.Boxer.rst", "api\\nltk.sem.DRS.rst", "api\\nltk.sem.DrtExpression.rst", "api\\nltk.sem.Expression.rst", "api\\nltk.sem.FStructure.rst", "api\\nltk.sem.LogicalExpressionException.rst", "api\\nltk.sem.Model.rst", "api\\nltk.sem.Undefined.rst", "api\\nltk.sem.Valuation.rst", "api\\nltk.sem.Variable.rst", "api\\nltk.sem.arity.rst", "api\\nltk.sem.binding_ops.rst", "api\\nltk.sem.boolean_ops.rst", "api\\nltk.sem.chat80.rst", "api\\nltk.sem.clause.rst", "api\\nltk.sem.cooper_storage.rst", "api\\nltk.sem.drt.rst", "api\\nltk.sem.drt_glue_demo.rst", "api\\nltk.sem.equality_preds.rst", "api\\nltk.sem.evaluate.rst", "api\\nltk.sem.evaluate_sents.rst", "api\\nltk.sem.extract_rels.rst", "api\\nltk.sem.glue.rst", "api\\nltk.sem.hole.rst", "api\\nltk.sem.interpret_sents.rst", "api\\nltk.sem.is_rel.rst", "api\\nltk.sem.lfg.rst", "api\\nltk.sem.linearlogic.rst", "api\\nltk.sem.logic.rst", "api\\nltk.sem.parse_sents.rst", "api\\nltk.sem.read_logic.rst", "api\\nltk.sem.read_valuation.rst", "api\\nltk.sem.relextract.rst", "api\\nltk.sem.root_semrep.rst", "api\\nltk.sem.rtuple.rst", "api\\nltk.sem.set2rel.rst", "api\\nltk.sem.skolemize.rst", "api\\nltk.sem.util.rst", "api\\nltk.sentiment.rst", "api\\nltk.sentiment.SentimentAnalyzer.rst", "api\\nltk.sentiment.SentimentIntensityAnalyzer.rst", "api\\nltk.sentiment.sentiment_analyzer.rst", "api\\nltk.sentiment.util.rst", "api\\nltk.sentiment.vader.rst", "api\\nltk.stem.rst", "api\\nltk.stem.ARLSTem.rst", "api\\nltk.stem.ARLSTem2.rst", "api\\nltk.stem.Cistem.rst", "api\\nltk.stem.ISRIStemmer.rst", "api\\nltk.stem.LancasterStemmer.rst", "api\\nltk.stem.PorterStemmer.rst", "api\\nltk.stem.RSLPStemmer.rst", "api\\nltk.stem.RegexpStemmer.rst", "api\\nltk.stem.SnowballStemmer.rst", "api\\nltk.stem.WordNetLemmatizer.rst", "api\\nltk.stem.api.rst", "api\\nltk.stem.isri.rst", "api\\nltk.stem.lancaster.rst", "api\\nltk.stem.porter.rst", "api\\nltk.stem.regexp.rst", "api\\nltk.stem.rslp.rst", "api\\nltk.stem.snowball.rst", "api\\nltk.stem.util.rst", "api\\nltk.stem.wordnet.rst", "api\\nltk.tag.rst", "api\\nltk.tag.AffixTagger.rst", "api\\nltk.tag.BigramTagger.rst", "api\\nltk.tag.BrillTagger.rst", "api\\nltk.tag.BrillTaggerTrainer.rst", "api\\nltk.tag.CRFTagger.rst", "api\\nltk.tag.ClassifierBasedPOSTagger.rst", "api\\nltk.tag.ClassifierBasedTagger.rst", "api\\nltk.tag.DefaultTagger.rst", "api\\nltk.tag.HiddenMarkovModelTagger.rst", "api\\nltk.tag.HiddenMarkovModelTrainer.rst", "api\\nltk.tag.HunposTagger.rst", "api\\nltk.tag.NgramTagger.rst", "api\\nltk.tag.PerceptronTagger.rst", "api\\nltk.tag.RegexpTagger.rst", "api\\nltk.tag.SennaChunkTagger.rst", "api\\nltk.tag.SennaNERTagger.rst", "api\\nltk.tag.SennaTagger.rst", "api\\nltk.tag.TnT.rst", "api\\nltk.tag.TrigramTagger.rst", "api\\nltk.tag.UnigramTagger.rst", "api\\nltk.tag.api.rst", "api\\nltk.tag.brill.rst", "api\\nltk.tag.brill_trainer.rst", "api\\nltk.tag.crf.rst", "api\\nltk.tag.hmm.rst", "api\\nltk.tag.hunpos.rst", "api\\nltk.tag.mapping.rst", "api\\nltk.tag.perceptron.rst", "api\\nltk.tag.pos_tag.rst", "api\\nltk.tag.pos_tag_sents.rst", "api\\nltk.tag.senna.rst", "api\\nltk.tag.sequential.rst", "api\\nltk.tag.stanford.rst", "api\\nltk.tag.util.rst", "api\\nltk.tbl.rst", "api\\nltk.tbl.api.rst", "api\\nltk.tbl.demo.rst", "api\\nltk.tbl.erroranalysis.rst", "api\\nltk.tbl.feature.rst", "api\\nltk.tbl.rule.rst", "api\\nltk.tbl.template.rst", "api\\nltk.test.rst", "api\\nltk.test.all.rst", "api\\nltk.test.childes_fixt.rst", "api\\nltk.test.classify_fixt.rst", "api\\nltk.test.conftest.rst", "api\\nltk.test.gensim_fixt.rst", "api\\nltk.test.gluesemantics_malt_fixt.rst", "api\\nltk.test.portuguese_en_fixt.rst", "api\\nltk.test.probability_fixt.rst", "api\\nltk.test.setup_fixt.rst", "api\\nltk.test.unit.rst", "api\\nltk.test.unit.lm.rst", "api\\nltk.test.unit.lm.test_counter.rst", "api\\nltk.test.unit.lm.test_models.rst", "api\\nltk.test.unit.lm.test_preprocessing.rst", "api\\nltk.test.unit.lm.test_vocabulary.rst", "api\\nltk.test.unit.test_aline.rst", "api\\nltk.test.unit.test_bllip.rst", "api\\nltk.test.unit.test_brill.rst", "api\\nltk.test.unit.test_cfd_mutation.rst", "api\\nltk.test.unit.test_cfg2chomsky.rst", "api\\nltk.test.unit.test_chunk.rst", "api\\nltk.test.unit.test_classify.rst", "api\\nltk.test.unit.test_collocations.rst", "api\\nltk.test.unit.test_concordance.rst", "api\\nltk.test.unit.test_corenlp.rst", "api\\nltk.test.unit.test_corpora.rst", "api\\nltk.test.unit.test_corpus_views.rst", "api\\nltk.test.unit.test_data.rst", "api\\nltk.test.unit.test_disagreement.rst", "api\\nltk.test.unit.test_distance.rst", "api\\nltk.test.unit.test_downloader.rst", "api\\nltk.test.unit.test_freqdist.rst", "api\\nltk.test.unit.test_hmm.rst", "api\\nltk.test.unit.test_json2csv_corpus.rst", "api\\nltk.test.unit.test_json_serialization.rst", "api\\nltk.test.unit.test_metrics.rst", "api\\nltk.test.unit.test_naivebayes.rst", "api\\nltk.test.unit.test_nombank.rst", "api\\nltk.test.unit.test_pl196x.rst", "api\\nltk.test.unit.test_pos_tag.rst", "api\\nltk.test.unit.test_ribes.rst", "api\\nltk.test.unit.test_rte_classify.rst", "api\\nltk.test.unit.test_seekable_unicode_stream_reader.rst", "api\\nltk.test.unit.test_senna.rst", "api\\nltk.test.unit.test_stem.rst", "api\\nltk.test.unit.test_tag.rst", "api\\nltk.test.unit.test_tgrep.rst", "api\\nltk.test.unit.test_tokenize.rst", "api\\nltk.test.unit.test_twitter_auth.rst", "api\\nltk.test.unit.test_util.rst", "api\\nltk.test.unit.test_wordnet.rst", "api\\nltk.test.unit.translate.rst", "api\\nltk.test.unit.translate.test_bleu.rst", "api\\nltk.test.unit.translate.test_gdfa.rst", "api\\nltk.test.unit.translate.test_ibm1.rst", "api\\nltk.test.unit.translate.test_ibm2.rst", "api\\nltk.test.unit.translate.test_ibm3.rst", "api\\nltk.test.unit.translate.test_ibm4.rst", "api\\nltk.test.unit.translate.test_ibm5.rst", "api\\nltk.test.unit.translate.test_ibm_model.rst", "api\\nltk.test.unit.translate.test_meteor.rst", "api\\nltk.test.unit.translate.test_nist.rst", "api\\nltk.test.unit.translate.test_stack_decoder.rst", "api\\nltk.text.rst", "api\\nltk.text.ConcordanceIndex.rst", "api\\nltk.text.ContextIndex.rst", "api\\nltk.text.Text.rst", "api\\nltk.text.TextCollection.rst", "api\\nltk.text.TokenSearcher.rst", "api\\nltk.tgrep.rst", "api\\nltk.tgrep.ancestors.rst", "api\\nltk.tgrep.tgrep_compile.rst", "api\\nltk.tgrep.tgrep_nodes.rst", "api\\nltk.tgrep.tgrep_positions.rst", "api\\nltk.tgrep.tgrep_tokenize.rst", "api\\nltk.tgrep.treepositions_no_leaves.rst", "api\\nltk.tgrep.unique_ancestors.rst", "api\\nltk.tokenize.rst", "api\\nltk.tokenize.BlanklineTokenizer.rst", "api\\nltk.tokenize.LegalitySyllableTokenizer.rst", "api\\nltk.tokenize.LineTokenizer.rst", "api\\nltk.tokenize.MWETokenizer.rst", "api\\nltk.tokenize.NLTKWordTokenizer.rst", "api\\nltk.tokenize.PunktSentenceTokenizer.rst", "api\\nltk.tokenize.RegexpTokenizer.rst", "api\\nltk.tokenize.ReppTokenizer.rst", "api\\nltk.tokenize.SExprTokenizer.rst", "api\\nltk.tokenize.SpaceTokenizer.rst", "api\\nltk.tokenize.StanfordSegmenter.rst", "api\\nltk.tokenize.SyllableTokenizer.rst", "api\\nltk.tokenize.TabTokenizer.rst", "api\\nltk.tokenize.TextTilingTokenizer.rst", "api\\nltk.tokenize.ToktokTokenizer.rst", "api\\nltk.tokenize.TreebankWordDetokenizer.rst", "api\\nltk.tokenize.TreebankWordTokenizer.rst", "api\\nltk.tokenize.TweetTokenizer.rst", "api\\nltk.tokenize.WhitespaceTokenizer.rst", "api\\nltk.tokenize.WordPunctTokenizer.rst", "api\\nltk.tokenize.api.rst", "api\\nltk.tokenize.blankline_tokenize.rst", "api\\nltk.tokenize.casual.rst", "api\\nltk.tokenize.casual_tokenize.rst", "api\\nltk.tokenize.destructive.rst", "api\\nltk.tokenize.legality_principle.rst", "api\\nltk.tokenize.line_tokenize.rst", "api\\nltk.tokenize.mwe.rst", "api\\nltk.tokenize.nist.rst", "api\\nltk.tokenize.punkt.rst", "api\\nltk.tokenize.regexp.rst", "api\\nltk.tokenize.regexp_tokenize.rst", "api\\nltk.tokenize.repp.rst", "api\\nltk.tokenize.sent_tokenize.rst", "api\\nltk.tokenize.sexpr.rst", "api\\nltk.tokenize.sexpr_tokenize.rst", "api\\nltk.tokenize.simple.rst", "api\\nltk.tokenize.sonority_sequencing.rst", "api\\nltk.tokenize.stanford.rst", "api\\nltk.tokenize.stanford_segmenter.rst", "api\\nltk.tokenize.texttiling.rst", "api\\nltk.tokenize.toktok.rst", "api\\nltk.tokenize.treebank.rst", "api\\nltk.tokenize.util.rst", "api\\nltk.tokenize.word_tokenize.rst", "api\\nltk.tokenize.wordpunct_tokenize.rst", "api\\nltk.toolbox.rst", "api\\nltk.toolbox.StandardFormat.rst", "api\\nltk.toolbox.ToolboxData.rst", "api\\nltk.toolbox.ToolboxSettings.rst", "api\\nltk.translate.rst", "api\\nltk.translate.AlignedSent.rst", "api\\nltk.translate.Alignment.rst", "api\\nltk.translate.IBMModel.rst", "api\\nltk.translate.IBMModel1.rst", "api\\nltk.translate.IBMModel2.rst", "api\\nltk.translate.IBMModel3.rst", "api\\nltk.translate.IBMModel4.rst", "api\\nltk.translate.IBMModel5.rst", "api\\nltk.translate.PhraseTable.rst", "api\\nltk.translate.StackDecoder.rst", "api\\nltk.translate.alignment_error_rate.rst", "api\\nltk.translate.api.rst", "api\\nltk.translate.bleu.rst", "api\\nltk.translate.bleu_score.rst", "api\\nltk.translate.chrf.rst", "api\\nltk.translate.chrf_score.rst", "api\\nltk.translate.extract.rst", "api\\nltk.translate.gale_church.rst", "api\\nltk.translate.gdfa.rst", "api\\nltk.translate.gleu.rst", "api\\nltk.translate.gleu_score.rst", "api\\nltk.translate.grow_diag_final_and.rst", "api\\nltk.translate.ibm1.rst", "api\\nltk.translate.ibm2.rst", "api\\nltk.translate.ibm3.rst", "api\\nltk.translate.ibm4.rst", "api\\nltk.translate.ibm5.rst", "api\\nltk.translate.ibm_model.rst", "api\\nltk.translate.meteor.rst", "api\\nltk.translate.meteor_score.rst", "api\\nltk.translate.metrics.rst", "api\\nltk.translate.nist.rst", "api\\nltk.translate.nist_score.rst", "api\\nltk.translate.phrase_based.rst", "api\\nltk.translate.ribes.rst", "api\\nltk.translate.ribes_score.rst", "api\\nltk.translate.stack_decoder.rst", "api\\nltk.translate.trace.rst", "api\\nltk.tree.rst", "api\\nltk.tree.ImmutableMultiParentedTree.rst", "api\\nltk.tree.ImmutableParentedTree.rst", "api\\nltk.tree.ImmutableProbabilisticTree.rst", "api\\nltk.tree.ImmutableTree.rst", "api\\nltk.tree.MultiParentedTree.rst", "api\\nltk.tree.ParentedTree.rst", "api\\nltk.tree.ProbabilisticTree.rst", "api\\nltk.tree.Tree.rst", "api\\nltk.tree.TreePrettyPrinter.rst", "api\\nltk.tree.bracket_parse.rst", "api\\nltk.tree.chomsky_normal_form.rst", "api\\nltk.tree.collapse_unary.rst", "api\\nltk.tree.immutable.rst", "api\\nltk.tree.parented.rst", "api\\nltk.tree.parsing.rst", "api\\nltk.tree.prettyprinter.rst", "api\\nltk.tree.probabilistic.rst", "api\\nltk.tree.sinica_parse.rst", "api\\nltk.tree.transforms.rst", "api\\nltk.tree.un_chomsky_normal_form.rst", "api\\nltk.treeprettyprinter.rst", "api\\nltk.treetransforms.rst", "api\\nltk.twitter.rst", "api\\nltk.twitter.Authenticate.rst", "api\\nltk.twitter.Query.rst", "api\\nltk.twitter.Streamer.rst", "api\\nltk.twitter.TweetViewer.rst", "api\\nltk.twitter.TweetWriter.rst", "api\\nltk.twitter.Twitter.rst", "api\\nltk.twitter.api.rst", "api\\nltk.twitter.common.rst", "api\\nltk.twitter.credsfromfile.rst", "api\\nltk.twitter.twitter_demo.rst", "api\\nltk.twitter.twitterclient.rst", "api\\nltk.twitter.util.rst", "api\\nltk.util.rst", "api\\nltk.wsd.rst", "api\\nltk.wsd.lesk.rst", "contribute.rst", "data.rst", "howto.rst", "howto\\bleu.rst", "howto\\bnc.rst", "howto\\ccg.rst", "howto\\ccg_semantics.rst", "howto\\chat80.rst", "howto\\childes.rst", "howto\\chunk.rst", "howto\\classify.rst", "howto\\collections.rst", "howto\\collocations.rst", "howto\\concordance.rst", "howto\\corpus.rst", "howto\\crubadan.rst", "howto\\data.rst", "howto\\dependency.rst", "howto\\discourse.rst", "howto\\drt.rst", "howto\\featgram.rst", "howto\\featstruct.rst", "howto\\framenet.rst", "howto\\generate.rst", "howto\\gensim.rst", "howto\\gluesemantics.rst", "howto\\gluesemantics_malt.rst", "howto\\grammar.rst", "howto\\grammartestsuites.rst", "howto\\inference.rst", "howto\\internals.rst", "howto\\japanese.rst", "howto\\lm.rst", "howto\\logic.rst", "howto\\meteor.rst", "howto\\metrics.rst", "howto\\misc.rst", "howto\\nonmonotonic.rst", "howto\\paice.rst", "howto\\parse.rst", "howto\\portuguese_en.rst", "howto\\probability.rst", "howto\\propbank.rst", "howto\\relextract.rst", "howto\\resolution.rst", "howto\\semantics.rst", "howto\\sentiment.rst", "howto\\sentiwordnet.rst", "howto\\simple.rst", "howto\\stem.rst", "howto\\tag.rst", "howto\\tokenize.rst", "howto\\toolbox.rst", "howto\\translate.rst", "howto\\tree.rst", "howto\\treeprettyprinter.rst", "howto\\treetransforms.rst", "howto\\util.rst", "howto\\wordnet.rst", "howto\\wordnet_lch.rst", "howto\\wsd.rst", "index.rst", "install.rst", "news.rst", "py-modindex.rst", "team.rst"], "titles": ["nltk package", "nltk.app package", "nltk.app.chartparser", "nltk.app.chartparser_app module", "nltk.app.chunkparser", "nltk.app.chunkparser_app module", "nltk.app.collocations", "nltk.app.collocations_app module", "nltk.app.concordance", "nltk.app.concordance_app module", "nltk.app.nemo", "nltk.app.nemo_app module", "nltk.app.rdparser", "nltk.app.rdparser_app module", "nltk.app.srparser", "nltk.app.srparser_app module", "nltk.app.wordfreq_app module", "nltk.app.wordnet", "nltk.app.wordnet_app module", "nltk.book module", "nltk.ccg package", "nltk.ccg.BackwardApplication", "nltk.ccg.BackwardBx", "nltk.ccg.BackwardCombinator", "nltk.ccg.BackwardComposition", "nltk.ccg.BackwardSx", "nltk.ccg.BackwardT", "nltk.ccg.CCGChart", "nltk.ccg.CCGChartParser", "nltk.ccg.CCGEdge", "nltk.ccg.CCGLeafEdge", "nltk.ccg.CCGLexicon", "nltk.ccg.DirectedBinaryCombinator", "nltk.ccg.ForwardApplication", "nltk.ccg.ForwardCombinator", "nltk.ccg.ForwardComposition", "nltk.ccg.ForwardSubstitution", "nltk.ccg.ForwardT", "nltk.ccg.UndirectedBinaryCombinator", "nltk.ccg.UndirectedComposition", "nltk.ccg.UndirectedFunctionApplication", "nltk.ccg.UndirectedSubstitution", "nltk.ccg.UndirectedTypeRaise", "nltk.ccg.api module", "nltk.ccg.chart module", "nltk.ccg.combinator module", "nltk.ccg.lexicon module", "nltk.ccg.logic module", "nltk.chat package", "nltk.chat.eliza module", "nltk.chat.eliza_chat", "nltk.chat.iesha module", "nltk.chat.iesha_chat", "nltk.chat.rude module", "nltk.chat.rude_chat", "nltk.chat.suntsu module", "nltk.chat.suntsu_chat", "nltk.chat.util module", "nltk.chat.zen module", "nltk.chat.zen_chat", "nltk.chunk package", "nltk.chunk.ChunkScore", "nltk.chunk.RegexpChunkParser", "nltk.chunk.RegexpParser", "nltk.chunk.accuracy", "nltk.chunk.api module", "nltk.chunk.conllstr2tree", "nltk.chunk.conlltags2tree", "nltk.chunk.ieerstr2tree", "nltk.chunk.named_entity module", "nltk.chunk.ne_chunk", "nltk.chunk.ne_chunk_sents", "nltk.chunk.regexp module", "nltk.chunk.tagstr2tree", "nltk.chunk.tree2conllstr", "nltk.chunk.tree2conlltags", "nltk.chunk.util module", "nltk.classify package", "nltk.classify.api module", "nltk.classify.decisiontree module", "nltk.classify.maxent module", "nltk.classify.megam module", "nltk.classify.naivebayes module", "nltk.classify.positivenaivebayes module", "nltk.classify.rte_classify module", "nltk.classify.scikitlearn module", "nltk.classify.senna module", "nltk.classify.svm module", "nltk.classify.tadm module", "nltk.classify.textcat module", "nltk.classify.util module", "nltk.classify.weka module", "nltk.cli module", "nltk.cluster package", "nltk.cluster.api module", "nltk.cluster.em module", "nltk.cluster.gaac module", "nltk.cluster.kmeans module", "nltk.cluster.util module", "nltk.collections module", "nltk.collocations module", "nltk.collocations.BigramCollocationFinder", "nltk.collocations.QuadgramCollocationFinder", "nltk.collocations.TrigramCollocationFinder", "nltk.compat module", "nltk.corpus package", "nltk.corpus.europarl_raw module", "nltk.corpus.reader package", "nltk.corpus.reader.AlignedCorpusReader", "nltk.corpus.reader.AlpinoCorpusReader", "nltk.corpus.reader.BNCCorpusReader", "nltk.corpus.reader.BracketParseCorpusReader", "nltk.corpus.reader.CHILDESCorpusReader", "nltk.corpus.reader.CMUDictCorpusReader", "nltk.corpus.reader.CategorizedBracketParseCorpusReader", "nltk.corpus.reader.CategorizedPlaintextCorpusReader", "nltk.corpus.reader.CategorizedSentencesCorpusReader", "nltk.corpus.reader.CategorizedTaggedCorpusReader", "nltk.corpus.reader.ChasenCorpusReader", "nltk.corpus.reader.ChunkedCorpusReader", "nltk.corpus.reader.ComparativeSentencesCorpusReader", "nltk.corpus.reader.ConllChunkCorpusReader", "nltk.corpus.reader.ConllCorpusReader", "nltk.corpus.reader.CrubadanCorpusReader", "nltk.corpus.reader.DependencyCorpusReader", "nltk.corpus.reader.EuroparlCorpusReader", "nltk.corpus.reader.FramenetCorpusReader", "nltk.corpus.reader.IEERCorpusReader", "nltk.corpus.reader.IPIPANCorpusReader", "nltk.corpus.reader.IndianCorpusReader", "nltk.corpus.reader.KNBCorpusReader", "nltk.corpus.reader.LinThesaurusCorpusReader", "nltk.corpus.reader.MTECorpusReader", "nltk.corpus.reader.MWAPPDBCorpusReader", "nltk.corpus.reader.MacMorphoCorpusReader", "nltk.corpus.reader.NKJPCorpusReader", "nltk.corpus.reader.NPSChatCorpusReader", "nltk.corpus.reader.NombankCorpusReader", "nltk.corpus.reader.NonbreakingPrefixesCorpusReader", "nltk.corpus.reader.OpinionLexiconCorpusReader", "nltk.corpus.reader.PPAttachmentCorpusReader", "nltk.corpus.reader.PanLexLiteCorpusReader", "nltk.corpus.reader.PanlexSwadeshCorpusReader", "nltk.corpus.reader.Pl196xCorpusReader", "nltk.corpus.reader.PlaintextCorpusReader", "nltk.corpus.reader.PortugueseCategorizedPlaintextCorpusReader", "nltk.corpus.reader.PropbankCorpusReader", "nltk.corpus.reader.ProsConsCorpusReader", "nltk.corpus.reader.RTECorpusReader", "nltk.corpus.reader.ReviewsCorpusReader", "nltk.corpus.reader.SemcorCorpusReader", "nltk.corpus.reader.SensevalCorpusReader", "nltk.corpus.reader.SentiSynset", "nltk.corpus.reader.SentiWordNetCorpusReader", "nltk.corpus.reader.SinicaTreebankCorpusReader", "nltk.corpus.reader.StringCategoryCorpusReader", "nltk.corpus.reader.SwadeshCorpusReader", "nltk.corpus.reader.SwitchboardCorpusReader", "nltk.corpus.reader.TEICorpusView", "nltk.corpus.reader.TaggedCorpusReader", "nltk.corpus.reader.TimitCorpusReader", "nltk.corpus.reader.TimitTaggedCorpusReader", "nltk.corpus.reader.ToolboxCorpusReader", "nltk.corpus.reader.TwitterCorpusReader", "nltk.corpus.reader.UdhrCorpusReader", "nltk.corpus.reader.UnicharsCorpusReader", "nltk.corpus.reader.VerbnetCorpusReader", "nltk.corpus.reader.WordListCorpusReader", "nltk.corpus.reader.WordNetCorpusReader", "nltk.corpus.reader.WordNetICCorpusReader", "nltk.corpus.reader.XMLCorpusReader", "nltk.corpus.reader.YCOECorpusReader", "nltk.corpus.reader.aligned module", "nltk.corpus.reader.api module", "nltk.corpus.reader.bcp47 module", "nltk.corpus.reader.bnc module", "nltk.corpus.reader.bracket_parse module", "nltk.corpus.reader.categorized_sents module", "nltk.corpus.reader.chasen module", "nltk.corpus.reader.childes module", "nltk.corpus.reader.chunked module", "nltk.corpus.reader.cmudict module", "nltk.corpus.reader.comparative_sents module", "nltk.corpus.reader.conll module", "nltk.corpus.reader.crubadan module", "nltk.corpus.reader.dependency module", "nltk.corpus.reader.framenet module", "nltk.corpus.reader.ieer module", "nltk.corpus.reader.indian module", "nltk.corpus.reader.ipipan module", "nltk.corpus.reader.knbc module", "nltk.corpus.reader.lin module", "nltk.corpus.reader.markdown module", "nltk.corpus.reader.mte module", "nltk.corpus.reader.nkjp module", "nltk.corpus.reader.nombank module", "nltk.corpus.reader.nps_chat module", "nltk.corpus.reader.opinion_lexicon module", "nltk.corpus.reader.panlex_lite module", "nltk.corpus.reader.panlex_swadesh module", "nltk.corpus.reader.pl196x module", "nltk.corpus.reader.plaintext module", "nltk.corpus.reader.ppattach module", "nltk.corpus.reader.propbank module", "nltk.corpus.reader.pros_cons module", "nltk.corpus.reader.reviews module", "nltk.corpus.reader.rte module", "nltk.corpus.reader.semcor module", "nltk.corpus.reader.senseval module", "nltk.corpus.reader.sentiwordnet module", "nltk.corpus.reader.sinica_treebank module", "nltk.corpus.reader.string_category module", "nltk.corpus.reader.switchboard module", "nltk.corpus.reader.tagged module", "nltk.corpus.reader.timit module", "nltk.corpus.reader.toolbox module", "nltk.corpus.reader.twitter module", "nltk.corpus.reader.udhr module", "nltk.corpus.reader.util module", "nltk.corpus.reader.verbnet module", "nltk.corpus.reader.wordlist module", "nltk.corpus.reader.wordnet module", "nltk.corpus.reader.xmldocs module", "nltk.corpus.reader.ycoe module", "nltk.corpus.util module", "nltk.data module", "nltk.decorators module", "nltk.downloader module", "nltk.downloader.download", "nltk.downloader.download_gui", "nltk.downloader.download_shell", "nltk.draw package", "nltk.draw.CFGDemo", "nltk.draw.CFGEditor", "nltk.draw.ProductionList", "nltk.draw.TreeView", "nltk.draw.cfg module", "nltk.draw.dispersion module", "nltk.draw.dispersion_plot", "nltk.draw.draw_trees", "nltk.draw.table module", "nltk.draw.tree module", "nltk.draw.util module", "nltk.featstruct module", "nltk.featstruct.FeatDict", "nltk.featstruct.FeatList", "nltk.featstruct.FeatStruct", "nltk.featstruct.FeatStructReader", "nltk.featstruct.Feature", "nltk.featstruct.RangeFeature", "nltk.featstruct.SLASH", "nltk.featstruct.SlashFeature", "nltk.featstruct.TYPE", "nltk.featstruct.conflicts", "nltk.featstruct.subsumes", "nltk.featstruct.unify", "nltk.grammar module", "nltk.grammar.CFG", "nltk.grammar.DependencyGrammar", "nltk.grammar.DependencyProduction", "nltk.grammar.Nonterminal", "nltk.grammar.PCFG", "nltk.grammar.ProbabilisticDependencyGrammar", "nltk.grammar.ProbabilisticProduction", "nltk.grammar.Production", "nltk.grammar.induce_pcfg", "nltk.grammar.nonterminals", "nltk.grammar.read_grammar", "nltk.help module", "nltk.inference package", "nltk.inference.CfgReadingCommand", "nltk.inference.DiscourseTester", "nltk.inference.DrtGlueReadingCommand", "nltk.inference.mace module", "nltk.inference.MaceCommand", "nltk.inference.ParallelProverBuilder", "nltk.inference.ParallelProverBuilderCommand", "nltk.inference.prover9 module", "nltk.inference.Prover9Command", "nltk.inference.ReadingCommand", "nltk.inference.ResolutionProver", "nltk.inference.ResolutionProverCommand", "nltk.inference.TableauProver", "nltk.inference.TableauProverCommand", "nltk.inference.api module", "nltk.inference.discourse module", "nltk.inference.nonmonotonic module", "nltk.inference.resolution module", "nltk.inference.tableau module", "nltk.internals module", "nltk.jsontags module", "nltk.langnames module", "nltk.lazyimport module", "nltk.lm package", "nltk.lm.AbsoluteDiscountingInterpolated", "nltk.lm.KneserNeyInterpolated", "nltk.lm.Laplace", "nltk.lm.Lidstone", "nltk.lm.MLE", "nltk.lm.NgramCounter", "nltk.lm.StupidBackoff", "nltk.lm.vocabulary module", "nltk.lm.WittenBellInterpolated", "nltk.lm.api module", "nltk.lm.counter module", "nltk.lm.models module", "nltk.lm.preprocessing module", "nltk.lm.smoothing module", "nltk.lm.util module", "nltk.metrics package", "nltk.metrics.AnnotationTask", "nltk.metrics.BigramAssocMeasures", "nltk.metrics.confusionmatrix module", "nltk.metrics.ContingencyMeasures", "nltk.metrics.paice module", "nltk.metrics.QuadgramAssocMeasures", "nltk.metrics.TrigramAssocMeasures", "nltk.metrics.accuracy", "nltk.metrics.agreement module", "nltk.metrics.aline module", "nltk.metrics.approxrand", "nltk.metrics.association module", "nltk.metrics.binary_distance", "nltk.metrics.custom_distance", "nltk.metrics.distance module", "nltk.metrics.edit_distance", "nltk.metrics.edit_distance_align", "nltk.metrics.f_measure", "nltk.metrics.fractional_presence", "nltk.metrics.ghd", "nltk.metrics.interval_distance", "nltk.metrics.jaccard_distance", "nltk.metrics.log_likelihood", "nltk.metrics.masi_distance", "nltk.metrics.pk", "nltk.metrics.precision", "nltk.metrics.presence", "nltk.metrics.ranks_from_scores", "nltk.metrics.ranks_from_sequence", "nltk.metrics.recall", "nltk.metrics.scores module", "nltk.metrics.segmentation module", "nltk.metrics.spearman module", "nltk.metrics.spearman_correlation", "nltk.metrics.windowdiff", "nltk.misc package", "nltk.misc.babelfish module", "nltk.misc.chomsky module", "nltk.misc.minimalset module", "nltk.misc.sort module", "nltk.misc.wordfinder module", "nltk.parse package", "nltk.parse.BllipParser", "nltk.parse.BottomUpChartParser", "nltk.parse.BottomUpLeftCornerChartParser", "nltk.parse.BottomUpProbabilisticChartParser", "nltk.parse.CoreNLPDependencyParser", "nltk.parse.CoreNLPParser", "nltk.parse.DependencyEvaluator", "nltk.parse.dependencygraph module", "nltk.parse.EarleyChartParser", "nltk.parse.FeatureBottomUpChartParser", "nltk.parse.FeatureBottomUpLeftCornerChartParser", "nltk.parse.FeatureEarleyChartParser", "nltk.parse.FeatureIncrementalBottomUpChartParser", "nltk.parse.FeatureIncrementalBottomUpLeftCornerChartParser", "nltk.parse.FeatureIncrementalChartParser", "nltk.parse.FeatureIncrementalTopDownChartParser", "nltk.parse.FeatureTopDownChartParser", "nltk.parse.IncrementalBottomUpChartParser", "nltk.parse.IncrementalBottomUpLeftCornerChartParser", "nltk.parse.IncrementalChartParser", "nltk.parse.IncrementalLeftCornerChartParser", "nltk.parse.IncrementalTopDownChartParser", "nltk.parse.InsideChartParser", "nltk.parse.LeftCornerChartParser", "nltk.parse.LongestChartParser", "nltk.parse.MaltParser", "nltk.parse.NaiveBayesDependencyScorer", "nltk.parse.nonprojectivedependencyparser module", "nltk.parse.ProbabilisticNonprojectiveParser", "nltk.parse.ProbabilisticProjectiveDependencyParser", "nltk.parse.projectivedependencyparser module", "nltk.parse.RandomChartParser", "nltk.parse.RecursiveDescentParser", "nltk.parse.ShiftReduceParser", "nltk.parse.SteppingChartParser", "nltk.parse.SteppingRecursiveDescentParser", "nltk.parse.SteppingShiftReduceParser", "nltk.parse.TopDownChartParser", "nltk.parse.transitionparser module", "nltk.parse.UnsortedChartParser", "nltk.parse.ViterbiParser", "nltk.parse.api module", "nltk.parse.bllip module", "nltk.parse.chart module", "nltk.parse.corenlp module", "nltk.parse.earleychart module", "nltk.parse.evaluate module", "nltk.parse.featurechart module", "nltk.parse.generate module", "nltk.parse.malt module", "nltk.parse.pchart module", "nltk.parse.recursivedescent module", "nltk.parse.shiftreduce module", "nltk.parse.stanford module", "nltk.parse.util module", "nltk.parse.viterbi module", "nltk.probability module", "nltk.probability.ConditionalFreqDist", "nltk.probability.ConditionalProbDist", "nltk.probability.CrossValidationProbDist", "nltk.probability.DictionaryConditionalProbDist", "nltk.probability.DictionaryProbDist", "nltk.probability.ELEProbDist", "nltk.probability.FreqDist", "nltk.probability.HeldoutProbDist", "nltk.probability.KneserNeyProbDist", "nltk.probability.LaplaceProbDist", "nltk.probability.LidstoneProbDist", "nltk.probability.MLEProbDist", "nltk.probability.MutableProbDist", "nltk.probability.SimpleGoodTuringProbDist", "nltk.probability.UniformProbDist", "nltk.probability.WittenBellProbDist", "nltk.probability.add_logs", "nltk.probability.entropy", "nltk.probability.log_likelihood", "nltk.probability.sum_logs", "nltk.sem package", "nltk.sem.ApplicationExpression", "nltk.sem.Assignment", "nltk.sem.boxer module", "nltk.sem.DRS", "nltk.sem.DrtExpression", "nltk.sem.Expression", "nltk.sem.FStructure", "nltk.sem.LogicalExpressionException", "nltk.sem.Model", "nltk.sem.Undefined", "nltk.sem.Valuation", "nltk.sem.Variable", "nltk.sem.arity", "nltk.sem.binding_ops", "nltk.sem.boolean_ops", "nltk.sem.chat80 module", "nltk.sem.clause", "nltk.sem.cooper_storage module", "nltk.sem.drt module", "nltk.sem.drt_glue_demo module", "nltk.sem.equality_preds", "nltk.sem.evaluate module", "nltk.sem.evaluate_sents", "nltk.sem.extract_rels", "nltk.sem.glue module", "nltk.sem.hole module", "nltk.sem.interpret_sents", "nltk.sem.is_rel", "nltk.sem.lfg module", "nltk.sem.linearlogic module", "nltk.sem.logic module", "nltk.sem.parse_sents", "nltk.sem.read_logic", "nltk.sem.read_valuation", "nltk.sem.relextract module", "nltk.sem.root_semrep", "nltk.sem.rtuple", "nltk.sem.set2rel", "nltk.sem.skolemize module", "nltk.sem.util module", "nltk.sentiment package", "nltk.sentiment.SentimentAnalyzer", "nltk.sentiment.SentimentIntensityAnalyzer", "nltk.sentiment.sentiment_analyzer module", "nltk.sentiment.util module", "nltk.sentiment.vader module", "nltk.stem package", "nltk.stem.arlstem module", "nltk.stem.arlstem2 module", "nltk.stem.cistem module", "nltk.stem.ISRIStemmer", "nltk.stem.LancasterStemmer", "nltk.stem.PorterStemmer", "nltk.stem.RSLPStemmer", "nltk.stem.RegexpStemmer", "nltk.stem.SnowballStemmer", "nltk.stem.WordNetLemmatizer", "nltk.stem.api module", "nltk.stem.isri module", "nltk.stem.lancaster module", "nltk.stem.porter module", "nltk.stem.regexp module", "nltk.stem.rslp module", "nltk.stem.snowball module", "nltk.stem.util module", "nltk.stem.wordnet module", "nltk.tag package", "nltk.tag.AffixTagger", "nltk.tag.BigramTagger", "nltk.tag.BrillTagger", "nltk.tag.BrillTaggerTrainer", "nltk.tag.CRFTagger", "nltk.tag.ClassifierBasedPOSTagger", "nltk.tag.ClassifierBasedTagger", "nltk.tag.DefaultTagger", "nltk.tag.HiddenMarkovModelTagger", "nltk.tag.HiddenMarkovModelTrainer", "nltk.tag.HunposTagger", "nltk.tag.NgramTagger", "nltk.tag.PerceptronTagger", "nltk.tag.RegexpTagger", "nltk.tag.SennaChunkTagger", "nltk.tag.SennaNERTagger", "nltk.tag.SennaTagger", "nltk.tag.tnt module", "nltk.tag.TrigramTagger", "nltk.tag.UnigramTagger", "nltk.tag.api module", "nltk.tag.brill module", "nltk.tag.brill_trainer module", "nltk.tag.crf module", "nltk.tag.hmm module", "nltk.tag.hunpos module", "nltk.tag.mapping module", "nltk.tag.perceptron module", "nltk.tag.pos_tag", "nltk.tag.pos_tag_sents", "nltk.tag.senna module", "nltk.tag.sequential module", "nltk.tag.stanford module", "nltk.tag.util module", "nltk.tbl package", "nltk.tbl.api module", "nltk.tbl.demo module", "nltk.tbl.erroranalysis module", "nltk.tbl.feature module", "nltk.tbl.rule module", "nltk.tbl.template module", "nltk.test package", "nltk.test.all module", "nltk.test.childes_fixt module", "nltk.test.classify_fixt module", "nltk.test.conftest module", "nltk.test.gensim_fixt module", "nltk.test.gluesemantics_malt_fixt module", "nltk.test.portuguese_en_fixt module", "nltk.test.probability_fixt module", "nltk.test.setup_fixt module", "nltk.test.unit package", "nltk.test.unit.lm package", "nltk.test.unit.lm.test_counter module", "nltk.test.unit.lm.test_models module", "nltk.test.unit.lm.test_preprocessing module", "nltk.test.unit.lm.test_vocabulary module", "nltk.test.unit.test_aline module", "nltk.test.unit.test_bllip module", "nltk.test.unit.test_brill module", "nltk.test.unit.test_cfd_mutation module", "nltk.test.unit.test_cfg2chomsky module", "nltk.test.unit.test_chunk module", "nltk.test.unit.test_classify module", "nltk.test.unit.test_collocations module", "nltk.test.unit.test_concordance module", "nltk.test.unit.test_corenlp module", "nltk.test.unit.test_corpora module", "nltk.test.unit.test_corpus_views module", "nltk.test.unit.test_data module", "nltk.test.unit.test_disagreement module", "nltk.test.unit.test_distance module", "nltk.test.unit.test_downloader module", "nltk.test.unit.test_freqdist module", "nltk.test.unit.test_hmm module", "nltk.test.unit.test_json2csv_corpus module", "nltk.test.unit.test_json_serialization module", "nltk.test.unit.test_metrics module", "nltk.test.unit.test_naivebayes module", "nltk.test.unit.test_nombank module", "nltk.test.unit.test_pl196x module", "nltk.test.unit.test_pos_tag module", "nltk.test.unit.test_ribes module", "nltk.test.unit.test_rte_classify module", "nltk.test.unit.test_seekable_unicode_stream_reader module", "nltk.test.unit.test_senna module", "nltk.test.unit.test_stem module", "nltk.test.unit.test_tag module", "nltk.test.unit.test_tgrep module", "nltk.test.unit.test_tokenize module", "nltk.test.unit.test_twitter_auth module", "nltk.test.unit.test_util module", "nltk.test.unit.test_wordnet module", "nltk.test.unit.translate package", "nltk.test.unit.translate.test_bleu module", "nltk.test.unit.translate.test_gdfa module", "nltk.test.unit.translate.test_ibm1 module", "nltk.test.unit.translate.test_ibm2 module", "nltk.test.unit.translate.test_ibm3 module", "nltk.test.unit.translate.test_ibm4 module", "nltk.test.unit.translate.test_ibm5 module", "nltk.test.unit.translate.test_ibm_model module", "nltk.test.unit.translate.test_meteor module", "nltk.test.unit.translate.test_nist module", "nltk.test.unit.translate.test_stack_decoder module", "nltk.text module", "nltk.text.ConcordanceIndex", "nltk.text.ContextIndex", "nltk.text.Text", "nltk.text.TextCollection", "nltk.text.TokenSearcher", "nltk.tgrep module", "nltk.tgrep.ancestors", "nltk.tgrep.tgrep_compile", "nltk.tgrep.tgrep_nodes", "nltk.tgrep.tgrep_positions", "nltk.tgrep.tgrep_tokenize", "nltk.tgrep.treepositions_no_leaves", "nltk.tgrep.unique_ancestors", "nltk.tokenize package", "nltk.tokenize.BlanklineTokenizer", "nltk.tokenize.LegalitySyllableTokenizer", "nltk.tokenize.LineTokenizer", "nltk.tokenize.MWETokenizer", "nltk.tokenize.NLTKWordTokenizer", "nltk.tokenize.PunktSentenceTokenizer", "nltk.tokenize.RegexpTokenizer", "nltk.tokenize.ReppTokenizer", "nltk.tokenize.SExprTokenizer", "nltk.tokenize.SpaceTokenizer", "nltk.tokenize.StanfordSegmenter", "nltk.tokenize.SyllableTokenizer", "nltk.tokenize.TabTokenizer", "nltk.tokenize.TextTilingTokenizer", "nltk.tokenize.ToktokTokenizer", "nltk.tokenize.TreebankWordDetokenizer", "nltk.tokenize.TreebankWordTokenizer", "nltk.tokenize.TweetTokenizer", "nltk.tokenize.WhitespaceTokenizer", "nltk.tokenize.WordPunctTokenizer", "nltk.tokenize.api module", "nltk.tokenize.blankline_tokenize", "nltk.tokenize.casual module", "nltk.tokenize.casual_tokenize", "nltk.tokenize.destructive module", "nltk.tokenize.legality_principle module", "nltk.tokenize.line_tokenize", "nltk.tokenize.mwe module", "nltk.tokenize.nist module", "nltk.tokenize.punkt module", "nltk.tokenize.regexp module", "nltk.tokenize.regexp_tokenize", "nltk.tokenize.repp module", "nltk.tokenize.sent_tokenize", "nltk.tokenize.sexpr module", "nltk.tokenize.sexpr_tokenize", "nltk.tokenize.simple module", "nltk.tokenize.sonority_sequencing module", "nltk.tokenize.stanford module", "nltk.tokenize.stanford_segmenter module", "nltk.tokenize.texttiling module", "nltk.tokenize.toktok module", "nltk.tokenize.treebank module", "nltk.tokenize.util module", "nltk.tokenize.word_tokenize", "nltk.tokenize.wordpunct_tokenize", "nltk.toolbox module", "nltk.toolbox.StandardFormat", "nltk.toolbox.ToolboxData", "nltk.toolbox.ToolboxSettings", "nltk.translate package", "nltk.translate.AlignedSent", "nltk.translate.Alignment", "nltk.translate.IBMModel", "nltk.translate.IBMModel1", "nltk.translate.IBMModel2", "nltk.translate.IBMModel3", "nltk.translate.IBMModel4", "nltk.translate.IBMModel5", "nltk.translate.PhraseTable", "nltk.translate.StackDecoder", "nltk.translate.alignment_error_rate", "nltk.translate.api module", "nltk.translate.bleu", "nltk.translate.bleu_score module", "nltk.translate.chrf", "nltk.translate.chrf_score module", "nltk.translate.extract", "nltk.translate.gale_church module", "nltk.translate.gdfa module", "nltk.translate.gleu", "nltk.translate.gleu_score module", "nltk.translate.grow_diag_final_and", "nltk.translate.ibm1 module", "nltk.translate.ibm2 module", "nltk.translate.ibm3 module", "nltk.translate.ibm4 module", "nltk.translate.ibm5 module", "nltk.translate.ibm_model module", "nltk.translate.meteor", "nltk.translate.meteor_score module", "nltk.translate.metrics module", "nltk.translate.nist", "nltk.translate.nist_score module", "nltk.translate.phrase_based module", "nltk.translate.ribes", "nltk.translate.ribes_score module", "nltk.translate.stack_decoder module", "nltk.translate.trace", "nltk.tree package", "nltk.tree.ImmutableMultiParentedTree", "nltk.tree.ImmutableParentedTree", "nltk.tree.ImmutableProbabilisticTree", "nltk.tree.ImmutableTree", "nltk.tree.MultiParentedTree", "nltk.tree.ParentedTree", "nltk.tree.ProbabilisticTree", "nltk.tree.tree module", "nltk.tree.TreePrettyPrinter", "nltk.tree.bracket_parse", "nltk.tree.chomsky_normal_form", "nltk.tree.collapse_unary", "nltk.tree.immutable module", "nltk.tree.parented module", "nltk.tree.parsing module", "nltk.tree.prettyprinter module", "nltk.tree.probabilistic module", "nltk.tree.sinica_parse", "nltk.tree.transforms module", "nltk.tree.un_chomsky_normal_form", "nltk.treeprettyprinter module", "nltk.treetransforms module", "nltk.twitter package", "nltk.twitter.Authenticate", "nltk.twitter.Query", "nltk.twitter.Streamer", "nltk.twitter.TweetViewer", "nltk.twitter.TweetWriter", "nltk.twitter.Twitter", "nltk.twitter.api module", "nltk.twitter.common module", "nltk.twitter.credsfromfile", "nltk.twitter.twitter_demo module", "nltk.twitter.twitterclient module", "nltk.twitter.util module", "nltk.util module", "nltk.wsd module", "nltk.wsd.lesk", "Contributing to NLTK", "Installing NLTK Data", "Example usage of NLTK modules", "Sample usage for bleu", "Sample usage for bnc", "Sample usage for ccg", "Sample usage for ccg_semantics", "Sample usage for chat80", "Sample usage for childes", "Sample usage for chunk", "Sample usage for classify", "Sample usage for collections", "Sample usage for collocations", "Sample usage for concordance", "Sample usage for corpus", "Sample usage for crubadan", "Sample usage for data", "Sample usage for dependency", "Sample usage for discourse", "Sample usage for drt", "Sample usage for featgram", "Sample usage for featstruct", "Sample usage for framenet", "Sample usage for generate", "Sample usage for gensim", "Sample usage for gluesemantics", "Sample usage for gluesemantics_malt", "Sample usage for grammar", "Sample usage for grammartestsuites", "Sample usage for inference", "Sample usage for internals", "Sample usage for japanese", "Sample usage for lm", "Sample usage for logic", "Sample usage for meteor", "Sample usage for metrics", "Sample usage for misc", "Sample usage for nonmonotonic", "Sample usage for paice", "Sample usage for parse", "Sample usage for portuguese_en", "Sample usage for probability", "Sample usage for propbank", "Sample usage for relextract", "Sample usage for resolution", "Sample usage for semantics", "Sample usage for sentiment", "Sample usage for sentiwordnet", "Sample usage for simple", "Sample usage for stem", "Sample usage for tag", "Sample usage for tokenize", "Sample usage for toolbox", "Sample usage for translate", "Sample usage for tree", "Sample usage for treeprettyprinter", "Sample usage for treetransforms", "Sample usage for util", "Sample usage for wordnet", "Sample usage for wordnet_lch", "Sample usage for wsd", "Natural Language Toolkit", "Installing NLTK", "Release Notes", "Index", "NLTK Team"], "terms": {"app": [0, 46, 243, 247, 288, 731, 741, 759, 763, 766], "chartparser_app": [0, 1], "chunkparser_app": [0, 1], "collocations_app": [0, 1], "concordance_app": [0, 1], "nemo_app": [0, 1], "rdparser_app": [0, 1], "srparser_app": [0, 1], "wordfreq_app": [0, 1], "wordnet_app": [0, 1], "ccg": [0, 747, 808], "api": [0, 20, 60, 77, 93, 105, 107, 192, 224, 269, 293, 351, 430, 433, 434, 435, 448, 460, 476, 496, 531, 537, 616, 627, 656, 667, 696, 697, 729, 731, 732, 733, 734, 737, 739, 740, 759, 774, 806, 808], "chart": [0, 1, 3, 20, 27, 28, 256, 257, 261, 351, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 386, 389, 391, 397, 399, 402, 406, 725, 728, 750, 765, 808], "combin": [0, 15, 20, 21, 22, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 61, 76, 80, 98, 99, 107, 111, 176, 227, 243, 279, 285, 293, 349, 385, 388, 395, 397, 404, 430, 433, 435, 448, 459, 460, 496, 521, 535, 537, 618, 642, 694, 731, 737, 740, 742, 759, 763, 765, 766, 770, 785, 791, 798, 803], "lexicon": [0, 3, 20, 28, 31, 44, 105, 107, 113, 139, 166, 181, 186, 205, 219, 445, 472, 474, 475, 521, 620, 644, 750, 808], "logic": [0, 20, 225, 271, 277, 279, 284, 285, 286, 289, 294, 295, 296, 297, 298, 300, 302, 303, 305, 429, 430, 431, 432, 433, 434, 435, 438, 440, 448, 451, 452, 455, 456, 459, 462, 469, 533, 536, 608, 639, 747, 751, 761, 763, 764, 765, 766, 771, 782, 788, 789, 790, 808], "chat": [0, 429, 759, 808], "eliza": [0, 48, 58], "iesha": [0, 48], "rude": [0, 48], "suntsu": [0, 48], "util": [0, 48, 60, 61, 77, 93, 105, 107, 130, 190, 221, 231, 237, 241, 285, 293, 299, 304, 306, 351, 381, 382, 429, 470, 471, 473, 476, 496, 616, 620, 642, 644, 654, 729, 731, 737, 747, 754, 759, 777, 782, 784, 786, 790, 791, 796], "zen": [0, 48], "chunk": [0, 1, 5, 46, 105, 107, 119, 121, 122, 143, 150, 183, 200, 207, 214, 453, 464, 505, 511, 521, 527, 559, 684, 701, 731, 747, 780, 785, 788, 796, 806, 808], "named_ent": [0, 60], "regexp": [0, 60, 107, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 192, 193, 195, 196, 197, 198, 199, 201, 203, 204, 205, 207, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 243, 247, 476, 484, 510, 528, 602, 605, 606, 607, 616, 623, 636, 639, 660, 742, 754, 759, 795], "regexpchunkpars": [0, 5, 63, 72], "regexpchunkrul": [0, 62, 72, 754], "effici": [0, 93, 96, 218, 225, 256, 257, 261, 289, 293, 351, 354, 395, 397, 408, 416, 496, 499, 518, 521, 525, 616, 653, 742, 759, 763, 803, 808], "emac": 0, "tip": [0, 805], "unresolv": 0, "issu": [0, 107, 126, 186, 559, 583, 592, 645, 725, 728, 731, 742, 759, 774, 779, 786, 796, 799, 803, 808, 810], "classifi": [0, 93, 94, 98, 99, 206, 221, 378, 379, 471, 473, 474, 502, 503, 517, 528, 560, 582, 622, 646, 742, 747, 759, 791, 803, 808], "decisiontre": [0, 77], "maxent": [0, 77, 81, 85, 378, 379, 755], "terminolog": [0, 77, 318, 667], "featur": [0, 79, 81, 82, 83, 84, 85, 88, 90, 91, 99, 107, 120, 128, 149, 168, 182, 189, 205, 218, 221, 225, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 293, 303, 319, 352, 378, 379, 390, 394, 399, 406, 447, 452, 456, 461, 465, 469, 471, 473, 474, 488, 501, 502, 503, 517, 518, 520, 524, 528, 531, 533, 536, 537, 642, 654, 667, 755, 759, 761, 764, 790, 791, 799, 803, 808], "megam": [0, 77, 80, 90, 755, 808], "naivebay": [0, 77, 91, 502, 503, 528, 808], "positivenaivebay": [0, 77], "rte_classifi": [0, 77], "scikitlearn": [0, 77, 87], "senna": [0, 77, 496, 511, 512, 513, 582, 808], "svm": [0, 77, 85, 755], "tadm": [0, 77, 80, 755], "textcat": [0, 77], "weka": [0, 77, 808], "featureset": [0, 78, 79, 80, 81, 82, 83, 85, 88, 90, 91, 99, 471, 473, 502, 503, 517, 528, 755], "train": [0, 69, 79, 80, 81, 82, 83, 85, 88, 91, 99, 202, 214, 294, 295, 296, 297, 298, 300, 302, 303, 305, 348, 377, 378, 379, 380, 381, 382, 390, 401, 408, 417, 464, 471, 473, 474, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 514, 515, 516, 518, 519, 520, 521, 522, 524, 528, 529, 533, 537, 593, 594, 595, 596, 597, 622, 646, 671, 672, 673, 674, 675, 681, 690, 691, 692, 693, 694, 695, 746, 755, 759, 785, 786, 788, 791, 795, 798, 808], "cluster": [0, 202, 618, 642, 808], "em": [0, 93, 483, 492, 506, 521, 690, 691, 692, 693, 694, 695, 785], "gaac": [0, 93], "kmean": [0, 93], "corpu": [0, 77, 80, 81, 84, 88, 89, 90, 99, 227, 293, 311, 315, 316, 321, 356, 357, 408, 410, 453, 464, 474, 490, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 528, 533, 534, 536, 537, 565, 576, 589, 602, 605, 606, 616, 618, 630, 642, 646, 650, 657, 661, 668, 671, 672, 673, 674, 675, 679, 681, 683, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 700, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 742, 745, 746, 747, 751, 755, 757, 758, 761, 762, 767, 769, 770, 777, 784, 786, 787, 788, 791, 792, 795, 796, 799, 800, 803, 804, 805, 806, 808], "reader": [0, 89, 90, 99, 225, 430, 460, 696, 697, 761, 766, 767, 770, 803, 806, 808], "europarl_raw": [0, 105], "avail": [0, 13, 15, 80, 93, 107, 112, 166, 179, 195, 203, 210, 214, 219, 227, 243, 291, 346, 359, 385, 387, 388, 390, 403, 404, 445, 479, 485, 493, 496, 499, 507, 518, 522, 533, 564, 645, 647, 651, 653, 659, 725, 728, 731, 739, 752, 757, 759, 766, 784, 785, 787, 806, 808], "corpora": [0, 100, 107, 108, 111, 112, 114, 115, 116, 117, 119, 122, 125, 132, 135, 144, 148, 159, 163, 164, 170, 172, 173, 176, 177, 179, 180, 183, 184, 192, 193, 194, 201, 205, 206, 213, 216, 217, 222, 224, 225, 227, 445, 464, 533, 542, 559, 565, 646, 685, 696, 697, 746, 752, 753, 761, 806, 808], "function": [0, 32, 38, 39, 40, 41, 42, 43, 45, 47, 60, 61, 66, 72, 76, 77, 80, 81, 82, 86, 90, 94, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 119, 124, 125, 126, 130, 137, 143, 144, 146, 159, 168, 172, 176, 179, 180, 185, 186, 190, 192, 193, 194, 195, 200, 201, 203, 213, 214, 218, 221, 222, 225, 226, 227, 234, 235, 240, 241, 242, 243, 245, 247, 256, 267, 277, 289, 291, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 308, 310, 311, 315, 316, 318, 319, 321, 324, 326, 336, 377, 390, 401, 406, 408, 409, 410, 415, 416, 422, 429, 430, 431, 433, 435, 438, 445, 448, 449, 451, 455, 459, 460, 469, 471, 473, 474, 477, 478, 481, 486, 489, 493, 495, 501, 502, 503, 505, 506, 511, 512, 513, 514, 520, 521, 523, 528, 533, 537, 586, 602, 603, 604, 605, 608, 610, 639, 640, 645, 647, 651, 653, 660, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 694, 695, 696, 697, 699, 700, 701, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 725, 728, 731, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 751, 752, 757, 758, 759, 761, 763, 765, 766, 767, 769, 774, 778, 784, 785, 788, 799, 803, 807, 808], "draw": [0, 107, 168, 221, 320, 340, 433, 434, 448, 449, 602, 605, 606, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 727, 785, 806], "cfg": [0, 13, 15, 44, 225, 231, 233, 256, 260, 261, 264, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 384, 385, 386, 387, 388, 389, 395, 397, 399, 400, 403, 404, 406, 445, 761, 765, 768, 772, 793, 808], "dispers": [0, 231, 238], "tabl": [0, 58, 80, 83, 107, 122, 160, 168, 174, 183, 214, 221, 227, 231, 243, 247, 311, 313, 315, 316, 321, 324, 390, 392, 407, 445, 497, 498, 508, 515, 516, 528, 657, 670, 671, 672, 673, 674, 675, 677, 690, 691, 692, 693, 694, 695, 704, 752, 766, 784], "tree": [0, 3, 13, 15, 27, 28, 44, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 79, 85, 93, 96, 98, 105, 107, 109, 111, 119, 121, 122, 130, 137, 146, 150, 176, 180, 183, 190, 195, 203, 207, 210, 221, 222, 223, 231, 235, 239, 242, 256, 289, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 447, 452, 453, 455, 456, 461, 464, 465, 469, 585, 609, 611, 612, 614, 663, 727, 728, 742, 747, 752, 754, 755, 759, 762, 763, 764, 765, 770, 773, 784, 785, 787, 788, 790, 797, 801, 802, 806, 808], "infer": [0, 107, 126, 186, 429, 430, 433, 434, 435, 448, 455, 460, 747, 763, 764, 778, 782, 789, 808, 810], "discours": [0, 107, 157, 212, 269, 271, 351, 393, 429, 431, 432, 433, 434, 438, 448, 451, 747, 774], "nonmonoton": [0, 269, 747], "resolut": [0, 205, 269, 432, 747, 788, 808], "tableau": [0, 269], "lm": [0, 80, 548, 602, 605, 606, 747], "counter": [0, 181, 284, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 408, 415, 454, 459, 733, 734, 736, 770, 774, 790], "languag": [0, 89, 93, 107, 123, 138, 141, 168, 174, 184, 188, 192, 198, 202, 210, 220, 221, 291, 301, 303, 305, 307, 308, 319, 379, 380, 408, 422, 445, 455, 479, 482, 485, 490, 493, 496, 505, 521, 525, 526, 602, 605, 606, 616, 618, 622, 624, 627, 628, 642, 645, 646, 649, 650, 654, 656, 658, 661, 668, 670, 671, 672, 673, 674, 675, 676, 677, 679, 684, 686, 689, 690, 691, 692, 693, 694, 695, 701, 702, 703, 704, 706, 714, 725, 728, 731, 735, 740, 742, 745, 752, 753, 759, 778, 785, 788, 794, 798, 803, 808, 810], "model": [0, 79, 80, 81, 88, 93, 95, 107, 120, 182, 202, 225, 226, 227, 269, 271, 273, 274, 275, 276, 284, 285, 294, 295, 296, 297, 298, 300, 301, 302, 303, 307, 308, 324, 341, 352, 377, 381, 382, 390, 394, 401, 405, 408, 410, 429, 431, 432, 440, 445, 451, 452, 454, 455, 469, 475, 497, 498, 501, 505, 506, 507, 508, 509, 514, 515, 516, 520, 521, 522, 524, 528, 529, 593, 594, 595, 596, 597, 598, 602, 605, 606, 616, 622, 624, 646, 649, 650, 658, 661, 670, 671, 672, 673, 674, 675, 677, 681, 690, 691, 692, 693, 694, 695, 704, 746, 752, 759, 763, 785, 795, 807, 808, 810], "preprocess": [0, 85, 256, 257, 261, 293, 472, 474, 475, 696, 697, 777], "smooth": [0, 107, 168, 221, 293, 294, 295, 296, 297, 302, 303, 305, 408, 422, 506, 521, 630, 657, 680, 681, 699, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 748, 777, 786, 796, 801, 803, 808], "prepar": [0, 208, 657, 759, 808], "data": [0, 3, 80, 81, 85, 86, 88, 91, 93, 94, 95, 96, 98, 99, 100, 103, 107, 110, 112, 121, 122, 126, 128, 149, 150, 153, 175, 177, 179, 183, 184, 186, 187, 189, 197, 205, 206, 207, 208, 209, 210, 214, 218, 224, 227, 240, 242, 243, 256, 285, 287, 288, 289, 290, 306, 310, 312, 318, 321, 356, 357, 359, 377, 390, 395, 396, 397, 401, 406, 408, 432, 445, 451, 460, 472, 474, 475, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 521, 522, 527, 528, 529, 533, 565, 588, 646, 657, 663, 669, 679, 690, 691, 692, 693, 694, 695, 704, 725, 728, 730, 731, 732, 733, 734, 735, 736, 740, 741, 742, 747, 752, 753, 763, 765, 766, 769, 774, 780, 781, 784, 785, 787, 788, 790, 793, 795, 803, 806, 808], "us": [0, 3, 12, 13, 14, 15, 18, 27, 28, 43, 44, 48, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 260, 261, 263, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 311, 312, 314, 315, 316, 318, 319, 321, 324, 329, 334, 337, 338, 341, 342, 344, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 433, 435, 445, 447, 448, 451, 453, 455, 459, 460, 462, 464, 465, 469, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 528, 529, 530, 531, 533, 537, 559, 562, 585, 586, 602, 603, 604, 605, 606, 607, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 656, 657, 659, 661, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 687, 688, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 725, 727, 728, 729, 731, 732, 734, 735, 736, 737, 739, 740, 742, 743, 744, 746, 754, 755, 758, 759, 761, 762, 763, 764, 765, 766, 767, 771, 775, 777, 778, 780, 782, 784, 785, 787, 788, 790, 791, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808], "metric": [0, 61, 76, 96, 107, 168, 221, 471, 473, 567, 591, 600, 645, 667, 681, 687, 688, 696, 697, 747, 757, 783, 798, 803, 808, 810], "agreement": [0, 309, 310, 324, 333, 567, 773, 808], "alin": [0, 309, 554, 808], "exampl": [0, 44, 60, 61, 72, 76, 77, 80, 81, 83, 86, 93, 99, 105, 107, 108, 116, 125, 126, 130, 132, 134, 135, 137, 144, 146, 159, 161, 164, 166, 172, 175, 177, 181, 186, 190, 192, 193, 194, 195, 201, 202, 203, 206, 207, 211, 213, 214, 217, 218, 219, 221, 222, 223, 225, 226, 242, 256, 257, 261, 285, 289, 290, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 307, 309, 310, 311, 315, 316, 318, 321, 324, 325, 326, 329, 341, 347, 351, 377, 378, 379, 380, 381, 382, 385, 390, 395, 401, 404, 408, 409, 410, 415, 430, 432, 433, 435, 445, 449, 451, 460, 464, 467, 471, 473, 474, 496, 507, 517, 522, 529, 559, 567, 585, 591, 608, 616, 620, 625, 627, 634, 639, 644, 647, 651, 652, 653, 656, 657, 677, 680, 681, 682, 683, 687, 688, 693, 694, 695, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 721, 724, 725, 728, 737, 739, 740, 742, 743, 744, 746, 751, 752, 757, 759, 761, 765, 766, 767, 768, 769, 771, 774, 777, 778, 780, 787, 788, 790, 791, 795, 798, 799, 803, 808], "usag": [0, 18, 81, 93, 99, 107, 108, 125, 126, 130, 132, 134, 144, 159, 161, 164, 172, 186, 190, 192, 193, 201, 213, 217, 223, 226, 227, 289, 309, 356, 357, 381, 382, 396, 445, 514, 533, 731, 743, 744], "associ": [0, 27, 100, 101, 102, 103, 107, 158, 160, 168, 187, 210, 214, 218, 221, 224, 242, 256, 263, 271, 285, 309, 311, 313, 315, 316, 324, 326, 329, 341, 351, 395, 396, 399, 402, 408, 431, 438, 445, 451, 454, 471, 473, 514, 561, 709, 713, 752, 759, 808], "distanc": [0, 89, 97, 98, 107, 168, 221, 242, 309, 310, 318, 325, 326, 329, 330, 331, 333, 341, 674, 681, 693, 706, 715, 722, 742, 808], "score": [0, 60, 61, 62, 63, 64, 65, 72, 76, 100, 101, 102, 103, 107, 131, 149, 168, 191, 205, 209, 221, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 308, 309, 311, 315, 316, 319, 321, 337, 341, 342, 344, 356, 357, 358, 378, 379, 380, 381, 382, 398, 471, 472, 473, 474, 475, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 533, 602, 604, 630, 657, 675, 677, 680, 681, 682, 683, 687, 688, 694, 695, 696, 697, 699, 700, 702, 703, 704, 748, 754, 757, 759, 769, 777, 779, 791, 795, 798, 803, 808], "segment": [0, 241, 309, 319, 329, 334, 344, 479, 554, 585, 586, 621, 627, 630, 641, 656, 657, 681, 683, 704, 748, 759, 780, 808], "spearman": [0, 309, 343, 703, 757, 808], "misc": [0, 746, 747, 808], "babelfish": [0, 345, 808], "chomski": [0, 256, 257, 261, 345, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 772, 801], "minimalset": [0, 345], "sort": [0, 28, 44, 107, 126, 139, 186, 197, 240, 241, 243, 245, 256, 266, 293, 299, 301, 304, 312, 345, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 402, 403, 404, 407, 415, 471, 473, 474, 475, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 536, 631, 658, 663, 686, 689, 697, 701, 706, 707, 708, 709, 710, 711, 712, 713, 719, 742, 753, 754, 755, 757, 759, 761, 762, 764, 765, 766, 767, 770, 771, 777, 778, 784, 785, 786, 788, 789, 790, 791, 803], "wordfind": [0, 345], "pars": [0, 3, 13, 15, 27, 28, 44, 46, 60, 61, 62, 63, 65, 69, 72, 76, 107, 109, 111, 114, 119, 121, 122, 130, 137, 146, 159, 168, 171, 173, 174, 176, 180, 183, 190, 193, 195, 203, 210, 213, 221, 223, 225, 243, 247, 256, 267, 271, 277, 285, 432, 438, 445, 447, 451, 452, 454, 455, 456, 460, 461, 462, 465, 469, 471, 473, 474, 585, 608, 610, 624, 649, 663, 664, 665, 666, 685, 706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 728, 742, 747, 750, 751, 752, 754, 761, 763, 768, 771, 773, 774, 785, 787, 790, 806, 808, 810], "bllip": [0, 351, 352, 808], "corenlp": [0, 351, 356, 357, 547, 563, 808, 810], "earleychart": [0, 351, 366, 371, 784], "evalu": [0, 60, 61, 62, 63, 64, 65, 72, 76, 99, 101, 102, 103, 187, 208, 289, 293, 294, 295, 296, 297, 298, 300, 302, 303, 306, 312, 314, 334, 341, 351, 356, 357, 358, 429, 431, 438, 445, 452, 469, 471, 473, 474, 477, 479, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 528, 591, 600, 624, 645, 649, 680, 681, 682, 683, 686, 687, 688, 689, 696, 697, 699, 700, 702, 703, 752, 766, 780, 785, 791, 808], "featurechart": [0, 351, 366, 397, 765, 784], "gener": [0, 27, 28, 43, 44, 48, 57, 60, 62, 63, 65, 72, 80, 81, 82, 86, 88, 91, 97, 99, 158, 218, 221, 222, 226, 237, 238, 243, 244, 245, 246, 255, 275, 277, 284, 287, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 318, 320, 321, 329, 340, 341, 347, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 433, 435, 438, 445, 451, 454, 460, 464, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 520, 521, 528, 531, 533, 535, 537, 602, 605, 606, 616, 619, 622, 623, 624, 635, 642, 645, 646, 647, 649, 653, 658, 669, 670, 671, 672, 673, 674, 675, 679, 687, 688, 692, 693, 694, 695, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 731, 736, 740, 742, 747, 752, 754, 755, 757, 759, 760, 761, 763, 765, 766, 771, 772, 774, 785, 794, 795, 803, 804, 808], "malt": [0, 351, 359, 377, 771], "pchart": [0, 351, 784], "recursivedesc": [0, 351, 793], "shiftreduc": [0, 351], "stanford": [0, 100, 205, 324, 326, 351, 496, 563, 586, 616, 627, 656, 808], "viterbi": [0, 351, 505, 521], "sem": [0, 107, 150, 207, 225, 243, 273, 274, 276, 277, 278, 281, 283, 284, 285, 287, 288, 751, 752, 761, 763, 764, 765, 766, 770, 771, 774, 778, 782, 785, 788, 789, 790, 810], "chat80": [0, 225, 429, 747], "overview": [0, 429, 737, 739], "read": [0, 86, 89, 99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 188, 189, 190, 193, 197, 199, 200, 202, 204, 205, 208, 211, 213, 214, 215, 218, 220, 221, 222, 225, 240, 243, 244, 245, 246, 247, 270, 271, 272, 279, 285, 289, 359, 429, 438, 451, 455, 479, 533, 587, 663, 664, 665, 666, 669, 679, 681, 688, 695, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 721, 730, 731, 739, 741, 750, 751, 753, 765, 770, 771, 774, 778, 784, 790, 808], "80": [0, 324, 341, 344, 429, 602, 603, 605, 606, 624, 649, 759, 791, 795], "file": [0, 18, 81, 86, 88, 89, 91, 99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 225, 227, 242, 270, 272, 277, 285, 289, 323, 324, 352, 359, 377, 390, 394, 401, 406, 429, 460, 462, 471, 472, 473, 474, 475, 501, 507, 520, 522, 527, 529, 533, 535, 536, 537, 539, 572, 587, 624, 649, 663, 664, 665, 666, 706, 707, 708, 709, 710, 711, 712, 713, 714, 730, 731, 734, 735, 737, 739, 740, 741, 742, 746, 750, 753, 759, 760, 763, 765, 769, 774, 785, 787, 790, 793, 797, 803, 808], "concept": [0, 80, 429, 695, 759, 767], "persist": [0, 99, 429], "individu": [0, 63, 72, 79, 99, 107, 163, 168, 173, 192, 216, 221, 227, 240, 318, 408, 410, 429, 430, 431, 432, 433, 435, 438, 440, 451, 460, 467, 481, 489, 499, 518, 521, 528, 533, 653, 681, 703, 706, 714, 746, 759, 760, 770, 774, 778, 790], "lexic": [0, 107, 109, 126, 133, 142, 166, 176, 186, 199, 209, 219, 220, 221, 237, 238, 256, 257, 260, 261, 429, 630, 657, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 695, 759, 765, 806], "item": [0, 93, 98, 99, 105, 107, 126, 149, 175, 186, 192, 193, 194, 205, 207, 214, 218, 222, 223, 227, 234, 242, 243, 244, 245, 256, 257, 261, 293, 299, 301, 303, 304, 307, 310, 318, 324, 329, 333, 334, 341, 344, 348, 349, 408, 409, 410, 412, 415, 429, 431, 436, 440, 454, 458, 464, 472, 474, 475, 567, 706, 707, 708, 709, 710, 711, 712, 713, 719, 733, 734, 735, 736, 740, 742, 757, 759, 761, 762, 765, 766, 778, 785, 786, 788, 790, 791, 794, 796, 799], "cooper_storag": [0, 429, 790], "drt": [0, 429, 432, 434, 747, 763, 774], "drt_glue_demo": [0, 429], "glue": [0, 429, 459], "hole": [0, 429, 808], "lfg": [0, 429], "linearlog": [0, 429, 770], "relextract": [0, 429, 747], "skolem": [0, 287, 429, 460, 763], "sentiment": [0, 177, 205, 209, 746, 747, 759, 808], "sentiment_analyz": [0, 470], "vader": [0, 470, 474, 808], "stem": [0, 107, 110, 112, 175, 179, 221, 314, 583, 696, 697, 747, 749, 753, 803, 806], "isri": [0, 476, 480, 808], "lancast": [0, 476, 481, 808], "porter": [0, 476, 482, 485, 493, 583, 808], "rslp": [0, 476, 785], "snowbal": [0, 476, 479, 485, 583, 808], "wordnet": [0, 1, 18, 105, 107, 150, 166, 168, 169, 207, 209, 219, 476, 486, 589, 696, 697, 742, 747, 799, 805, 806, 808, 810], "tag": [0, 61, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 99, 105, 107, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 148, 150, 151, 154, 156, 157, 158, 159, 161, 162, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 203, 205, 207, 208, 212, 214, 219, 221, 222, 223, 242, 256, 262, 289, 290, 291, 312, 352, 356, 357, 359, 377, 378, 379, 380, 381, 382, 394, 396, 401, 405, 406, 408, 417, 464, 486, 495, 531, 533, 534, 535, 536, 537, 582, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 747, 753, 754, 757, 762, 763, 765, 767, 771, 776, 786, 788, 797, 805, 806, 808], "brill": [0, 496, 499, 500, 519, 533, 535, 536, 537, 556], "brill_train": [0, 496], "crf": [0, 496, 501, 529], "hmm": [0, 408, 417, 496, 505, 506, 808], "hunpo": [0, 496, 507], "map": [0, 31, 46, 57, 77, 79, 80, 83, 85, 90, 98, 99, 107, 112, 126, 143, 160, 166, 168, 169, 173, 179, 186, 193, 200, 206, 214, 218, 219, 221, 225, 242, 243, 244, 245, 246, 256, 258, 259, 262, 264, 271, 285, 287, 291, 293, 301, 324, 326, 356, 357, 395, 399, 408, 409, 410, 413, 415, 416, 430, 431, 432, 433, 435, 438, 445, 451, 452, 455, 456, 460, 461, 469, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 528, 602, 603, 604, 608, 646, 669, 674, 675, 679, 693, 694, 697, 731, 752, 759, 761, 763, 766, 780, 798, 808], "perceptron": [0, 496, 509], "sequenti": [0, 284, 496, 497, 498, 503, 504, 505, 508, 509, 510, 515, 516, 521, 524, 663, 664, 665, 666, 694, 697], "tbl": [0, 500, 518, 519, 795], "demo": [0, 12, 13, 15, 44, 49, 51, 53, 55, 58, 72, 76, 79, 80, 82, 83, 89, 93, 95, 96, 97, 105, 178, 179, 186, 190, 191, 215, 235, 236, 240, 241, 242, 273, 277, 285, 286, 287, 288, 312, 314, 319, 324, 340, 349, 359, 379, 382, 390, 395, 397, 399, 400, 402, 403, 404, 407, 447, 448, 449, 451, 454, 459, 460, 469, 490, 493, 514, 518, 521, 531, 646, 657, 663, 739, 766, 784, 808], "erroranalysi": [0, 531], "rule": [0, 3, 13, 15, 28, 29, 38, 39, 40, 41, 43, 44, 45, 60, 62, 63, 72, 82, 107, 126, 186, 223, 256, 257, 261, 267, 324, 353, 354, 355, 361, 362, 368, 374, 375, 376, 379, 380, 381, 382, 383, 386, 389, 391, 395, 397, 399, 402, 408, 445, 475, 476, 481, 489, 499, 500, 518, 519, 531, 533, 535, 537, 559, 602, 605, 606, 607, 624, 649, 752, 759, 763, 765, 768, 770, 784, 795, 803], "templat": [0, 499, 500, 518, 519, 531, 533, 535, 536, 788, 795], "token": [0, 13, 15, 27, 28, 29, 30, 44, 46, 60, 65, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 94, 98, 99, 101, 102, 103, 107, 108, 110, 112, 116, 119, 120, 124, 125, 128, 138, 144, 147, 149, 150, 158, 159, 160, 163, 164, 165, 172, 175, 177, 178, 179, 180, 182, 185, 188, 189, 192, 200, 201, 204, 205, 207, 208, 213, 214, 216, 217, 218, 220, 227, 256, 257, 259, 261, 263, 264, 289, 293, 301, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 415, 448, 459, 460, 471, 473, 474, 477, 478, 480, 483, 484, 485, 487, 488, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 528, 529, 530, 535, 536, 537, 565, 585, 586, 602, 603, 604, 605, 606, 607, 608, 610, 613, 682, 683, 684, 685, 686, 687, 688, 689, 695, 696, 697, 699, 700, 701, 703, 731, 741, 742, 746, 747, 754, 755, 757, 759, 761, 764, 765, 778, 780, 784, 785, 787, 791, 795, 806, 808, 810], "casual": [0, 107, 163, 216, 586, 616, 759], "destruct": [0, 616, 621], "legality_principl": [0, 616], "mwe": [0, 616, 620], "nist": [0, 187, 214, 600, 616, 681, 700, 808], "punkt": [0, 107, 125, 144, 201, 616, 622, 650, 661, 761, 785, 796, 808, 810], "repp": [0, 616, 624], "sexpr": [0, 107, 109, 111, 176, 616, 625, 759], "simpl": [0, 12, 13, 14, 15, 48, 84, 95, 96, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 185, 207, 213, 218, 227, 242, 243, 246, 285, 290, 291, 292, 293, 299, 304, 307, 322, 324, 351, 384, 385, 395, 403, 404, 408, 422, 471, 473, 505, 514, 521, 565, 567, 585, 602, 605, 616, 658, 725, 728, 731, 735, 740, 747, 755, 759, 763, 765, 766, 769, 788, 791, 795, 796, 800, 808], "sonority_sequenc": [0, 616], "stanford_segment": [0, 616, 627, 808], "texttil": [0, 616, 630, 796], "toktok": [0, 616, 631], "treebank": [0, 107, 109, 111, 137, 146, 154, 176, 195, 203, 210, 227, 356, 357, 359, 490, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 523, 564, 616, 632, 633, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 721, 724, 725, 728, 751, 759, 762, 784, 787, 795, 796, 799, 800, 806, 808], "translat": [0, 55, 58, 80, 107, 138, 141, 142, 181, 198, 199, 220, 286, 291, 346, 464, 548, 747, 748, 752, 760, 763, 779, 808], "bleu_scor": [0, 667, 687, 688, 748], "chrf_score": [0, 667], "gale_church": [0, 667], "gdfa": [0, 592, 667, 689], "gleu_scor": [0, 667], "ibm1": [0, 667, 671, 701], "notat": [0, 210, 293, 299, 304, 310, 318, 356, 357, 396, 431, 451, 667, 706, 707, 708, 709, 710, 711, 712, 713, 714, 765, 766], "refer": [0, 60, 72, 80, 99, 175, 194, 210, 240, 243, 247, 311, 312, 314, 315, 316, 317, 321, 327, 329, 332, 334, 335, 339, 340, 341, 356, 357, 359, 379, 384, 399, 403, 432, 433, 434, 445, 448, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 535, 599, 642, 654, 658, 667, 678, 680, 681, 682, 683, 686, 687, 688, 689, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 722, 725, 727, 728, 731, 736, 740, 742, 748, 752, 759, 760, 761, 764, 765, 779, 780, 785, 793, 794, 795, 796, 803, 808], "ibm2": [0, 667, 672], "ibm3": [0, 667, 673], "ibm4": [0, 667, 674], "ibm5": [0, 667, 675], "ibm_model": [0, 667, 674, 693], "meteor_scor": [0, 667, 696], "nist_scor": [0, 667], "phrase_bas": [0, 667], "ribes_scor": [0, 667], "stack_decod": [0, 667, 677], "immut": [0, 78, 79, 80, 82, 90, 243, 244, 245, 246, 256, 260, 264, 706, 799], "parent": [0, 107, 126, 175, 186, 194, 207, 222, 233, 234, 236, 240, 241, 242, 256, 257, 261, 289, 382, 408, 569, 585, 608, 609, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 722, 725, 728, 753, 767], "prettyprint": [0, 706, 707, 708, 709, 710, 711, 712, 713, 714], "probabilist": [0, 225, 256, 261, 263, 267, 351, 379, 380, 381, 382, 402, 406, 407, 408, 521, 706, 761, 772, 808], "transform": [0, 60, 72, 107, 137, 146, 193, 194, 195, 203, 222, 224, 273, 324, 325, 329, 341, 396, 477, 478, 499, 500, 505, 518, 519, 521, 531, 536, 537, 660, 706, 707, 708, 709, 710, 711, 712, 713, 714, 728, 754, 759, 799, 801], "twitter": [0, 105, 107, 163, 572, 587, 634, 639, 759, 796, 808], "common": [0, 27, 93, 99, 105, 107, 112, 126, 168, 173, 179, 186, 210, 221, 277, 289, 293, 301, 303, 305, 324, 395, 415, 471, 473, 476, 478, 521, 523, 598, 602, 605, 606, 646, 695, 729, 753, 757, 767, 769, 785, 795, 803, 808], "twitter_demo": [0, 729], "twittercli": [0, 729, 737, 739, 741], "book": [0, 107, 168, 193, 221, 346, 347, 390, 496, 559, 562, 602, 605, 606, 607, 616, 671, 672, 673, 674, 675, 681, 688, 690, 691, 692, 693, 694, 703, 746, 751, 759, 778, 785, 791, 796, 798, 803, 806, 808], "cli": 0, "collect": [0, 93, 100, 101, 102, 103, 107, 158, 163, 188, 216, 218, 227, 242, 293, 299, 301, 304, 311, 315, 316, 321, 385, 392, 395, 399, 404, 407, 408, 409, 460, 493, 499, 506, 518, 521, 533, 602, 606, 646, 677, 691, 692, 693, 694, 704, 725, 728, 731, 733, 734, 735, 736, 740, 746, 747, 759, 785, 808], "colloc": [0, 1, 107, 168, 221, 471, 473, 602, 605, 606, 622, 646, 747, 780, 785, 808], "compat": [0, 221, 225, 243, 247, 408, 417, 469, 482, 490, 537, 608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 790, 808], "decor": [0, 192, 276, 281, 283, 284, 286, 289, 290, 474, 739], "download": [0, 105, 179, 225, 289, 291, 307, 529, 569, 742, 746, 759, 774, 807, 808], "directori": [0, 86, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 191, 192, 193, 195, 196, 198, 199, 201, 203, 204, 205, 207, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 225, 277, 289, 352, 377, 394, 401, 432, 445, 527, 734, 740, 741, 746, 752, 753, 759, 761, 765, 774, 787], "server": [0, 18, 225, 356, 357, 396, 731, 742, 808], "featstruct": [0, 447, 706, 707, 708, 709, 710, 711, 712, 713, 714, 747, 764, 765, 793, 799, 810], "lightweight": 0, "structur": [0, 3, 13, 15, 27, 29, 30, 44, 58, 60, 61, 62, 63, 64, 65, 66, 68, 72, 76, 79, 107, 109, 110, 121, 122, 126, 130, 137, 146, 148, 150, 175, 176, 177, 183, 186, 190, 195, 203, 206, 207, 218, 225, 242, 244, 245, 246, 247, 254, 255, 256, 268, 285, 351, 356, 357, 359, 382, 385, 387, 393, 395, 396, 397, 399, 402, 403, 404, 429, 432, 433, 448, 451, 455, 464, 642, 654, 663, 666, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 742, 751, 753, 754, 759, 767, 774, 785, 787, 788, 799, 806, 808], "grammar": [0, 3, 12, 13, 14, 15, 20, 28, 31, 43, 44, 46, 51, 62, 63, 72, 210, 225, 227, 232, 233, 236, 270, 271, 272, 285, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 397, 399, 400, 402, 403, 404, 406, 407, 447, 452, 455, 456, 461, 469, 663, 665, 725, 728, 746, 747, 752, 759, 761, 763, 764, 766, 770, 774, 790, 793, 808], "help": [0, 13, 15, 18, 58, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 186, 194, 221, 224, 227, 242, 289, 293, 602, 605, 606, 622, 632, 646, 659, 731, 746, 759, 766, 785, 788, 790, 791, 795, 803, 808], "intern": [0, 72, 85, 86, 107, 123, 126, 182, 184, 186, 197, 204, 205, 218, 243, 351, 402, 430, 460, 464, 475, 478, 547, 646, 671, 672, 690, 691, 743, 744, 747, 759, 760, 761, 767, 785], "jsontag": [0, 761], "langnam": 0, "lazyimport": 0, "probabl": [0, 44, 72, 78, 80, 82, 83, 85, 93, 94, 95, 256, 261, 263, 265, 293, 300, 305, 332, 340, 351, 374, 381, 382, 392, 402, 407, 503, 505, 506, 514, 521, 528, 670, 671, 672, 673, 674, 675, 676, 677, 679, 685, 690, 691, 692, 693, 694, 695, 704, 709, 713, 725, 728, 740, 747, 778, 780, 798, 803, 808], "text": [0, 1, 12, 13, 14, 15, 19, 29, 30, 44, 60, 61, 62, 63, 65, 68, 72, 73, 76, 78, 80, 84, 85, 89, 100, 107, 110, 112, 120, 126, 128, 136, 141, 143, 148, 160, 163, 166, 168, 170, 171, 173, 175, 179, 182, 186, 187, 189, 193, 194, 196, 198, 200, 206, 214, 216, 221, 222, 223, 225, 227, 232, 236, 237, 238, 241, 242, 256, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 341, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 396, 397, 399, 402, 403, 404, 406, 407, 408, 415, 472, 474, 475, 479, 480, 483, 488, 492, 493, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 529, 535, 559, 562, 616, 617, 618, 620, 621, 622, 623, 625, 628, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 657, 658, 659, 660, 661, 662, 663, 681, 685, 706, 715, 722, 730, 731, 735, 737, 739, 740, 741, 742, 754, 757, 758, 759, 761, 767, 787, 788, 796, 800, 806, 808], "tgrep": [0, 585, 808], "search": [0, 58, 72, 81, 86, 107, 126, 131, 165, 186, 191, 205, 218, 220, 221, 225, 237, 238, 277, 289, 355, 374, 376, 379, 380, 383, 402, 406, 478, 501, 514, 520, 527, 585, 602, 604, 605, 606, 607, 610, 611, 612, 613, 670, 671, 672, 673, 674, 675, 686, 689, 694, 695, 703, 704, 731, 734, 735, 739, 740, 742, 746, 758, 759, 761, 767, 774, 803, 808], "implement": [0, 39, 40, 41, 43, 44, 45, 60, 62, 63, 72, 80, 81, 85, 89, 90, 99, 107, 126, 130, 143, 168, 173, 186, 190, 193, 200, 221, 242, 243, 246, 256, 257, 261, 284, 290, 293, 294, 295, 296, 300, 302, 303, 305, 310, 318, 319, 321, 324, 329, 341, 351, 371, 379, 380, 381, 382, 387, 388, 390, 395, 397, 399, 402, 403, 404, 408, 425, 455, 473, 477, 478, 479, 482, 490, 505, 509, 514, 518, 521, 524, 535, 616, 642, 654, 659, 670, 671, 672, 673, 677, 681, 682, 683, 687, 688, 690, 691, 692, 695, 700, 702, 703, 704, 706, 711, 712, 720, 736, 743, 744, 748, 755, 765, 766, 769, 774, 775, 798, 799, 803, 808], "caveat": [0, 72, 243, 739, 766], "known": [0, 61, 76, 77, 78, 80, 83, 86, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 206, 218, 221, 227, 256, 260, 293, 351, 393, 487, 511, 512, 513, 521, 646, 725, 728, 731, 742, 757, 759, 795, 798, 799, 803], "note": [0, 15, 27, 38, 45, 60, 72, 80, 86, 91, 93, 100, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 186, 193, 194, 197, 205, 212, 214, 218, 221, 222, 225, 240, 241, 242, 243, 244, 245, 246, 256, 257, 261, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 312, 318, 319, 347, 351, 356, 357, 358, 359, 385, 386, 390, 395, 396, 398, 399, 404, 408, 409, 415, 471, 472, 473, 475, 482, 490, 493, 496, 497, 499, 514, 518, 527, 528, 533, 535, 537, 586, 628, 632, 646, 647, 654, 659, 660, 675, 687, 688, 690, 694, 699, 700, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 735, 740, 750, 759, 761, 763, 765, 766, 767, 784, 786, 787, 799, 803], "toolbox": [0, 105, 107, 747, 808], "treeprettyprint": [0, 706, 707, 708, 709, 710, 711, 712, 713, 714, 722, 747], "treetransform": [0, 747], "wsd": [0, 77, 747, 810], "The": [0, 3, 13, 15, 18, 21, 22, 23, 24, 25, 26, 27, 28, 31, 44, 45, 46, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 273, 274, 276, 277, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 315, 316, 318, 320, 321, 324, 325, 326, 327, 340, 342, 343, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 432, 433, 435, 438, 440, 445, 447, 448, 451, 453, 454, 455, 460, 462, 464, 471, 473, 474, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 568, 583, 586, 602, 603, 604, 605, 606, 607, 608, 620, 621, 623, 630, 631, 632, 633, 639, 641, 642, 644, 645, 646, 647, 651, 653, 654, 655, 657, 658, 659, 660, 670, 671, 672, 673, 674, 675, 677, 680, 681, 682, 683, 684, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 728, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 751, 752, 753, 754, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 775, 777, 778, 779, 780, 781, 782, 784, 785, 787, 788, 790, 791, 794, 795, 796, 797, 798, 799, 803, 805, 806, 808], "natur": [0, 93, 181, 210, 445, 455, 514, 725, 728, 745, 752, 759, 778, 808], "toolkit": [0, 107, 138, 210, 220, 242, 624, 649, 745, 808], "an": [0, 13, 18, 27, 28, 33, 34, 35, 36, 37, 43, 44, 45, 46, 58, 60, 62, 63, 72, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 181, 182, 183, 184, 185, 186, 188, 189, 193, 194, 195, 198, 200, 203, 206, 207, 208, 209, 211, 214, 218, 219, 221, 222, 223, 224, 225, 226, 227, 240, 242, 243, 244, 245, 246, 247, 255, 256, 257, 259, 261, 263, 271, 279, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 324, 326, 330, 337, 338, 340, 341, 342, 346, 347, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 414, 415, 417, 418, 419, 421, 430, 431, 432, 433, 434, 435, 436, 438, 440, 445, 448, 451, 454, 455, 459, 460, 464, 466, 474, 475, 478, 479, 481, 482, 485, 489, 490, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 514, 515, 516, 518, 519, 520, 521, 522, 524, 527, 528, 529, 530, 535, 536, 537, 583, 602, 603, 605, 606, 608, 616, 620, 622, 624, 625, 642, 644, 645, 646, 649, 651, 657, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 678, 679, 681, 682, 683, 684, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728, 731, 734, 736, 739, 740, 741, 742, 743, 744, 746, 748, 751, 752, 754, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 772, 774, 775, 777, 778, 782, 784, 786, 787, 788, 790, 791, 795, 796, 797, 798, 799, 803, 804, 805, 806, 808], "open": [0, 18, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 179, 218, 221, 225, 227, 239, 241, 242, 284, 289, 318, 438, 451, 459, 460, 483, 492, 522, 602, 607, 625, 651, 652, 654, 663, 664, 665, 666, 706, 707, 708, 709, 710, 711, 712, 713, 714, 746, 759, 761, 763, 766, 769, 775, 785, 788, 803, 806], "sourc": [0, 3, 5, 7, 9, 11, 13, 15, 16, 18, 19, 23, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 752, 759, 763, 767, 774, 785, 796, 798, 806], "python": [0, 18, 44, 60, 85, 99, 107, 138, 165, 214, 218, 220, 224, 225, 226, 227, 240, 243, 244, 246, 289, 290, 293, 299, 304, 310, 318, 356, 357, 396, 432, 445, 479, 480, 488, 490, 500, 501, 509, 519, 520, 524, 533, 608, 631, 645, 647, 658, 660, 731, 732, 736, 737, 740, 742, 746, 752, 759, 761, 765, 766, 774, 778, 781, 799, 803, 806, 808, 810], "librari": [0, 77, 80, 85, 107, 163, 216, 289, 736, 737, 740, 806, 808], "process": [0, 3, 44, 60, 65, 78, 93, 95, 96, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 201, 207, 210, 212, 218, 219, 221, 222, 223, 225, 242, 243, 244, 247, 270, 279, 285, 309, 355, 379, 380, 386, 387, 388, 393, 395, 402, 403, 404, 408, 422, 445, 460, 469, 472, 475, 477, 480, 487, 488, 505, 509, 514, 517, 521, 524, 533, 539, 620, 625, 630, 637, 644, 651, 652, 657, 663, 664, 670, 671, 672, 673, 674, 675, 677, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 733, 734, 735, 736, 737, 740, 742, 752, 759, 761, 774, 778, 784, 788, 806, 808], "A": [0, 3, 5, 13, 15, 18, 27, 31, 43, 44, 46, 48, 55, 57, 60, 61, 62, 63, 65, 72, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 207, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 233, 234, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 273, 274, 277, 278, 284, 285, 286, 287, 289, 293, 294, 295, 296, 297, 298, 300, 302, 303, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 324, 327, 329, 332, 334, 335, 339, 340, 341, 344, 352, 353, 354, 355, 356, 357, 359, 361, 362, 368, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 415, 416, 419, 423, 429, 430, 431, 432, 433, 438, 440, 445, 447, 448, 451, 454, 455, 459, 460, 464, 471, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 527, 528, 529, 531, 535, 536, 537, 564, 568, 586, 602, 603, 604, 605, 606, 607, 608, 616, 619, 620, 621, 622, 623, 624, 625, 630, 632, 633, 637, 641, 642, 644, 646, 647, 649, 651, 653, 657, 658, 659, 661, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 698, 701, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 720, 721, 724, 725, 728, 731, 733, 734, 735, 736, 740, 742, 743, 744, 746, 748, 751, 752, 754, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 771, 772, 774, 775, 778, 781, 782, 784, 785, 787, 788, 789, 791, 795, 796, 797, 798, 799, 800, 803, 808], "free": [0, 225, 233, 236, 256, 257, 260, 261, 263, 264, 286, 287, 430, 433, 435, 438, 448, 451, 460, 507, 522, 759, 761, 764, 806, 808], "onlin": [0, 346, 478, 798, 806, 808], "If": [0, 13, 15, 18, 27, 43, 46, 60, 72, 79, 80, 81, 82, 83, 86, 90, 91, 99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 183, 184, 185, 186, 188, 189, 191, 193, 194, 196, 197, 198, 199, 200, 205, 207, 208, 212, 213, 214, 216, 218, 219, 221, 222, 223, 224, 225, 227, 234, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 255, 256, 257, 261, 271, 274, 276, 277, 278, 281, 283, 284, 285, 286, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 312, 317, 318, 327, 335, 339, 340, 348, 356, 357, 359, 371, 377, 384, 385, 386, 387, 388, 392, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 433, 434, 435, 436, 438, 440, 447, 448, 451, 458, 459, 460, 464, 471, 472, 473, 474, 475, 480, 481, 485, 488, 489, 493, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 524, 527, 528, 529, 530, 535, 536, 537, 602, 603, 604, 605, 606, 616, 621, 622, 625, 627, 628, 633, 639, 641, 646, 651, 652, 653, 654, 656, 659, 663, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 681, 690, 691, 692, 693, 694, 695, 696, 697, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 731, 734, 735, 737, 739, 740, 741, 742, 746, 748, 757, 759, 761, 763, 766, 767, 773, 774, 777, 779, 782, 795, 797, 799, 803, 806, 807], "you": [0, 3, 13, 15, 27, 44, 57, 58, 60, 72, 81, 82, 86, 99, 107, 110, 122, 126, 128, 158, 163, 168, 175, 183, 186, 189, 205, 214, 216, 218, 221, 227, 240, 242, 243, 244, 245, 246, 256, 257, 261, 284, 290, 293, 299, 304, 352, 386, 387, 388, 394, 395, 403, 404, 408, 472, 474, 475, 480, 482, 485, 488, 490, 493, 496, 499, 503, 518, 528, 602, 603, 605, 606, 607, 616, 634, 639, 653, 681, 706, 715, 722, 725, 728, 731, 739, 740, 746, 750, 753, 757, 758, 759, 760, 761, 763, 765, 766, 767, 774, 785, 787, 795, 796, 798, 799, 803, 804, 807], "academ": 0, "research": [0, 107, 112, 166, 179, 188, 219, 324, 359, 480, 488, 788, 806], "pleas": [0, 105, 356, 357, 390, 396, 475, 496, 514, 521, 538, 616, 619, 621, 626, 632, 633, 635, 636, 641, 647, 653, 655, 659, 660, 702, 703, 759, 760, 785, 793, 796, 798, 806, 807, 808], "cite": [0, 475, 806], "steven": [0, 687, 688, 806, 808, 810], "bird": [0, 286, 782, 806, 808, 810], "ewan": [0, 806, 808, 810], "klein": [0, 668, 671, 672, 673, 674, 675, 679, 690, 691, 692, 693, 694, 725, 728, 806, 808, 810], "edward": [0, 806, 808, 810], "loper": [0, 806, 808, 810], "2009": [0, 341, 642, 654, 806], "o": [0, 86, 203, 290, 356, 357, 396, 454, 459, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 521, 527, 529, 533, 583, 766, 770, 780, 781, 785, 786, 788, 795, 803, 806, 808], "reilli": [0, 806, 808], "media": [0, 475, 731, 737, 806, 808], "inc": [0, 645, 699, 700, 806, 808], "http": [0, 18, 55, 85, 89, 100, 105, 107, 110, 112, 126, 128, 133, 135, 142, 165, 166, 168, 175, 177, 179, 182, 184, 186, 187, 189, 192, 193, 194, 197, 199, 202, 204, 205, 208, 209, 210, 219, 220, 221, 223, 225, 226, 227, 240, 242, 285, 291, 307, 319, 324, 326, 341, 356, 357, 359, 377, 396, 401, 408, 422, 445, 479, 482, 485, 490, 493, 501, 509, 514, 518, 520, 523, 524, 529, 538, 547, 559, 562, 567, 583, 591, 592, 624, 631, 645, 649, 658, 659, 660, 680, 681, 682, 683, 685, 687, 688, 696, 697, 699, 700, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 722, 725, 727, 728, 731, 732, 736, 737, 739, 740, 742, 743, 744, 746, 748, 750, 751, 752, 753, 758, 759, 761, 769, 774, 777, 781, 785, 796, 803, 806, 807, 808], "www": [0, 55, 89, 105, 107, 110, 133, 142, 175, 177, 182, 187, 192, 193, 197, 199, 202, 204, 205, 208, 210, 220, 223, 226, 242, 307, 324, 377, 401, 408, 422, 445, 479, 482, 490, 518, 559, 562, 567, 591, 659, 680, 681, 682, 683, 696, 697, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 746, 751, 752, 753, 759, 774, 785, 806, 807, 808], "org": [0, 55, 85, 105, 107, 112, 133, 142, 165, 168, 179, 192, 193, 199, 208, 210, 220, 221, 290, 291, 324, 377, 401, 445, 464, 482, 485, 490, 493, 501, 514, 520, 523, 527, 559, 562, 583, 591, 624, 649, 660, 680, 681, 682, 683, 685, 687, 688, 699, 700, 702, 703, 725, 728, 732, 736, 737, 740, 742, 743, 744, 746, 748, 751, 752, 753, 759, 781, 785, 788, 806, 807, 808, 810], "isort": [0, 107, 496, 531, 667, 808], "skip_fil": [0, 107, 496, 531, 667], "version": [0, 60, 61, 72, 76, 79, 99, 107, 110, 112, 128, 166, 168, 175, 179, 189, 198, 206, 208, 219, 221, 223, 225, 279, 285, 289, 293, 294, 295, 302, 305, 359, 395, 399, 408, 417, 430, 432, 433, 435, 445, 448, 460, 478, 482, 490, 493, 500, 519, 530, 533, 602, 603, 616, 627, 656, 660, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 742, 752, 753, 759, 762, 763, 774, 785, 787, 788, 795, 806, 807, 808], "3": [0, 72, 75, 76, 77, 80, 89, 93, 99, 100, 103, 107, 123, 126, 135, 141, 149, 166, 168, 182, 184, 186, 187, 194, 198, 199, 203, 205, 206, 214, 219, 221, 223, 240, 242, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 311, 312, 315, 316, 318, 321, 322, 324, 326, 329, 333, 341, 344, 356, 357, 358, 359, 378, 379, 390, 395, 396, 398, 406, 408, 409, 415, 436, 448, 451, 458, 467, 471, 473, 475, 477, 480, 481, 482, 485, 488, 489, 490, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 527, 528, 533, 535, 537, 585, 595, 602, 605, 606, 607, 616, 619, 621, 624, 626, 632, 633, 634, 635, 636, 639, 641, 645, 646, 647, 649, 653, 655, 659, 660, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 706, 714, 731, 736, 737, 742, 751, 753, 754, 755, 757, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 774, 777, 780, 781, 784, 785, 786, 789, 790, 793, 795, 796, 797, 798, 799, 800, 802, 803, 804, 806, 807, 808, 810], "8": [0, 86, 99, 107, 153, 164, 209, 214, 217, 225, 288, 324, 358, 379, 380, 390, 398, 464, 474, 493, 500, 505, 511, 512, 513, 519, 521, 527, 529, 533, 627, 656, 658, 663, 664, 665, 666, 668, 677, 679, 681, 685, 686, 689, 701, 703, 704, 739, 753, 755, 757, 759, 762, 765, 766, 772, 774, 777, 780, 781, 783, 784, 786, 787, 789, 791, 793, 795, 796, 800, 802, 803, 807, 808], "1": [0, 57, 61, 62, 63, 72, 76, 80, 83, 93, 95, 96, 97, 98, 99, 100, 101, 107, 109, 126, 133, 135, 137, 142, 149, 163, 164, 165, 166, 168, 171, 176, 181, 182, 186, 189, 192, 193, 194, 195, 199, 205, 206, 214, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 240, 241, 242, 243, 256, 261, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 315, 316, 318, 319, 321, 322, 324, 325, 326, 327, 329, 330, 333, 334, 340, 341, 342, 343, 344, 356, 357, 358, 359, 371, 374, 377, 378, 379, 380, 390, 392, 395, 396, 397, 398, 399, 401, 402, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 445, 451, 454, 464, 475, 479, 480, 481, 488, 489, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 528, 533, 535, 536, 537, 567, 568, 593, 608, 621, 630, 631, 632, 633, 641, 645, 646, 651, 657, 658, 659, 660, 668, 669, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728, 730, 731, 732, 733, 734, 735, 736, 740, 741, 742, 743, 744, 748, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 795, 796, 797, 799, 800, 801, 802, 808], "interact": [1, 60, 95, 96, 227, 235, 241, 242, 289, 449, 602, 605, 759, 765, 774], "applic": [1, 13, 18, 40, 43, 44, 45, 46, 99, 184, 289, 384, 395, 403, 430, 435, 459, 460, 478, 499, 506, 518, 521, 536, 537, 646, 692, 722, 727, 731, 732, 740, 751, 774, 808], "chartpars": [1, 28, 44, 353, 354, 371, 375, 386, 389, 395, 397, 399, 406], "parser": [1, 3, 5, 12, 13, 14, 15, 28, 31, 44, 46, 60, 61, 62, 63, 65, 69, 72, 76, 192, 225, 243, 248, 249, 251, 256, 257, 261, 272, 285, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 432, 448, 459, 460, 462, 505, 521, 555, 624, 649, 750, 751, 754, 763, 765, 766, 770, 808], "chunkpars": [1, 61, 72, 76], "regular": [1, 5, 11, 57, 60, 61, 62, 63, 72, 76, 80, 107, 110, 112, 113, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 143, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 200, 201, 206, 207, 212, 219, 221, 222, 223, 289, 453, 464, 484, 491, 501, 510, 520, 528, 602, 605, 606, 607, 608, 616, 623, 633, 639, 646, 647, 659, 660, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 754, 759, 767, 769, 785, 788, 795], "express": [1, 5, 11, 46, 57, 60, 61, 62, 63, 72, 76, 79, 82, 83, 99, 107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 143, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 169, 170, 171, 173, 175, 178, 179, 182, 183, 184, 185, 186, 189, 196, 198, 199, 200, 207, 212, 218, 219, 221, 222, 223, 225, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 356, 396, 429, 430, 431, 432, 433, 434, 438, 440, 448, 451, 453, 455, 459, 460, 462, 464, 465, 468, 469, 484, 491, 505, 510, 521, 528, 537, 602, 605, 606, 607, 608, 616, 620, 623, 625, 633, 639, 644, 646, 647, 651, 652, 659, 660, 671, 672, 690, 691, 692, 706, 707, 708, 709, 710, 711, 712, 713, 714, 737, 742, 751, 752, 754, 757, 759, 761, 763, 764, 765, 767, 770, 774, 778, 782, 785, 788, 789, 790, 795, 799, 808], "find": [1, 11, 62, 65, 72, 80, 81, 82, 89, 93, 95, 96, 97, 98, 100, 101, 102, 103, 107, 109, 111, 116, 135, 143, 168, 173, 176, 177, 193, 194, 200, 221, 222, 225, 242, 256, 271, 284, 285, 287, 289, 293, 324, 326, 348, 349, 379, 380, 384, 385, 390, 392, 401, 403, 404, 407, 408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 433, 434, 435, 448, 455, 460, 464, 465, 469, 474, 500, 505, 516, 519, 521, 528, 536, 585, 602, 603, 604, 605, 606, 607, 608, 616, 622, 623, 624, 625, 646, 647, 649, 651, 660, 670, 671, 672, 673, 674, 675, 677, 681, 686, 689, 692, 695, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 753, 757, 759, 763, 769, 774, 785, 787, 791, 795, 799], "concord": [1, 602, 603, 605, 606, 747, 785, 808], "part": [1, 72, 105, 107, 112, 117, 121, 122, 126, 128, 132, 137, 146, 150, 159, 166, 168, 179, 183, 186, 189, 193, 195, 203, 207, 213, 219, 221, 240, 242, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 348, 371, 382, 395, 397, 445, 464, 476, 486, 493, 495, 496, 502, 505, 509, 510, 514, 517, 521, 524, 525, 526, 528, 587, 602, 605, 606, 608, 646, 657, 677, 693, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 743, 744, 753, 759, 766, 767, 769, 786, 791, 795, 797, 803, 808], "speech": [1, 107, 117, 121, 122, 126, 128, 132, 150, 159, 168, 181, 183, 186, 189, 193, 207, 213, 221, 348, 371, 397, 408, 422, 476, 486, 495, 496, 502, 506, 509, 510, 514, 517, 521, 524, 525, 526, 528, 642, 686, 689, 693, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 743, 744, 759, 767, 803, 808], "concordanc": [1, 602, 605, 606], "nemo": [1, 11], "replac": [1, 11, 43, 46, 72, 98, 107, 112, 126, 128, 179, 186, 189, 225, 240, 241, 242, 243, 255, 256, 286, 287, 292, 379, 380, 395, 399, 415, 430, 433, 435, 448, 454, 460, 474, 477, 478, 481, 489, 494, 536, 621, 632, 633, 634, 639, 641, 659, 677, 692, 704, 731, 737, 739, 753, 759, 761, 782, 796, 799], "tool": [1, 3, 5, 13, 15, 100, 101, 102, 103, 227, 236, 242, 275, 276, 284, 342, 359, 471, 473, 475, 759, 774, 785, 788, 791, 806, 808], "rdparser": 1, "recurs": [1, 12, 13, 60, 107, 168, 221, 227, 384, 403, 429, 430, 433, 434, 435, 438, 448, 451, 460, 514, 742, 768, 775, 790], "descent": [1, 12, 13, 403, 608, 615], "srparser": 1, "shift": [1, 14, 15, 175, 240, 242, 329, 341, 385, 388, 390, 404, 630, 632, 657, 659], "reduc": [1, 14, 15, 93, 95, 96, 97, 98, 99, 225, 312, 356, 357, 385, 388, 390, 404, 415, 478, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 646, 759, 769, 805], "browser": [1, 18, 107, 112, 179, 808], "graphic": [3, 5, 13, 15, 107, 168, 221, 227, 239, 241, 242, 706, 707, 708, 709, 710, 711, 712, 713, 714, 808], "explor": [3, 5, 13, 15, 559, 602, 605], "flexibl": [3, 256, 257, 261, 293, 299, 304, 395, 639, 751], "algorithm": [3, 80, 82, 84, 85, 89, 93, 95, 97, 107, 133, 202, 220, 303, 307, 314, 319, 349, 353, 354, 361, 362, 368, 371, 375, 379, 380, 381, 382, 386, 389, 390, 392, 395, 397, 399, 407, 408, 422, 455, 476, 477, 478, 480, 482, 485, 488, 489, 490, 493, 501, 505, 506, 514, 520, 521, 537, 554, 560, 583, 622, 630, 642, 646, 654, 657, 670, 671, 672, 673, 674, 675, 686, 689, 690, 691, 692, 693, 694, 695, 701, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 722, 725, 727, 728, 742, 743, 744, 755, 766, 784, 796, 808], "call": [3, 13, 27, 44, 60, 80, 81, 88, 98, 99, 107, 110, 126, 135, 137, 146, 163, 173, 175, 186, 192, 193, 194, 195, 203, 214, 216, 218, 221, 222, 226, 227, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 256, 271, 275, 276, 284, 285, 289, 290, 292, 293, 299, 301, 304, 351, 355, 376, 377, 383, 384, 387, 388, 391, 395, 397, 401, 402, 403, 404, 408, 409, 410, 413, 415, 416, 430, 435, 438, 449, 451, 460, 471, 473, 477, 478, 481, 485, 489, 493, 507, 514, 522, 535, 536, 537, 608, 622, 639, 646, 651, 680, 681, 687, 688, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 732, 739, 740, 742, 751, 754, 755, 758, 759, 760, 761, 765, 766, 767, 768, 774, 775, 786, 787, 790, 796, 797, 798, 799, 803, 806, 808], "record": [3, 13, 15, 61, 76, 77, 107, 174, 175, 207, 214, 221, 227, 256, 263, 324, 355, 385, 386, 387, 392, 395, 402, 403, 404, 407, 408, 409, 415, 416, 445, 632, 659, 663, 687, 688, 752, 759, 797, 803], "hypothes": [3, 29, 30, 44, 395, 397, 402, 677, 681, 683, 688, 700, 703, 704], "about": [3, 60, 77, 82, 83, 89, 107, 126, 128, 135, 137, 146, 149, 158, 166, 168, 184, 186, 189, 194, 195, 203, 205, 209, 218, 219, 221, 227, 243, 244, 245, 271, 285, 286, 352, 384, 394, 395, 397, 399, 403, 408, 409, 449, 464, 477, 478, 479, 490, 499, 510, 517, 518, 528, 533, 646, 677, 695, 704, 725, 728, 731, 739, 740, 742, 757, 759, 763, 765, 766, 767, 769, 785, 787, 788, 791, 796, 800, 805, 808], "syntact": [3, 65, 107, 171, 173, 221, 223, 256, 351, 356, 357, 395, 396, 452, 456, 461, 469, 759, 767, 769, 784, 785], "constitu": [3, 65, 107, 120, 182, 195, 203, 392, 395, 407, 706, 714, 725, 728, 787], "each": [3, 27, 28, 29, 30, 44, 57, 60, 62, 63, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 110, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 218, 219, 221, 222, 223, 224, 225, 227, 240, 241, 242, 243, 244, 245, 246, 247, 256, 258, 259, 264, 271, 285, 289, 293, 299, 301, 304, 310, 311, 312, 315, 316, 318, 321, 337, 338, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 432, 433, 435, 445, 447, 452, 456, 460, 469, 471, 473, 474, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 526, 527, 528, 529, 530, 533, 535, 536, 537, 542, 561, 602, 603, 604, 605, 606, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 644, 646, 654, 657, 660, 663, 664, 665, 666, 668, 671, 672, 676, 679, 681, 685, 688, 690, 691, 693, 694, 695, 697, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 731, 734, 735, 740, 752, 753, 757, 759, 763, 765, 766, 767, 769, 774, 781, 784, 785, 787, 788, 791, 795, 796, 801, 803, 805], "hypothesi": [3, 84, 206, 311, 315, 316, 321, 395, 397, 677, 678, 680, 681, 682, 683, 687, 688, 696, 697, 698, 699, 700, 702, 703, 704, 759], "repres": [3, 30, 31, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 60, 77, 80, 81, 88, 96, 98, 107, 116, 126, 150, 160, 163, 168, 177, 182, 186, 198, 205, 207, 214, 216, 221, 223, 243, 255, 256, 260, 263, 264, 284, 285, 310, 318, 351, 379, 380, 382, 387, 390, 393, 395, 397, 402, 403, 408, 410, 412, 422, 429, 430, 431, 438, 440, 451, 455, 457, 460, 471, 473, 474, 505, 509, 514, 521, 524, 529, 608, 616, 620, 630, 644, 646, 657, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 690, 691, 693, 694, 695, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 721, 724, 731, 742, 755, 759, 765, 766, 767, 769, 780, 782, 785, 788, 791, 797, 803], "singl": [3, 15, 60, 62, 66, 72, 76, 78, 79, 80, 89, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 177, 183, 186, 192, 195, 198, 200, 203, 213, 214, 218, 221, 225, 227, 234, 240, 241, 242, 243, 245, 246, 248, 249, 251, 256, 259, 264, 271, 285, 293, 306, 324, 351, 385, 386, 387, 388, 392, 395, 399, 403, 404, 406, 407, 408, 409, 432, 460, 464, 471, 473, 474, 499, 507, 514, 518, 521, 522, 533, 537, 602, 605, 606, 607, 608, 615, 618, 620, 624, 628, 633, 642, 644, 649, 654, 659, 663, 681, 682, 683, 687, 688, 697, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 720, 725, 728, 731, 742, 759, 765, 766, 767, 787, 794, 799, 801, 804, 808], "edg": [3, 27, 29, 30, 44, 221, 312, 329, 334, 341, 344, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 383, 386, 389, 391, 395, 397, 399, 402, 406, 521, 586, 706, 715, 722, 742, 757, 765, 784], "set": [3, 27, 43, 44, 46, 60, 62, 63, 72, 77, 78, 79, 80, 81, 83, 85, 93, 94, 95, 96, 97, 98, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 182, 183, 186, 191, 192, 193, 195, 198, 201, 202, 203, 213, 214, 215, 216, 217, 221, 223, 227, 234, 237, 238, 240, 241, 242, 243, 244, 245, 255, 256, 257, 258, 261, 263, 271, 277, 278, 284, 285, 286, 287, 289, 293, 310, 311, 314, 315, 316, 318, 321, 324, 327, 331, 333, 334, 335, 339, 340, 341, 348, 351, 355, 359, 374, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 395, 397, 399, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 442, 445, 448, 451, 457, 459, 460, 464, 467, 471, 473, 474, 479, 481, 485, 488, 489, 493, 499, 500, 501, 505, 506, 514, 518, 519, 520, 521, 529, 536, 537, 553, 562, 573, 585, 601, 608, 618, 624, 634, 639, 642, 646, 649, 651, 663, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 679, 681, 686, 689, 690, 691, 692, 693, 694, 695, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 731, 734, 735, 740, 742, 746, 751, 752, 754, 755, 757, 758, 759, 762, 764, 765, 767, 769, 774, 779, 780, 784, 785, 790, 791, 793, 795, 796, 798, 803, 804, 808], "determin": [3, 43, 63, 72, 80, 86, 91, 99, 100, 101, 102, 103, 225, 240, 241, 348, 379, 429, 475, 497, 498, 499, 502, 503, 504, 508, 510, 511, 512, 513, 515, 516, 517, 518, 523, 528, 529, 630, 642, 646, 657, 670, 671, 672, 673, 674, 675, 677, 690, 691, 692, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 722, 723, 734, 735, 740, 754, 759, 761, 771, 774, 780, 785], "when": [3, 28, 44, 60, 62, 63, 72, 77, 79, 80, 81, 83, 85, 88, 90, 93, 97, 99, 100, 101, 102, 103, 107, 126, 165, 168, 183, 186, 211, 214, 218, 220, 221, 225, 227, 234, 237, 238, 240, 241, 242, 243, 255, 271, 274, 275, 276, 277, 278, 281, 283, 284, 285, 289, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 314, 324, 327, 333, 340, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 397, 399, 401, 402, 403, 404, 406, 407, 408, 409, 416, 417, 430, 432, 438, 451, 460, 481, 489, 498, 500, 501, 505, 507, 514, 515, 516, 519, 520, 521, 522, 528, 535, 537, 569, 583, 608, 616, 625, 632, 633, 639, 645, 646, 647, 651, 653, 659, 671, 672, 677, 680, 681, 687, 688, 690, 691, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 722, 725, 728, 731, 732, 733, 734, 736, 740, 742, 746, 753, 754, 757, 758, 759, 761, 763, 765, 766, 767, 768, 771, 774, 775, 784, 793, 795, 796, 799, 803, 804, 808], "new": [3, 18, 27, 43, 44, 60, 62, 63, 72, 80, 93, 99, 107, 108, 109, 111, 125, 126, 128, 132, 134, 137, 144, 146, 153, 158, 159, 160, 161, 163, 164, 168, 172, 176, 178, 180, 185, 186, 187, 188, 189, 192, 193, 194, 195, 197, 199, 200, 201, 203, 206, 208, 209, 213, 214, 216, 217, 218, 221, 222, 223, 225, 227, 234, 239, 240, 241, 242, 243, 244, 245, 246, 256, 257, 258, 259, 260, 261, 263, 264, 274, 276, 278, 281, 283, 284, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 312, 348, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 399, 402, 403, 404, 407, 408, 409, 410, 412, 413, 415, 417, 421, 423, 424, 431, 436, 438, 440, 445, 448, 451, 459, 460, 471, 473, 478, 485, 493, 494, 496, 497, 501, 503, 505, 508, 510, 516, 520, 521, 528, 536, 537, 602, 603, 616, 619, 621, 626, 632, 633, 635, 636, 639, 641, 642, 645, 647, 653, 655, 659, 660, 669, 679, 690, 691, 692, 693, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 723, 725, 728, 731, 733, 734, 735, 736, 740, 742, 746, 752, 754, 761, 763, 765, 766, 769, 774, 777, 785, 786, 787, 793, 794, 796, 797, 798, 799, 803, 808], "can": [3, 13, 15, 27, 32, 38, 43, 44, 45, 58, 60, 61, 72, 76, 77, 78, 80, 81, 83, 86, 90, 91, 93, 96, 99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 256, 257, 261, 264, 266, 270, 272, 284, 285, 287, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 312, 318, 319, 348, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 389, 391, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 406, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 422, 429, 431, 432, 445, 451, 453, 460, 464, 471, 473, 474, 475, 477, 478, 479, 482, 485, 490, 493, 499, 500, 505, 506, 514, 518, 519, 521, 527, 528, 533, 535, 537, 559, 583, 602, 603, 604, 605, 606, 608, 616, 621, 622, 623, 625, 632, 633, 641, 642, 646, 647, 651, 653, 654, 659, 663, 673, 677, 680, 681, 685, 692, 693, 694, 696, 697, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 725, 728, 731, 733, 734, 735, 736, 737, 740, 742, 746, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 774, 778, 780, 782, 784, 785, 786, 787, 788, 790, 791, 792, 794, 795, 796, 797, 798, 799, 801, 803, 804, 807, 808], "ad": [3, 27, 38, 45, 83, 107, 168, 206, 218, 221, 240, 242, 256, 257, 261, 271, 285, 355, 374, 376, 383, 386, 391, 395, 397, 399, 402, 408, 414, 418, 419, 471, 473, 488, 523, 620, 628, 632, 642, 644, 646, 654, 659, 686, 689, 725, 728, 731, 742, 754, 759, 765, 774, 786, 803, 808], "thi": [3, 15, 18, 27, 28, 29, 30, 43, 44, 51, 58, 60, 61, 62, 63, 65, 66, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 93, 95, 96, 97, 98, 99, 100, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 275, 276, 277, 279, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 318, 319, 321, 324, 325, 326, 346, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 445, 448, 449, 451, 453, 455, 459, 460, 464, 468, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 485, 487, 488, 489, 490, 493, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 524, 527, 528, 529, 530, 533, 535, 536, 537, 539, 547, 559, 583, 599, 602, 603, 604, 605, 606, 608, 609, 616, 618, 619, 621, 622, 623, 624, 625, 628, 630, 631, 633, 634, 639, 641, 642, 644, 645, 646, 647, 649, 651, 653, 654, 657, 658, 659, 660, 663, 666, 669, 670, 671, 672, 673, 674, 675, 677, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 722, 725, 727, 728, 729, 731, 733, 734, 735, 736, 737, 739, 740, 742, 743, 744, 746, 748, 752, 755, 757, 758, 759, 761, 763, 764, 765, 766, 767, 769, 770, 771, 774, 775, 776, 777, 780, 781, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 807, 808], "control": [3, 13, 15, 83, 107, 143, 200, 227, 242, 402, 509, 524, 616, 696, 697, 731, 785, 803, 805], "overal": [3, 61, 76, 681], "behavior": [3, 63, 72, 97, 107, 168, 218, 221, 625, 651, 652, 759, 761, 803, 804, 805], "e": [3, 13, 27, 29, 30, 44, 46, 57, 58, 60, 61, 72, 76, 78, 80, 81, 82, 83, 84, 85, 90, 91, 93, 95, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 180, 181, 183, 185, 186, 188, 189, 194, 197, 200, 201, 202, 205, 206, 208, 213, 218, 220, 221, 222, 223, 224, 225, 227, 235, 240, 241, 242, 243, 244, 245, 246, 254, 255, 256, 257, 260, 261, 263, 282, 286, 287, 288, 289, 293, 299, 304, 310, 311, 312, 315, 316, 318, 319, 321, 324, 325, 329, 334, 341, 344, 348, 356, 357, 359, 377, 392, 395, 397, 399, 401, 402, 406, 407, 408, 409, 410, 412, 422, 431, 433, 435, 436, 440, 447, 448, 449, 451, 455, 460, 471, 472, 473, 474, 475, 477, 478, 479, 483, 484, 491, 492, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 521, 525, 526, 527, 528, 529, 530, 536, 537, 602, 603, 605, 606, 607, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 642, 645, 646, 647, 651, 652, 659, 669, 680, 681, 682, 683, 684, 688, 690, 691, 692, 693, 694, 695, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 725, 728, 731, 733, 734, 735, 736, 737, 739, 740, 742, 746, 753, 755, 757, 759, 764, 765, 766, 767, 770, 774, 778, 780, 781, 785, 786, 788, 790, 795, 796, 799, 801, 803, 808], "g": [3, 13, 15, 46, 57, 60, 72, 83, 85, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 179, 181, 183, 186, 189, 194, 201, 203, 205, 220, 221, 224, 225, 227, 235, 240, 241, 242, 243, 256, 260, 284, 310, 312, 318, 319, 324, 325, 329, 334, 341, 344, 348, 356, 357, 359, 377, 401, 431, 438, 449, 451, 471, 472, 473, 474, 475, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 525, 526, 527, 528, 602, 603, 605, 606, 607, 616, 621, 623, 625, 632, 633, 641, 645, 646, 647, 651, 652, 659, 680, 681, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 733, 734, 735, 736, 737, 739, 740, 742, 746, 752, 753, 759, 762, 764, 765, 766, 767, 770, 772, 774, 778, 780, 781, 785, 786, 790, 795, 796, 799, 808], "whether": [3, 32, 43, 45, 60, 84, 85, 90, 91, 99, 207, 227, 240, 241, 242, 256, 257, 261, 275, 280, 282, 284, 287, 289, 312, 324, 325, 356, 357, 359, 386, 387, 395, 403, 408, 409, 415, 421, 431, 451, 457, 460, 475, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 522, 533, 568, 608, 611, 612, 616, 634, 639, 646, 661, 669, 695, 706, 715, 722, 731, 733, 734, 735, 736, 740, 742, 759, 763, 765, 766, 774, 780], "top": [3, 15, 62, 63, 72, 80, 101, 102, 103, 175, 194, 207, 222, 240, 241, 242, 292, 353, 354, 359, 361, 362, 368, 375, 384, 386, 389, 395, 397, 399, 403, 460, 474, 608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 722, 725, 728, 731, 746, 757, 762, 769, 772, 774, 784, 790, 799, 800, 801, 805, 808], "down": [3, 198, 227, 234, 240, 242, 293, 353, 354, 361, 362, 368, 375, 384, 386, 389, 395, 397, 399, 403, 455, 759, 765, 784], "bottom": [3, 240, 241, 242, 353, 354, 355, 374, 376, 381, 382, 383, 385, 391, 392, 395, 402, 404, 407, 706, 715, 722, 784], "up": [3, 13, 15, 96, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 192, 194, 195, 196, 198, 199, 203, 207, 212, 213, 214, 219, 221, 222, 223, 225, 227, 234, 240, 241, 242, 289, 290, 293, 300, 301, 305, 306, 351, 352, 353, 354, 355, 374, 376, 381, 382, 383, 385, 391, 392, 394, 395, 402, 404, 407, 497, 498, 500, 508, 514, 515, 516, 519, 528, 553, 562, 573, 601, 602, 603, 618, 628, 642, 654, 680, 681, 683, 688, 694, 695, 701, 704, 706, 715, 722, 731, 753, 754, 758, 759, 761, 766, 767, 774, 784, 785, 787, 788, 795, 803, 806, 808], "demonstr": [3, 44, 72, 95, 96, 242, 286, 293, 301, 314, 319, 359, 382, 395, 397, 402, 403, 404, 407, 473, 490, 493, 521, 533, 725, 728, 759, 808], "sentenc": [3, 27, 28, 29, 30, 44, 48, 60, 61, 62, 63, 65, 66, 67, 71, 72, 76, 77, 83, 86, 107, 108, 109, 110, 112, 115, 116, 117, 119, 120, 122, 125, 126, 130, 132, 134, 135, 144, 145, 147, 149, 150, 159, 160, 161, 164, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 186, 190, 192, 193, 194, 195, 201, 203, 204, 205, 207, 210, 213, 214, 217, 256, 270, 271, 272, 279, 285, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 347, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 415, 432, 445, 447, 451, 452, 454, 455, 456, 461, 464, 469, 472, 474, 475, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 533, 535, 536, 537, 586, 616, 618, 621, 622, 624, 627, 628, 630, 631, 633, 641, 642, 645, 646, 649, 650, 654, 655, 656, 657, 658, 659, 660, 661, 668, 670, 671, 672, 673, 674, 675, 677, 679, 680, 681, 682, 683, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 743, 744, 748, 750, 752, 753, 754, 759, 763, 765, 766, 767, 771, 773, 774, 776, 777, 784, 786, 787, 790, 791, 795, 796, 798, 800, 805, 806, 808], "given": [3, 18, 27, 44, 57, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 179, 180, 182, 183, 184, 186, 192, 193, 194, 195, 196, 197, 200, 201, 203, 204, 205, 207, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 234, 239, 240, 241, 242, 243, 244, 245, 256, 257, 260, 261, 263, 266, 271, 284, 285, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 312, 313, 314, 317, 318, 321, 324, 327, 332, 335, 336, 337, 338, 339, 340, 342, 355, 356, 357, 359, 374, 376, 382, 383, 385, 386, 387, 388, 391, 392, 395, 397, 399, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 431, 433, 435, 436, 440, 445, 448, 455, 459, 460, 464, 471, 473, 480, 486, 488, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 525, 526, 528, 529, 530, 533, 534, 535, 536, 537, 568, 585, 602, 603, 604, 605, 608, 609, 611, 612, 614, 615, 622, 625, 646, 651, 652, 654, 660, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 715, 719, 722, 731, 733, 734, 736, 739, 740, 742, 752, 757, 758, 759, 761, 763, 765, 767, 770, 774, 780, 783, 784, 785, 788, 797, 799, 803, 804, 805], "Its": [3, 15, 60, 395, 602, 605, 620, 644, 778], "displai": [3, 18, 63, 72, 79, 99, 107, 126, 186, 224, 225, 227, 237, 240, 241, 242, 243, 247, 248, 249, 251, 271, 285, 348, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 397, 399, 402, 407, 408, 415, 602, 603, 605, 606, 706, 715, 722, 731, 735, 739, 740, 742, 758, 759, 761, 766, 774, 785, 795, 803, 806, 808], "divid": [3, 73, 76, 82, 107, 114, 115, 116, 117, 125, 137, 144, 146, 164, 168, 176, 177, 192, 195, 201, 203, 213, 217, 221, 223, 406, 408, 415, 464, 530, 602, 606, 616, 625, 637, 644, 646, 651, 653, 681, 740, 759, 766, 773, 786, 787], "three": [3, 13, 72, 100, 102, 107, 121, 126, 160, 181, 183, 186, 195, 203, 209, 214, 242, 311, 318, 321, 324, 325, 351, 379, 395, 480, 482, 488, 490, 521, 537, 608, 624, 644, 649, 677, 681, 690, 693, 694, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 739, 757, 759, 763, 764, 767, 769, 774, 778, 788, 797, 803], "section": [3, 57, 91, 107, 111, 144, 158, 168, 172, 176, 178, 180, 185, 188, 189, 192, 197, 200, 201, 208, 213, 218, 221, 324, 445, 630, 657, 694, 732, 740, 746, 752, 757, 759, 765, 785, 796, 808], "middl": [3, 107, 126, 186, 218, 242, 390, 642, 757, 759, 767], "partial": [3, 27, 29, 30, 44, 83, 107, 126, 186, 218, 227, 243, 324, 333, 355, 387, 390, 395, 399, 402, 403, 505, 521, 625, 651, 652, 704, 759, 766], "syntax": [3, 107, 166, 205, 219, 393, 469, 518, 608, 706, 714, 754, 759, 766], "correspond": [3, 27, 39, 40, 43, 44, 45, 63, 72, 79, 80, 81, 82, 88, 94, 98, 105, 107, 122, 126, 128, 132, 137, 143, 146, 173, 175, 183, 186, 189, 193, 194, 195, 200, 203, 207, 214, 218, 221, 222, 224, 225, 240, 241, 243, 244, 246, 256, 257, 260, 261, 271, 285, 289, 312, 314, 317, 329, 332, 340, 341, 356, 357, 359, 379, 380, 382, 395, 399, 409, 410, 412, 415, 431, 436, 440, 445, 451, 497, 498, 499, 502, 503, 504, 508, 510, 511, 515, 516, 517, 518, 521, 527, 528, 529, 530, 536, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 646, 647, 653, 659, 660, 669, 679, 693, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 721, 724, 725, 728, 731, 732, 737, 739, 740, 752, 759, 760, 763, 765, 766, 767, 774, 779, 785, 787, 788, 798, 799], "select": [3, 15, 27, 43, 79, 85, 107, 112, 126, 141, 168, 173, 179, 186, 195, 198, 203, 214, 221, 222, 227, 234, 240, 242, 347, 349, 395, 397, 399, 402, 407, 408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 464, 482, 490, 506, 521, 537, 585, 608, 647, 704, 737, 739, 746, 752, 757, 759, 766, 781, 784, 787, 803], "button": [3, 13, 15, 241, 242], "along": [3, 107, 126, 137, 146, 186, 195, 203, 408, 424, 616, 661, 668, 679, 731, 767, 787, 806, 808], "window": [3, 13, 15, 48, 227, 233, 236, 239, 241, 242, 334, 341, 344, 453, 464, 480, 488, 535, 602, 604, 605, 606, 607, 630, 657, 706, 707, 708, 709, 710, 711, 712, 713, 714, 739, 740, 746, 780, 806, 808], "ar": [3, 13, 15, 18, 27, 38, 43, 44, 45, 51, 58, 60, 61, 62, 63, 65, 68, 72, 73, 76, 77, 78, 80, 81, 82, 83, 84, 86, 89, 90, 91, 93, 95, 97, 99, 100, 101, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 125, 126, 128, 129, 132, 134, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 205, 206, 212, 213, 214, 218, 219, 220, 221, 222, 225, 227, 234, 240, 241, 242, 243, 244, 245, 246, 247, 253, 255, 256, 257, 260, 261, 264, 266, 267, 275, 276, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 312, 313, 314, 317, 318, 319, 321, 322, 324, 325, 329, 333, 340, 341, 342, 343, 348, 349, 351, 352, 355, 356, 357, 359, 378, 379, 380, 381, 382, 385, 387, 388, 390, 393, 394, 395, 396, 397, 399, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 445, 447, 448, 451, 453, 455, 459, 460, 464, 467, 471, 472, 473, 474, 475, 477, 478, 482, 485, 486, 490, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 524, 527, 528, 533, 536, 537, 538, 547, 561, 568, 583, 585, 587, 602, 607, 608, 614, 616, 617, 619, 623, 624, 625, 627, 630, 632, 639, 642, 646, 647, 649, 651, 652, 653, 656, 657, 659, 660, 663, 664, 665, 666, 667, 669, 671, 672, 675, 676, 677, 679, 680, 681, 684, 686, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 720, 721, 722, 724, 725, 728, 731, 734, 735, 737, 739, 740, 742, 746, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 763, 765, 766, 767, 769, 771, 773, 774, 780, 782, 784, 785, 786, 787, 788, 790, 791, 794, 795, 796, 797, 798, 799, 803, 805, 808], "execut": [3, 63, 72, 86, 276, 277, 284, 289, 445, 474, 507, 511, 512, 513, 522, 527, 529, 547, 739, 752, 759, 774, 784, 788, 796], "allow": [3, 18, 43, 80, 93, 96, 107, 116, 122, 168, 177, 183, 186, 192, 221, 224, 225, 240, 243, 256, 261, 289, 292, 293, 301, 303, 324, 325, 350, 379, 380, 382, 386, 387, 388, 395, 399, 402, 403, 404, 415, 429, 445, 460, 505, 506, 521, 537, 568, 646, 651, 682, 683, 687, 688, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 731, 737, 740, 742, 752, 757, 759, 763, 764, 765, 766, 774, 778, 788, 796, 799, 808], "At": [3, 72, 80, 218, 320, 340, 759, 791, 806], "step": [3, 13, 15, 85, 93, 95, 107, 119, 180, 256, 257, 261, 289, 293, 324, 325, 350, 386, 387, 388, 395, 403, 404, 471, 473, 480, 488, 493, 533, 633, 659, 686, 689, 690, 691, 692, 693, 694, 784], "which": [3, 13, 15, 18, 27, 29, 30, 32, 33, 34, 35, 36, 37, 43, 44, 45, 57, 60, 61, 62, 72, 76, 77, 78, 79, 80, 81, 84, 88, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 180, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 203, 205, 206, 207, 208, 213, 214, 218, 219, 221, 222, 224, 225, 227, 240, 242, 243, 253, 256, 257, 261, 263, 271, 277, 284, 285, 286, 287, 289, 291, 293, 294, 295, 297, 300, 301, 302, 303, 305, 310, 318, 321, 342, 343, 348, 351, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 400, 402, 403, 404, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 431, 432, 434, 435, 440, 445, 448, 451, 453, 459, 460, 464, 472, 474, 475, 478, 479, 485, 490, 493, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 528, 533, 535, 536, 537, 602, 603, 605, 606, 608, 611, 612, 614, 616, 622, 623, 626, 632, 644, 645, 646, 647, 653, 659, 668, 679, 680, 681, 682, 683, 685, 687, 688, 691, 693, 694, 695, 696, 697, 699, 700, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 722, 723, 731, 732, 733, 734, 735, 736, 737, 740, 742, 750, 752, 754, 755, 757, 758, 759, 761, 763, 764, 765, 766, 767, 769, 774, 777, 780, 785, 787, 788, 790, 794, 795, 796, 799, 803, 804, 805, 807, 808], "strategi": [3, 72, 353, 354, 355, 361, 362, 366, 368, 371, 374, 375, 376, 383, 386, 389, 395, 397, 399, 402, 474, 784, 803], "wish": [3, 218, 242, 602, 605, 725, 728, 759, 761, 766, 796], "appli": [3, 13, 15, 28, 33, 34, 35, 36, 37, 44, 45, 60, 62, 63, 72, 77, 78, 86, 90, 91, 99, 100, 103, 107, 126, 137, 143, 146, 149, 173, 186, 193, 195, 200, 203, 205, 222, 240, 243, 245, 286, 306, 310, 318, 324, 349, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 399, 402, 404, 407, 408, 417, 430, 435, 447, 459, 460, 471, 473, 474, 497, 498, 499, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 527, 529, 535, 536, 537, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 642, 646, 654, 677, 681, 695, 697, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 722, 757, 759, 761, 764, 766, 770, 778, 780, 791], "experi": [3, 408, 409, 410, 411, 414, 415, 416, 418, 419, 420, 624, 649, 681, 687, 688, 732, 740, 759], "mix": [3, 83, 107, 168, 221, 243, 408, 706, 711, 712, 720, 754, 759, 766, 791, 799], "differ": [3, 58, 60, 72, 80, 81, 84, 97, 107, 122, 126, 168, 183, 186, 205, 221, 227, 243, 244, 245, 246, 291, 293, 301, 318, 319, 322, 324, 337, 342, 349, 355, 390, 402, 408, 409, 417, 432, 448, 459, 460, 479, 488, 521, 528, 537, 554, 630, 647, 657, 669, 670, 671, 672, 673, 674, 675, 681, 687, 688, 694, 695, 699, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 722, 723, 725, 728, 734, 740, 742, 746, 750, 754, 757, 759, 762, 763, 765, 766, 767, 768, 778, 784, 790, 803, 805], "exercis": [3, 208, 562, 573, 601, 746, 758, 763, 798, 808], "fine": [3, 85, 310, 318, 533, 681, 766], "grain": [3, 107, 137, 146, 195, 203, 759, 787], "over": [3, 27, 60, 72, 78, 80, 82, 83, 85, 86, 93, 94, 99, 107, 110, 112, 113, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 158, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 183, 184, 185, 186, 188, 189, 196, 197, 198, 199, 200, 207, 208, 212, 213, 218, 219, 221, 222, 223, 226, 241, 293, 299, 301, 304, 306, 310, 318, 329, 332, 334, 340, 341, 344, 356, 357, 382, 395, 396, 397, 399, 405, 415, 445, 460, 477, 501, 505, 509, 511, 512, 513, 514, 520, 521, 524, 527, 602, 606, 607, 616, 671, 672, 682, 683, 690, 691, 696, 697, 701, 754, 758, 759, 766, 784, 785, 796, 797, 798, 803, 806], "base": [5, 15, 23, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 57, 58, 60, 61, 62, 63, 65, 69, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 321, 324, 326, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 445, 447, 448, 449, 451, 452, 454, 455, 456, 458, 459, 460, 461, 469, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 527, 528, 529, 531, 535, 536, 537, 550, 552, 553, 555, 556, 557, 558, 559, 562, 563, 564, 565, 567, 568, 573, 574, 575, 576, 577, 578, 580, 582, 583, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 644, 645, 646, 647, 649, 651, 653, 654, 655, 656, 657, 658, 659, 660, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 685, 690, 691, 692, 693, 694, 695, 697, 699, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 723, 727, 730, 731, 732, 733, 734, 735, 736, 737, 740, 741, 742, 752, 753, 759, 761, 762, 764, 766, 767, 775, 777, 778, 785, 788, 796, 798, 799, 803, 804, 808], "instant": [11, 785], "creat": [11, 12, 13, 14, 15, 27, 63, 66, 72, 76, 80, 89, 95, 99, 107, 126, 128, 144, 158, 168, 172, 178, 180, 184, 185, 186, 188, 189, 192, 193, 194, 197, 199, 200, 201, 208, 213, 218, 221, 222, 224, 225, 227, 233, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 256, 257, 258, 261, 277, 278, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 318, 348, 352, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 397, 399, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 424, 429, 431, 436, 440, 445, 448, 449, 451, 459, 474, 481, 485, 489, 493, 499, 500, 505, 506, 514, 518, 519, 521, 533, 537, 539, 602, 603, 604, 605, 606, 632, 634, 639, 659, 671, 672, 673, 674, 675, 679, 685, 690, 691, 692, 693, 694, 706, 715, 722, 731, 734, 736, 740, 746, 752, 754, 755, 760, 761, 763, 764, 766, 779, 784, 786, 787, 794, 795, 798, 799, 803], "aristid": 11, "grang": 11, "maintain": [13, 15, 43, 99, 218, 225, 240, 243, 245, 277, 355, 385, 395, 402, 404, 490, 514, 624, 642, 649, 706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 759, 761, 799, 810], "portion": [13, 15, 29, 30, 44, 46, 63, 72, 107, 173, 214, 385, 387, 388, 392, 395, 402, 403, 404, 407, 514, 646, 759], "ha": [13, 15, 43, 63, 72, 79, 80, 82, 83, 86, 90, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 180, 186, 206, 218, 221, 222, 225, 227, 240, 241, 242, 243, 244, 256, 263, 271, 285, 289, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 319, 324, 326, 351, 355, 374, 376, 379, 383, 386, 387, 390, 391, 392, 395, 402, 403, 407, 408, 409, 410, 412, 415, 429, 431, 436, 440, 445, 455, 474, 482, 490, 496, 499, 500, 514, 518, 519, 521, 537, 559, 587, 608, 621, 622, 628, 641, 644, 646, 654, 658, 680, 681, 687, 688, 693, 694, 695, 697, 699, 700, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 720, 722, 725, 728, 731, 732, 733, 734, 736, 737, 740, 742, 746, 748, 751, 752, 758, 759, 761, 763, 765, 766, 767, 768, 774, 779, 785, 788, 791, 795, 796, 797, 798, 799, 801, 803, 806, 808], "been": [13, 15, 27, 61, 76, 82, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 206, 216, 218, 225, 240, 242, 243, 246, 271, 285, 287, 289, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 314, 318, 319, 324, 325, 352, 355, 374, 376, 377, 379, 380, 383, 384, 386, 387, 388, 391, 392, 394, 395, 401, 402, 403, 404, 405, 407, 408, 409, 415, 417, 424, 445, 464, 471, 473, 474, 480, 485, 488, 493, 514, 521, 537, 559, 587, 621, 622, 641, 644, 646, 658, 677, 694, 704, 731, 733, 734, 736, 737, 740, 746, 751, 752, 758, 759, 761, 765, 766, 774, 785, 791, 795, 796, 798, 803, 806, 808], "It": [13, 18, 27, 32, 44, 45, 58, 60, 61, 66, 72, 76, 82, 84, 85, 90, 93, 95, 96, 97, 99, 100, 101, 102, 103, 107, 166, 193, 195, 203, 213, 214, 216, 217, 218, 219, 221, 223, 226, 227, 240, 242, 256, 267, 273, 274, 277, 278, 293, 299, 301, 304, 319, 347, 351, 377, 378, 379, 381, 382, 384, 385, 386, 388, 392, 395, 397, 401, 402, 403, 404, 407, 431, 445, 451, 455, 474, 477, 478, 479, 490, 496, 497, 503, 514, 528, 535, 621, 632, 639, 641, 646, 659, 680, 681, 682, 683, 687, 688, 694, 696, 697, 699, 700, 703, 725, 728, 737, 748, 752, 757, 759, 760, 761, 763, 766, 769, 774, 775, 785, 788, 791, 795, 796, 798, 799, 806, 808], "product": [13, 15, 80, 107, 149, 205, 232, 236, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 285, 324, 374, 381, 382, 384, 385, 387, 388, 392, 395, 399, 402, 403, 404, 407, 415, 505, 521, 524, 537, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 759, 761, 762, 765, 768, 772, 784, 791, 799], "expand": [13, 60, 72, 227, 241, 256, 384, 387, 399, 402, 403, 533, 535, 537, 677, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 754, 765, 808], "fring": [13, 384, 403], "match": [13, 46, 48, 57, 60, 62, 63, 72, 79, 107, 109, 110, 111, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 143, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 178, 179, 183, 184, 185, 186, 189, 193, 194, 196, 198, 199, 200, 207, 212, 218, 219, 221, 222, 223, 227, 243, 247, 256, 257, 261, 287, 289, 310, 318, 324, 326, 384, 387, 388, 403, 404, 460, 472, 475, 484, 491, 510, 528, 585, 602, 605, 606, 607, 608, 611, 612, 623, 625, 647, 651, 652, 660, 681, 687, 688, 696, 697, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 742, 758, 765, 766, 767, 778, 785, 788, 795, 798, 805], "its": [13, 15, 29, 30, 44, 60, 62, 72, 77, 80, 86, 89, 99, 107, 112, 120, 126, 141, 168, 173, 179, 182, 184, 186, 195, 198, 203, 205, 218, 221, 224, 225, 226, 227, 234, 240, 241, 242, 243, 244, 247, 256, 260, 263, 289, 293, 294, 295, 300, 301, 302, 303, 305, 324, 330, 349, 356, 359, 374, 379, 381, 382, 387, 388, 395, 396, 399, 401, 402, 403, 404, 408, 409, 410, 415, 416, 430, 431, 433, 435, 440, 445, 451, 459, 460, 464, 496, 497, 498, 502, 503, 504, 505, 508, 510, 515, 516, 517, 521, 528, 535, 536, 537, 619, 624, 625, 628, 646, 647, 649, 651, 652, 653, 654, 657, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 679, 687, 688, 690, 691, 692, 693, 694, 695, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 731, 742, 759, 760, 761, 765, 766, 774, 785, 787, 788, 795, 796, 797, 799, 801, 803, 805, 808], "leav": [13, 27, 44, 60, 61, 76, 79, 98, 105, 107, 110, 112, 119, 175, 179, 180, 218, 241, 256, 352, 384, 387, 394, 395, 399, 403, 474, 476, 619, 653, 663, 664, 665, 666, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 759, 764, 774, 788, 794, 799], "against": [13, 62, 63, 64, 65, 76, 107, 126, 186, 312, 317, 327, 332, 335, 339, 340, 356, 357, 384, 387, 403, 430, 433, 434, 435, 448, 460, 482, 490, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 765, 767, 790, 798], "initicontain": [13, 15, 27, 43, 60, 62, 63, 68, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 86, 88, 90, 93, 99, 107, 113, 116, 121, 122, 126, 128, 131, 132, 134, 137, 143, 146, 158, 160, 166, 168, 173, 177, 180, 181, 182, 183, 186, 187, 189, 191, 193, 195, 200, 202, 203, 205, 206, 213, 214, 218, 219, 221, 225, 226, 227, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 258, 259, 262, 263, 264, 266, 271, 273, 274, 277, 278, 285, 286, 287, 289, 290, 293, 299, 304, 318, 320, 340, 351, 356, 357, 359, 377, 384, 386, 387, 388, 395, 396, 397, 399, 401, 403, 404, 408, 409, 410, 412, 415, 429, 445, 447, 451, 454, 455, 457, 460, 467, 474, 475, 481, 489, 493, 496, 505, 507, 521, 522, 527, 530, 535, 567, 585, 586, 608, 617, 619, 620, 623, 625, 644, 647, 651, 652, 653, 669, 677, 679, 681, 684, 685, 694, 699, 700, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 729, 730, 731, 737, 739, 740, 741, 751, 752, 754, 757, 759, 761, 765, 766, 767, 772, 777, 782, 785, 787, 790, 793, 797, 799, 803, 805, 808], "start": [13, 18, 27, 29, 30, 31, 44, 46, 60, 63, 72, 80, 93, 95, 96, 97, 99, 107, 109, 111, 126, 158, 160, 168, 172, 176, 178, 180, 183, 185, 186, 188, 189, 195, 197, 200, 203, 205, 208, 213, 214, 218, 221, 225, 227, 243, 245, 247, 256, 257, 261, 265, 267, 287, 289, 293, 324, 326, 355, 356, 357, 359, 382, 384, 386, 387, 388, 392, 395, 396, 397, 399, 400, 402, 403, 404, 407, 430, 433, 435, 447, 460, 481, 489, 505, 506, 507, 509, 521, 522, 524, 535, 537, 621, 622, 630, 633, 641, 646, 647, 657, 659, 660, 670, 671, 672, 673, 674, 675, 677, 681, 684, 694, 695, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 720, 722, 742, 746, 752, 759, 761, 763, 765, 768, 772, 774, 784, 785, 787, 790, 796, 797, 799, 807, 808], "symbol": [13, 63, 72, 107, 108, 110, 112, 115, 116, 117, 119, 120, 125, 126, 132, 134, 136, 139, 143, 144, 145, 147, 148, 149, 150, 159, 161, 163, 164, 165, 166, 170, 172, 175, 177, 179, 180, 182, 192, 193, 196, 197, 200, 201, 204, 205, 207, 213, 216, 220, 221, 222, 242, 256, 257, 260, 261, 264, 265, 266, 293, 384, 387, 392, 395, 399, 403, 407, 429, 438, 440, 445, 448, 451, 460, 464, 505, 506, 521, 621, 631, 632, 633, 641, 645, 658, 659, 731, 740, 742, 752, 763, 777, 784, 786, 790], "s": [13, 15, 18, 27, 29, 30, 44, 55, 57, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 85, 86, 89, 90, 91, 94, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 225, 227, 240, 241, 242, 243, 244, 247, 248, 249, 251, 252, 256, 257, 261, 271, 284, 285, 286, 289, 290, 292, 293, 301, 303, 310, 311, 314, 315, 316, 318, 319, 321, 324, 330, 337, 342, 351, 352, 355, 356, 357, 371, 374, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 391, 392, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 415, 422, 424, 430, 431, 432, 433, 434, 435, 436, 438, 440, 445, 447, 448, 451, 454, 457, 459, 460, 462, 463, 467, 477, 478, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 525, 526, 528, 530, 533, 536, 537, 539, 583, 602, 603, 605, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 645, 646, 647, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 669, 671, 672, 679, 681, 682, 683, 684, 687, 688, 690, 691, 692, 693, 694, 695, 700, 701, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 722, 724, 731, 739, 740, 741, 742, 746, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 761, 762, 763, 764, 765, 766, 767, 768, 770, 772, 774, 775, 777, 778, 780, 781, 784, 785, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 808], "shown": [13, 15, 44, 181, 227, 311, 321, 485, 493, 622, 646, 706, 721, 724, 763, 765, 767, 774, 788, 790], "main": [13, 15, 107, 126, 143, 174, 186, 200, 205, 240, 242, 289, 293, 397, 429, 445, 488, 699, 700, 737, 759, 774, 808], "canva": [13, 15, 241, 242, 448, 449], "right": [13, 15, 23, 29, 30, 32, 34, 44, 45, 58, 60, 72, 77, 107, 112, 179, 226, 227, 242, 256, 257, 259, 261, 263, 264, 265, 292, 293, 312, 349, 359, 385, 387, 390, 392, 395, 399, 402, 403, 404, 406, 407, 464, 475, 493, 507, 522, 528, 533, 568, 632, 659, 693, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 720, 725, 728, 742, 746, 749, 754, 759, 765, 766, 785, 788, 796, 799, 801, 808], "list": [13, 15, 27, 28, 31, 43, 44, 46, 57, 60, 61, 62, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 90, 91, 94, 98, 99, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 253, 256, 257, 258, 259, 261, 265, 266, 267, 270, 271, 273, 274, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 312, 314, 317, 318, 319, 320, 324, 326, 329, 332, 334, 340, 341, 342, 343, 344, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436, 440, 445, 447, 448, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 464, 469, 471, 473, 474, 475, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 586, 602, 603, 604, 605, 606, 607, 608, 609, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 649, 651, 652, 653, 654, 656, 657, 658, 659, 660, 662, 668, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 687, 688, 690, 691, 692, 693, 694, 695, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 723, 731, 735, 737, 739, 740, 742, 745, 746, 751, 752, 753, 754, 757, 761, 763, 764, 765, 767, 768, 769, 772, 773, 774, 776, 777, 781, 782, 783, 784, 786, 787, 788, 791, 792, 795, 796, 797, 799, 802, 803, 808, 810], "expans": [13, 319, 387, 403, 677, 704, 765], "build": [13, 15, 83, 84, 85, 99, 107, 126, 142, 148, 186, 199, 206, 242, 269, 271, 273, 274, 275, 276, 284, 285, 293, 359, 406, 438, 445, 451, 499, 501, 518, 520, 537, 622, 623, 646, 647, 653, 704, 742, 759, 763, 764, 766, 785, 805, 806, 808], "oper": [13, 15, 27, 43, 46, 61, 72, 76, 86, 93, 225, 242, 243, 246, 256, 324, 325, 326, 329, 341, 379, 380, 381, 382, 385, 387, 388, 390, 395, 399, 403, 404, 408, 409, 410, 412, 432, 443, 444, 447, 448, 455, 459, 460, 511, 512, 513, 585, 608, 616, 632, 659, 755, 759, 764, 767, 778, 781, 784, 786, 788, 798, 799, 808], "add": [13, 27, 33, 34, 35, 36, 37, 44, 45, 60, 72, 80, 84, 99, 107, 122, 128, 135, 168, 183, 186, 189, 194, 205, 221, 225, 240, 241, 242, 271, 274, 276, 278, 281, 283, 284, 285, 286, 293, 296, 297, 301, 305, 312, 348, 353, 354, 359, 361, 362, 368, 375, 382, 384, 386, 387, 389, 395, 397, 399, 402, 403, 430, 431, 433, 435, 445, 451, 452, 456, 460, 469, 471, 473, 608, 620, 628, 632, 644, 654, 659, 660, 663, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 686, 688, 689, 694, 695, 704, 731, 742, 752, 754, 759, 763, 769, 774, 782, 784, 786, 790, 795, 799, 803, 808], "children": [13, 27, 44, 79, 221, 227, 241, 242, 256, 356, 359, 374, 382, 384, 392, 395, 396, 402, 403, 407, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 723, 725, 728, 742, 750, 765, 799, 801], "node": [13, 27, 62, 63, 66, 72, 73, 76, 79, 98, 107, 126, 136, 143, 148, 150, 166, 168, 170, 196, 200, 207, 221, 222, 223, 241, 256, 260, 356, 359, 377, 379, 380, 382, 384, 387, 392, 395, 396, 399, 401, 402, 403, 407, 447, 454, 455, 469, 585, 608, 609, 611, 612, 614, 615, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 722, 723, 725, 728, 742, 759, 762, 785, 787, 788, 799, 801, 803], "compar": [13, 61, 76, 89, 107, 120, 131, 168, 182, 191, 197, 204, 221, 293, 301, 312, 317, 324, 327, 331, 332, 335, 339, 340, 342, 349, 356, 357, 399, 477, 478, 479, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 528, 535, 536, 572, 757, 759, 766, 780, 799, 803, 808], "leaf": [13, 27, 30, 44, 79, 98, 99, 241, 256, 260, 384, 395, 399, 403, 608, 609, 611, 612, 614, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 799, 801], "backtrack": [13, 225, 387, 403, 501, 520], "return": [13, 27, 28, 29, 30, 31, 43, 44, 46, 57, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 312, 314, 317, 318, 319, 320, 321, 324, 325, 326, 327, 329, 332, 334, 335, 339, 340, 341, 342, 343, 344, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 431, 432, 433, 434, 435, 436, 438, 440, 445, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 534, 535, 536, 537, 539, 572, 602, 603, 604, 605, 606, 608, 609, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 697, 698, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 728, 731, 732, 733, 734, 736, 737, 740, 742, 743, 744, 752, 753, 755, 757, 759, 760, 761, 762, 766, 767, 774, 775, 781, 784, 785, 786, 787, 790, 795, 797, 799, 803, 804, 805, 808], "state": [13, 63, 72, 206, 211, 240, 256, 257, 261, 324, 326, 382, 387, 388, 399, 403, 404, 501, 505, 506, 520, 521, 602, 605, 606, 621, 641, 658, 694, 759, 761, 765, 766, 768, 774, 782, 784, 794, 808], "befor": [13, 27, 60, 77, 81, 95, 97, 224, 225, 227, 237, 238, 242, 243, 245, 273, 274, 277, 278, 284, 286, 289, 293, 312, 342, 343, 356, 357, 376, 377, 387, 388, 395, 396, 397, 401, 402, 403, 404, 405, 408, 409, 474, 493, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 528, 553, 562, 573, 601, 619, 646, 653, 654, 663, 681, 685, 694, 706, 707, 708, 709, 710, 711, 712, 713, 715, 722, 731, 732, 740, 742, 754, 759, 761, 763, 765, 766, 784, 785, 786, 787, 795, 797, 799, 807, 808], "most": [13, 15, 28, 44, 72, 77, 78, 79, 80, 82, 85, 93, 97, 99, 107, 126, 168, 173, 186, 218, 221, 240, 242, 256, 257, 261, 287, 293, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 402, 403, 404, 407, 408, 415, 471, 473, 474, 475, 479, 496, 497, 498, 499, 500, 502, 503, 504, 505, 508, 510, 515, 516, 517, 518, 519, 521, 528, 529, 535, 536, 537, 602, 605, 606, 633, 651, 659, 670, 671, 672, 673, 674, 675, 692, 694, 695, 706, 712, 720, 725, 728, 731, 740, 751, 753, 754, 755, 757, 758, 759, 760, 761, 766, 767, 768, 769, 774, 775, 785, 786, 787, 790, 791, 795, 796, 797, 798, 799, 803, 808], "recent": [13, 15, 107, 149, 205, 218, 240, 386, 387, 388, 395, 403, 404, 510, 516, 528, 535, 536, 537, 651, 731, 740, 751, 754, 755, 759, 760, 761, 766, 768, 774, 775, 786, 787, 790, 796, 797, 798, 799, 803], "locat": [13, 68, 76, 107, 108, 112, 125, 130, 132, 134, 144, 159, 161, 163, 164, 172, 173, 179, 183, 190, 192, 193, 195, 201, 203, 213, 216, 217, 223, 224, 225, 241, 242, 243, 248, 249, 251, 289, 384, 387, 402, 403, 406, 453, 460, 464, 509, 524, 529, 602, 603, 693, 701, 731, 737, 746, 752, 759, 774, 787, 788, 795, 804, 808, 810], "frontier": [13, 384, 387, 403, 788], "rememb": [13, 384, 403], "have": [13, 27, 58, 60, 61, 63, 72, 73, 76, 80, 81, 83, 86, 93, 94, 96, 98, 99, 101, 102, 103, 107, 116, 120, 126, 139, 147, 149, 150, 159, 160, 168, 177, 181, 182, 186, 197, 202, 204, 205, 207, 213, 214, 216, 218, 221, 225, 227, 240, 242, 243, 244, 245, 246, 247, 256, 261, 287, 289, 292, 293, 301, 303, 312, 314, 317, 318, 319, 324, 325, 340, 348, 352, 355, 357, 377, 379, 380, 382, 384, 387, 388, 392, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 435, 445, 448, 459, 460, 464, 471, 473, 474, 480, 482, 485, 488, 490, 493, 505, 521, 533, 535, 537, 602, 607, 616, 628, 646, 654, 660, 669, 670, 671, 672, 673, 674, 675, 677, 681, 687, 688, 692, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 731, 737, 739, 740, 745, 751, 752, 753, 758, 759, 760, 761, 763, 765, 766, 767, 774, 775, 777, 780, 782, 785, 787, 788, 794, 795, 796, 798, 799, 803, 805, 807, 808], "yet": [13, 15, 89, 218, 225, 289, 355, 374, 376, 383, 384, 387, 388, 391, 402, 403, 404, 408, 424, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 755, 759, 761, 766], "leftmost": [13, 381, 382], "green": [13, 181, 706, 715, 722, 757], "other": [13, 18, 41, 43, 45, 80, 83, 98, 100, 101, 102, 103, 107, 109, 120, 126, 130, 131, 150, 160, 166, 168, 176, 182, 186, 190, 191, 195, 203, 207, 214, 218, 219, 221, 224, 227, 243, 244, 245, 246, 284, 287, 289, 293, 301, 324, 325, 351, 352, 359, 379, 380, 382, 393, 394, 395, 399, 408, 409, 423, 430, 433, 434, 435, 445, 448, 451, 454, 459, 460, 477, 479, 482, 490, 500, 509, 519, 521, 523, 524, 528, 535, 536, 537, 561, 602, 604, 605, 606, 608, 616, 642, 645, 646, 647, 651, 654, 658, 669, 670, 671, 672, 673, 674, 675, 680, 681, 686, 689, 690, 691, 692, 693, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 737, 750, 754, 757, 766, 767, 774, 775, 780, 785, 791, 795, 803, 808], "blue": [13, 356, 357, 396, 655, 706, 715, 722], "alwai": [13, 65, 80, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 186, 218, 221, 242, 284, 293, 296, 305, 356, 357, 396, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 460, 471, 473, 482, 490, 535, 608, 647, 680, 681, 682, 683, 687, 688, 693, 694, 696, 697, 699, 700, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 720, 725, 728, 803], "perform": [13, 15, 38, 44, 45, 48, 62, 63, 65, 72, 77, 80, 83, 86, 98, 99, 107, 119, 180, 218, 242, 243, 275, 276, 278, 281, 283, 284, 286, 287, 312, 314, 356, 357, 382, 385, 387, 388, 403, 404, 432, 448, 459, 460, 471, 473, 474, 477, 479, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 528, 533, 536, 602, 605, 608, 633, 642, 645, 646, 654, 659, 757, 759, 761, 766, 769, 775, 780, 795, 799, 801, 805, 808], "element": [13, 15, 28, 29, 30, 44, 62, 63, 78, 80, 90, 91, 99, 107, 109, 126, 141, 175, 176, 186, 193, 194, 195, 198, 203, 206, 207, 212, 214, 222, 225, 240, 242, 243, 245, 286, 289, 338, 342, 349, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 403, 404, 407, 415, 445, 451, 457, 497, 498, 499, 502, 503, 504, 505, 507, 508, 509, 510, 515, 516, 517, 529, 530, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 651, 654, 663, 669, 676, 679, 683, 695, 701, 706, 707, 708, 709, 710, 711, 712, 713, 715, 719, 722, 731, 737, 742, 752, 759, 765, 766, 767, 787], "let": [13, 15, 60, 83, 89, 289, 290, 293, 505, 521, 759, 763, 765, 774, 785, 803], "automat": [13, 15, 48, 86, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 207, 212, 218, 219, 221, 222, 223, 225, 227, 242, 292, 293, 352, 356, 357, 377, 394, 396, 401, 405, 430, 435, 445, 448, 460, 496, 507, 514, 522, 527, 528, 680, 681, 682, 683, 696, 697, 699, 700, 702, 703, 706, 711, 712, 715, 720, 722, 743, 744, 753, 761, 766, 785, 799], "decid": [13, 15, 32, 45, 77, 79, 218, 225, 351, 353, 354, 361, 362, 368, 375, 385, 386, 387, 389, 395, 399, 403, 404, 408, 416, 497, 498, 502, 503, 504, 508, 510, 515, 516, 528, 616, 646, 661, 675, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 736, 759, 766, 784, 794], "follow": [13, 15, 29, 30, 44, 60, 63, 72, 77, 80, 83, 85, 99, 100, 101, 107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 138, 139, 140, 141, 142, 143, 148, 150, 151, 154, 156, 157, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 187, 189, 193, 196, 198, 199, 200, 202, 206, 207, 212, 214, 216, 218, 219, 221, 222, 223, 225, 227, 233, 236, 240, 242, 243, 244, 247, 256, 289, 293, 306, 318, 321, 324, 326, 346, 356, 357, 379, 380, 384, 385, 395, 396, 402, 403, 404, 406, 408, 409, 410, 412, 415, 431, 432, 436, 440, 445, 451, 455, 460, 469, 485, 490, 493, 496, 506, 510, 521, 523, 528, 530, 537, 586, 602, 606, 616, 622, 623, 625, 628, 633, 646, 647, 651, 652, 653, 654, 659, 671, 672, 673, 674, 675, 680, 681, 682, 683, 690, 691, 692, 693, 694, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 724, 725, 728, 731, 732, 735, 739, 740, 746, 752, 755, 758, 759, 760, 761, 763, 765, 766, 767, 769, 774, 778, 780, 781, 785, 787, 788, 795, 796, 798, 799, 803, 806, 808], "try": [13, 107, 112, 128, 179, 189, 273, 274, 277, 284, 290, 293, 301, 350, 536, 670, 671, 672, 673, 674, 695, 731, 750, 755, 759, 763, 764, 765, 766, 770, 774, 775, 778, 790, 795], "first": [13, 15, 18, 46, 57, 60, 63, 72, 80, 81, 82, 83, 88, 91, 93, 98, 99, 100, 107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 136, 138, 139, 140, 141, 142, 143, 148, 150, 151, 154, 156, 157, 158, 162, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 178, 179, 182, 183, 184, 185, 186, 189, 191, 196, 198, 199, 200, 205, 207, 212, 214, 218, 219, 221, 222, 223, 224, 225, 227, 240, 242, 243, 244, 245, 247, 256, 257, 261, 275, 276, 279, 284, 285, 286, 287, 288, 289, 293, 299, 304, 319, 324, 349, 355, 359, 374, 376, 383, 384, 387, 391, 395, 402, 403, 408, 409, 410, 412, 415, 429, 430, 431, 432, 433, 434, 436, 438, 440, 445, 448, 451, 455, 459, 460, 462, 464, 468, 469, 471, 473, 474, 478, 480, 488, 514, 530, 535, 568, 586, 592, 602, 605, 606, 616, 618, 628, 642, 646, 647, 654, 670, 671, 672, 673, 674, 675, 681, 692, 693, 694, 695, 701, 703, 706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 731, 742, 746, 752, 753, 759, 761, 763, 765, 766, 768, 769, 770, 774, 777, 778, 784, 788, 790, 795, 797, 798, 799, 800, 808], "untri": [13, 387, 403], "otherwis": [13, 80, 81, 86, 99, 107, 110, 112, 131, 175, 179, 191, 218, 225, 227, 235, 240, 241, 242, 243, 244, 245, 284, 289, 291, 293, 299, 301, 304, 359, 387, 388, 403, 404, 408, 409, 410, 412, 415, 424, 430, 431, 433, 435, 436, 440, 449, 459, 460, 505, 506, 521, 535, 536, 646, 663, 664, 665, 666, 731, 733, 734, 735, 740, 746, 757, 759, 784, 786, 799], "whose": [13, 15, 27, 72, 77, 80, 82, 83, 99, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 196, 197, 198, 199, 201, 204, 205, 207, 212, 213, 219, 221, 222, 223, 225, 227, 240, 242, 243, 244, 245, 246, 256, 289, 379, 385, 387, 392, 395, 399, 403, 404, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 445, 464, 474, 485, 493, 497, 498, 502, 503, 504, 508, 510, 515, 516, 528, 535, 536, 537, 663, 664, 665, 666, 681, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 736, 752, 759, 761, 765, 766, 767, 787, 799, 803], "earliest": [13, 15, 385, 404], "To": [13, 60, 83, 85, 107, 128, 189, 224, 225, 227, 240, 293, 296, 297, 299, 304, 305, 347, 395, 408, 479, 514, 521, 671, 672, 680, 681, 682, 683, 690, 691, 704, 706, 707, 711, 720, 731, 746, 758, 759, 760, 763, 764, 765, 766, 767, 785, 795, 804], "manual": [13, 15, 91, 107, 112, 126, 179, 186, 218, 223, 352, 394, 503, 528, 537, 585, 608, 660, 732, 757, 767, 774], "choos": [13, 15, 78, 80, 243, 256, 385, 404, 482, 485, 490, 493, 497, 498, 502, 503, 508, 515, 528, 537, 703, 742, 759, 761, 766], "click": [13, 15, 240, 242, 746], "from": [13, 15, 28, 44, 46, 55, 58, 61, 63, 64, 72, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 107, 110, 112, 116, 120, 122, 125, 126, 130, 133, 135, 137, 138, 139, 141, 142, 143, 146, 147, 148, 149, 153, 158, 163, 165, 166, 168, 169, 172, 173, 174, 175, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 218, 219, 220, 221, 222, 225, 227, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 258, 260, 261, 265, 266, 271, 274, 276, 277, 278, 281, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 312, 314, 318, 319, 320, 321, 322, 324, 326, 330, 333, 340, 342, 343, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 434, 436, 438, 440, 445, 447, 448, 449, 451, 452, 454, 456, 459, 460, 461, 464, 469, 471, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 533, 535, 536, 537, 583, 585, 586, 587, 591, 592, 602, 603, 604, 605, 606, 607, 608, 616, 618, 619, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 639, 641, 642, 644, 645, 646, 647, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 725, 727, 728, 730, 731, 732, 735, 737, 739, 740, 741, 742, 743, 744, 746, 748, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808], "left": [13, 15, 23, 29, 30, 32, 33, 34, 35, 36, 37, 44, 45, 60, 72, 77, 218, 227, 240, 242, 256, 257, 259, 261, 263, 264, 293, 312, 349, 354, 359, 385, 387, 390, 395, 399, 402, 403, 404, 464, 479, 528, 533, 568, 632, 659, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 720, 722, 725, 728, 742, 754, 758, 759, 765, 771, 784, 785, 788, 796, 799, 801], "side": [13, 15, 29, 30, 44, 242, 256, 257, 259, 261, 263, 264, 265, 387, 392, 395, 399, 402, 403, 407, 725, 728, 759, 765], "autostep": 13, "continu": [13, 63, 72, 80, 93, 95, 96, 293, 299, 304, 324, 355, 382, 386, 392, 395, 402, 407, 759, 774, 808], "until": [13, 60, 80, 93, 95, 96, 97, 107, 168, 193, 218, 221, 222, 224, 243, 255, 256, 292, 350, 355, 392, 395, 402, 407, 618, 642, 646, 706, 707, 711, 720, 759, 761, 766, 774, 799, 803], "reach": [13, 79, 107, 149, 205, 218, 221, 395, 474, 706, 707, 711, 720, 733, 734, 736, 740, 759, 774, 803], "complet": [13, 27, 60, 72, 105, 107, 110, 112, 150, 175, 179, 207, 218, 225, 235, 241, 242, 243, 286, 318, 352, 355, 371, 385, 387, 394, 395, 397, 399, 402, 403, 404, 408, 421, 449, 460, 475, 602, 605, 606, 607, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 731, 746, 759, 765, 767, 782, 785, 808], "cancel": 13, "progress": [13, 203, 227], "ani": [13, 27, 58, 60, 61, 63, 72, 76, 78, 79, 80, 81, 82, 86, 98, 100, 101, 102, 103, 107, 110, 112, 113, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 148, 149, 150, 151, 154, 156, 157, 158, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 183, 184, 185, 186, 188, 189, 196, 198, 199, 200, 201, 205, 207, 208, 212, 214, 218, 219, 221, 222, 223, 224, 225, 226, 227, 234, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 260, 261, 263, 264, 265, 284, 285, 289, 293, 299, 304, 310, 311, 312, 315, 316, 318, 321, 324, 326, 329, 334, 341, 344, 356, 357, 359, 371, 379, 380, 392, 395, 397, 399, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 433, 435, 451, 453, 457, 459, 460, 464, 467, 477, 478, 479, 484, 491, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 521, 522, 528, 533, 535, 536, 537, 542, 602, 604, 617, 622, 623, 625, 642, 646, 647, 651, 652, 653, 654, 680, 681, 697, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 731, 742, 748, 759, 761, 765, 766, 774, 777, 778, 779, 785, 786, 790, 791, 795, 796, 797, 798, 799, 803], "time": [13, 44, 60, 61, 63, 72, 76, 80, 86, 99, 107, 122, 126, 158, 164, 178, 183, 186, 187, 213, 217, 218, 224, 227, 242, 289, 292, 293, 312, 320, 340, 347, 350, 355, 356, 386, 387, 388, 395, 396, 397, 399, 402, 403, 404, 408, 409, 415, 416, 445, 464, 471, 473, 474, 499, 505, 508, 518, 521, 528, 533, 602, 604, 605, 606, 646, 677, 681, 690, 691, 692, 693, 694, 704, 706, 707, 708, 709, 710, 711, 719, 720, 731, 732, 736, 739, 740, 742, 752, 755, 757, 759, 763, 765, 766, 767, 769, 774, 784, 785, 791, 803, 808], "again": [13, 243, 244, 245, 246, 293, 567, 732, 740, 763, 766, 774, 795, 796, 803], "keyboard": [13, 15, 240], "shortcut": [13, 15, 107, 139, 197, 227, 731, 759], "space": [13, 15, 93, 98, 99, 107, 110, 112, 128, 175, 179, 189, 218, 233, 234, 236, 241, 242, 256, 266, 356, 379, 396, 408, 422, 440, 451, 505, 521, 533, 617, 621, 626, 632, 633, 635, 641, 647, 653, 659, 663, 664, 665, 666, 670, 671, 672, 673, 674, 675, 694, 695, 704, 742, 754, 761, 769, 778, 785, 797], "next": [13, 15, 46, 97, 218, 225, 227, 234, 242, 356, 357, 371, 384, 387, 395, 396, 397, 403, 445, 449, 459, 460, 663, 664, 665, 666, 685, 703, 746, 752, 759, 785, 788, 803], "through": [13, 18, 58, 63, 72, 107, 126, 186, 225, 243, 321, 329, 341, 349, 356, 379, 381, 382, 386, 387, 388, 395, 396, 403, 404, 447, 451, 467, 505, 521, 602, 605, 606, 607, 694, 731, 742, 766, 803, 806, 807], "m": [13, 55, 89, 93, 95, 107, 142, 181, 193, 199, 206, 214, 227, 324, 341, 356, 357, 396, 405, 429, 431, 451, 464, 482, 485, 490, 493, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 535, 536, 583, 585, 608, 621, 641, 645, 682, 683, 685, 686, 689, 690, 691, 692, 693, 694, 706, 715, 722, 746, 752, 753, 764, 765, 770, 774, 778, 781, 785, 786, 787, 790, 795, 796, 803, 807, 810], "b": [13, 39, 45, 80, 86, 89, 99, 107, 138, 181, 186, 203, 220, 223, 243, 247, 255, 256, 257, 261, 265, 271, 285, 287, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 318, 320, 324, 325, 340, 356, 357, 390, 395, 408, 411, 414, 415, 416, 418, 419, 422, 424, 445, 451, 459, 467, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 527, 536, 620, 621, 625, 629, 630, 632, 633, 641, 644, 651, 652, 653, 657, 659, 669, 679, 682, 683, 694, 701, 725, 728, 742, 750, 751, 754, 755, 759, 761, 764, 765, 766, 768, 770, 772, 774, 775, 777, 778, 781, 782, 783, 784, 786, 788, 789, 795, 796, 797, 799, 803], "delet": [13, 15, 107, 143, 173, 200, 218, 240, 243, 244, 245, 246, 324, 325, 329, 341, 390, 493, 533, 731, 740, 759, 766, 771, 799], "reset": [13, 15, 731, 786], "show": [13, 15, 80, 83, 98, 107, 126, 186, 242, 271, 285, 312, 356, 357, 382, 408, 409, 415, 477, 478, 479, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 533, 602, 605, 606, 681, 682, 683, 688, 731, 739, 740, 746, 758, 761, 763, 767, 769, 774, 784, 787, 788, 796, 800], "hide": [13, 15, 181, 240, 242], "h": [13, 15, 18, 107, 138, 206, 220, 223, 415, 477, 478, 500, 505, 519, 521, 759, 762, 764, 766, 770, 778, 780, 781, 785, 786, 795, 796, 798, 799], "ctrl": [13, 15], "p": [13, 15, 18, 82, 83, 107, 168, 181, 193, 203, 205, 221, 223, 225, 243, 244, 245, 246, 256, 263, 265, 286, 287, 293, 301, 312, 319, 324, 327, 340, 356, 357, 358, 374, 392, 398, 402, 407, 408, 424, 430, 433, 435, 445, 447, 460, 474, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 521, 523, 536, 624, 634, 639, 642, 649, 686, 689, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 751, 752, 754, 755, 759, 761, 762, 764, 765, 766, 768, 769, 770, 772, 774, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 793, 795, 796, 798, 799, 803], "print": [13, 15, 27, 44, 61, 72, 76, 77, 79, 80, 93, 98, 105, 107, 149, 163, 166, 168, 186, 205, 209, 216, 219, 221, 225, 226, 240, 242, 271, 273, 274, 276, 277, 278, 281, 283, 284, 285, 287, 289, 293, 312, 356, 357, 359, 390, 395, 396, 406, 408, 415, 430, 431, 433, 434, 445, 446, 448, 451, 460, 464, 466, 471, 473, 478, 483, 485, 486, 492, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 528, 533, 535, 585, 602, 603, 605, 606, 624, 627, 631, 646, 649, 656, 658, 668, 669, 671, 672, 673, 674, 675, 679, 681, 690, 691, 692, 693, 694, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 727, 731, 735, 739, 740, 742, 751, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 765, 766, 768, 769, 770, 771, 774, 778, 780, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 798, 799, 800, 801, 802, 803, 805, 808], "q": [13, 15, 107, 174, 193, 227, 291, 319, 433, 435, 460, 731, 751, 752, 764, 765, 766, 770, 774, 778, 781, 786, 789, 790, 799], "quit": [13, 15, 57, 60, 107, 132, 193, 205, 390, 475, 687, 688, 766], "stack": [15, 242, 385, 388, 390, 404, 601, 677, 704, 808], "empti": [15, 58, 97, 99, 195, 203, 218, 225, 240, 243, 244, 245, 247, 255, 256, 257, 261, 293, 310, 318, 327, 335, 339, 340, 355, 384, 385, 392, 395, 402, 403, 404, 406, 407, 408, 409, 410, 412, 415, 423, 431, 436, 440, 464, 537, 608, 623, 647, 660, 683, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 754, 759, 766, 772, 773, 774, 787, 788, 791, 795, 797, 799, 808], "content": [15, 29, 30, 44, 46, 99, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 207, 208, 212, 213, 216, 218, 219, 221, 222, 223, 225, 227, 234, 242, 285, 324, 330, 395, 460, 462, 471, 473, 663, 666, 731, 737, 742, 761, 798, 803, 808], "On": [15, 107, 147, 204, 210, 218, 227, 642, 654, 746, 759, 760, 796, 803], "remain": [15, 80, 107, 109, 114, 115, 117, 145, 176, 186, 192, 201, 213, 225, 242, 289, 293, 387, 388, 390, 403, 404, 408, 410, 424, 521, 670, 671, 672, 673, 674, 675, 677, 694, 695, 704, 731, 759, 761, 763, 786, 803], "consid": [15, 80, 83, 86, 107, 120, 126, 182, 186, 205, 227, 242, 243, 244, 245, 246, 256, 260, 293, 301, 312, 379, 380, 392, 407, 471, 473, 474, 497, 528, 533, 535, 608, 618, 619, 642, 646, 653, 670, 671, 672, 673, 674, 675, 677, 681, 691, 692, 693, 694, 695, 704, 706, 715, 722, 757, 759, 763, 766, 798, 803], "two": [15, 27, 43, 60, 72, 80, 82, 83, 97, 98, 99, 100, 102, 103, 107, 126, 128, 131, 137, 146, 168, 169, 181, 186, 189, 191, 195, 203, 212, 218, 221, 225, 227, 242, 243, 244, 245, 246, 256, 260, 287, 289, 293, 301, 306, 310, 318, 319, 320, 324, 325, 326, 329, 334, 340, 341, 342, 343, 344, 351, 356, 357, 381, 382, 385, 392, 395, 396, 404, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 460, 464, 474, 479, 480, 488, 515, 528, 535, 537, 554, 561, 568, 572, 586, 602, 604, 616, 619, 621, 625, 632, 633, 635, 636, 641, 644, 646, 647, 651, 653, 655, 659, 660, 668, 669, 679, 681, 685, 688, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 725, 728, 731, 737, 750, 753, 755, 757, 759, 763, 764, 765, 766, 771, 773, 774, 777, 778, 780, 782, 786, 788, 793, 796, 797, 798, 799, 801, 803, 804, 808], "move": [15, 214, 225, 234, 240, 242, 385, 388, 404, 657, 670, 671, 672, 673, 674, 675, 695, 808], "In": [15, 27, 29, 30, 44, 60, 72, 77, 80, 82, 83, 86, 90, 99, 107, 126, 142, 143, 160, 186, 199, 200, 206, 214, 218, 242, 243, 244, 245, 246, 256, 257, 261, 263, 264, 289, 293, 297, 300, 301, 305, 310, 312, 314, 317, 318, 319, 324, 326, 327, 335, 339, 340, 356, 357, 374, 378, 379, 385, 387, 392, 395, 399, 402, 403, 404, 407, 408, 409, 410, 412, 415, 416, 431, 436, 440, 445, 464, 479, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 528, 535, 537, 624, 635, 642, 644, 647, 649, 651, 654, 669, 671, 672, 676, 679, 680, 681, 682, 683, 686, 689, 690, 691, 692, 693, 694, 696, 697, 701, 702, 703, 704, 706, 711, 712, 720, 725, 728, 731, 736, 746, 748, 752, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 774, 778, 785, 787, 788, 790, 795, 799, 803, 804], "hand": [15, 29, 30, 44, 77, 218, 242, 256, 257, 259, 261, 263, 264, 265, 387, 392, 395, 399, 402, 403, 407, 475, 518, 725, 728, 759, 765, 803, 806], "rightmost": [15, 349, 381, 382, 385, 388, 404, 530], "onli": [15, 27, 60, 72, 80, 83, 86, 93, 96, 99, 100, 107, 116, 126, 136, 143, 148, 160, 163, 166, 168, 170, 174, 177, 186, 196, 200, 205, 212, 214, 216, 218, 219, 221, 222, 225, 227, 241, 242, 243, 244, 245, 246, 247, 256, 257, 259, 261, 263, 264, 271, 285, 291, 293, 299, 301, 304, 312, 342, 343, 356, 357, 359, 379, 380, 382, 384, 385, 390, 395, 397, 403, 404, 406, 408, 409, 415, 424, 431, 432, 451, 471, 473, 474, 476, 479, 482, 490, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 521, 528, 533, 535, 537, 550, 567, 608, 615, 618, 619, 622, 623, 632, 642, 646, 647, 653, 658, 659, 681, 682, 683, 684, 687, 688, 692, 694, 695, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 722, 731, 735, 739, 740, 742, 757, 759, 763, 766, 769, 770, 774, 777, 782, 784, 787, 794, 795, 797, 798, 799, 801, 803], "reduct": [15, 90, 98, 107, 126, 186, 385, 388, 404, 432, 767], "multipl": [15, 61, 63, 72, 76, 86, 107, 126, 168, 183, 184, 186, 218, 221, 243, 245, 246, 273, 274, 277, 278, 318, 324, 326, 333, 351, 356, 357, 377, 385, 396, 401, 404, 405, 471, 473, 514, 585, 624, 649, 655, 673, 680, 681, 692, 696, 697, 703, 704, 706, 707, 711, 712, 720, 731, 734, 735, 740, 757, 766, 767, 778, 781, 782, 784, 789, 790, 796, 799, 803], "There": [15, 60, 72, 107, 125, 181, 184, 201, 214, 243, 246, 256, 257, 261, 318, 351, 395, 408, 431, 451, 454, 459, 482, 485, 490, 493, 499, 518, 608, 616, 632, 659, 670, 671, 672, 673, 674, 675, 681, 694, 695, 725, 728, 759, 763, 765, 766, 769, 774, 791, 796, 797, 798, 799, 808], "wai": [15, 58, 79, 221, 224, 240, 242, 293, 318, 324, 351, 352, 381, 382, 394, 408, 409, 415, 455, 479, 485, 493, 537, 585, 608, 609, 616, 642, 692, 693, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 759, 761, 763, 765, 770, 774, 775, 785, 791, 798, 803], "one": [15, 44, 60, 61, 63, 72, 76, 77, 78, 80, 81, 82, 83, 93, 96, 97, 99, 100, 102, 105, 107, 112, 116, 119, 126, 129, 136, 137, 143, 146, 148, 160, 166, 167, 168, 170, 173, 177, 178, 179, 180, 186, 188, 193, 194, 195, 196, 200, 203, 213, 214, 218, 220, 221, 222, 227, 240, 242, 243, 256, 259, 263, 264, 277, 278, 279, 284, 285, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 318, 324, 325, 342, 343, 348, 349, 351, 355, 356, 377, 381, 382, 385, 386, 390, 392, 393, 395, 396, 397, 399, 401, 402, 404, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 436, 445, 451, 454, 458, 460, 464, 471, 473, 481, 482, 489, 490, 496, 499, 503, 518, 521, 525, 528, 533, 535, 536, 537, 602, 605, 606, 628, 644, 646, 654, 658, 669, 670, 671, 672, 673, 674, 675, 677, 680, 681, 684, 690, 691, 692, 693, 694, 695, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 731, 734, 737, 740, 746, 752, 758, 759, 761, 763, 770, 771, 775, 778, 784, 785, 787, 791, 797, 798, 799, 801, 803, 804, 808], "popup": 15, "appear": [15, 100, 101, 102, 103, 107, 109, 111, 112, 131, 166, 168, 176, 179, 191, 205, 219, 221, 222, 227, 256, 257, 261, 288, 311, 315, 316, 321, 335, 339, 340, 348, 474, 493, 499, 518, 537, 602, 604, 605, 606, 631, 633, 646, 647, 658, 659, 693, 694, 703, 706, 707, 711, 720, 731, 757, 759, 769, 786, 788, 808], "all": [15, 27, 31, 38, 45, 46, 51, 55, 61, 62, 63, 72, 76, 79, 80, 81, 82, 85, 89, 90, 91, 93, 98, 99, 100, 101, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 203, 204, 205, 207, 212, 214, 219, 221, 222, 223, 225, 227, 233, 234, 236, 240, 241, 242, 243, 244, 245, 246, 253, 255, 256, 257, 261, 285, 286, 287, 288, 289, 292, 293, 299, 303, 304, 305, 310, 318, 319, 321, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 379, 380, 382, 384, 386, 387, 388, 389, 392, 395, 396, 397, 399, 400, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 433, 435, 436, 440, 445, 447, 448, 451, 455, 459, 460, 471, 473, 474, 475, 477, 479, 480, 482, 488, 490, 496, 497, 498, 499, 502, 503, 504, 505, 508, 509, 510, 514, 515, 516, 518, 521, 523, 524, 525, 528, 529, 533, 535, 536, 537, 538, 562, 583, 602, 603, 604, 606, 608, 609, 614, 615, 618, 619, 622, 625, 642, 646, 647, 651, 652, 653, 663, 669, 670, 671, 672, 673, 674, 675, 677, 681, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 700, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 731, 739, 742, 746, 752, 755, 757, 759, 761, 763, 764, 765, 766, 767, 768, 770, 771, 773, 774, 775, 777, 778, 782, 784, 785, 787, 789, 790, 792, 795, 796, 798, 799, 800, 806, 808], "r": [15, 57, 60, 107, 110, 126, 130, 168, 175, 181, 186, 190, 193, 209, 221, 225, 226, 285, 286, 293, 301, 312, 319, 327, 340, 356, 357, 408, 415, 416, 422, 435, 460, 486, 488, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 528, 536, 623, 632, 647, 659, 660, 681, 683, 688, 700, 703, 742, 749, 751, 752, 754, 755, 758, 759, 762, 763, 764, 766, 767, 770, 771, 774, 778, 780, 781, 782, 785, 786, 788, 789, 790, 792, 795, 796, 797, 798, 799], "z": [15, 39, 41, 45, 107, 168, 181, 221, 223, 243, 247, 286, 356, 357, 408, 424, 431, 451, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 523, 645, 647, 751, 764, 766, 778, 780, 781, 786, 789, 790, 795, 799, 802], "undo": [15, 387, 388, 403, 404, 632, 659], "toggl": [15, 240], "anim": [15, 51, 107, 168, 221, 742, 759, 782, 785, 799, 803], "launch": 18, "default": [18, 44, 61, 62, 66, 72, 76, 79, 80, 83, 85, 86, 90, 99, 107, 109, 110, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 151, 154, 156, 157, 159, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 193, 196, 198, 199, 201, 204, 205, 207, 212, 213, 216, 218, 219, 221, 222, 223, 225, 226, 227, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 306, 311, 312, 315, 316, 318, 319, 321, 324, 325, 348, 353, 354, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 397, 399, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 431, 432, 436, 440, 474, 479, 482, 485, 490, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 521, 522, 524, 527, 528, 529, 533, 535, 537, 586, 602, 603, 605, 606, 608, 620, 621, 623, 625, 628, 630, 632, 633, 634, 639, 641, 642, 644, 646, 647, 651, 654, 657, 659, 660, 663, 664, 665, 666, 677, 678, 680, 681, 696, 697, 698, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 722, 725, 728, 730, 731, 732, 740, 741, 742, 757, 759, 761, 762, 763, 766, 771, 774, 778, 780, 785, 786, 795, 796, 799, 803, 804], "alreadi": [18, 27, 72, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 219, 225, 227, 234, 240, 242, 293, 310, 318, 352, 377, 379, 380, 394, 395, 399, 401, 405, 408, 421, 430, 433, 435, 451, 460, 467, 471, 473, 485, 493, 508, 528, 537, 621, 641, 644, 694, 761, 763, 766, 769, 770, 774, 785, 795, 796, 799, 807], "run": [18, 44, 60, 63, 72, 99, 107, 126, 158, 186, 218, 224, 227, 275, 276, 284, 289, 356, 357, 359, 396, 402, 406, 407, 408, 409, 415, 451, 478, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 533, 539, 553, 562, 671, 672, 673, 674, 675, 682, 683, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 739, 742, 746, 759, 763, 764, 767, 773, 778, 784, 785, 793, 794, 795, 799, 803, 807, 808], "tab": [18, 107, 168, 218, 221, 227, 359, 617, 629, 631, 635, 647, 653, 658, 731, 762, 797, 808], "connect": [18, 107, 126, 168, 186, 221, 241, 359, 379, 480, 488, 507, 522, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 746, 803], "localhost": [18, 356, 357, 396, 808], "port": [18, 107, 138, 165, 220, 319, 396, 483, 492, 493, 631, 645, 658, 659, 660, 685, 808, 810], "also": [18, 27, 43, 44, 60, 61, 63, 72, 76, 77, 80, 83, 84, 90, 93, 100, 107, 126, 128, 149, 186, 189, 205, 221, 225, 226, 227, 242, 243, 244, 245, 246, 255, 256, 271, 285, 290, 291, 293, 297, 299, 300, 301, 304, 305, 311, 318, 321, 324, 325, 351, 352, 356, 357, 359, 385, 386, 388, 390, 393, 394, 395, 397, 404, 406, 408, 431, 434, 445, 448, 451, 479, 488, 493, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 533, 537, 560, 586, 589, 602, 604, 605, 606, 616, 645, 646, 647, 651, 657, 660, 668, 679, 693, 701, 703, 725, 728, 731, 734, 735, 740, 742, 752, 757, 758, 759, 761, 763, 764, 765, 766, 767, 769, 774, 775, 778, 785, 787, 788, 790, 795, 796, 799, 803, 808, 810], "specifi": [18, 29, 30, 43, 44, 63, 66, 72, 76, 80, 81, 86, 91, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 240, 241, 242, 243, 244, 245, 247, 255, 256, 257, 258, 261, 289, 291, 293, 299, 304, 312, 324, 325, 329, 334, 341, 344, 348, 350, 352, 355, 356, 357, 359, 382, 384, 387, 390, 392, 394, 395, 396, 397, 399, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 431, 436, 440, 453, 464, 471, 473, 474, 479, 485, 493, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 527, 528, 529, 535, 536, 537, 602, 603, 604, 605, 606, 608, 616, 625, 627, 637, 639, 650, 651, 653, 656, 661, 663, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 679, 690, 691, 692, 693, 694, 695, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728, 731, 739, 742, 743, 744, 746, 753, 759, 761, 763, 764, 765, 766, 771, 774, 782, 785, 788, 790, 796, 799, 803, 808], "begin": [18, 63, 72, 107, 108, 172, 218, 225, 241, 243, 247, 289, 355, 376, 383, 384, 385, 386, 388, 391, 395, 402, 403, 404, 406, 477, 478, 480, 488, 506, 521, 642, 646, 657, 706, 707, 708, 709, 710, 711, 712, 713, 714, 759, 785, 787, 795, 797], "serv": [18, 107, 126, 186, 208, 356, 382, 396, 448, 459, 460, 528, 733, 734, 735, 736, 740, 759, 767, 795], "request": [18, 218, 242, 292, 347, 551, 657, 731, 732, 740, 759, 808], "8000": [18, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "For": [18, 20, 57, 60, 77, 80, 82, 86, 87, 89, 105, 107, 110, 112, 125, 126, 137, 146, 150, 166, 168, 173, 175, 179, 184, 186, 194, 195, 201, 202, 203, 205, 207, 209, 211, 219, 221, 222, 225, 227, 240, 241, 242, 243, 247, 256, 285, 286, 290, 293, 294, 295, 296, 297, 298, 300, 302, 303, 324, 325, 326, 351, 355, 371, 379, 384, 385, 392, 395, 397, 402, 403, 404, 407, 408, 409, 410, 415, 432, 433, 435, 445, 451, 460, 467, 471, 473, 479, 482, 490, 496, 500, 517, 519, 521, 529, 533, 535, 536, 537, 538, 608, 616, 622, 625, 646, 647, 651, 652, 653, 654, 677, 681, 682, 683, 687, 688, 693, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 737, 739, 740, 741, 742, 746, 752, 757, 759, 760, 761, 765, 766, 767, 769, 771, 774, 777, 780, 785, 787, 788, 798, 799, 803, 807, 808], "command": [18, 48, 276, 284, 289, 377, 401, 529, 624, 649, 680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 703, 774, 782, 807], "line": [18, 46, 48, 63, 72, 74, 76, 79, 91, 107, 108, 109, 111, 119, 122, 125, 129, 134, 137, 139, 144, 146, 159, 163, 166, 167, 172, 174, 176, 180, 181, 183, 186, 188, 192, 195, 197, 201, 202, 203, 205, 208, 210, 213, 216, 218, 219, 220, 225, 241, 242, 287, 288, 312, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 397, 399, 406, 408, 422, 474, 477, 483, 492, 501, 520, 535, 536, 537, 602, 603, 605, 606, 617, 619, 633, 647, 653, 658, 659, 663, 664, 665, 666, 681, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 731, 734, 737, 739, 740, 742, 754, 758, 759, 774, 785, 797, 798, 803, 807, 808], "requir": [18, 60, 80, 93, 99, 100, 107, 112, 126, 143, 179, 186, 200, 218, 225, 242, 277, 293, 297, 300, 301, 305, 310, 311, 314, 318, 321, 324, 325, 355, 377, 382, 401, 402, 408, 409, 415, 417, 438, 445, 451, 471, 473, 476, 477, 480, 488, 507, 517, 521, 522, 533, 602, 605, 606, 608, 616, 646, 653, 670, 681, 687, 688, 692, 693, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 731, 732, 737, 740, 743, 744, 746, 752, 755, 757, 759, 760, 761, 766, 770, 774, 781, 796, 807, 808], "user": [18, 48, 57, 80, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 194, 200, 213, 218, 223, 225, 227, 240, 241, 242, 289, 377, 401, 402, 407, 408, 421, 429, 445, 501, 511, 520, 527, 635, 639, 647, 682, 683, 696, 697, 702, 703, 731, 732, 737, 739, 740, 741, 742, 746, 752, 759, 774, 806, 807, 808], "web": [18, 107, 112, 179, 197, 204, 205, 225, 324, 326, 482, 490, 538, 731, 757, 759, 760, 808], "support": [18, 60, 72, 80, 85, 86, 87, 107, 121, 122, 123, 126, 128, 168, 174, 183, 184, 186, 189, 193, 221, 225, 226, 242, 243, 247, 290, 291, 310, 318, 324, 326, 390, 405, 406, 429, 485, 493, 507, 522, 602, 605, 606, 608, 616, 682, 683, 731, 736, 755, 759, 760, 761, 763, 766, 769, 794, 795, 796, 799, 808], "javascript": 18, "browserv": 18, "brows": 18, "databas": [18, 107, 126, 133, 174, 186, 198, 215, 220, 221, 445, 464, 663, 752, 767, 795], "client": [18, 731, 732, 733, 734, 736, 740, 791], "mayb": [18, 58, 430, 433, 435, 460], "py": [18, 44, 86, 227, 527, 535, 536, 537, 539, 586, 645, 759, 761, 766, 784, 801, 808], "option": [18, 80, 81, 86, 91, 98, 107, 119, 126, 128, 149, 168, 180, 182, 186, 189, 193, 205, 221, 234, 242, 289, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 312, 324, 325, 352, 356, 357, 359, 377, 390, 394, 396, 401, 402, 406, 408, 417, 431, 445, 451, 471, 473, 486, 490, 495, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 520, 521, 522, 527, 528, 529, 533, 535, 602, 603, 619, 621, 624, 627, 632, 633, 639, 641, 649, 653, 655, 656, 659, 671, 672, 673, 674, 675, 680, 681, 682, 683, 690, 691, 692, 693, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 731, 732, 735, 740, 742, 746, 759, 763, 766, 767, 774, 799, 800, 803, 807, 808], "messag": [18, 225, 227, 277, 289, 346, 437, 460, 501, 520, 731, 732, 740, 754, 766, 774, 788, 808], "l": [18, 80, 82, 107, 114, 176, 181, 223, 242, 310, 318, 324, 341, 455, 500, 501, 519, 520, 537, 608, 619, 645, 653, 685, 690, 691, 692, 693, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 758, 759, 763, 764, 765, 778, 781, 786, 788, 795, 796, 797, 799], "log": [18, 80, 90, 107, 168, 221, 263, 294, 295, 296, 297, 298, 300, 302, 303, 332, 340, 408, 413, 421, 422, 425, 428, 501, 505, 506, 514, 520, 521, 646, 676, 677, 679, 685, 700, 704, 709, 713, 731, 746, 803], "silent": 18, "drop": [18, 80, 677, 704, 759, 761, 808], "tcp": 18, "mode": [18, 60, 225, 377, 401, 482, 490, 523], "do": [18, 57, 58, 73, 76, 84, 85, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 186, 191, 205, 221, 225, 226, 234, 240, 242, 243, 256, 261, 284, 289, 293, 299, 300, 304, 305, 312, 317, 340, 381, 382, 387, 388, 390, 403, 404, 408, 409, 415, 445, 460, 474, 478, 482, 485, 490, 493, 497, 498, 502, 503, 504, 508, 510, 515, 516, 518, 528, 535, 537, 602, 604, 608, 619, 633, 646, 653, 659, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 722, 725, 728, 737, 746, 752, 757, 758, 759, 763, 765, 766, 767, 770, 774, 782, 784, 785, 796, 799, 800, 801, 803, 805, 807], "shutdown": 18, "interfac": [18, 43, 60, 65, 77, 78, 80, 81, 86, 93, 94, 107, 166, 184, 209, 210, 219, 221, 222, 227, 269, 284, 289, 293, 301, 303, 346, 351, 352, 377, 379, 380, 394, 395, 396, 399, 401, 402, 405, 408, 417, 432, 460, 476, 487, 496, 499, 507, 517, 518, 522, 523, 529, 536, 537, 582, 602, 627, 637, 653, 655, 656, 667, 677, 704, 731, 736, 754, 755, 757, 759, 775, 806, 808], "sent": [19, 28, 44, 62, 63, 86, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 134, 135, 143, 144, 145, 147, 149, 150, 154, 159, 160, 161, 164, 171, 172, 173, 175, 177, 178, 179, 180, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 200, 201, 202, 204, 205, 207, 213, 214, 223, 293, 299, 304, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 397, 399, 402, 403, 404, 406, 407, 408, 409, 415, 474, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 520, 522, 527, 528, 529, 624, 627, 645, 649, 656, 703, 731, 742, 749, 750, 753, 759, 765, 769, 776, 777, 784, 785, 786, 787, 790, 791, 793, 805], "combinatori": [20, 43, 107, 126, 186, 767, 803], "categori": [20, 31, 32, 38, 43, 45, 46, 77, 78, 79, 80, 82, 107, 114, 115, 116, 117, 128, 143, 145, 147, 165, 173, 176, 177, 189, 192, 200, 201, 204, 213, 220, 256, 257, 260, 261, 267, 288, 318, 496, 510, 516, 528, 731, 755, 757, 759, 765, 766, 777, 786, 791, 808], "more": [20, 44, 60, 61, 63, 72, 76, 77, 78, 80, 84, 99, 105, 107, 110, 116, 120, 126, 128, 132, 135, 137, 143, 146, 158, 170, 172, 173, 175, 177, 178, 180, 181, 182, 185, 186, 188, 189, 193, 194, 195, 197, 198, 200, 203, 208, 213, 218, 221, 222, 225, 227, 240, 241, 242, 256, 259, 260, 289, 293, 299, 301, 304, 310, 311, 312, 318, 321, 324, 326, 348, 351, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 397, 399, 402, 403, 404, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 445, 451, 455, 460, 474, 475, 480, 485, 488, 493, 496, 499, 501, 504, 505, 509, 514, 517, 518, 520, 521, 524, 525, 528, 529, 533, 535, 536, 537, 567, 585, 602, 606, 616, 621, 632, 633, 641, 653, 654, 659, 669, 681, 682, 683, 688, 692, 693, 694, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 731, 734, 740, 751, 752, 754, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 774, 780, 785, 787, 788, 795, 796, 797, 798, 799, 801, 803, 804, 806, 808], "inform": [20, 43, 62, 64, 72, 76, 77, 80, 82, 84, 93, 105, 107, 126, 128, 134, 137, 146, 149, 158, 160, 168, 169, 172, 177, 178, 180, 182, 185, 186, 187, 188, 189, 195, 198, 200, 202, 203, 204, 208, 210, 213, 214, 218, 221, 227, 242, 243, 244, 245, 271, 285, 286, 292, 293, 311, 315, 316, 321, 341, 348, 351, 352, 353, 354, 355, 374, 376, 383, 384, 389, 390, 391, 394, 395, 397, 399, 402, 403, 406, 408, 464, 477, 478, 480, 485, 488, 493, 496, 499, 514, 516, 517, 518, 521, 528, 616, 670, 677, 693, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 731, 740, 742, 745, 753, 755, 757, 759, 760, 765, 766, 767, 774, 780, 785, 787, 803, 808], "see": [20, 27, 29, 30, 44, 72, 80, 81, 85, 89, 93, 100, 105, 107, 116, 126, 128, 135, 148, 158, 165, 166, 168, 170, 172, 177, 178, 180, 184, 185, 186, 188, 189, 194, 197, 198, 200, 206, 208, 209, 213, 218, 219, 220, 221, 222, 224, 225, 226, 227, 240, 242, 243, 244, 245, 246, 256, 260, 263, 264, 270, 272, 276, 277, 278, 284, 285, 286, 289, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 321, 324, 326, 352, 353, 354, 377, 384, 385, 387, 388, 389, 394, 395, 397, 399, 401, 403, 404, 406, 408, 430, 433, 445, 448, 453, 460, 464, 480, 482, 485, 488, 490, 493, 498, 500, 501, 502, 503, 505, 509, 514, 515, 516, 517, 519, 520, 521, 523, 524, 528, 529, 533, 538, 560, 586, 589, 602, 605, 606, 616, 622, 646, 647, 648, 654, 657, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 695, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 746, 752, 753, 759, 763, 764, 765, 766, 767, 770, 771, 774, 778, 781, 782, 785, 789, 790, 794, 795, 796, 799, 801, 807, 808], "doc": [20, 72, 77, 107, 126, 127, 163, 168, 175, 186, 187, 216, 218, 221, 226, 293, 453, 464, 471, 473, 731, 732, 736, 737, 740, 759, 767, 773, 788, 791, 807], "contrib": [20, 808], "pdf": [20, 89, 100, 107, 133, 142, 199, 220, 307, 324, 326, 445, 514, 567, 591, 624, 649, 680, 681, 682, 683, 685, 687, 688, 696, 697, 702, 703, 722, 727, 742, 748, 751, 752, 808], "backwardcombin": [21, 22, 24, 25, 26, 45], "object": [21, 22, 24, 25, 26, 31, 32, 33, 35, 36, 37, 38, 43, 45, 46, 57, 61, 62, 63, 65, 72, 76, 78, 80, 82, 84, 85, 87, 89, 90, 91, 93, 94, 98, 99, 107, 108, 120, 122, 124, 125, 126, 132, 137, 141, 144, 146, 149, 152, 163, 168, 172, 173, 182, 183, 185, 186, 187, 192, 193, 194, 195, 198, 201, 202, 203, 205, 206, 208, 209, 212, 213, 214, 216, 218, 221, 222, 224, 225, 226, 227, 228, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 256, 257, 258, 260, 262, 263, 264, 271, 274, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 312, 313, 314, 318, 321, 348, 352, 355, 358, 359, 366, 371, 374, 376, 377, 379, 380, 381, 382, 383, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 406, 408, 409, 410, 412, 415, 421, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 445, 447, 448, 449, 451, 453, 454, 455, 459, 460, 464, 471, 472, 473, 474, 475, 486, 487, 495, 500, 501, 505, 506, 507, 517, 519, 520, 521, 522, 524, 535, 536, 537, 550, 555, 565, 568, 580, 586, 587, 602, 603, 604, 605, 606, 607, 622, 639, 641, 646, 657, 660, 663, 664, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 704, 706, 707, 708, 709, 710, 711, 712, 713, 715, 719, 722, 730, 731, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 752, 756, 761, 763, 765, 766, 767, 774, 775, 778, 787, 788, 791, 797, 799, 803, 805, 808], "backward": [21, 22, 23, 24, 25, 26, 38, 39, 40, 44, 45, 221, 243, 247, 505, 521, 537, 686, 689, 790, 803], "equival": [21, 22, 23, 24, 25, 26, 45, 60, 72, 98, 99, 243, 244, 245, 246, 293, 299, 304, 310, 318, 408, 409, 414, 415, 418, 419, 430, 431, 433, 434, 435, 448, 451, 460, 537, 682, 683, 690, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 750, 771, 774, 778, 799], "forwardcombin": [21, 22, 23, 24, 25, 26, 33, 35, 36, 37, 45], "class": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 57, 60, 61, 62, 63, 65, 69, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 318, 321, 324, 326, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 445, 447, 448, 449, 451, 453, 454, 455, 458, 459, 460, 464, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 527, 528, 529, 533, 535, 536, 537, 550, 552, 553, 555, 556, 557, 558, 559, 562, 563, 564, 565, 567, 568, 573, 574, 575, 576, 577, 578, 580, 582, 583, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 644, 645, 646, 647, 649, 651, 653, 654, 655, 656, 657, 658, 659, 660, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 685, 690, 691, 692, 693, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 723, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 752, 753, 755, 757, 761, 765, 766, 767, 773, 774, 775, 788, 791, 796, 798, 799, 803, 808], "directedbinarycombin": [23, 34, 45], "__init__": [23, 27, 28, 29, 30, 31, 34, 43, 44, 45, 46, 57, 61, 62, 63, 69, 72, 76, 79, 80, 82, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 312, 313, 314, 318, 321, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 445, 447, 448, 449, 451, 454, 455, 459, 460, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 524, 527, 528, 529, 535, 536, 537, 602, 603, 604, 605, 606, 607, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 630, 634, 635, 636, 639, 642, 644, 646, 647, 649, 651, 653, 654, 655, 656, 657, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 690, 691, 692, 693, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 723, 730, 731, 732, 733, 734, 735, 736, 740, 741, 742, 759, 761, 766], "predic": [23, 33, 34, 35, 36, 37, 45, 107, 137, 146, 195, 203, 286, 430, 432, 433, 435, 445, 450, 455, 460, 608, 752, 759, 766, 778, 782, 787, 790], "suffix": [23, 34, 45, 311, 315, 316, 321, 445, 474, 477, 478, 479, 480, 482, 485, 488, 490, 493, 494, 497, 510, 528, 583, 808], "can_combin": [23, 32, 34, 38, 39, 40, 41, 42, 45], "construct": [27, 44, 60, 62, 72, 77, 79, 80, 85, 90, 91, 98, 99, 100, 101, 102, 103, 107, 108, 110, 112, 113, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 138, 139, 140, 141, 142, 144, 148, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 183, 184, 185, 186, 189, 192, 193, 196, 198, 199, 201, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 225, 234, 240, 241, 242, 243, 244, 245, 246, 256, 259, 260, 263, 264, 266, 271, 284, 285, 312, 313, 321, 352, 379, 384, 394, 395, 399, 402, 403, 408, 409, 410, 413, 415, 423, 436, 438, 445, 451, 458, 464, 497, 500, 503, 508, 514, 519, 528, 535, 536, 537, 562, 602, 603, 608, 621, 641, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 750, 754, 757, 759, 765, 766, 795, 798, 800], "termin": [27, 29, 30, 44, 80, 233, 236, 256, 257, 259, 260, 261, 263, 264, 377, 386, 390, 395, 399, 400, 401, 464, 624, 649, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 722, 725, 728, 733, 739, 740, 759, 765, 797], "paramet": [27, 28, 43, 44, 57, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 314, 317, 319, 320, 324, 325, 326, 327, 329, 332, 334, 335, 339, 340, 341, 344, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 445, 447, 448, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 469, 471, 473, 474, 475, 477, 478, 479, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 533, 534, 535, 536, 537, 547, 568, 586, 602, 603, 604, 605, 606, 607, 608, 611, 612, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 644, 646, 647, 649, 650, 651, 652, 653, 654, 657, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 721, 722, 723, 724, 725, 728, 730, 731, 732, 733, 734, 735, 736, 737, 740, 741, 742, 743, 744, 759, 761, 763, 764, 790, 796, 799, 803, 808], "child_pointer_list": [27, 395, 399], "child": [27, 58, 79, 105, 107, 112, 126, 186, 241, 242, 256, 289, 378, 379, 381, 382, 384, 387, 395, 403, 663, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 720, 722, 725, 728, 747, 765, 767, 799, 801, 808], "pointer": [27, 107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 137, 138, 139, 140, 141, 142, 146, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 195, 196, 198, 199, 203, 207, 212, 219, 221, 222, 223, 225, 395, 706, 711, 712, 720, 761, 766, 787, 799], "form": [27, 39, 40, 41, 45, 58, 63, 72, 73, 76, 80, 90, 99, 107, 126, 150, 159, 168, 186, 203, 206, 207, 208, 213, 218, 221, 225, 227, 242, 256, 257, 261, 267, 277, 284, 285, 348, 359, 381, 382, 390, 392, 395, 399, 402, 407, 430, 432, 433, 434, 445, 446, 447, 448, 455, 460, 464, 468, 477, 478, 479, 488, 493, 500, 510, 514, 519, 521, 528, 530, 533, 535, 537, 588, 620, 625, 644, 647, 651, 660, 669, 679, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 752, 759, 763, 766, 767, 770, 772, 774, 785, 787, 788, 795, 798, 801, 803, 808], "type": [27, 28, 29, 30, 42, 43, 44, 45, 48, 57, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 74, 75, 76, 78, 79, 80, 82, 85, 90, 91, 96, 98, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 179, 180, 182, 183, 185, 186, 188, 189, 192, 193, 196, 197, 198, 200, 201, 204, 205, 206, 207, 208, 213, 214, 216, 218, 219, 221, 222, 225, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 275, 279, 280, 282, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 312, 314, 318, 319, 320, 324, 325, 326, 327, 329, 334, 335, 339, 340, 341, 344, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 432, 433, 434, 435, 438, 442, 445, 446, 448, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 479, 480, 486, 488, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 533, 535, 536, 537, 559, 585, 602, 603, 604, 605, 606, 608, 611, 612, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 649, 651, 652, 653, 654, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 724, 731, 732, 733, 734, 737, 740, 742, 746, 751, 754, 761, 767, 774, 776, 784, 785, 787, 796, 799, 807, 808], "edgei": [27, 29, 30, 44, 395, 397, 399, 402], "dot_digraph": [27, 395], "after": [27, 60, 63, 72, 80, 84, 98, 107, 126, 158, 186, 218, 227, 241, 242, 256, 257, 261, 270, 279, 285, 289, 293, 299, 301, 304, 314, 349, 355, 376, 383, 391, 392, 395, 397, 402, 407, 408, 415, 455, 472, 474, 475, 478, 493, 518, 533, 542, 562, 619, 632, 646, 653, 659, 660, 681, 731, 742, 759, 760, 763, 769, 796, 797, 799, 803, 807], "iteredg": [27, 395, 397], "clear": [27, 99, 225, 240, 242, 243, 244, 245, 395, 397, 399, 409, 410, 412, 415, 431, 436, 440, 449, 451, 500, 519, 707, 708, 709, 710, 711, 712, 713, 759, 761, 766, 774, 786, 795], "insert": [27, 99, 107, 128, 189, 240, 242, 243, 244, 245, 324, 325, 326, 329, 341, 355, 395, 399, 402, 409, 410, 412, 431, 432, 436, 440, 620, 644, 707, 708, 709, 710, 711, 712, 713, 799], "true": [27, 29, 30, 43, 44, 61, 69, 76, 77, 79, 80, 81, 83, 84, 85, 90, 91, 93, 96, 99, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 179, 180, 182, 183, 185, 186, 189, 194, 201, 204, 205, 207, 213, 214, 215, 216, 218, 220, 221, 225, 227, 228, 240, 241, 242, 243, 244, 245, 246, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 271, 274, 276, 277, 278, 281, 283, 284, 285, 286, 287, 289, 293, 299, 300, 301, 304, 305, 312, 356, 357, 358, 359, 387, 388, 390, 395, 396, 397, 398, 399, 403, 404, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 433, 435, 445, 447, 448, 451, 454, 455, 460, 464, 471, 473, 474, 475, 479, 481, 482, 485, 489, 490, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 528, 533, 535, 536, 537, 564, 568, 583, 586, 602, 604, 608, 611, 612, 620, 621, 622, 623, 624, 625, 630, 631, 632, 633, 634, 639, 640, 641, 644, 645, 646, 647, 648, 649, 651, 652, 655, 657, 658, 659, 660, 663, 664, 665, 666, 669, 679, 681, 682, 683, 686, 689, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 725, 726, 731, 733, 734, 735, 737, 740, 742, 749, 751, 752, 753, 754, 755, 756, 757, 759, 761, 762, 763, 764, 765, 766, 769, 770, 771, 774, 775, 776, 777, 778, 779, 780, 782, 784, 786, 789, 790, 794, 795, 796, 799, 800, 801, 803, 804, 808], "modifi": [27, 60, 62, 63, 72, 99, 107, 166, 218, 219, 221, 224, 234, 237, 238, 240, 242, 243, 245, 256, 258, 259, 262, 276, 281, 283, 284, 289, 382, 395, 399, 408, 421, 445, 474, 482, 490, 505, 521, 586, 602, 607, 608, 646, 654, 681, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 725, 728, 742, 752, 754, 759, 763, 766, 774, 799, 808], "particular": [27, 29, 30, 44, 60, 72, 80, 90, 99, 107, 126, 135, 186, 194, 206, 218, 242, 243, 244, 245, 246, 256, 263, 311, 312, 315, 316, 317, 321, 327, 335, 339, 340, 356, 357, 374, 378, 379, 380, 381, 382, 387, 392, 395, 399, 402, 403, 407, 408, 409, 415, 416, 445, 453, 464, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 528, 537, 608, 616, 651, 653, 681, 691, 692, 693, 694, 706, 711, 712, 720, 736, 752, 759, 763, 766, 767, 771, 774, 785, 799, 808], "iff": [27, 80, 81, 256, 257, 261, 287, 288, 395, 399, 448, 455, 460, 536], "did": [27, 57, 83, 107, 168, 211, 221, 293, 395, 399, 746, 759, 796, 806], "sequenc": [27, 60, 62, 72, 80, 93, 97, 98, 99, 100, 101, 102, 103, 195, 203, 218, 221, 240, 241, 242, 243, 244, 245, 246, 256, 259, 263, 264, 285, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 318, 319, 324, 329, 334, 337, 338, 341, 342, 343, 344, 382, 392, 393, 395, 399, 407, 408, 409, 415, 421, 445, 496, 497, 498, 499, 502, 503, 504, 505, 506, 508, 510, 514, 515, 516, 517, 518, 521, 525, 528, 529, 535, 554, 561, 586, 602, 605, 606, 608, 611, 612, 617, 620, 622, 625, 628, 634, 636, 639, 644, 646, 647, 651, 654, 660, 663, 664, 665, 666, 669, 679, 681, 687, 688, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 742, 766, 785, 790, 796, 798, 808], "tupl": [27, 29, 30, 44, 46, 57, 65, 66, 75, 76, 77, 80, 81, 82, 88, 90, 91, 99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 178, 179, 180, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 195, 196, 198, 199, 202, 203, 205, 207, 211, 212, 213, 214, 218, 219, 220, 221, 222, 223, 226, 240, 242, 243, 244, 247, 253, 271, 284, 285, 286, 287, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 318, 319, 320, 321, 324, 326, 337, 340, 342, 348, 350, 352, 356, 357, 358, 377, 387, 394, 395, 396, 398, 399, 401, 402, 403, 405, 406, 408, 409, 410, 412, 415, 429, 430, 431, 436, 440, 442, 445, 451, 452, 456, 457, 460, 464, 467, 469, 471, 473, 474, 479, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 534, 536, 537, 568, 586, 602, 605, 606, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 644, 646, 647, 649, 653, 654, 659, 660, 663, 664, 665, 666, 668, 669, 676, 677, 679, 680, 681, 683, 685, 686, 689, 695, 697, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 733, 734, 735, 736, 739, 740, 742, 752, 753, 754, 757, 759, 776, 790, 791, 797, 798], "were": [27, 61, 72, 76, 80, 107, 126, 128, 136, 143, 148, 166, 170, 186, 187, 189, 196, 200, 206, 221, 222, 242, 287, 289, 291, 350, 379, 380, 382, 395, 399, 408, 410, 479, 488, 536, 583, 632, 659, 680, 681, 742, 758, 759, 767, 796, 803, 808], "reconstruct": [27, 99, 319, 395, 399, 759, 799], "bool": [27, 29, 30, 43, 44, 80, 84, 107, 168, 221, 225, 237, 238, 240, 242, 243, 247, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 267, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 287, 312, 324, 325, 329, 334, 341, 344, 353, 354, 356, 357, 361, 362, 368, 375, 386, 387, 388, 389, 395, 399, 403, 404, 406, 408, 409, 415, 421, 430, 432, 434, 435, 438, 445, 448, 451, 452, 457, 459, 460, 469, 479, 485, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 533, 535, 536, 537, 602, 603, 608, 611, 612, 616, 621, 622, 623, 632, 633, 634, 639, 641, 646, 647, 659, 660, 661, 663, 664, 665, 666, 680, 681, 682, 683, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 731, 733, 734, 735, 740, 742, 778, 808], "insert_with_backpoint": [27, 395], "new_edg": [27, 395], "previous_edg": [27, 395], "child_edg": [27, 395], "previou": [27, 77, 107, 126, 186, 227, 337, 342, 387, 388, 395, 403, 404, 478, 498, 515, 528, 622, 646, 693, 694, 695, 706, 715, 722, 732, 740, 746, 795], "iter": [27, 28, 44, 62, 63, 80, 83, 85, 90, 93, 96, 98, 99, 101, 102, 103, 107, 158, 168, 214, 218, 221, 237, 238, 243, 244, 245, 246, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 415, 431, 436, 440, 447, 471, 473, 501, 505, 506, 509, 511, 520, 521, 524, 527, 536, 602, 606, 608, 611, 612, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 646, 647, 649, 651, 652, 653, 659, 660, 663, 664, 665, 666, 670, 671, 672, 673, 674, 675, 685, 690, 691, 692, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 719, 731, 740, 742, 743, 744, 785, 797, 803], "guarante": [27, 65, 289, 385, 395, 397, 404, 621, 641, 670, 671, 672, 673, 674, 675, 680, 681, 683, 688, 694, 695, 696, 697, 699, 700, 703, 759, 803], "exhaust": [27, 395, 397, 681], "index": [27, 29, 30, 44, 77, 80, 89, 94, 95, 96, 97, 98, 99, 107, 112, 126, 158, 168, 179, 183, 184, 186, 195, 203, 218, 221, 227, 234, 240, 241, 242, 243, 245, 246, 289, 293, 299, 304, 311, 314, 315, 316, 321, 357, 359, 371, 379, 380, 381, 382, 392, 395, 396, 397, 399, 402, 407, 408, 409, 410, 412, 432, 437, 440, 445, 451, 454, 460, 477, 497, 498, 499, 501, 502, 503, 504, 508, 510, 515, 516, 518, 520, 528, 535, 536, 537, 585, 602, 603, 604, 605, 606, 657, 671, 672, 684, 685, 690, 691, 695, 701, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 742, 759, 762, 765, 766, 783, 785, 798, 799], "valu": [27, 29, 30, 44, 61, 62, 63, 72, 76, 77, 79, 80, 81, 82, 85, 86, 90, 91, 93, 98, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 196, 198, 199, 206, 207, 212, 214, 216, 219, 221, 222, 223, 225, 226, 227, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 260, 261, 277, 289, 293, 301, 310, 312, 313, 314, 317, 318, 319, 320, 321, 324, 327, 329, 332, 333, 334, 335, 339, 340, 341, 344, 348, 356, 357, 382, 386, 392, 395, 396, 399, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 424, 429, 430, 431, 432, 433, 435, 436, 438, 440, 445, 447, 451, 452, 453, 454, 460, 464, 469, 472, 475, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 528, 533, 535, 536, 537, 561, 602, 604, 608, 619, 628, 646, 653, 654, 663, 664, 665, 666, 671, 672, 673, 674, 675, 677, 680, 681, 683, 685, 688, 690, 691, 692, 693, 694, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 725, 728, 731, 734, 735, 737, 739, 740, 742, 754, 759, 765, 769, 770, 773, 774, 777, 780, 788, 790, 791, 797, 799, 801, 803], "word": [27, 31, 46, 58, 65, 69, 73, 74, 75, 76, 77, 80, 83, 84, 86, 90, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 227, 233, 236, 237, 238, 243, 256, 258, 259, 262, 264, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 311, 314, 315, 316, 321, 324, 348, 350, 351, 352, 356, 357, 359, 377, 378, 379, 380, 381, 382, 390, 394, 395, 396, 401, 405, 406, 408, 409, 415, 454, 464, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 522, 523, 524, 527, 528, 530, 533, 535, 536, 537, 551, 583, 586, 602, 603, 604, 605, 606, 616, 618, 620, 622, 624, 627, 628, 642, 644, 646, 647, 649, 654, 656, 661, 668, 670, 671, 672, 673, 674, 675, 677, 679, 681, 684, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 700, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 731, 742, 743, 744, 746, 750, 753, 757, 758, 762, 763, 765, 766, 767, 770, 776, 777, 780, 781, 783, 786, 787, 791, 794, 795, 798, 799, 804, 808], "str": [27, 28, 44, 57, 62, 63, 66, 72, 73, 74, 76, 78, 80, 81, 88, 99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 212, 213, 216, 218, 219, 221, 222, 223, 224, 225, 226, 237, 238, 240, 242, 256, 258, 262, 266, 267, 270, 271, 274, 276, 278, 279, 281, 283, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 312, 314, 319, 324, 325, 326, 329, 334, 341, 344, 348, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 415, 422, 430, 432, 438, 442, 445, 446, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 464, 467, 469, 471, 473, 478, 479, 483, 484, 485, 486, 487, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 533, 536, 547, 568, 585, 586, 602, 603, 604, 605, 606, 607, 608, 611, 612, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 649, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 721, 724, 725, 728, 730, 731, 734, 735, 737, 740, 741, 742, 743, 744, 751, 754, 759, 761, 763, 764, 769, 770, 771, 778, 795, 799, 803], "num_edg": [27, 44, 395, 397, 399, 402, 784], "number": [27, 44, 57, 60, 61, 63, 72, 76, 77, 78, 80, 85, 90, 93, 94, 95, 96, 97, 98, 99, 100, 107, 112, 126, 158, 160, 165, 168, 179, 186, 192, 195, 199, 203, 206, 214, 218, 220, 221, 225, 227, 240, 242, 243, 245, 273, 274, 277, 278, 284, 285, 289, 293, 297, 299, 301, 304, 305, 311, 312, 318, 320, 321, 324, 325, 340, 348, 350, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 399, 400, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 445, 451, 464, 467, 471, 473, 474, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 528, 533, 586, 602, 603, 604, 605, 606, 630, 631, 634, 639, 646, 657, 658, 671, 672, 673, 674, 675, 677, 679, 681, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728, 731, 732, 733, 734, 735, 736, 740, 742, 752, 753, 757, 759, 763, 765, 766, 767, 768, 773, 774, 780, 781, 784, 787, 795, 797, 798, 803, 805, 808], "int": [27, 29, 30, 44, 62, 63, 72, 78, 80, 95, 96, 97, 98, 107, 112, 126, 149, 168, 179, 186, 198, 205, 206, 221, 225, 240, 242, 273, 274, 277, 278, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 312, 324, 325, 326, 329, 334, 341, 344, 348, 350, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 397, 399, 402, 403, 404, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 422, 424, 432, 442, 445, 451, 453, 454, 459, 464, 484, 491, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 521, 528, 533, 535, 536, 537, 568, 602, 603, 605, 606, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 646, 647, 653, 654, 657, 659, 660, 670, 671, 672, 673, 674, 675, 677, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 733, 734, 735, 736, 740, 742, 753, 759, 766, 800, 802], "num_leav": [27, 395], "root": [27, 63, 66, 69, 72, 73, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 227, 240, 241, 242, 256, 356, 357, 358, 359, 382, 384, 387, 390, 395, 396, 398, 399, 403, 405, 432, 465, 469, 480, 488, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 720, 722, 725, 728, 742, 749, 753, 759, 762, 770, 799, 803], "tree_class": [27, 107, 122, 183, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 399], "span": [27, 29, 30, 44, 183, 221, 379, 380, 381, 382, 392, 395, 397, 399, 402, 407, 602, 605, 606, 616, 621, 622, 633, 641, 646, 654, 659, 660, 677, 704, 742, 757, 759, 787, 796, 803], "entir": [27, 44, 72, 99, 107, 173, 195, 203, 214, 218, 240, 242, 374, 382, 385, 392, 395, 399, 402, 404, 407, 475, 499, 518, 535, 669, 670, 671, 672, 673, 674, 675, 679, 694, 695, 746, 759, 761, 774, 787, 791, 808], "pretty_format": [27, 79, 312, 395, 433, 434, 436, 448, 458, 764, 780], "width": [27, 72, 79, 227, 240, 241, 242, 341, 344, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 392, 395, 397, 399, 407, 602, 603, 605, 606, 630, 657, 706, 715, 722, 742, 766], "none": [27, 28, 29, 30, 43, 44, 46, 57, 62, 63, 72, 73, 76, 79, 80, 81, 82, 84, 88, 90, 91, 95, 96, 97, 98, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 227, 228, 233, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 261, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 312, 318, 327, 334, 335, 339, 340, 341, 348, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 430, 431, 432, 433, 434, 435, 436, 438, 440, 447, 448, 449, 451, 453, 454, 455, 458, 459, 460, 462, 463, 464, 468, 471, 473, 474, 475, 481, 489, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 528, 529, 530, 533, 535, 536, 537, 581, 586, 602, 604, 605, 606, 608, 620, 622, 623, 627, 630, 644, 646, 647, 648, 655, 656, 657, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 678, 679, 680, 681, 690, 691, 692, 693, 694, 695, 698, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 719, 720, 722, 723, 725, 730, 731, 733, 734, 735, 736, 738, 740, 741, 742, 743, 744, 746, 755, 756, 759, 762, 765, 766, 773, 774, 782, 784, 787, 789, 790, 795, 796, 797, 798, 799, 803], "pretti": [27, 79, 107, 166, 219, 395, 433, 434, 448, 464, 466, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 727, 742, 759, 785, 796, 800], "string": [27, 43, 44, 46, 57, 60, 62, 66, 68, 72, 73, 74, 76, 77, 79, 80, 85, 91, 98, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 218, 219, 221, 222, 223, 225, 227, 233, 236, 240, 242, 243, 244, 245, 246, 247, 256, 257, 260, 261, 264, 266, 267, 274, 276, 277, 278, 281, 283, 284, 289, 293, 298, 299, 301, 304, 305, 310, 312, 318, 319, 324, 325, 326, 356, 357, 359, 377, 382, 385, 387, 395, 396, 401, 403, 404, 405, 406, 408, 415, 429, 430, 432, 433, 434, 435, 438, 440, 445, 447, 448, 451, 454, 460, 462, 463, 464, 467, 471, 473, 475, 480, 481, 484, 488, 489, 491, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 528, 530, 533, 534, 536, 568, 581, 585, 586, 602, 603, 605, 606, 607, 608, 610, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 644, 645, 646, 647, 649, 651, 652, 653, 657, 659, 660, 663, 664, 665, 666, 669, 677, 679, 682, 683, 684, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 721, 722, 724, 725, 728, 731, 739, 740, 742, 752, 754, 755, 758, 759, 761, 763, 765, 767, 772, 774, 775, 776, 778, 780, 785, 788, 790, 791, 795, 796, 797, 799, 802, 808], "represent": [27, 43, 44, 46, 72, 79, 91, 107, 130, 166, 168, 190, 219, 221, 242, 243, 247, 274, 276, 284, 290, 312, 359, 377, 378, 379, 382, 390, 392, 395, 401, 407, 408, 415, 430, 432, 433, 435, 445, 447, 448, 452, 455, 456, 460, 465, 469, 474, 530, 535, 536, 618, 642, 663, 669, 679, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 724, 731, 742, 759, 765, 766, 769, 774, 778, 785, 788, 790, 791, 799], "charact": [27, 72, 107, 109, 111, 126, 128, 141, 165, 176, 186, 189, 198, 218, 220, 225, 227, 233, 236, 242, 293, 324, 325, 326, 395, 406, 454, 460, 507, 522, 529, 586, 602, 603, 605, 606, 617, 618, 619, 625, 626, 628, 629, 633, 634, 636, 639, 642, 646, 647, 651, 652, 653, 654, 659, 660, 682, 683, 685, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 724, 739, 759, 791, 796, 797, 799], "allot": [27, 395], "pretty_format_edg": [27, 395], "pretty_format_leav": [27, 395], "header": [27, 91, 107, 135, 194, 227, 395, 474, 731, 732, 740, 797], "restrict": [27, 33, 34, 35, 36, 37, 38, 43, 45, 107, 126, 168, 173, 186, 221, 233, 236, 243, 247, 293, 395, 397, 399, 453, 464, 706, 707, 708, 709, 710, 711, 712, 713, 714, 735, 740, 742, 766, 803], "exahust": [27, 395, 397], "where": [27, 29, 30, 33, 34, 35, 36, 37, 44, 45, 60, 72, 74, 76, 79, 80, 81, 85, 91, 99, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 183, 186, 189, 191, 198, 206, 214, 218, 221, 222, 224, 225, 227, 240, 241, 242, 243, 244, 245, 246, 247, 256, 257, 261, 263, 265, 270, 271, 272, 284, 285, 289, 293, 312, 314, 324, 329, 334, 341, 344, 348, 356, 357, 377, 379, 390, 392, 395, 396, 397, 401, 402, 405, 406, 407, 408, 410, 415, 416, 421, 422, 424, 429, 433, 445, 448, 454, 455, 464, 471, 473, 474, 478, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 521, 524, 528, 533, 535, 536, 537, 562, 602, 604, 605, 606, 607, 608, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 644, 646, 647, 653, 657, 658, 659, 663, 664, 665, 666, 670, 671, 672, 673, 674, 675, 681, 685, 690, 692, 693, 694, 695, 700, 701, 705, 706, 707, 709, 711, 713, 714, 715, 720, 722, 725, 728, 734, 736, 737, 740, 741, 742, 743, 744, 752, 759, 765, 766, 767, 774, 776, 779, 788, 790, 795, 803, 808], "end": [27, 29, 30, 44, 63, 72, 99, 107, 126, 134, 158, 160, 183, 186, 213, 214, 218, 225, 240, 243, 245, 247, 289, 290, 293, 371, 382, 385, 388, 392, 395, 397, 399, 404, 406, 407, 460, 477, 478, 479, 480, 481, 488, 489, 499, 509, 518, 524, 533, 535, 537, 542, 585, 619, 620, 621, 622, 633, 641, 642, 644, 646, 647, 653, 657, 659, 660, 677, 684, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 742, 752, 754, 755, 759, 764, 766, 774, 778, 790, 791, 796, 797, 799, 803, 808], "length": [27, 29, 30, 44, 60, 80, 95, 96, 97, 98, 99, 107, 168, 206, 218, 221, 240, 256, 257, 261, 306, 312, 317, 324, 329, 334, 340, 341, 355, 374, 376, 379, 383, 391, 395, 397, 402, 406, 408, 409, 464, 480, 484, 488, 491, 497, 505, 509, 521, 524, 528, 535, 602, 605, 606, 634, 639, 642, 657, 660, 677, 681, 685, 690, 691, 692, 693, 694, 700, 701, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 734, 735, 740, 742, 756, 759, 766, 774, 790, 796, 797, 799, 803], "lh": [27, 29, 30, 44, 256, 257, 259, 261, 263, 264, 392, 395, 397, 399, 402, 407, 455, 772, 784], "rh": [27, 29, 30, 44, 256, 257, 259, 261, 263, 264, 392, 395, 397, 399, 402, 407, 455, 784], "nextsym": [27, 29, 30, 44, 395, 397], "dot": [27, 29, 30, 44, 80, 107, 126, 168, 186, 221, 359, 395, 397, 399, 402, 460, 524, 742, 767, 796], "is_complet": [27, 29, 30, 44, 395, 397], "is_incomplet": [27, 29, 30, 44, 395, 397], "fals": [27, 43, 46, 60, 61, 67, 70, 71, 76, 79, 80, 81, 83, 84, 85, 90, 94, 95, 96, 97, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 179, 183, 186, 189, 196, 201, 204, 205, 212, 214, 218, 219, 221, 222, 225, 227, 228, 237, 238, 240, 241, 243, 244, 245, 246, 255, 256, 257, 261, 267, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 293, 301, 312, 324, 325, 341, 344, 356, 357, 359, 377, 388, 390, 395, 396, 397, 401, 404, 405, 406, 408, 409, 411, 413, 414, 415, 416, 418, 419, 422, 430, 432, 433, 434, 435, 438, 445, 447, 448, 451, 454, 455, 460, 464, 466, 471, 473, 474, 479, 481, 485, 489, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 524, 528, 529, 533, 535, 536, 537, 568, 572, 585, 586, 602, 604, 608, 616, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 639, 640, 641, 645, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 680, 681, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 722, 723, 725, 728, 730, 731, 733, 734, 735, 736, 737, 738, 740, 741, 742, 749, 751, 755, 758, 759, 761, 764, 766, 769, 774, 775, 778, 780, 782, 784, 789, 790, 795, 796, 798, 799, 803], "incomplet": [27, 218, 371, 395, 397, 399, 765], "unexpand": [27, 395], "encod": [27, 60, 61, 62, 63, 66, 68, 72, 76, 77, 80, 81, 86, 88, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 243, 256, 257, 261, 267, 289, 356, 357, 395, 396, 405, 406, 408, 409, 415, 451, 454, 460, 462, 463, 464, 469, 474, 477, 496, 497, 498, 499, 502, 503, 504, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 522, 527, 528, 529, 581, 616, 624, 627, 649, 655, 656, 658, 663, 664, 665, 666, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 723, 731, 737, 739, 742, 755, 759, 765, 766, 787, 799, 808], "childless": [27, 395], "subtre": [27, 60, 62, 72, 241, 256, 384, 387, 392, 395, 403, 407, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 720, 725, 728, 742, 788, 799, 801], "nontermin": [27, 29, 30, 44, 63, 72, 233, 236, 256, 257, 259, 261, 263, 264, 265, 267, 395, 399, 400, 402, 765, 784], "share": [27, 86, 107, 122, 125, 144, 164, 168, 183, 192, 201, 214, 217, 221, 225, 227, 381, 382, 395, 399, 488, 511, 521, 527, 702, 703, 706, 711, 712, 720, 746, 759, 765, 774, 796, 799, 803, 804], "same": [27, 44, 58, 60, 61, 63, 72, 76, 107, 122, 125, 149, 160, 183, 186, 201, 205, 214, 221, 226, 227, 240, 243, 244, 245, 246, 256, 266, 287, 289, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 312, 317, 318, 329, 340, 341, 349, 382, 387, 390, 395, 402, 403, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 435, 460, 471, 473, 482, 490, 504, 514, 528, 533, 535, 567, 585, 602, 604, 605, 606, 616, 619, 622, 626, 629, 646, 653, 660, 663, 664, 665, 666, 677, 681, 692, 693, 694, 695, 704, 706, 707, 711, 712, 715, 720, 722, 725, 728, 742, 754, 755, 757, 759, 765, 766, 771, 774, 780, 782, 784, 786, 790, 796, 797, 799, 803, 804], "mai": [27, 33, 34, 35, 36, 37, 43, 45, 48, 60, 63, 72, 78, 81, 85, 91, 93, 97, 99, 100, 107, 126, 159, 186, 195, 197, 201, 203, 204, 205, 213, 218, 221, 222, 225, 227, 237, 238, 240, 242, 243, 244, 245, 246, 247, 256, 284, 289, 311, 321, 352, 355, 393, 394, 395, 402, 408, 409, 421, 430, 460, 472, 475, 479, 493, 506, 514, 521, 528, 533, 535, 536, 537, 602, 604, 616, 622, 625, 646, 651, 670, 671, 672, 673, 674, 681, 692, 695, 706, 707, 711, 712, 720, 739, 742, 757, 759, 763, 764, 766, 767, 771, 774, 778, 785, 798, 799, 804, 808], "both": [27, 60, 72, 78, 83, 84, 86, 100, 102, 105, 107, 122, 126, 143, 150, 183, 186, 200, 206, 207, 221, 225, 227, 240, 242, 243, 244, 255, 256, 257, 261, 275, 276, 277, 284, 293, 303, 307, 342, 343, 382, 390, 395, 408, 415, 430, 435, 459, 460, 474, 477, 478, 480, 488, 506, 514, 517, 521, 533, 608, 637, 642, 646, 657, 669, 677, 681, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 754, 759, 761, 766, 767, 772, 774, 784, 786, 787, 791, 799, 808], "need": [27, 44, 72, 77, 80, 86, 90, 93, 99, 107, 112, 126, 174, 179, 186, 194, 205, 218, 221, 224, 225, 227, 240, 242, 256, 257, 261, 293, 299, 304, 310, 318, 324, 325, 356, 357, 379, 380, 395, 396, 408, 445, 459, 482, 490, 501, 506, 507, 520, 521, 522, 529, 535, 608, 616, 632, 646, 659, 660, 685, 703, 725, 728, 737, 746, 758, 759, 764, 765, 766, 767, 774, 781, 786, 790, 795, 798, 799, 803, 807, 808], "elimin": [27, 256, 257, 261, 395, 763, 770], "deep": [27, 243, 244, 245, 246, 395, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 723, 766, 799], "copi": [27, 60, 99, 107, 112, 179, 225, 226, 227, 243, 244, 245, 246, 395, 399, 408, 409, 410, 412, 415, 421, 431, 436, 440, 451, 464, 483, 492, 616, 617, 619, 621, 623, 626, 627, 629, 630, 631, 633, 635, 636, 637, 638, 641, 645, 647, 648, 650, 653, 656, 657, 658, 659, 661, 662, 669, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 723, 759, 763, 766, 781, 785, 799, 801], "parseri": [28, 44, 65, 351, 352, 355, 377, 384, 385, 390, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 407], "larg": [28, 44, 60, 93, 218, 225, 408, 416, 424, 521, 533, 646, 759, 761], "trace": [28, 44, 62, 63, 72, 80, 95, 96, 97, 98, 195, 203, 243, 244, 245, 246, 253, 255, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 397, 399, 402, 403, 404, 406, 407, 438, 447, 451, 452, 456, 461, 464, 469, 500, 519, 533, 685, 706, 707, 711, 720, 754, 755, 761, 763, 764, 765, 787, 790, 795], "0": [28, 44, 60, 61, 62, 63, 72, 76, 77, 79, 80, 82, 83, 86, 93, 95, 99, 107, 120, 126, 130, 131, 133, 135, 137, 139, 142, 149, 158, 160, 168, 181, 182, 186, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 205, 206, 209, 214, 218, 220, 221, 225, 227, 240, 243, 245, 247, 253, 256, 257, 261, 273, 274, 277, 278, 287, 288, 289, 293, 294, 295, 299, 300, 301, 304, 305, 307, 310, 312, 317, 318, 319, 321, 322, 324, 326, 327, 329, 333, 334, 340, 341, 342, 343, 344, 346, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 429, 438, 447, 451, 452, 456, 461, 464, 469, 471, 473, 475, 484, 491, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 527, 528, 533, 535, 536, 537, 568, 602, 606, 608, 616, 618, 621, 624, 630, 633, 641, 642, 645, 646, 649, 657, 659, 660, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 721, 722, 724, 725, 731, 732, 740, 742, 748, 749, 751, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 803, 806, 808], "possibl": [28, 31, 43, 44, 46, 57, 63, 72, 80, 81, 83, 93, 100, 101, 107, 112, 116, 122, 126, 128, 168, 177, 179, 183, 186, 189, 221, 225, 227, 241, 242, 243, 248, 249, 251, 256, 293, 301, 320, 324, 340, 348, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 397, 399, 402, 403, 404, 406, 407, 408, 415, 417, 422, 424, 431, 447, 451, 453, 464, 499, 501, 505, 514, 518, 520, 521, 533, 535, 537, 608, 621, 622, 632, 641, 646, 659, 669, 671, 672, 678, 679, 684, 690, 691, 692, 693, 694, 698, 701, 706, 707, 711, 720, 731, 740, 742, 743, 744, 758, 759, 761, 763, 766, 767, 774, 784, 788, 791, 796, 798, 799, 803, 804], "like": [28, 44, 57, 72, 78, 79, 90, 93, 99, 107, 111, 126, 128, 136, 143, 148, 158, 166, 168, 170, 176, 186, 189, 196, 200, 218, 221, 222, 225, 226, 240, 243, 244, 246, 256, 263, 290, 292, 293, 348, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 401, 402, 403, 404, 407, 408, 409, 410, 412, 415, 417, 431, 436, 440, 445, 451, 460, 474, 503, 508, 516, 528, 533, 628, 646, 654, 677, 690, 693, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 737, 752, 757, 759, 762, 765, 766, 767, 774, 778, 786, 788, 791, 792, 795, 796, 803], "least": [28, 44, 72, 80, 98, 107, 132, 168, 193, 218, 221, 222, 240, 256, 259, 263, 264, 324, 325, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 402, 403, 404, 407, 408, 415, 424, 481, 489, 500, 519, 536, 628, 654, 684, 697, 701, 759, 791, 803], "parse_al": [28, 62, 63, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393], "argkwarg": [28, 61, 62, 63, 65, 76, 80, 87, 99, 107, 114, 115, 116, 117, 128, 135, 142, 143, 145, 147, 161, 162, 173, 176, 177, 186, 189, 192, 194, 197, 199, 200, 201, 204, 213, 215, 224, 225, 227, 232, 235, 236, 240, 241, 242, 243, 244, 245, 284, 289, 293, 294, 295, 296, 297, 300, 302, 305, 307, 310, 311, 315, 316, 318, 320, 321, 340, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 396, 402, 405, 408, 409, 410, 412, 415, 431, 436, 437, 439, 440, 449, 471, 473, 474, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 529, 564, 587, 663, 665, 666, 681, 706, 707, 708, 709, 710, 711, 712, 713, 714, 728, 742], "parse_on": [28, 62, 63, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 401], "parse_s": [28, 62, 63, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 396, 401, 405, 469, 790], "self": [28, 29, 30, 44, 62, 63, 78, 80, 91, 99, 107, 134, 158, 193, 194, 213, 218, 221, 222, 225, 226, 227, 240, 242, 243, 244, 245, 246, 271, 276, 284, 285, 287, 289, 290, 293, 301, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 433, 434, 435, 448, 451, 454, 459, 460, 481, 489, 497, 498, 499, 502, 503, 504, 505, 507, 508, 509, 510, 515, 516, 517, 528, 529, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 670, 677, 695, 699, 700, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 755, 759, 761, 766, 775, 788, 803], "rtype": [28, 62, 63, 94, 275, 284, 293, 299, 304, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 438, 442, 451, 464, 731], "categ": [29, 30, 43, 44, 45, 46], "what": [29, 30, 38, 44, 45, 72, 77, 80, 83, 107, 126, 186, 193, 194, 211, 222, 227, 240, 241, 256, 289, 290, 293, 296, 297, 299, 304, 305, 314, 318, 353, 354, 356, 357, 361, 362, 368, 375, 379, 380, 386, 387, 389, 395, 396, 399, 402, 403, 496, 507, 511, 521, 522, 527, 529, 646, 752, 758, 759, 761, 763, 774, 784, 785, 795, 797], "kind": [29, 30, 44, 60, 107, 150, 207, 293, 296, 297, 305, 351, 393, 395, 475, 608, 759, 788, 791, 796], "treeedg": [29, 30, 44, 395, 399, 402], "leafedg": [29, 30, 44, 395, 402], "descript": [29, 30, 44, 72, 80, 107, 126, 137, 146, 166, 175, 186, 187, 195, 203, 219, 225, 227, 240, 392, 395, 399, 407, 432, 445, 460, 493, 505, 518, 521, 647, 648, 686, 689, 731, 752, 759, 767, 787, 799], "consist": [29, 30, 43, 44, 60, 71, 80, 99, 107, 111, 112, 120, 122, 125, 126, 131, 137, 144, 146, 150, 163, 173, 176, 179, 181, 182, 183, 186, 191, 195, 201, 203, 207, 211, 216, 218, 225, 227, 233, 236, 256, 257, 258, 261, 267, 271, 285, 287, 293, 299, 301, 304, 324, 325, 350, 384, 395, 402, 403, 429, 445, 496, 498, 500, 503, 508, 515, 519, 523, 526, 528, 602, 606, 625, 642, 645, 647, 651, 684, 685, 687, 688, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 740, 742, 752, 759, 766, 767, 774, 785, 787, 788, 803, 808], "posit": [29, 30, 44, 57, 61, 72, 76, 80, 83, 107, 126, 139, 158, 172, 178, 180, 185, 186, 188, 189, 195, 197, 200, 203, 205, 208, 209, 213, 218, 221, 225, 240, 242, 243, 247, 248, 249, 251, 256, 267, 289, 312, 329, 341, 349, 350, 356, 357, 378, 379, 395, 399, 402, 445, 472, 474, 475, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 520, 521, 533, 535, 536, 537, 572, 585, 602, 603, 608, 612, 614, 669, 672, 675, 677, 679, 683, 690, 691, 692, 693, 694, 695, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 742, 759, 769, 780, 785, 791, 797, 799], "indic": [29, 30, 44, 60, 61, 72, 76, 77, 84, 91, 98, 99, 105, 107, 109, 111, 128, 150, 160, 175, 176, 183, 189, 193, 194, 195, 203, 207, 214, 218, 222, 227, 240, 241, 242, 243, 247, 256, 287, 289, 293, 311, 315, 316, 317, 318, 321, 329, 340, 341, 384, 395, 403, 431, 432, 445, 451, 454, 455, 459, 460, 505, 510, 511, 514, 517, 521, 527, 528, 534, 536, 537, 602, 604, 619, 634, 639, 646, 653, 669, 671, 672, 679, 690, 691, 701, 703, 706, 707, 711, 715, 720, 722, 731, 733, 734, 736, 752, 757, 759, 763, 766, 774, 797, 798, 808], "how": [29, 30, 44, 58, 72, 77, 80, 107, 168, 211, 218, 221, 227, 242, 243, 247, 256, 263, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 312, 349, 359, 395, 402, 407, 408, 409, 415, 416, 417, 533, 535, 602, 604, 619, 646, 653, 673, 683, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 732, 740, 743, 744, 759, 761, 763, 765, 766, 767, 774, 785, 788, 796, 803, 807], "much": [29, 30, 44, 58, 93, 107, 120, 126, 143, 168, 182, 186, 200, 221, 227, 293, 395, 533, 634, 639, 646, 725, 728, 759, 761, 769, 774, 795, 796, 803], "fulli": [29, 30, 44, 290, 359, 379, 395, 475, 685, 731, 765], "immedi": [29, 30, 44, 72, 256, 257, 261, 289, 395], "deriv": [30, 44, 198, 202, 242, 351, 381, 382, 393, 395, 397, 408, 445, 476, 506, 514, 521, 602, 605, 606, 622, 646, 670, 671, 672, 673, 690, 691, 692, 695, 750, 751, 752, 757, 759, 767, 770, 774], "po": [30, 44, 69, 80, 86, 107, 109, 110, 111, 112, 113, 116, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 153, 154, 156, 157, 162, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 183, 184, 185, 186, 188, 189, 196, 198, 199, 207, 209, 212, 219, 221, 222, 223, 243, 247, 356, 357, 377, 396, 401, 405, 406, 432, 486, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 533, 535, 536, 537, 706, 707, 708, 709, 710, 711, 712, 713, 714, 743, 744, 753, 759, 765, 766, 767, 784, 785, 788, 791, 793, 795, 801, 803, 805, 808], "primit": [31, 43, 46, 99], "famili": [31, 46, 285, 731], "entri": [31, 46, 107, 113, 126, 133, 142, 150, 156, 162, 181, 186, 199, 207, 215, 218, 220, 221, 227, 243, 247, 293, 301, 312, 378, 379, 381, 382, 392, 407, 445, 497, 498, 508, 515, 516, 528, 646, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 759, 761], "target": [31, 46, 77, 80, 107, 126, 141, 186, 198, 227, 237, 238, 284, 348, 523, 535, 602, 603, 605, 606, 646, 668, 670, 671, 672, 673, 674, 675, 676, 677, 679, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 701, 704, 705, 753, 767, 769, 785, 798], "wrapper": [32, 45, 85, 107, 126, 131, 148, 186, 191, 206, 226, 256, 260, 289, 291, 292, 471, 473, 563, 602, 605, 732, 735, 740, 757, 761, 806, 808], "undirect": [32, 33, 34, 35, 36, 37, 42, 45], "binari": [32, 38, 44, 45, 60, 69, 70, 71, 79, 80, 81, 83, 86, 88, 90, 256, 257, 261, 267, 277, 289, 318, 359, 379, 406, 445, 451, 460, 462, 463, 507, 511, 512, 513, 522, 547, 624, 649, 742, 752, 755, 774], "take": [32, 33, 34, 35, 36, 37, 43, 44, 45, 51, 77, 80, 85, 89, 97, 98, 99, 105, 107, 122, 126, 130, 168, 170, 173, 183, 186, 190, 193, 194, 206, 214, 218, 221, 222, 226, 242, 256, 267, 285, 289, 293, 306, 310, 318, 321, 324, 333, 352, 356, 357, 377, 379, 380, 394, 396, 401, 405, 408, 410, 414, 418, 419, 431, 451, 453, 460, 464, 471, 473, 496, 501, 503, 506, 514, 520, 521, 528, 533, 537, 644, 647, 660, 681, 683, 694, 742, 757, 758, 759, 761, 762, 763, 764, 766, 767, 769, 774, 777, 785, 796], "argument": [32, 38, 39, 40, 41, 43, 45, 47, 61, 76, 80, 81, 88, 99, 105, 107, 114, 115, 117, 122, 137, 143, 145, 146, 170, 173, 175, 176, 183, 186, 192, 193, 194, 195, 200, 201, 203, 207, 213, 218, 221, 222, 224, 226, 227, 234, 240, 242, 256, 267, 273, 277, 284, 289, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 306, 310, 311, 313, 315, 316, 318, 320, 321, 337, 338, 340, 342, 359, 377, 399, 401, 402, 408, 410, 413, 430, 431, 445, 448, 451, 459, 460, 471, 473, 481, 489, 490, 503, 506, 521, 528, 535, 547, 608, 646, 647, 648, 651, 663, 666, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 733, 734, 735, 736, 740, 742, 751, 752, 753, 757, 758, 761, 763, 764, 766, 771, 774, 778, 786, 787, 796, 799, 803, 804, 808], "thei": [32, 43, 45, 72, 77, 80, 81, 82, 83, 90, 93, 99, 100, 105, 107, 119, 126, 158, 165, 166, 180, 186, 219, 220, 221, 224, 225, 240, 242, 243, 244, 245, 246, 255, 256, 260, 287, 289, 293, 318, 322, 324, 349, 379, 380, 399, 408, 410, 413, 421, 430, 435, 460, 507, 521, 522, 535, 536, 537, 602, 605, 606, 607, 632, 633, 642, 653, 654, 659, 663, 664, 665, 666, 669, 679, 688, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 731, 750, 755, 758, 759, 761, 765, 766, 767, 775, 780, 782, 786, 787, 788, 791, 795, 796, 798, 799, 803, 804], "abstract": [32, 38, 43, 45, 93, 94, 98, 99, 107, 173, 195, 203, 225, 242, 279, 284, 285, 289, 303, 305, 321, 355, 395, 402, 408, 411, 434, 435, 448, 460, 487, 517, 528, 535, 536, 537, 632, 637, 659, 670, 695, 736, 754, 766, 770, 775, 778, 803], "primari": [33, 34, 35, 36, 37, 45, 90, 181, 445, 510, 516, 528, 752, 759, 796], "functor": [33, 34, 35, 36, 37, 45], "constraint": [33, 34, 35, 36, 37, 45, 243, 248, 252, 256, 257, 261, 352, 381, 382, 394, 455, 537, 642], "case": [33, 34, 35, 36, 37, 45, 80, 83, 86, 90, 93, 99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 179, 186, 210, 213, 218, 221, 226, 227, 237, 238, 243, 244, 256, 257, 261, 264, 289, 290, 293, 299, 301, 304, 310, 318, 324, 326, 348, 356, 357, 385, 396, 404, 405, 409, 410, 412, 431, 436, 440, 445, 474, 479, 496, 504, 505, 509, 511, 512, 513, 517, 521, 524, 528, 550, 585, 586, 602, 603, 605, 606, 634, 639, 642, 654, 681, 688, 693, 694, 696, 697, 735, 740, 746, 752, 757, 759, 761, 762, 763, 765, 766, 767, 773, 774, 775, 782, 784, 787, 788, 795, 796, 799, 803, 804], "mere": [38, 45], "defin": [38, 45, 60, 62, 72, 77, 78, 80, 93, 99, 105, 107, 112, 113, 114, 115, 116, 117, 122, 126, 137, 143, 145, 146, 147, 166, 173, 179, 181, 182, 183, 186, 192, 195, 203, 214, 218, 219, 221, 227, 240, 242, 243, 256, 257, 258, 261, 265, 286, 289, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 312, 318, 321, 327, 340, 351, 355, 356, 357, 379, 381, 382, 390, 393, 395, 402, 408, 409, 415, 469, 476, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 528, 529, 535, 585, 602, 604, 617, 637, 639, 647, 677, 693, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 732, 740, 742, 752, 755, 759, 761, 763, 765, 766, 767, 775, 782, 784, 785, 787, 795, 798, 799, 803], "check": [38, 45, 72, 90, 107, 168, 221, 225, 240, 242, 243, 256, 257, 261, 271, 285, 289, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 350, 359, 379, 380, 390, 408, 422, 430, 431, 432, 433, 434, 435, 442, 445, 448, 451, 457, 459, 460, 469, 474, 475, 496, 507, 522, 536, 572, 660, 684, 701, 706, 707, 711, 720, 731, 742, 746, 752, 759, 765, 766, 771, 774, 784, 797, 799, 803], "abl": [38, 45, 225, 479, 484, 491, 500, 510, 519, 528, 731, 739, 795, 799, 803, 805], "result": [38, 43, 45, 61, 63, 72, 76, 99, 107, 126, 128, 186, 189, 193, 202, 214, 218, 221, 222, 225, 242, 243, 244, 245, 246, 254, 255, 256, 267, 271, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 293, 301, 310, 311, 312, 315, 316, 318, 319, 321, 324, 326, 342, 343, 351, 355, 356, 357, 359, 374, 376, 383, 390, 395, 396, 402, 406, 407, 408, 413, 414, 418, 419, 425, 430, 435, 445, 460, 471, 473, 474, 477, 478, 482, 490, 496, 500, 514, 519, 602, 605, 622, 646, 658, 660, 677, 680, 681, 682, 683, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 731, 737, 739, 742, 752, 755, 757, 758, 759, 763, 765, 766, 769, 774, 775, 777, 784, 786, 790, 791, 795, 799, 803, 804], "assumpt": [38, 45, 82, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 521, 632, 659, 739, 774], "made": [38, 45, 72, 99, 107, 116, 125, 126, 149, 163, 177, 186, 201, 205, 206, 216, 227, 240, 243, 244, 245, 246, 289, 357, 396, 474, 480, 488, 493, 622, 632, 646, 659, 694, 701, 759, 767, 796, 799], "direct": [38, 43, 44, 45, 107, 126, 186, 240, 242, 350, 359, 379, 380, 408, 425, 505, 521, 671, 672, 673, 674, 675, 680, 681, 682, 683, 687, 688, 690, 691, 692, 693, 694, 696, 697, 699, 700, 703, 725, 728, 731, 733, 740, 742, 759, 787, 791], "unrestrict": [38, 45, 60, 65], "forward": [38, 44, 45, 107, 120, 175, 182, 194, 207, 222, 225, 359, 505, 521, 686, 689, 759, 766], "cross": [38, 39, 45, 293, 294, 295, 296, 297, 298, 300, 302, 303, 379, 380, 382, 408, 411, 685, 697, 706, 715, 722, 808], "variat": [38, 39, 41, 45, 93, 97, 100, 102, 408, 422, 464, 646, 700, 731, 791], "must": [38, 45, 72, 78, 80, 81, 85, 93, 98, 107, 126, 186, 225, 227, 233, 235, 236, 240, 241, 242, 243, 247, 256, 260, 261, 264, 284, 287, 289, 310, 318, 324, 352, 377, 379, 380, 382, 386, 393, 394, 395, 401, 405, 408, 411, 414, 416, 418, 419, 421, 422, 424, 430, 435, 449, 459, 460, 481, 489, 498, 505, 507, 514, 515, 516, 517, 521, 522, 528, 529, 535, 536, 602, 605, 606, 607, 608, 623, 637, 642, 646, 647, 660, 671, 672, 673, 674, 675, 677, 690, 691, 692, 693, 694, 704, 706, 715, 722, 725, 728, 739, 742, 750, 751, 754, 759, 766, 770, 774, 775, 778, 784, 786, 795, 796, 798, 799], "undirectedbinarycombin": [39, 40, 41, 42, 45], "composit": [39, 43, 45, 107, 174, 291, 751, 764], "harmon": [39, 45, 312, 327, 340, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517], "x": [39, 40, 41, 45, 46, 60, 79, 80, 107, 126, 135, 168, 186, 193, 194, 214, 221, 223, 225, 226, 240, 242, 243, 255, 285, 286, 289, 293, 301, 311, 315, 316, 318, 321, 350, 356, 357, 377, 382, 401, 408, 422, 425, 430, 431, 433, 434, 435, 447, 448, 451, 454, 455, 460, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 523, 561, 608, 620, 621, 633, 641, 644, 645, 657, 659, 685, 706, 714, 721, 724, 731, 751, 754, 755, 761, 763, 764, 765, 766, 767, 769, 770, 774, 775, 778, 781, 782, 784, 786, 788, 789, 790, 795, 799, 802, 806], "y": [39, 40, 41, 45, 46, 80, 107, 126, 168, 181, 186, 221, 226, 242, 243, 286, 341, 350, 382, 408, 422, 425, 430, 431, 433, 435, 448, 451, 460, 561, 657, 750, 751, 755, 759, 761, 763, 764, 765, 766, 769, 770, 774, 778, 781, 782, 786, 788, 789, 790, 799], "And": [39, 40, 41, 45, 241, 293, 646, 681, 759, 786, 798], "substitut": [41, 43, 45, 62, 63, 72, 175, 225, 287, 319, 324, 325, 326, 387, 403, 430, 433, 435, 460, 568, 608, 632, 659, 750, 751], "permut": [41, 43, 45, 320, 340, 447, 790], "xy": [41, 45, 769], "sx": [41, 45, 750], "rais": [42, 43, 44, 45, 72, 81, 99, 107, 143, 173, 200, 224, 225, 234, 240, 242, 243, 244, 245, 256, 257, 261, 287, 289, 290, 293, 299, 301, 304, 312, 317, 340, 408, 409, 410, 412, 415, 423, 430, 431, 433, 435, 436, 438, 440, 451, 459, 460, 485, 493, 535, 536, 537, 587, 602, 604, 625, 651, 652, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 731, 740, 742, 751, 760, 761, 766, 774, 775, 777, 790, 796, 799, 808], "abstractccgcategori": 43, "can_unifi": 43, "unifi": [43, 243, 244, 245, 246, 254, 287, 352, 394, 399, 432, 459, 765, 766, 770, 799], "cannot": [43, 107, 168, 221, 243, 247, 286, 287, 293, 299, 303, 304, 459, 471, 473, 475, 486, 495, 518, 533, 608, 685, 694, 706, 715, 722, 770, 774, 777, 778, 790, 796, 803], "necessari": [43, 80, 107, 135, 137, 146, 194, 195, 203, 227, 242, 293, 379, 380, 381, 382, 430, 433, 435, 460, 608, 610, 616, 628, 632, 642, 654, 659, 681, 746, 759, 807], "is_funct": 43, "is_primit": 43, "is_var": 43, "variabl": [43, 44, 46, 61, 62, 63, 72, 76, 80, 86, 93, 105, 107, 144, 163, 201, 216, 218, 240, 242, 243, 244, 245, 246, 247, 255, 256, 260, 261, 264, 286, 287, 289, 318, 355, 386, 387, 388, 392, 395, 397, 399, 402, 403, 404, 407, 408, 416, 430, 431, 432, 433, 434, 435, 438, 448, 451, 454, 455, 459, 460, 493, 527, 528, 529, 587, 627, 646, 656, 681, 739, 746, 759, 761, 764, 765, 770, 774, 784, 786, 787, 790, 799], "var": [43, 46, 60, 243, 244, 245, 246, 431, 432, 451, 750, 751, 766, 774], "everi": [43, 80, 86, 90, 107, 109, 111, 137, 146, 176, 195, 203, 218, 222, 234, 242, 243, 244, 245, 246, 271, 285, 287, 293, 379, 380, 392, 395, 399, 407, 408, 409, 415, 430, 434, 435, 445, 448, 460, 474, 504, 528, 535, 536, 602, 605, 606, 677, 681, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 731, 754, 758, 759, 760, 763, 764, 765, 766, 771, 774, 785, 790, 798, 799], "occurr": [43, 72, 99, 100, 158, 243, 245, 256, 263, 311, 315, 316, 321, 356, 357, 432, 448, 460, 464, 471, 473, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 530, 602, 603, 605, 606, 630, 657, 660, 699, 700, 706, 707, 708, 709, 710, 711, 712, 713, 719, 758, 759, 765], "ccgvar": [43, 46], "conjunct": [43, 107, 126, 186, 379, 455, 460, 468, 523, 585, 767, 778, 785, 791, 795], "unari": [43, 256, 257, 261, 445, 451, 467, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 752], "prim_onli": 43, "identifi": [43, 60, 62, 63, 65, 72, 79, 89, 94, 96, 98, 100, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 189, 192, 194, 195, 196, 198, 199, 200, 201, 203, 206, 207, 208, 212, 213, 214, 219, 221, 222, 223, 225, 227, 240, 243, 244, 246, 247, 248, 252, 356, 357, 359, 379, 380, 432, 454, 464, 475, 484, 491, 517, 608, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 646, 647, 653, 681, 701, 706, 715, 722, 742, 759, 763, 766, 787, 788, 803, 806], "boolean": [43, 77, 80, 85, 91, 95, 96, 97, 98, 107, 126, 186, 341, 344, 444, 448, 459, 460, 474, 479, 501, 505, 514, 520, 521, 669, 679, 703, 766, 774], "id": [43, 80, 107, 116, 120, 126, 139, 147, 149, 150, 160, 166, 168, 177, 182, 183, 186, 197, 198, 204, 205, 206, 207, 212, 214, 219, 221, 223, 227, 243, 247, 271, 285, 500, 519, 536, 674, 675, 693, 694, 697, 699, 700, 706, 715, 722, 731, 733, 734, 736, 737, 739, 740, 743, 744, 753, 759, 766, 767, 778, 795, 799], "classmethod": [43, 80, 82, 91, 100, 101, 102, 103, 218, 256, 257, 258, 261, 290, 311, 315, 316, 321, 352, 394, 415, 430, 433, 434, 435, 440, 448, 451, 459, 460, 497, 498, 499, 504, 505, 508, 509, 510, 515, 516, 518, 521, 524, 528, 535, 536, 537, 550, 553, 562, 587, 669, 679, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 723, 761, 799], "new_id": 43, "method": [43, 60, 61, 62, 65, 72, 76, 80, 81, 86, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 178, 179, 183, 184, 185, 186, 189, 190, 193, 194, 196, 197, 198, 199, 200, 201, 207, 212, 218, 219, 221, 222, 223, 225, 226, 240, 242, 243, 244, 245, 246, 270, 271, 273, 274, 277, 278, 279, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 314, 321, 324, 349, 352, 355, 376, 379, 380, 381, 382, 383, 386, 387, 388, 390, 391, 394, 395, 402, 403, 404, 408, 409, 410, 412, 421, 430, 431, 432, 436, 440, 448, 451, 459, 460, 471, 473, 474, 479, 481, 489, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 520, 521, 522, 527, 528, 533, 535, 537, 553, 562, 573, 593, 594, 595, 596, 597, 598, 601, 602, 605, 606, 607, 608, 609, 616, 621, 622, 624, 630, 634, 635, 639, 641, 646, 647, 649, 653, 657, 663, 664, 665, 666, 670, 671, 672, 677, 680, 681, 690, 691, 693, 695, 696, 697, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 730, 731, 732, 736, 740, 741, 752, 754, 761, 763, 764, 765, 775, 781, 785, 786, 787, 790, 795, 796, 800, 803, 804, 808], "uniqu": [43, 77, 105, 107, 168, 181, 206, 212, 214, 221, 227, 284, 286, 399, 408, 415, 430, 433, 435, 459, 460, 706, 708, 712, 720, 766, 795], "reset_id": 43, "dir": [43, 350, 359, 390, 761, 787], "can_compos": 43, "can_cross": 43, "is_backward": 43, "is_forward": 43, "is_vari": 43, "restr": 43, "denot": [43, 107, 168, 221, 408, 422, 763, 803], "disallow": [43, 107, 168, 221], "_": [43, 107, 134, 213, 214, 356, 396, 406, 475, 620, 644, 645, 759, 762, 770, 780, 788, 797], "redund": [43, 221, 763, 803], "current": [43, 60, 70, 71, 72, 80, 81, 93, 96, 97, 107, 122, 126, 131, 166, 168, 183, 186, 191, 193, 219, 221, 225, 227, 234, 240, 242, 271, 274, 276, 277, 278, 281, 283, 284, 285, 286, 289, 291, 293, 386, 387, 388, 390, 392, 395, 402, 403, 404, 405, 406, 407, 408, 445, 447, 459, 496, 518, 521, 524, 525, 526, 531, 533, 535, 536, 616, 628, 650, 654, 661, 731, 733, 734, 735, 736, 740, 752, 759, 761, 763, 765, 766, 774, 803], "sub": [43, 72, 107, 126, 186, 351, 358, 398, 464, 517, 687, 688, 753, 762, 788], "functionalcategori": 43, "togeth": [43, 107, 126, 186, 205, 218, 306, 352, 394, 602, 620, 644, 758, 759, 767, 774, 785, 798, 803], "re": [43, 60, 72, 80, 90, 107, 108, 116, 119, 120, 124, 125, 144, 147, 149, 158, 159, 172, 177, 180, 182, 185, 201, 204, 205, 213, 218, 224, 225, 227, 242, 243, 247, 249, 274, 276, 278, 281, 283, 284, 287, 293, 445, 475, 479, 505, 521, 620, 621, 623, 631, 632, 633, 641, 644, 645, 646, 647, 658, 659, 680, 681, 693, 702, 703, 731, 752, 754, 759, 774, 788, 795, 807, 808], "primitivecategori": 43, "morpholog": [43, 107, 128, 174, 189, 221, 351, 393, 476, 484, 487, 491, 497, 528, 706, 714, 794, 808], "subcategori": [43, 759], "fromstr": [44, 46, 72, 225, 243, 247, 256, 257, 258, 261, 289, 379, 380, 430, 433, 434, 435, 440, 448, 451, 459, 460, 608, 668, 669, 679, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 750, 751, 761, 762, 764, 765, 766, 768, 770, 772, 774, 778, 782, 784, 789, 790, 793, 798, 799, 800, 801], "order": [44, 61, 63, 72, 76, 77, 80, 81, 82, 93, 96, 98, 99, 100, 101, 102, 103, 107, 109, 126, 139, 141, 143, 176, 186, 197, 198, 200, 206, 218, 221, 225, 227, 240, 242, 243, 244, 245, 247, 255, 256, 266, 279, 285, 287, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 317, 318, 319, 321, 324, 325, 326, 336, 340, 346, 349, 355, 374, 376, 379, 383, 391, 392, 395, 402, 407, 408, 409, 410, 412, 415, 416, 429, 431, 432, 436, 438, 440, 445, 451, 454, 455, 460, 462, 464, 469, 477, 480, 488, 498, 499, 505, 510, 514, 515, 516, 518, 521, 528, 533, 602, 606, 639, 663, 671, 672, 676, 677, 679, 680, 681, 682, 683, 687, 688, 690, 691, 693, 695, 699, 700, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 722, 725, 728, 734, 740, 742, 752, 759, 761, 763, 764, 765, 766, 774, 778, 780, 785, 786, 790, 791, 793, 795, 799, 805, 808], "standard": [44, 60, 61, 62, 63, 64, 65, 72, 76, 78, 83, 98, 99, 100, 107, 143, 160, 195, 200, 203, 206, 214, 222, 223, 284, 287, 289, 293, 299, 304, 351, 352, 354, 356, 357, 390, 394, 395, 396, 408, 440, 451, 476, 479, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 633, 653, 659, 663, 664, 665, 666, 678, 698, 725, 728, 742, 759, 760, 765, 787, 795, 798, 799], "english": [44, 107, 138, 166, 171, 187, 219, 220, 221, 223, 256, 445, 476, 485, 493, 496, 525, 526, 529, 616, 624, 628, 642, 646, 649, 650, 654, 658, 661, 684, 693, 701, 752, 757, 759, 760, 761, 767, 785, 794, 803], "provid": [44, 89, 99, 100, 101, 102, 103, 105, 107, 126, 137, 139, 143, 146, 173, 183, 186, 195, 197, 200, 203, 205, 206, 212, 214, 222, 225, 227, 242, 243, 244, 245, 246, 268, 277, 289, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 311, 315, 316, 319, 321, 324, 346, 349, 352, 355, 359, 374, 376, 377, 379, 380, 383, 390, 391, 394, 395, 401, 402, 408, 409, 410, 412, 415, 417, 421, 429, 431, 436, 438, 440, 445, 451, 455, 481, 489, 493, 505, 514, 521, 583, 602, 603, 604, 605, 606, 616, 731, 736, 742, 752, 757, 759, 760, 761, 766, 767, 774, 780, 787, 788, 790, 798, 799, 806, 808], "defaultruleset": [44, 750, 751], "ccgchartpars": [44, 750, 751], "ruleset": 44, "split": [44, 60, 63, 72, 83, 86, 107, 119, 122, 125, 144, 159, 180, 183, 195, 201, 203, 213, 214, 218, 293, 312, 318, 349, 356, 357, 359, 377, 378, 379, 381, 382, 396, 401, 405, 460, 468, 474, 483, 492, 504, 507, 509, 511, 522, 524, 527, 528, 529, 616, 619, 620, 623, 626, 627, 629, 632, 633, 635, 637, 644, 646, 647, 650, 653, 656, 659, 660, 661, 681, 682, 683, 685, 686, 687, 688, 689, 703, 742, 748, 750, 751, 752, 754, 759, 763, 764, 765, 769, 771, 777, 780, 784, 785, 787, 788, 791, 793, 796, 800, 805], "while": [44, 61, 76, 80, 293, 301, 311, 315, 316, 321, 356, 379, 385, 396, 404, 445, 471, 473, 479, 506, 514, 521, 739, 750, 752, 757, 759, 766, 767, 774, 780, 788, 795, 799, 803, 808], "produc": [44, 73, 76, 80, 93, 95, 99, 107, 168, 221, 243, 244, 245, 246, 256, 306, 310, 318, 351, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 397, 399, 402, 403, 404, 406, 407, 408, 409, 415, 432, 455, 477, 500, 510, 514, 516, 519, 528, 533, 602, 605, 606, 616, 622, 646, 657, 685, 686, 689, 692, 693, 694, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 739, 759, 766, 776, 788, 796, 798, 799, 803], "veri": [44, 58, 60, 80, 107, 165, 218, 220, 285, 293, 299, 304, 390, 475, 479, 537, 681, 755, 757, 759, 765, 766, 771, 781, 785, 791, 795, 798, 803, 806], "enlighten": [44, 58], "particularli": [44, 99, 107, 126, 186, 475, 810], "better": [44, 58, 84, 107, 122, 183, 346, 479, 500, 514, 519, 537, 602, 605, 606, 607, 775, 794, 795, 808], "printccgderiv": [44, 750, 751], "extract": [44, 84, 86, 90, 107, 110, 165, 175, 187, 210, 220, 227, 353, 354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 390, 395, 397, 445, 455, 464, 469, 471, 473, 474, 480, 488, 501, 511, 520, 527, 535, 537, 625, 651, 652, 677, 682, 683, 687, 688, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 737, 742, 750, 751, 752, 769, 774, 785, 786], "should": [44, 60, 61, 62, 63, 69, 72, 73, 76, 77, 80, 81, 82, 84, 85, 86, 88, 90, 95, 96, 97, 98, 99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 212, 213, 214, 218, 219, 221, 222, 223, 225, 227, 234, 237, 238, 240, 241, 242, 243, 245, 247, 256, 267, 270, 272, 277, 279, 284, 285, 287, 289, 293, 303, 307, 310, 318, 321, 342, 343, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 396, 397, 399, 401, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 432, 435, 438, 445, 448, 451, 454, 459, 460, 478, 479, 482, 483, 484, 485, 487, 490, 491, 492, 493, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 515, 516, 518, 520, 521, 522, 528, 533, 535, 537, 567, 587, 602, 605, 608, 619, 620, 622, 623, 625, 627, 634, 635, 639, 644, 646, 647, 651, 653, 654, 656, 657, 658, 668, 670, 671, 672, 673, 677, 679, 681, 682, 683, 687, 688, 690, 691, 692, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 722, 723, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 746, 750, 751, 755, 757, 758, 759, 761, 765, 766, 773, 774, 775, 776, 777, 780, 786, 796, 797, 799, 802, 803, 805], "nice": [44, 226, 293, 536], "far": [44, 211, 293, 387, 388, 403, 404, 500, 519, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 759], "clearli": [44, 107, 126, 186, 482, 490, 608, 750, 767, 784], "backwardtyperaiserul": 44, "abstractchartrul": [44, 395, 402], "numedg": 44, "2": [44, 62, 63, 72, 80, 93, 95, 96, 99, 100, 101, 107, 126, 135, 139, 149, 164, 166, 168, 181, 182, 186, 189, 192, 194, 197, 199, 205, 206, 208, 210, 214, 217, 218, 219, 221, 223, 225, 226, 242, 243, 244, 263, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308, 318, 321, 324, 326, 329, 333, 334, 341, 346, 348, 355, 356, 357, 358, 359, 374, 376, 377, 379, 383, 384, 385, 387, 388, 390, 391, 392, 395, 396, 397, 398, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 431, 436, 440, 445, 451, 474, 475, 480, 481, 488, 489, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 527, 528, 533, 535, 536, 537, 586, 594, 602, 605, 606, 608, 621, 624, 630, 631, 632, 633, 641, 645, 646, 649, 657, 658, 659, 660, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 698, 700, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 722, 725, 727, 728, 730, 731, 741, 742, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 769, 770, 772, 774, 777, 779, 780, 781, 783, 784, 785, 786, 787, 789, 790, 795, 796, 797, 798, 799, 800, 801, 802, 806, 808], "left_edg": [44, 395, 399, 402], "right_edg": [44, 395, 399, 402], "licens": [44, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 199, 210, 221, 226, 227, 395, 397, 399, 402, 808], "resum": [44, 386, 395, 397, 399, 402], "either": [44, 78, 85, 99, 107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 158, 162, 165, 166, 167, 169, 170, 171, 172, 173, 175, 178, 179, 180, 183, 184, 185, 186, 188, 189, 193, 195, 196, 197, 198, 199, 200, 203, 207, 208, 212, 213, 218, 219, 221, 222, 223, 227, 240, 242, 243, 244, 245, 246, 256, 257, 261, 266, 267, 275, 276, 284, 289, 327, 340, 395, 397, 399, 402, 409, 410, 412, 431, 436, 440, 455, 482, 490, 501, 506, 517, 520, 521, 537, 542, 608, 622, 623, 625, 646, 647, 651, 669, 683, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728, 731, 757, 759, 761, 766, 767, 774, 775, 791, 801], "yield": [44, 80, 99, 181, 337, 338, 342, 356, 357, 386, 395, 397, 399, 402, 406, 408, 424, 433, 435, 460, 500, 519, 521, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 646, 659, 742, 768, 787], "exist": [44, 93, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 199, 219, 221, 225, 227, 242, 243, 244, 255, 286, 288, 289, 314, 356, 357, 359, 385, 395, 396, 397, 399, 402, 404, 405, 408, 421, 432, 436, 448, 451, 455, 458, 459, 460, 464, 478, 482, 490, 569, 692, 706, 707, 708, 709, 710, 711, 712, 713, 714, 745, 746, 751, 759, 761, 763, 764, 765, 770, 771, 774, 778, 782, 790, 797, 799, 803, 808], "pass": [44, 81, 90, 107, 112, 114, 115, 116, 117, 126, 145, 147, 176, 177, 179, 186, 192, 201, 204, 213, 221, 226, 241, 284, 289, 290, 293, 301, 349, 379, 380, 395, 397, 399, 402, 405, 408, 409, 410, 415, 430, 431, 433, 434, 435, 448, 451, 460, 467, 471, 473, 482, 490, 506, 507, 521, 522, 547, 586, 602, 607, 608, 630, 646, 657, 663, 666, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 722, 725, 728, 731, 736, 743, 744, 758, 759, 764, 766, 767, 773, 774, 775, 790, 799, 803, 804, 808], "binarycombinatorrul": 44, "ccgchart": 44, "ccgedg": 44, "ccgleafedg": 44, "forwardtyperaiserul": 44, "compute_semant": 44, "printccgtre": 44, "lwidth": 44, "undirectedcomposit": 45, "undirectedfunctionappl": 45, "undirectedsubstitut": 45, "undirectedtyperais": 45, "backwardbxconstraint": 45, "backwardonli": 45, "backwardsxconstraint": 45, "backwardtconstraint": 45, "bothbackward": 45, "bothforward": 45, "crosseddir": 45, "forwardonli": 45, "forwardsconstraint": 45, "forwardtconstraint": 45, "innermostfunct": 45, "ccglexicon": 46, "semant": [46, 47, 72, 107, 121, 122, 126, 150, 166, 183, 186, 207, 219, 225, 285, 324, 333, 429, 432, 438, 445, 447, 451, 452, 455, 456, 465, 469, 474, 537, 616, 747, 750, 759, 761, 765, 766, 767, 769, 806, 808, 810], "eat": [46, 107, 147, 181, 204, 289, 501, 520, 690, 750, 751, 759, 765, 775, 803], "svar": 46, "pl": [46, 107, 128, 135, 138, 189, 194, 220, 225, 445, 631, 645, 658, 681, 699, 700, 752, 753, 765, 766, 784, 793], "augparsecategori": 46, "lex_str": 46, "include_semant": [46, 751], "convert": [46, 58, 60, 66, 67, 68, 72, 73, 74, 75, 76, 77, 81, 88, 91, 107, 109, 110, 111, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 183, 184, 185, 186, 189, 190, 193, 194, 195, 196, 198, 199, 203, 207, 212, 219, 221, 222, 223, 225, 226, 240, 241, 243, 247, 256, 257, 261, 277, 279, 285, 289, 291, 293, 298, 305, 359, 378, 379, 406, 430, 432, 433, 435, 445, 448, 451, 455, 460, 461, 462, 463, 464, 467, 468, 469, 472, 474, 475, 507, 522, 523, 602, 607, 663, 664, 665, 666, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 721, 722, 723, 724, 725, 728, 731, 737, 739, 740, 742, 752, 753, 754, 759, 764, 774, 787, 790, 796, 799, 801], "matchbracket": 46, "separ": [46, 77, 89, 107, 108, 121, 122, 125, 126, 134, 159, 165, 172, 173, 174, 175, 183, 186, 192, 194, 201, 205, 207, 213, 218, 220, 222, 225, 256, 257, 261, 289, 359, 405, 474, 514, 529, 530, 608, 613, 620, 621, 622, 623, 630, 633, 641, 644, 646, 647, 651, 653, 654, 657, 659, 660, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 737, 740, 742, 759, 791, 796, 808], "bracket": [46, 72, 73, 76, 107, 109, 111, 175, 176, 207, 223, 242, 243, 247, 293, 299, 304, 455, 559, 602, 605, 606, 607, 706, 707, 708, 709, 710, 711, 712, 713, 714, 721, 724, 754, 766, 799], "rest": [46, 80, 107, 109, 111, 176, 256, 479, 731, 739, 740, 786], "input": [46, 57, 60, 61, 63, 69, 72, 76, 77, 81, 82, 85, 86, 88, 91, 107, 130, 148, 158, 168, 172, 173, 180, 185, 188, 189, 190, 200, 206, 208, 218, 221, 225, 226, 240, 256, 257, 258, 261, 267, 271, 273, 274, 277, 278, 279, 281, 283, 284, 285, 287, 288, 289, 293, 301, 352, 356, 357, 359, 377, 379, 381, 382, 390, 394, 396, 401, 405, 406, 415, 432, 438, 445, 451, 452, 453, 456, 460, 461, 462, 463, 464, 469, 472, 474, 475, 477, 478, 479, 486, 495, 500, 502, 503, 507, 514, 519, 522, 527, 528, 529, 568, 586, 621, 624, 634, 639, 641, 645, 649, 657, 658, 660, 663, 664, 665, 666, 682, 683, 731, 740, 752, 754, 759, 764, 765, 774, 778, 780, 790, 796, 803, 808], "nextcategori": 46, "parseappl": 46, "parseprimitivecategori": 46, "special": [46, 107, 112, 128, 172, 175, 178, 179, 186, 189, 194, 207, 212, 213, 223, 240, 242, 243, 248, 252, 292, 293, 301, 351, 356, 357, 396, 399, 455, 460, 493, 505, 521, 535, 586, 625, 651, 652, 742, 754, 759, 765, 766, 785], "correct": [46, 61, 69, 76, 80, 225, 256, 263, 312, 351, 379, 380, 460, 499, 500, 510, 514, 518, 519, 521, 528, 534, 537, 646, 731, 753, 755, 759, 766, 774, 784, 795, 798, 808], "parsesubscript": 46, "subscr": 46, "subscript": [46, 99, 731], "helper": [47, 90, 194, 243, 247, 292, 294, 295, 296, 297, 298, 300, 302, 303, 306, 695, 759, 784, 799], "comput": [47, 64, 76, 80, 82, 83, 84, 85, 97, 99, 107, 149, 168, 182, 197, 204, 205, 210, 221, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 308, 311, 312, 318, 319, 321, 324, 329, 334, 341, 344, 356, 357, 381, 382, 408, 425, 445, 478, 479, 484, 491, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 535, 536, 554, 646, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 683, 687, 688, 690, 691, 692, 693, 694, 695, 699, 700, 725, 728, 742, 746, 752, 753, 759, 769, 774, 799, 803, 806, 808], "compute_composition_semant": [47, 751], "compute_function_semant": [47, 751], "compute_substitution_semant": [47, 751], "compute_type_raised_semant": [47, 751], "chatbot": [48, 51, 57, 58], "These": [48, 72, 77, 80, 93, 105, 107, 122, 126, 132, 137, 138, 146, 173, 175, 183, 186, 193, 195, 203, 206, 220, 221, 225, 227, 240, 242, 293, 299, 304, 319, 324, 325, 379, 380, 393, 408, 410, 416, 421, 445, 485, 493, 499, 505, 506, 518, 521, 538, 616, 646, 653, 667, 739, 752, 754, 759, 766, 767, 780, 799, 803, 807], "pattern": [48, 57, 63, 72, 107, 108, 116, 119, 120, 124, 125, 126, 143, 144, 147, 149, 159, 172, 173, 177, 180, 182, 185, 186, 200, 201, 204, 205, 213, 218, 347, 453, 460, 464, 480, 488, 585, 602, 605, 606, 607, 608, 611, 612, 623, 630, 634, 639, 647, 648, 657, 706, 707, 708, 709, 710, 711, 712, 713, 714, 754, 759, 767, 788, 795, 796, 808], "respond": [48, 55, 57, 58], "work": [48, 60, 85, 107, 120, 128, 135, 163, 168, 182, 189, 194, 216, 221, 225, 226, 227, 256, 257, 261, 277, 289, 293, 303, 307, 318, 408, 422, 447, 479, 514, 569, 608, 609, 622, 646, 669, 679, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 742, 759, 760, 761, 765, 766, 767, 775, 777, 780, 785, 787, 790, 795, 796, 797, 798, 799, 800, 806, 807, 808], "idl": [48, 480, 488, 742], "gui": [48, 759, 808], "eliza_chat": 49, "tongu": 51, "cheek": 51, "averag": [51, 80, 93, 96, 310, 318, 332, 334, 340, 341, 408, 411, 413, 414, 416, 418, 419, 420, 421, 423, 424, 509, 524, 657, 681, 683, 688, 693, 695, 700, 703], "teen": [51, 356, 396], "junki": 51, "frequent": [51, 293, 301, 312, 408, 415, 474, 496, 508, 528, 602, 605, 606, 646, 785, 810], "yahoomesseng": 51, "msnm": 51, "spell": 51, "mistak": 51, "flaw": 51, "intent": [51, 763], "iesha_chat": 51, "rude_chat": 53, "tsu": 55, "bot": 55, "queri": [55, 242, 445, 464, 602, 603, 706, 711, 712, 720, 739, 740, 759, 788], "sun": 55, "sai": [55, 83, 107, 126, 186, 293, 397, 406, 430, 433, 434, 435, 448, 460, 481, 489, 759, 763, 767, 791, 803], "quot": [55, 107, 128, 189, 243, 247, 289, 460, 464, 585, 633, 659, 660, 706, 707, 708, 709, 710, 711, 712, 713, 714, 765, 766, 775, 778, 785, 796], "art": [55, 98, 107, 126, 186, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 767, 785, 788, 789, 799], "war": [55, 357, 396, 673, 674, 675, 692, 693, 694], "lionel": 55, "gile": 55, "1910": 55, "host": [55, 225, 482, 490, 808], "gutenberg": [55, 77, 602, 605, 606, 758, 759], "project": [55, 89, 107, 166, 181, 219, 379, 380, 381, 382, 390, 514, 539, 722, 727, 745, 759, 760, 767, 806, 808, 810], "suntsu_chat": 55, "pair": [57, 79, 80, 81, 82, 88, 93, 96, 99, 101, 102, 103, 107, 126, 128, 133, 148, 168, 186, 189, 206, 220, 221, 242, 243, 244, 247, 256, 258, 267, 271, 285, 286, 310, 318, 324, 334, 341, 344, 352, 388, 394, 395, 404, 408, 409, 410, 411, 412, 415, 422, 429, 431, 436, 440, 445, 451, 456, 464, 469, 510, 528, 536, 537, 646, 668, 669, 670, 671, 672, 673, 674, 675, 679, 681, 684, 685, 690, 691, 694, 695, 696, 697, 701, 702, 703, 705, 742, 752, 754, 759, 766, 767, 776, 780, 788], "reflect": [57, 62, 63, 65, 379, 380, 474, 657, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 759], "respons": [57, 58, 175, 240, 242, 277, 731, 732, 739, 740, 759, 774, 808, 810], "statement": [57, 79, 175, 287, 507, 522, 752, 759, 774, 808], "question": [57, 58, 211, 227, 311, 315, 316, 321, 432, 739, 758, 788, 808], "i": [57, 58, 60, 61, 63, 72, 76, 77, 78, 80, 81, 82, 83, 84, 86, 90, 91, 99, 107, 120, 126, 138, 149, 158, 159, 168, 172, 178, 180, 182, 185, 186, 188, 189, 197, 200, 202, 203, 205, 206, 208, 213, 214, 218, 220, 221, 222, 223, 225, 227, 240, 241, 243, 244, 245, 246, 254, 255, 256, 257, 261, 263, 285, 289, 310, 311, 312, 315, 316, 317, 318, 319, 321, 329, 340, 341, 356, 357, 377, 392, 395, 396, 397, 399, 401, 405, 406, 407, 408, 431, 438, 440, 447, 451, 455, 472, 474, 475, 477, 478, 481, 489, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 521, 527, 528, 529, 530, 536, 537, 608, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 642, 646, 659, 669, 672, 673, 674, 675, 679, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 701, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 734, 735, 739, 740, 742, 743, 744, 750, 751, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 766, 767, 770, 772, 774, 780, 781, 784, 786, 788, 791, 795, 796, 797, 798, 799, 800, 801, 803, 805, 808, 810], "why": [57, 482, 490, 547, 622, 646, 668, 679, 795], "ever": [57, 653, 758, 774, 784], "dislik": 57, "materi": [57, 60, 72, 84, 647, 785], "parenthes": [57, 60, 72, 243, 247, 602, 607, 621, 623, 625, 632, 633, 641, 647, 651, 652, 659, 758, 765, 766, 796], "dict": [57, 77, 80, 81, 83, 85, 88, 90, 91, 99, 107, 112, 113, 126, 163, 168, 179, 181, 186, 198, 216, 221, 223, 226, 243, 244, 255, 271, 285, 314, 342, 343, 352, 356, 357, 394, 399, 408, 409, 410, 412, 415, 430, 431, 432, 433, 435, 436, 440, 445, 451, 452, 454, 458, 459, 460, 461, 469, 471, 473, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 528, 620, 622, 644, 646, 663, 666, 671, 672, 673, 674, 675, 677, 685, 690, 691, 692, 693, 694, 704, 705, 731, 742, 755, 759, 767, 778, 799], "between": [57, 60, 72, 84, 89, 97, 98, 99, 100, 102, 103, 107, 125, 126, 128, 168, 186, 189, 201, 205, 218, 221, 241, 242, 243, 244, 245, 246, 256, 258, 270, 279, 285, 291, 310, 312, 318, 319, 320, 324, 325, 326, 337, 340, 342, 381, 382, 399, 408, 421, 464, 474, 475, 500, 506, 519, 521, 523, 533, 554, 568, 602, 604, 620, 623, 630, 644, 647, 657, 668, 669, 677, 678, 679, 681, 685, 687, 688, 693, 697, 698, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 722, 723, 725, 728, 731, 734, 740, 759, 765, 766, 767, 769, 784, 788, 798, 799, 803, 805], "second": [57, 60, 80, 81, 88, 99, 107, 126, 131, 141, 182, 186, 191, 198, 214, 225, 277, 278, 286, 287, 293, 319, 430, 433, 434, 445, 448, 459, 460, 464, 468, 514, 535, 568, 586, 628, 647, 654, 701, 736, 752, 759, 761, 763, 770, 774, 778, 799, 808], "person": [57, 68, 76, 203, 227, 356, 357, 396, 453, 464, 529, 757, 761, 763, 765, 766, 767, 773, 774, 787, 788, 803, 804, 805, 806], "convers": [57, 58, 80, 107, 119, 174, 180, 193, 256, 257, 261, 474, 774, 791, 801], "talk": [58, 107, 126, 186, 759, 767, 778, 808], "gem": [58, 791], "wisdom": [58, 347], "sampl": [58, 80, 82, 85, 107, 160, 210, 214, 294, 295, 296, 297, 298, 300, 302, 303, 320, 340, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 490, 505, 521, 583, 602, 605, 606, 670, 671, 672, 673, 674, 675, 693, 694, 695, 732, 739, 740, 747, 808], "zc": 58, "welcom": 58, "my": [58, 83, 225, 356, 357, 377, 395, 396, 397, 399, 401, 405, 631, 632, 633, 658, 659, 746, 759, 762, 772, 784, 799], "me": [58, 181, 356, 357, 396, 616, 619, 621, 626, 632, 633, 635, 636, 641, 647, 653, 655, 659, 660, 757, 759, 784, 785, 793, 796], "good": [58, 90, 93, 107, 109, 176, 356, 357, 396, 408, 422, 501, 509, 514, 520, 524, 602, 605, 606, 607, 616, 619, 621, 626, 632, 633, 635, 636, 641, 642, 645, 646, 647, 653, 654, 655, 658, 659, 660, 677, 692, 693, 694, 704, 759, 786, 791, 793, 795, 796, 800, 803, 806], "afternoon": 58, "ask": [58, 759], "come": [58, 293, 305, 352, 394, 734, 740, 746, 759, 785, 807], "achiev": [58, 479, 624, 649, 770, 803], "suppos": [58, 763, 774], "medit": 58, "mind": [58, 243, 725, 728, 763, 766], "worldli": 58, "troubl": 58, "Will": [58, 293, 299, 304, 808], "answer": [58, 280, 287, 289, 752, 755, 766], "realli": [58, 430, 460, 475, 632, 659, 765, 766, 791, 796], "your": [58, 72, 82, 86, 107, 163, 216, 243, 293, 310, 318, 432, 472, 475, 537, 680, 681, 702, 703, 731, 732, 739, 740, 746, 759, 763, 766, 787, 807, 808], "ye": [58, 206, 509, 524, 621, 632, 633, 641, 659], "than": [58, 60, 61, 63, 72, 76, 79, 80, 82, 84, 93, 96, 99, 100, 101, 102, 103, 107, 116, 120, 126, 143, 158, 168, 173, 177, 182, 186, 200, 218, 221, 225, 240, 242, 243, 293, 301, 311, 313, 321, 337, 342, 348, 351, 354, 359, 385, 392, 395, 399, 404, 407, 408, 412, 415, 422, 445, 459, 460, 474, 479, 488, 496, 497, 499, 500, 501, 503, 508, 518, 519, 520, 525, 528, 533, 536, 537, 602, 605, 606, 607, 622, 627, 646, 654, 656, 663, 664, 665, 666, 670, 671, 672, 673, 674, 675, 681, 692, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 720, 722, 725, 728, 731, 752, 757, 759, 760, 763, 765, 766, 767, 774, 775, 785, 794, 795, 804, 805], "certain": [58, 107, 126, 186, 293, 303, 536, 602, 605, 606, 607, 693, 704, 782], "seek": [58, 218, 225, 356, 396, 521], "truth": [58, 347, 429, 438, 451, 452, 469, 524, 687, 688], "long": [58, 99, 107, 166, 219, 483, 492, 493, 624, 649, 690, 732, 740, 742, 759, 774, 775, 785, 796, 798, 800, 802, 803, 805], "journei": 58, "sure": [58, 72, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 284, 293, 299, 304, 616, 669, 678, 679, 698, 746, 754, 759, 766, 795, 796, 798], "thu": [58, 72, 93, 107, 126, 143, 186, 200, 218, 243, 246, 293, 311, 315, 316, 321, 445, 482, 490, 499, 518, 632, 658, 659, 690, 693, 694, 752, 759, 763, 766, 774, 788, 798, 799, 803], "am": [58, 107, 149, 205, 757, 758, 759], "Of": [58, 181, 486, 495, 758, 763], "cours": [58, 307, 318, 763, 766, 808], "sinc": [58, 84, 85, 99, 107, 116, 125, 177, 201, 256, 260, 359, 386, 395, 399, 430, 445, 459, 460, 482, 490, 608, 609, 642, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 720, 725, 728, 739, 745, 752, 758, 759, 770, 774, 786, 787, 798, 803, 808], "doe": [58, 60, 61, 72, 76, 79, 80, 81, 93, 95, 99, 100, 103, 107, 126, 168, 170, 186, 193, 194, 195, 203, 221, 222, 225, 240, 242, 243, 244, 245, 246, 289, 293, 294, 295, 300, 302, 303, 305, 324, 326, 351, 356, 357, 388, 396, 404, 409, 410, 412, 431, 436, 440, 488, 499, 500, 514, 518, 519, 521, 530, 535, 569, 602, 606, 642, 646, 654, 660, 677, 687, 688, 695, 704, 706, 707, 711, 720, 731, 746, 756, 759, 761, 764, 765, 766, 774, 785, 795, 797, 799, 803], "understand": [58, 293, 482, 490, 622, 646, 785], "mean": [58, 72, 93, 95, 97, 107, 126, 141, 149, 186, 198, 205, 221, 256, 257, 261, 276, 284, 289, 292, 293, 312, 320, 327, 329, 340, 341, 356, 357, 359, 408, 422, 430, 432, 454, 460, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 536, 642, 654, 680, 681, 688, 695, 699, 700, 740, 759, 767, 774, 791, 803], "limit": [58, 60, 107, 163, 168, 216, 221, 320, 340, 377, 401, 474, 501, 514, 520, 533, 645, 704, 725, 728, 731, 733, 734, 735, 736, 739, 740, 759, 797, 803], "usual": [58, 80, 107, 112, 168, 179, 221, 243, 256, 292, 324, 377, 401, 408, 410, 430, 431, 451, 460, 474, 499, 518, 521, 535, 602, 604, 608, 611, 612, 685, 693, 696, 697, 731, 737, 753, 759, 765, 766, 787, 791, 798, 805], "vagu": 58, "zen_chat": 58, "non": [60, 62, 65, 72, 80, 95, 96, 100, 101, 107, 109, 110, 112, 113, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 143, 148, 150, 151, 154, 156, 157, 158, 162, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 199, 200, 201, 207, 208, 212, 213, 218, 219, 221, 222, 223, 224, 235, 241, 242, 243, 255, 256, 257, 260, 261, 289, 292, 356, 359, 379, 380, 396, 402, 406, 429, 430, 433, 435, 438, 440, 449, 451, 460, 521, 535, 537, 602, 607, 623, 625, 632, 636, 645, 646, 647, 651, 652, 659, 663, 664, 665, 666, 693, 694, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 722, 725, 728, 731, 759, 763, 765, 773, 777, 782, 790, 797, 799, 803], "overlap": [60, 62, 63, 65, 72, 84, 243, 535, 680, 681, 683, 699, 700, 706, 715, 722, 743, 744, 766, 805], "linguist": [60, 62, 72, 182, 204, 210, 242, 318, 319, 341, 347, 379, 380, 408, 422, 479, 646, 690, 691, 692, 693, 694, 695, 759, 765, 806, 808], "group": [60, 62, 65, 72, 93, 96, 98, 107, 126, 141, 143, 166, 173, 186, 198, 200, 210, 219, 227, 241, 284, 314, 464, 509, 524, 645, 693, 703, 706, 714, 753, 759, 767, 785, 787, 788, 795, 796, 808], "noun": [60, 62, 63, 65, 72, 107, 126, 137, 146, 168, 169, 186, 193, 195, 202, 203, 221, 348, 486, 495, 496, 500, 501, 510, 519, 520, 523, 525, 528, 693, 754, 757, 759, 767, 770, 784, 785, 795, 799, 800, 803, 804], "phrase": [60, 62, 65, 72, 107, 120, 126, 182, 186, 202, 347, 602, 603, 605, 606, 676, 677, 679, 681, 684, 701, 704, 706, 714, 758, 759, 767, 799, 800], "task": [60, 77, 93, 99, 206, 242, 310, 318, 341, 351, 473, 518, 521, 639, 702, 703, 769, 774, 780, 788, 796], "shallow": [60, 99, 107, 119, 180, 243, 244, 245, 246, 408, 409, 410, 412, 431, 436, 440, 451, 474, 505, 521, 669, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 723, 766, 799], "saw": [60, 385, 395, 397, 399, 404, 530, 706, 707, 708, 709, 710, 711, 712, 713, 714, 765, 768, 772, 784, 785, 799], "big": [60, 455, 496, 525, 608, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 759, 764, 803], "dog": [60, 107, 111, 168, 176, 221, 256, 264, 356, 357, 385, 395, 396, 397, 399, 404, 405, 408, 409, 429, 430, 460, 486, 495, 501, 509, 520, 524, 608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 752, 754, 759, 761, 762, 763, 764, 765, 768, 771, 772, 774, 778, 782, 784, 790, 793, 799, 803], "hill": [60, 93, 97, 670, 671, 672, 673, 674, 675, 692, 693, 694, 695, 784], "np": [60, 62, 63, 66, 67, 72, 73, 76, 86, 107, 111, 176, 202, 256, 260, 357, 385, 396, 404, 405, 496, 511, 516, 527, 528, 608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 724, 750, 751, 752, 754, 759, 761, 763, 765, 766, 768, 769, 772, 778, 784, 785, 787, 790, 793, 796, 799, 800, 801, 808], "back": [60, 99, 175, 194, 207, 218, 291, 408, 417, 503, 528, 686, 689, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 796, 801], "simpli": [60, 80, 83, 175, 194, 207, 222, 227, 241, 256, 273, 274, 293, 294, 295, 296, 297, 298, 300, 302, 303, 318, 356, 374, 396, 399, 402, 408, 412, 421, 474, 496, 505, 521, 632, 659, 671, 672, 683, 687, 688, 690, 691, 725, 728, 759, 761, 766, 798], "chunkparseri": [60, 62, 63, 64, 65, 69, 72, 76], "chunkscor": [60, 62, 63, 65, 72, 76, 754], "chunkstr": [60, 62, 63, 72], "noth": [60, 72, 107, 166, 219, 234, 242, 284, 387, 388, 403, 404, 475, 536, 759, 763, 797], "final": [60, 72, 107, 119, 180, 225, 318, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 392, 395, 397, 407, 460, 493, 500, 519, 646, 658, 663, 664, 665, 666, 675, 680, 681, 694, 731, 739, 757, 759, 795, 797, 808], "verb": [60, 107, 126, 140, 146, 166, 168, 169, 183, 186, 193, 202, 203, 219, 221, 348, 476, 477, 478, 486, 495, 496, 500, 501, 510, 519, 520, 523, 525, 528, 749, 754, 757, 759, 767, 784, 787, 795, 799, 800], "simultan": 60, "updat": [60, 80, 93, 95, 99, 226, 227, 242, 243, 244, 255, 271, 285, 293, 299, 301, 304, 314, 379, 380, 392, 407, 408, 409, 410, 412, 415, 421, 431, 436, 440, 451, 501, 520, 524, 731, 766, 779, 786, 799, 806, 808], "itself": [60, 72, 90, 99, 107, 126, 168, 186, 221, 222, 224, 227, 240, 243, 244, 245, 246, 256, 257, 261, 292, 293, 299, 303, 304, 310, 318, 406, 657, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 725, 728, 759, 766, 775, 788, 795, 803], "subclass": [60, 62, 72, 78, 99, 107, 144, 166, 173, 175, 186, 194, 195, 201, 203, 207, 219, 222, 225, 241, 242, 243, 256, 257, 261, 284, 289, 290, 355, 393, 395, 402, 406, 408, 432, 485, 493, 497, 498, 502, 503, 504, 508, 510, 515, 516, 517, 528, 529, 535, 537, 637, 647, 706, 707, 708, 709, 710, 711, 712, 713, 714, 736, 759, 765, 775, 794, 799], "simpler": [60, 72, 242, 616, 803], "chunkrul": [60, 62, 72, 754], "anyth": [60, 242, 284, 286, 287, 459, 608, 764, 782, 803], "striprul": [60, 62, 72, 754], "strip": [60, 63, 64, 72, 76, 107, 110, 112, 162, 168, 175, 179, 198, 215, 218, 221, 223, 225, 356, 357, 474, 478, 482, 483, 484, 485, 487, 490, 491, 492, 493, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 619, 646, 653, 663, 664, 665, 666, 754, 759, 785, 787], "unchunkrul": [60, 62, 72, 754], "un": [60, 72, 107, 126, 186, 527, 651, 731, 750, 767, 785], "mergerul": [60, 62, 72, 754], "merg": [60, 63, 72, 93, 96, 98, 242, 349, 432, 620, 644, 754, 759, 764, 766, 781], "contigu": [60, 100, 101, 382, 474, 533, 535, 706, 707, 711, 720], "splitrul": [60, 62, 72, 754], "smaller": [60, 61, 76, 107, 163, 216, 218, 349, 681, 759, 803], "expandleftrul": [60, 72, 754], "incorpor": [60, 72, 107, 126, 186, 445, 752, 808], "unchunk": [60, 73, 76, 754], "expandrightrul": [60, 72, 754], "dt": [60, 63, 72, 86, 107, 111, 176, 356, 357, 358, 396, 398, 405, 406, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 522, 524, 525, 527, 529, 536, 608, 736, 754, 759, 762, 763, 784, 787, 795, 799, 801], "jj": [60, 63, 72, 86, 107, 111, 176, 312, 356, 357, 358, 390, 396, 398, 405, 406, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 524, 525, 528, 529, 608, 754, 759, 762, 780, 784, 793, 795, 796, 800, 806], "nn": [60, 63, 72, 86, 107, 111, 176, 312, 356, 357, 358, 390, 396, 398, 405, 406, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 522, 523, 524, 525, 527, 528, 529, 530, 536, 608, 754, 759, 762, 763, 770, 771, 780, 784, 787, 793, 795, 796, 799, 801, 803, 806], "act": [60, 62, 63, 72, 99, 107, 137, 146, 186, 195, 203, 218, 240, 243, 244, 246, 431, 445, 451, 752, 759, 766, 791, 805], "so": [60, 72, 80, 82, 107, 116, 126, 134, 168, 177, 186, 193, 213, 218, 221, 240, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 318, 349, 382, 386, 387, 388, 395, 403, 404, 408, 415, 430, 460, 474, 475, 479, 482, 490, 499, 518, 536, 608, 653, 657, 660, 668, 679, 680, 681, 688, 694, 695, 704, 706, 715, 722, 739, 742, 755, 758, 759, 763, 766, 769, 770, 774, 780, 781, 785, 787, 788, 791, 795, 796, 798, 803, 805, 808], "repetit": [60, 72, 455, 791], "whitespac": [60, 72, 73, 76, 107, 108, 122, 125, 172, 183, 201, 218, 242, 243, 247, 356, 357, 359, 396, 405, 464, 474, 572, 616, 619, 625, 632, 633, 635, 646, 647, 651, 653, 659, 663, 664, 665, 666, 682, 683, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 759, 796, 797, 799], "ignor": [60, 72, 80, 82, 107, 121, 122, 126, 129, 136, 139, 143, 148, 166, 167, 170, 175, 183, 186, 188, 196, 197, 200, 205, 214, 220, 222, 225, 237, 238, 242, 243, 293, 358, 374, 398, 402, 406, 415, 460, 507, 522, 567, 572, 585, 602, 605, 606, 663, 664, 665, 666, 671, 682, 683, 690, 694, 757, 766, 797, 803], "tag_pattern2re_pattern": [60, 72, 754], "preliminari": 60, "test": [60, 72, 86, 178, 187, 190, 202, 214, 225, 242, 256, 258, 262, 271, 277, 285, 289, 293, 311, 312, 315, 316, 317, 320, 321, 322, 324, 327, 332, 335, 336, 339, 340, 356, 357, 390, 396, 406, 469, 471, 473, 474, 481, 489, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 527, 528, 533, 622, 644, 646, 658, 678, 681, 698, 746, 750, 753, 757, 765, 769, 770, 771, 772, 774, 780, 782, 785, 791, 798, 805, 807, 808, 810], "rate": [60, 177, 314, 496, 567, 624, 649, 678, 698, 731, 739, 740, 759, 783, 805], "300": [60, 500, 519, 533, 757, 769, 780, 795, 796, 803, 808], "moder": 60, "complex": [60, 107, 126, 186, 225, 242, 256, 260, 438, 451, 725, 728, 754, 765, 767], "problem": [60, 85, 93, 107, 126, 186, 225, 349, 476, 624, 649, 681, 750, 759, 766, 799, 808], "5": [60, 61, 76, 80, 83, 99, 100, 107, 126, 138, 165, 168, 171, 186, 193, 199, 205, 206, 210, 214, 220, 221, 223, 227, 240, 288, 293, 311, 312, 315, 316, 318, 321, 324, 326, 327, 329, 340, 341, 347, 356, 357, 358, 379, 380, 390, 395, 396, 397, 398, 406, 408, 409, 414, 415, 422, 464, 475, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 521, 524, 527, 597, 616, 621, 631, 633, 641, 646, 658, 659, 660, 668, 669, 671, 672, 673, 674, 675, 677, 679, 680, 681, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 739, 742, 751, 753, 754, 755, 757, 759, 762, 765, 766, 768, 770, 772, 774, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 795, 796, 797, 798, 799, 800, 802, 803, 808], "000": [60, 210, 324, 329, 341, 500, 519, 757, 759, 783, 785, 795, 796, 808], "some": [60, 80, 83, 84, 100, 105, 107, 109, 126, 176, 186, 193, 205, 214, 221, 222, 227, 240, 242, 243, 255, 256, 257, 261, 273, 277, 285, 289, 292, 293, 294, 295, 299, 300, 302, 303, 304, 305, 306, 319, 379, 380, 382, 390, 395, 408, 409, 445, 448, 455, 460, 475, 490, 496, 499, 500, 505, 517, 518, 519, 521, 535, 537, 568, 608, 634, 639, 660, 671, 672, 673, 674, 675, 681, 687, 688, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 732, 733, 734, 735, 736, 739, 740, 750, 754, 757, 758, 759, 761, 763, 765, 767, 768, 769, 770, 774, 775, 780, 784, 785, 787, 788, 789, 793, 795, 796, 798, 799, 801, 803, 804, 805, 808], "caus": [60, 221, 225, 289, 408, 421, 536, 585, 706, 712, 720, 759, 761, 766, 767, 796, 799], "engin": [60, 478, 806], "exce": [60, 101, 102, 103, 453, 464, 759], "maximum": [60, 61, 63, 72, 76, 80, 86, 93, 95, 97, 107, 168, 202, 221, 225, 273, 274, 289, 293, 350, 355, 374, 376, 379, 380, 383, 391, 400, 402, 406, 408, 414, 415, 416, 418, 419, 420, 424, 481, 489, 501, 506, 514, 520, 521, 533, 602, 605, 606, 670, 671, 672, 673, 674, 675, 677, 681, 682, 683, 687, 688, 694, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 731, 735, 740, 742, 755, 759, 774, 803, 808], "depth": [60, 63, 72, 79, 93, 96, 98, 107, 119, 168, 180, 221, 400, 742, 768, 803], "we": [60, 72, 80, 83, 107, 112, 122, 126, 149, 168, 179, 181, 183, 186, 193, 205, 218, 221, 222, 242, 256, 257, 261, 276, 284, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 318, 348, 356, 357, 359, 396, 408, 409, 422, 429, 438, 445, 447, 451, 455, 471, 472, 473, 474, 475, 479, 496, 505, 514, 521, 539, 608, 616, 620, 624, 632, 644, 649, 659, 660, 681, 686, 687, 688, 689, 694, 696, 697, 725, 728, 731, 742, 749, 750, 752, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 774, 777, 780, 782, 784, 785, 786, 787, 788, 791, 795, 796, 798, 799, 800, 803, 808], "attempt": [60, 225, 242, 243, 244, 245, 246, 274, 276, 284, 287, 289, 350, 352, 385, 394, 404, 408, 459, 460, 627, 656, 660, 706, 712, 720, 731, 742, 746, 759, 765, 774, 795, 799], "minim": [60, 243, 255, 324, 326, 348, 408, 422, 646, 657, 700, 701, 706, 715, 722, 736, 803], "imposs": [60, 766, 799], "avoid": [60, 90, 97, 99, 107, 126, 186, 221, 222, 243, 255, 293, 408, 422, 425, 430, 435, 448, 460, 680, 681, 759, 796, 807, 808], "them": [60, 72, 77, 80, 82, 98, 99, 100, 102, 103, 218, 222, 225, 242, 243, 245, 256, 257, 261, 277, 289, 293, 301, 310, 318, 349, 356, 357, 379, 380, 385, 395, 396, 399, 402, 404, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 447, 455, 464, 497, 528, 602, 605, 606, 607, 616, 619, 621, 626, 630, 632, 633, 635, 636, 641, 647, 653, 655, 657, 659, 660, 668, 679, 681, 694, 697, 701, 706, 707, 708, 709, 710, 711, 712, 713, 719, 725, 728, 736, 737, 739, 746, 751, 755, 757, 758, 759, 760, 763, 764, 766, 771, 774, 775, 785, 793, 795, 796, 798, 803], "therefor": [60, 72, 80, 107, 122, 183, 646, 681, 686, 687, 688, 689, 757, 759, 771, 774, 782, 802], "recommend": [60, 70, 71, 72, 107, 163, 205, 216, 243, 244, 245, 246, 329, 341, 356, 357, 396, 472, 475, 482, 490, 496, 504, 525, 526, 528, 616, 624, 649, 650, 661, 746, 766, 769, 800, 803, 807], "elisp": 60, "color": [60, 234, 240, 241, 242, 655, 706, 715, 722, 731, 757, 759], "shell": 60, "xemac": 60, "c": [60, 80, 86, 93, 96, 99, 107, 114, 126, 131, 138, 176, 186, 191, 193, 220, 223, 225, 227, 256, 257, 261, 265, 271, 285, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 318, 324, 329, 341, 356, 357, 374, 381, 382, 402, 408, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 432, 445, 475, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 523, 533, 535, 536, 537, 620, 625, 629, 644, 645, 651, 652, 653, 669, 679, 685, 686, 689, 696, 697, 703, 706, 715, 722, 725, 728, 742, 746, 752, 754, 755, 759, 764, 765, 766, 767, 770, 774, 775, 777, 778, 780, 781, 782, 784, 785, 786, 789, 795, 796, 799, 803], "defconst": 60, "comint": 60, "font": [60, 107, 164, 217, 240, 242, 706, 715, 722, 784], "lock": [60, 784, 787], "keyword": [60, 61, 76, 107, 120, 143, 173, 182, 200, 224, 240, 242, 284, 311, 315, 316, 321, 406, 408, 410, 547, 663, 666, 731, 735, 739, 740, 759, 761, 784], "face": [60, 107, 139, 197, 759], "name": [60, 68, 69, 70, 71, 72, 76, 77, 79, 80, 83, 84, 86, 90, 94, 105, 107, 109, 110, 111, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 183, 184, 185, 186, 187, 189, 195, 196, 198, 199, 200, 203, 207, 212, 214, 219, 221, 222, 223, 224, 225, 226, 227, 240, 242, 243, 244, 247, 248, 249, 251, 255, 256, 266, 270, 272, 284, 285, 286, 289, 291, 292, 318, 324, 359, 377, 390, 395, 399, 401, 408, 410, 430, 432, 433, 435, 441, 445, 448, 452, 453, 454, 456, 459, 460, 461, 464, 469, 485, 493, 499, 517, 518, 529, 539, 564, 565, 585, 602, 605, 608, 616, 633, 646, 650, 659, 661, 663, 664, 665, 666, 731, 734, 737, 739, 740, 752, 753, 759, 761, 763, 764, 765, 766, 767, 774, 778, 784, 785, 787, 790, 795, 796, 803, 806, 808], "hook": [60, 448, 459, 460, 553, 562, 573, 601, 808], "lambda": [60, 107, 130, 168, 190, 221, 242, 430, 448, 455, 460, 464, 602, 603, 604, 608, 610, 677, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 751, 757, 765, 770, 786, 790, 799, 803, 808], "turn": [60, 63, 72, 107, 115, 117, 119, 125, 128, 132, 134, 137, 144, 145, 146, 157, 159, 161, 164, 180, 183, 189, 192, 193, 195, 201, 203, 212, 213, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 306, 490, 746, 753, 759, 765, 784, 787, 790, 801, 805], "code": [60, 72, 89, 107, 123, 141, 168, 174, 184, 198, 221, 223, 240, 289, 291, 346, 392, 407, 408, 409, 410, 415, 445, 455, 464, 480, 488, 493, 496, 506, 521, 523, 525, 526, 537, 538, 542, 608, 653, 660, 682, 683, 703, 706, 715, 722, 727, 731, 732, 739, 740, 752, 753, 759, 769, 774, 803, 808, 810], "temporari": [60, 218, 390, 533, 759, 769], "buffer": [60, 225, 390, 448, 460, 732, 740, 759], "place": [60, 89, 107, 128, 189, 241, 242, 243, 245, 292, 350, 355, 359, 376, 383, 391, 399, 402, 474, 501, 510, 516, 520, 528, 675, 694, 704, 706, 707, 708, 709, 710, 711, 712, 713, 715, 719, 722, 731, 737, 748, 758, 759, 765, 767, 778, 781, 784, 796, 808], "cursor": [60, 731], "last": [60, 99, 218, 240, 243, 244, 245, 324, 409, 410, 412, 415, 431, 436, 440, 501, 520, 535, 536, 537, 625, 651, 652, 663, 664, 665, 666, 694, 706, 707, 708, 709, 710, 711, 712, 713, 715, 719, 722, 731, 733, 734, 736, 740, 751, 754, 755, 759, 760, 761, 766, 768, 774, 775, 785, 786, 787, 790, 796, 797, 798, 799, 803, 808], "close": [60, 107, 126, 158, 186, 218, 225, 235, 241, 242, 286, 289, 390, 445, 449, 451, 459, 460, 507, 522, 622, 625, 632, 646, 651, 652, 659, 663, 664, 665, 666, 752, 759, 761, 769, 775, 791], "parenthesi": [60, 107, 109, 111, 176, 625, 646, 651, 759], "session": [60, 289, 542, 732, 740, 759, 798], "chang": [60, 86, 95, 221, 242, 289, 293, 301, 319, 324, 386, 387, 388, 395, 403, 404, 481, 482, 488, 489, 490, 500, 506, 514, 519, 521, 536, 537, 538, 667, 677, 704, 746, 754, 766, 774, 795, 804, 808], "exceed": [60, 350], "error": [60, 79, 86, 107, 126, 162, 186, 215, 221, 225, 227, 256, 261, 289, 314, 346, 408, 425, 438, 451, 474, 478, 500, 519, 533, 534, 583, 585, 587, 602, 604, 624, 649, 663, 664, 665, 666, 678, 685, 696, 697, 698, 731, 737, 739, 740, 754, 755, 759, 766, 775, 783, 784, 786, 803, 808], "even": [60, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 243, 293, 301, 379, 380, 533, 739, 759, 765, 766, 803], "pre": [60, 107, 125, 201, 227, 293, 301, 377, 390, 401, 405, 501, 509, 520, 524, 646, 647, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 765, 790, 804, 808], "instead": [60, 62, 63, 65, 80, 90, 99, 107, 110, 112, 116, 125, 128, 173, 175, 177, 179, 189, 201, 225, 289, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 310, 318, 356, 357, 386, 395, 408, 409, 415, 482, 490, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 528, 602, 605, 623, 635, 645, 647, 653, 657, 675, 681, 682, 683, 688, 694, 696, 697, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 722, 727, 728, 753, 759, 761, 766, 795, 799, 800, 803, 808], "But": [60, 107, 159, 213, 218, 221, 243, 393, 508, 528, 624, 649, 758, 759, 761, 766, 775, 786, 791, 803], "includ": [60, 61, 72, 76, 77, 80, 83, 85, 93, 97, 100, 103, 107, 126, 128, 134, 150, 161, 163, 173, 175, 186, 189, 193, 194, 195, 203, 207, 213, 216, 221, 222, 223, 226, 240, 242, 243, 247, 256, 257, 261, 289, 293, 299, 304, 381, 382, 390, 408, 417, 430, 433, 435, 460, 464, 482, 490, 505, 506, 521, 602, 622, 625, 642, 646, 651, 691, 692, 693, 694, 695, 699, 700, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 731, 740, 759, 766, 767, 769, 774, 777, 785, 787, 788, 798, 799, 803, 807, 808], "unicod": [60, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 212, 213, 217, 218, 219, 220, 221, 222, 223, 225, 464, 477, 478, 480, 485, 488, 493, 507, 522, 616, 623, 647, 663, 664, 665, 666, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 759, 761, 796, 808], "advanc": [60, 324, 460, 567, 746], "ones": [60, 83, 214, 376, 402, 518, 692, 780], "leftward": [60, 242, 381, 382], "zero": [60, 72, 78, 80, 99, 107, 142, 168, 195, 199, 203, 218, 221, 241, 242, 310, 318, 359, 395, 402, 408, 409, 413, 415, 423, 455, 460, 514, 535, 536, 537, 671, 672, 677, 680, 681, 690, 691, 692, 693, 695, 696, 697, 704, 706, 711, 720, 759, 761, 762, 769, 778, 780, 786, 803], "assert": [60, 324, 631, 658, 754, 759, 766, 787, 799], "chunk_tag_pattern": [60, 72], "valid": [60, 72, 107, 126, 186, 194, 234, 240, 242, 289, 324, 326, 390, 396, 408, 411, 421, 430, 433, 434, 435, 448, 459, 460, 481, 486, 489, 495, 533, 608, 618, 619, 620, 642, 644, 653, 690, 691, 692, 693, 694, 733, 734, 736, 742, 775, 800, 804], "ne_chunk": [60, 464, 806], "tagged_token": [60, 70, 72, 530, 537], "entiti": [60, 68, 69, 70, 71, 76, 84, 86, 107, 121, 122, 128, 150, 168, 182, 183, 187, 189, 207, 221, 429, 431, 438, 445, 451, 453, 454, 460, 464, 529, 660, 737, 742, 752, 759, 763, 767, 782, 790, 799, 803, 806, 808], "chunker": [60, 62, 63, 64, 65, 69, 70, 71, 72, 76, 746, 780, 808], "ne_chunk_s": 60, "tagged_sent": [60, 71, 530], "output": [61, 62, 63, 72, 76, 80, 81, 88, 91, 93, 97, 107, 126, 186, 221, 243, 255, 273, 289, 293, 312, 319, 324, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 415, 432, 445, 453, 464, 471, 473, 474, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 533, 535, 537, 568, 583, 586, 592, 608, 611, 612, 621, 622, 624, 641, 646, 649, 657, 660, 674, 682, 683, 686, 687, 688, 689, 693, 694, 695, 700, 701, 703, 704, 706, 715, 722, 734, 735, 737, 739, 740, 742, 750, 752, 754, 757, 759, 761, 762, 766, 769, 788, 791, 795, 803], "statist": [61, 76, 184, 314, 320, 324, 340, 341, 381, 382, 499, 500, 514, 518, 519, 533, 646, 658, 688, 690, 691, 692, 693, 694, 695, 699, 700, 704, 785, 795, 798], "precis": [61, 72, 76, 107, 132, 193, 312, 327, 340, 356, 357, 471, 473, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 535, 680, 681, 682, 683, 687, 688, 696, 697, 702, 703, 754, 780, 791, 793, 795, 808], "recal": [61, 72, 76, 312, 327, 340, 356, 357, 471, 473, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 682, 683, 687, 688, 696, 697, 754, 765, 780, 791, 793, 795, 808], "f": [61, 72, 76, 79, 80, 93, 99, 107, 126, 138, 168, 181, 186, 203, 214, 220, 221, 226, 227, 243, 244, 293, 299, 304, 312, 319, 327, 340, 356, 357, 409, 410, 412, 431, 432, 436, 440, 451, 454, 479, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 625, 651, 652, 682, 683, 684, 701, 703, 725, 728, 742, 751, 757, 759, 761, 764, 765, 766, 767, 769, 774, 775, 778, 780, 781, 784, 785, 786, 787, 789, 790, 791, 795, 797, 798, 799, 808], "measur": [61, 68, 72, 76, 89, 97, 100, 101, 102, 103, 311, 312, 313, 315, 316, 321, 324, 327, 333, 340, 356, 357, 358, 398, 453, 464, 471, 473, 474, 479, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 687, 688, 785, 791, 795, 803, 804, 808], "misss": [61, 76], "incorrect": [61, 72, 76, 86, 218, 312, 500, 519, 527, 537, 706, 711, 712, 720, 742, 754, 795, 799, 803], "make": [61, 72, 76, 79, 82, 91, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 192, 194, 195, 196, 198, 199, 203, 207, 212, 214, 219, 221, 222, 223, 225, 241, 242, 243, 244, 245, 246, 273, 277, 284, 286, 289, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 310, 318, 324, 325, 351, 387, 388, 403, 404, 445, 459, 460, 500, 510, 519, 528, 537, 602, 605, 606, 607, 616, 622, 646, 688, 700, 704, 731, 732, 739, 740, 742, 752, 754, 757, 759, 763, 765, 766, 767, 774, 785, 791, 795, 796, 799, 801, 808], "significantli": [61, 76, 93, 95, 99], "easier": [61, 76, 242, 445, 602, 607, 670, 671, 672, 673, 674, 675, 695, 737, 752, 759, 787], "access": [61, 76, 99, 107, 110, 112, 122, 123, 126, 128, 150, 158, 168, 175, 179, 183, 184, 186, 189, 207, 218, 221, 222, 224, 225, 227, 240, 242, 243, 245, 246, 256, 257, 261, 268, 293, 299, 304, 408, 409, 410, 412, 602, 603, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 736, 740, 741, 746, 761, 765, 774, 778, 786, 787, 788, 799, 808], "via": [61, 76, 213, 221, 222, 225, 243, 245, 246, 379, 380, 447, 464, 501, 506, 507, 520, 521, 522, 547, 602, 605, 688, 731, 740, 759, 766, 785, 808], "accessor": [61, 76], "f_measur": [61, 76, 312, 340, 356, 357, 471, 473, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 754, 780, 793], "typic": [61, 62, 65, 72, 76, 77, 78, 80, 81, 99, 107, 126, 168, 172, 186, 213, 221, 225, 242, 243, 256, 260, 264, 289, 351, 352, 356, 379, 380, 385, 393, 394, 395, 396, 404, 408, 409, 419, 478, 497, 505, 508, 521, 528, 535, 602, 605, 625, 651, 668, 679, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 755, 759, 765, 766, 767, 774, 775, 785, 799, 803], "correct_sent": [61, 76], "guess": [61, 69, 76, 80, 107, 126, 186, 510, 524, 528, 741, 797], "823": [61, 76], "max_tp_exampl": [61, 76], "actual": [61, 76, 80, 107, 126, 186, 224, 275, 276, 278, 281, 283, 284, 287, 292, 320, 340, 347, 351, 356, 396, 408, 425, 454, 608, 732, 740, 759, 766, 767, 791, 795, 799], "affect": [61, 76, 242, 777, 796], "member": [61, 76, 80, 81, 88, 107, 166, 219, 293, 408, 416, 431, 445, 451, 464, 731, 752, 759, 787, 788, 803], "numer": [61, 76, 80, 82, 85, 91, 307, 310, 311, 315, 316, 318, 321, 616, 681, 731, 759], "max_fp_exampl": [61, 76], "max_fn_exampl": [61, 76], "neg": [61, 76, 80, 99, 107, 116, 139, 158, 177, 197, 205, 209, 225, 240, 242, 289, 312, 356, 357, 378, 379, 415, 472, 474, 475, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 528, 646, 677, 693, 694, 704, 759, 763, 765, 769, 780, 791, 799], "miss": [61, 72, 76, 99, 107, 126, 186, 318, 751, 754, 795, 798, 799, 808], "chunk_label": [61, 62, 72, 73, 76, 754], "_tp": [61, 76], "_fp": [61, 76], "_fn": [61, 76], "_tp_num": [61, 76], "_fp_num": [61, 76], "_fn_num": [61, 76], "correctli": [61, 76, 225, 312, 408, 411, 414, 416, 418, 419, 479, 585, 587, 746, 759, 791, 795, 799, 800], "anoth": [61, 76, 107, 126, 186, 243, 256, 257, 261, 320, 324, 340, 390, 415, 430, 445, 460, 489, 490, 498, 515, 516, 521, 528, 536, 537, 602, 605, 606, 669, 673, 692, 693, 694, 703, 759, 763, 770, 774, 784, 785, 791, 797, 798, 799, 803], "gold": [61, 62, 63, 64, 65, 76, 90, 99, 203, 206, 356, 357, 471, 473, 479, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 678, 698, 759, 787, 798], "accuraci": [61, 62, 63, 65, 76, 90, 99, 340, 356, 357, 471, 473, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 533, 624, 642, 649, 654, 725, 728, 780, 785, 786, 791, 795, 808], "iob": [61, 66, 67, 69, 74, 75, 76, 107, 121, 122, 183], "conll2000": [61, 76, 759], "floatalpha": [61, 76, 107, 141, 198, 293, 300, 305, 310, 312, 318, 327, 340, 356, 357, 395, 399, 430, 435, 448, 460, 464, 475, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 681, 696, 697, 702, 703, 780, 808], "rel": [61, 76, 100, 107, 137, 146, 168, 173, 195, 203, 218, 221, 225, 240, 293, 312, 314, 359, 390, 432, 436, 442, 445, 451, 454, 458, 499, 518, 533, 535, 537, 660, 693, 696, 697, 706, 708, 712, 720, 759, 762, 763, 783, 785, 787, 788, 799, 804], "weight": [61, 76, 80, 81, 85, 88, 107, 168, 221, 227, 243, 310, 312, 314, 318, 319, 327, 340, 341, 344, 352, 356, 357, 379, 380, 394, 477, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 524, 680, 681, 682, 683, 690, 691, 692, 693, 694, 696, 697, 759, 774, 783], "larger": [61, 76, 86, 218, 379, 380, 392, 407, 408, 422, 521, 759], "bias": [61, 76], "toward": [61, 76, 312, 499, 518, 758], "rang": [61, 76, 77, 80, 107, 168, 221, 243, 245, 342, 343, 395, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 464, 505, 521, 533, 535, 660, 669, 679, 687, 688, 706, 707, 708, 709, 710, 711, 712, 713, 719, 754, 755, 756, 759, 761, 766, 783, 786, 795, 798, 799, 803, 810], "within": [62, 72, 89, 100, 107, 166, 195, 203, 212, 219, 221, 223, 225, 242, 256, 261, 289, 324, 382, 460, 464, 481, 489, 506, 521, 561, 742, 759, 760, 761, 765, 774, 788, 803], "_rule": [62, 72], "_trace": [62, 72, 355, 392, 402, 407], "level": [62, 63, 72, 80, 107, 126, 168, 175, 186, 192, 194, 205, 207, 214, 221, 222, 242, 320, 340, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 397, 399, 402, 403, 404, 406, 407, 475, 500, 519, 533, 608, 616, 654, 668, 679, 680, 681, 682, 683, 687, 688, 696, 697, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 742, 746, 748, 759, 760, 767, 774, 788, 790, 799, 803, 808], "root_label": [62, 63, 66, 67, 68, 72, 73, 76, 107, 122, 183], "short": [62, 72, 107, 166, 194, 206, 219, 285, 291, 480, 488, 518, 681, 701, 725, 728, 731, 759, 784], "describ": [62, 72, 77, 80, 93, 107, 126, 133, 186, 193, 203, 220, 225, 227, 318, 319, 341, 390, 408, 411, 414, 416, 418, 419, 455, 477, 478, 488, 505, 521, 624, 646, 649, 682, 683, 687, 688, 696, 697, 702, 703, 746, 759, 761, 767, 785, 787, 788, 799, 804], "normal": [62, 63, 72, 82, 107, 109, 110, 111, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 159, 162, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 206, 207, 212, 213, 219, 221, 222, 223, 256, 257, 261, 408, 413, 424, 430, 433, 435, 460, 468, 472, 475, 477, 478, 480, 488, 503, 509, 524, 528, 602, 603, 630, 657, 680, 681, 685, 687, 688, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728, 742, 753, 759, 763, 764, 770, 771, 772, 778, 782, 797, 801, 803], "higher": [62, 63, 72, 80, 293, 299, 304, 324, 336, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 397, 399, 402, 403, 404, 406, 407, 670, 671, 672, 673, 674, 675, 677, 680, 681, 695, 704, 778, 805], "verbos": [62, 63, 72, 79, 80, 107, 168, 221, 225, 227, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 293, 299, 304, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 432, 445, 451, 454, 455, 471, 473, 497, 498, 500, 501, 502, 503, 505, 507, 508, 515, 516, 519, 520, 521, 522, 528, 529, 533, 536, 622, 627, 646, 655, 656, 730, 731, 733, 734, 736, 738, 739, 740, 741, 742, 761, 763, 765, 774, 788, 803], "chunk_struct": [62, 63, 72], "further": [62, 63, 72, 292, 379, 382, 438, 445, 451, 482, 490, 514, 616, 642, 646, 681, 702, 703, 752, 758, 759, 769, 795, 796, 808], "overrid": [62, 63, 72, 107, 144, 173, 201, 227, 284, 289, 292, 408, 415, 646, 670, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 759, 761, 786], "wa": [62, 63, 72, 80, 83, 87, 89, 107, 112, 126, 143, 179, 184, 186, 200, 205, 206, 211, 221, 225, 240, 241, 242, 275, 280, 282, 284, 289, 293, 301, 312, 357, 379, 380, 387, 388, 396, 403, 404, 408, 409, 415, 445, 472, 474, 475, 477, 478, 479, 484, 488, 491, 496, 504, 521, 527, 528, 602, 603, 604, 621, 622, 632, 633, 641, 642, 645, 646, 659, 663, 664, 665, 666, 671, 672, 673, 674, 675, 681, 687, 688, 690, 691, 692, 693, 694, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 748, 752, 753, 758, 759, 761, 766, 774, 778, 779, 784, 788, 791, 796, 799, 803, 804, 808], "constructor": [62, 63, 72, 80, 91, 107, 114, 115, 117, 122, 144, 145, 159, 163, 170, 175, 176, 183, 192, 193, 194, 201, 207, 213, 216, 218, 221, 222, 227, 241, 242, 243, 244, 245, 246, 284, 285, 306, 318, 352, 359, 394, 399, 402, 408, 410, 430, 431, 435, 451, 455, 459, 460, 482, 490, 509, 524, 625, 646, 651, 652, 706, 714, 754, 763, 764, 766, 774], "depend": [62, 72, 77, 80, 99, 100, 105, 107, 126, 168, 186, 193, 221, 256, 258, 259, 270, 272, 279, 285, 293, 301, 324, 356, 358, 359, 377, 378, 379, 380, 381, 382, 390, 396, 398, 401, 405, 406, 454, 459, 471, 473, 474, 521, 536, 537, 625, 630, 646, 651, 652, 657, 681, 706, 715, 722, 734, 740, 742, 747, 751, 759, 763, 767, 803, 808], "remov": [62, 63, 65, 72, 98, 99, 101, 102, 103, 107, 125, 201, 225, 234, 241, 242, 243, 244, 245, 256, 257, 261, 271, 272, 285, 342, 343, 359, 379, 384, 390, 403, 409, 410, 412, 415, 430, 431, 432, 433, 435, 436, 440, 451, 460, 472, 474, 475, 476, 477, 478, 479, 480, 481, 484, 487, 488, 489, 491, 537, 567, 632, 634, 639, 646, 659, 663, 675, 694, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 725, 728, 731, 757, 759, 761, 774, 777, 794, 796, 799, 808], "rechunk": [62, 63, 64, 65, 76], "deprec": [62, 63, 65, 87, 225, 289, 310, 318, 356, 357, 482, 490, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 537, 706, 707, 708, 709, 710, 711, 712, 713, 714, 727, 728, 731, 800, 808], "claus": [63, 72, 287, 445, 464, 765, 774, 788, 789], "adject": [63, 72, 107, 126, 168, 186, 221, 478, 486, 495, 500, 510, 519, 523, 528, 693, 767, 795, 803, 808], "vi": [63, 72, 223, 523, 785], "v": [63, 72, 80, 98, 99, 107, 126, 168, 181, 186, 193, 202, 203, 209, 221, 223, 243, 244, 255, 307, 319, 341, 356, 357, 359, 378, 379, 385, 404, 409, 410, 412, 415, 429, 431, 433, 436, 438, 440, 448, 451, 455, 460, 486, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 523, 533, 645, 687, 688, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 752, 753, 754, 757, 759, 761, 765, 766, 767, 770, 772, 777, 778, 781, 784, 785, 787, 788, 790, 792, 793, 795, 797, 799, 800, 803, 805, 808], "det": [63, 72, 193, 312, 356, 385, 396, 404, 405, 496, 501, 520, 523, 525, 750, 752, 753, 757, 759, 761, 763, 765, 768, 772, 778, 780, 784, 785, 790, 793, 799, 800], "adj": [63, 72, 107, 168, 193, 221, 378, 379, 496, 501, 520, 523, 525, 749, 753, 757, 759, 785, 803], "earlier": [63, 72, 93, 96, 293, 299, 304, 387, 388, 403, 404, 445, 500, 519, 752, 763, 765, 774, 785, 788, 795], "introduc": [63, 72, 80, 86, 256, 257, 261, 445, 448, 460, 538, 657, 691, 694, 725, 728, 752, 763, 806], "boundari": [63, 72, 107, 134, 213, 329, 334, 341, 344, 602, 607, 622, 630, 646, 657, 685, 796, 798], "prevent": [63, 72, 80, 107, 168, 221, 240, 256, 274, 276, 278, 281, 283, 284, 287, 474, 731, 759], "later": [63, 72, 93, 96, 206, 292, 499, 518, 657, 786, 797, 805], "sometim": [63, 72, 77, 107, 126, 186, 243, 244, 256, 260, 289, 324, 325, 351, 646, 706, 707, 708, 709, 710, 711, 712, 713, 714, 757, 759, 766, 767, 796], "extent": [63, 72], "As": [63, 72, 107, 128, 189, 289, 291, 293, 324, 379, 380, 445, 505, 521, 681, 690, 752, 759, 763, 766, 774, 775, 795, 799, 803], "look": [63, 72, 85, 99, 107, 112, 126, 179, 186, 195, 203, 225, 290, 293, 296, 297, 301, 305, 497, 498, 508, 515, 516, 528, 533, 535, 602, 603, 634, 639, 670, 671, 672, 673, 674, 675, 677, 694, 695, 704, 754, 757, 758, 759, 763, 765, 766, 774, 785, 788, 798, 803], "cascad": [63, 72, 808], "comment": [63, 72, 83, 107, 109, 111, 176, 214, 218, 319, 406, 533, 585, 759, 774, 777, 808], "_start": [63, 72], "_stage": [63, 72], "stage": [63, 72, 395, 731, 754], "loop": [63, 72, 415, 701, 759, 785, 803], "being": [63, 64, 72, 76, 93, 95, 100, 107, 126, 168, 186, 221, 225, 293, 311, 315, 316, 321, 355, 374, 376, 379, 380, 383, 387, 391, 402, 403, 408, 421, 430, 459, 460, 471, 473, 479, 497, 498, 502, 503, 504, 505, 508, 510, 514, 515, 516, 521, 528, 537, 642, 669, 677, 679, 680, 681, 683, 685, 688, 694, 696, 697, 699, 700, 703, 704, 739, 742, 759, 765, 791, 795, 803, 808], "unlik": [65, 381, 382, 646, 694, 784, 808], "best": [65, 85, 107, 112, 179, 198, 376, 379, 380, 402, 471, 473, 479, 482, 490, 514, 524, 624, 649, 670, 671, 672, 673, 674, 675, 677, 690, 691, 692, 694, 695, 696, 697, 702, 703, 704, 759, 767, 786, 796, 806, 808], "chunk_typ": [66, 67, 68, 76, 107, 121, 122, 183, 185, 511, 527, 759], "pp": [66, 67, 76, 202, 210, 341, 357, 396, 405, 408, 422, 477, 511, 527, 642, 654, 750, 752, 754, 759, 761, 768, 772, 784, 785, 787, 793, 799, 800, 801], "vp": [66, 67, 76, 86, 107, 111, 164, 176, 202, 217, 256, 260, 357, 396, 405, 511, 523, 527, 608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 750, 752, 754, 759, 761, 763, 765, 766, 768, 772, 778, 784, 787, 790, 793, 799, 800, 801], "conll": [66, 67, 74, 75, 76, 105, 107, 121, 122, 359, 377, 401, 406, 464, 759, 808], "2000": [66, 76, 210, 734, 740, 745, 753, 759, 795, 798], "style": [66, 68, 76, 100, 101, 107, 122, 183, 225, 277, 347, 359, 706, 707, 708, 709, 710, 711, 712, 713, 714, 765], "label": [66, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 88, 90, 91, 94, 98, 107, 121, 122, 126, 137, 143, 146, 173, 174, 183, 186, 192, 195, 200, 203, 206, 240, 241, 293, 294, 295, 300, 301, 302, 303, 305, 310, 312, 318, 322, 324, 328, 333, 336, 358, 359, 378, 379, 392, 398, 407, 445, 446, 455, 464, 465, 469, 471, 473, 474, 503, 505, 506, 521, 524, 528, 585, 608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 722, 725, 728, 752, 755, 759, 763, 764, 769, 787, 788, 790, 791, 795, 799, 800, 801, 802, 808], "strict": [67, 76, 107, 162, 215, 225, 625, 651, 652, 663, 664, 665, 666, 808], "format": [67, 68, 72, 74, 75, 76, 80, 81, 91, 105, 107, 112, 131, 144, 160, 168, 173, 179, 181, 191, 193, 201, 202, 206, 214, 221, 225, 256, 257, 261, 273, 274, 276, 277, 278, 284, 289, 293, 359, 377, 401, 406, 431, 445, 451, 500, 516, 519, 528, 533, 536, 624, 649, 660, 663, 664, 665, 666, 669, 677, 679, 686, 689, 701, 704, 706, 715, 722, 730, 731, 733, 734, 736, 737, 739, 740, 741, 752, 753, 759, 761, 762, 763, 769, 774, 778, 783, 791, 803, 808], "organ": [68, 76, 107, 168, 208, 221, 242, 351, 356, 357, 396, 402, 453, 464, 529, 742, 759, 788, 799, 803, 804], "durat": [68, 76, 453, 464, 501, 520], "date": [68, 76, 107, 112, 179, 211, 214, 227, 240, 453, 464, 733, 734, 735, 736, 739, 740, 753, 759, 788], "cardin": [68, 76, 453, 464, 500, 510, 519, 523, 528, 674, 675, 693, 694, 759, 788, 795], "percent": [68, 76, 357, 396, 408, 409, 415, 453, 464, 796], "monei": [68, 76, 453, 464, 647, 743, 744, 751, 759, 805], "ieer": [68, 76, 105, 107, 453, 464, 759, 788], "sever": [68, 76, 107, 126, 186, 202, 227, 350, 351, 356, 357, 396, 477, 478, 482, 490, 496, 639, 647, 681, 685, 706, 714, 742, 755, 759, 760, 765, 767, 784, 799, 803, 808], "nechunkpars": 69, "expect": [69, 72, 77, 93, 95, 99, 107, 126, 148, 173, 186, 206, 227, 289, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 310, 318, 395, 406, 408, 414, 460, 471, 473, 475, 514, 537, 568, 586, 620, 621, 631, 633, 641, 644, 645, 653, 658, 659, 660, 677, 686, 689, 690, 695, 704, 731, 759, 763, 764, 765, 766, 767, 775, 778, 786, 795, 796, 799], "nechunkparsertagg": 69, "classifierbasedtagg": [69, 502, 528], "tagger": [69, 203, 227, 352, 356, 357, 377, 394, 396, 401, 405, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 533, 536, 537, 556, 746, 763, 771, 780, 785, 787, 808], "build_model": [69, 274, 275, 276, 284, 774], "fmt": [69, 536], "cmp_chunk": 69, "load_ace_data": 69, "skip_bnew": 69, "load_ace_fil": 69, "textfil": [69, 107, 138, 220], "postag_tre": 69, "shape": [69, 107, 168, 221, 242, 359, 696, 697, 742, 769], "simplify_po": 69, "substr": [72, 194, 218, 382, 484, 491, 497, 528, 616, 637, 647, 651, 653, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 759, 796], "tag_pattern": [72, 754], "descr": [72, 759, 761, 787], "purpos": [72, 82, 90, 107, 168, 221, 226, 240, 242, 289, 293, 382, 473, 505, 521, 531, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 725, 728, 736, 759, 765, 767, 803], "effect": [72, 80, 390, 477, 478, 646, 706, 715, 722, 739, 788, 795, 805], "chunkrulewithcontext": [72, 754], "context": [72, 77, 80, 100, 175, 184, 194, 207, 208, 222, 225, 233, 236, 256, 257, 260, 261, 263, 264, 288, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 348, 356, 357, 374, 396, 402, 432, 448, 459, 460, 464, 497, 498, 503, 507, 508, 515, 516, 522, 528, 533, 551, 602, 603, 604, 605, 606, 646, 677, 704, 725, 728, 743, 744, 754, 758, 759, 761, 777, 785, 788, 795, 805], "surround": [72, 602, 605, 606, 607, 742], "consum": [72, 685, 759, 803], "onc": [72, 80, 86, 218, 221, 224, 225, 243, 244, 245, 246, 293, 395, 408, 415, 424, 474, 677, 680, 681, 704, 706, 707, 708, 709, 710, 711, 712, 713, 719, 757, 759, 763, 766, 795, 796, 803], "left_context_tag_pattern": 72, "right_context_tag_pattern": 72, "angl": [72, 98, 602, 605, 606, 607], "delimit": [72, 73, 76, 107, 143, 155, 163, 173, 200, 211, 216, 256, 266, 514, 617, 626, 629, 647, 653, 706, 707, 708, 709, 710, 711, 712, 713, 714, 734, 740, 742, 754], "brace": [72, 742, 766], "vbn": [72, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 759, 795, 796, 799, 801], "IN": [72, 243, 245, 312, 356, 357, 358, 390, 396, 398, 405, 406, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 522, 524, 527, 528, 529, 706, 707, 708, 709, 710, 711, 712, 713, 719, 754, 759, 762, 780, 784, 787, 788, 793, 795, 799, 800, 801, 806], "vbd": [72, 107, 111, 176, 356, 357, 390, 405, 408, 410, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 528, 530, 754, 759, 787, 795, 796, 806], "taggedtyp": 72, "xform": [72, 754], "_str": 72, "_piec": 72, "_debug": 72, "debug": [72, 84, 225, 274, 276, 278, 281, 283, 284, 287, 288, 501, 520], "in_chunk_pattern": 72, "in_strip_pattern": [72, 754], "chunk_tag": 72, "chunk_tag_char": 72, "debug_level": [72, 754], "full": [72, 81, 107, 110, 126, 128, 133, 163, 175, 186, 189, 216, 220, 221, 226, 243, 289, 291, 293, 299, 304, 564, 704, 731, 737, 739, 740, 759, 766, 767, 769, 785, 808], "to_chunkstruct": 72, "cursori": 72, "valueerror": [72, 225, 234, 242, 243, 244, 245, 256, 261, 289, 312, 317, 340, 408, 423, 485, 493, 535, 536, 625, 651, 652, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 754, 759, 761, 766, 786, 787, 790, 796, 799], "invalid": [72, 289, 408, 415, 754, 763, 775, 786, 799], "repl": 72, "done": [72, 93, 95, 107, 126, 186, 242, 292, 293, 324, 325, 379, 399, 432, 459, 506, 521, 625, 639, 651, 652, 701, 755, 759, 770, 795], "furthermor": [72, 681], "improp": 72, "nest": [72, 79, 107, 168, 193, 194, 221, 222, 243, 244, 245, 246, 438, 451, 481, 489, 625, 651, 663, 666, 706, 707, 708, 709, 710, 711, 712, 713, 714, 721, 724, 742, 754, 766, 782, 796, 799, 803], "preced": [72, 80, 107, 126, 186, 214, 218, 293, 294, 295, 296, 297, 298, 300, 302, 303, 324, 326, 475, 480, 488, 498, 508, 515, 528, 585, 602, 605, 606, 632, 646, 659, 763, 767], "left_tag_pattern": 72, "right_tag_pattern": 72, "those": [72, 89, 107, 111, 120, 126, 168, 176, 182, 186, 187, 221, 224, 225, 243, 256, 266, 285, 286, 289, 352, 379, 380, 394, 395, 408, 476, 481, 482, 489, 490, 535, 602, 605, 606, 607, 618, 622, 642, 646, 676, 677, 679, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 757, 758, 759, 761, 765, 766, 782, 791, 799, 803], "give": [72, 82, 93, 96, 107, 126, 128, 131, 143, 160, 168, 186, 189, 191, 200, 202, 214, 221, 225, 227, 274, 276, 278, 281, 283, 284, 293, 299, 304, 356, 396, 406, 432, 460, 472, 475, 505, 521, 533, 535, 572, 658, 681, 706, 707, 708, 709, 710, 711, 712, 713, 714, 739, 750, 751, 754, 757, 759, 761, 763, 764, 765, 766, 767, 774, 778, 795, 798, 799, 803, 804, 808], "less": [72, 80, 99, 101, 102, 103, 158, 218, 293, 299, 301, 304, 311, 312, 321, 337, 342, 355, 402, 475, 497, 499, 503, 518, 528, 537, 681, 757, 759], "75": [72, 293, 294, 305, 307, 408, 417, 624, 649, 660, 673, 692, 759, 786, 792, 796, 798], "mismatch": 72, "document": [72, 77, 81, 85, 101, 102, 103, 105, 107, 108, 114, 115, 117, 122, 125, 126, 132, 134, 144, 148, 158, 159, 161, 163, 164, 168, 170, 171, 172, 175, 176, 178, 180, 182, 183, 185, 186, 187, 188, 189, 192, 193, 197, 200, 201, 205, 206, 208, 210, 213, 216, 217, 218, 221, 222, 223, 224, 226, 242, 268, 290, 292, 384, 403, 406, 408, 409, 415, 453, 464, 471, 473, 474, 485, 493, 505, 521, 529, 533, 602, 603, 604, 605, 606, 630, 657, 706, 707, 708, 709, 710, 711, 712, 713, 714, 729, 731, 739, 740, 742, 743, 744, 759, 788, 791, 801, 806, 808], "static": [72, 79, 83, 91, 99, 192, 193, 195, 199, 203, 227, 242, 243, 244, 245, 246, 271, 282, 285, 288, 289, 311, 315, 316, 321, 359, 395, 399, 402, 436, 458, 479, 518, 535, 587, 601, 624, 649, 669, 674, 677, 679, 693, 704, 706, 715, 722, 731], "marker": [72, 107, 128, 189, 514, 663, 664, 665, 666, 742], "import": [72, 77, 81, 83, 85, 86, 93, 99, 105, 107, 116, 120, 126, 130, 135, 138, 139, 147, 149, 163, 165, 168, 174, 177, 182, 186, 190, 194, 197, 204, 205, 209, 216, 218, 220, 221, 242, 243, 247, 255, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 312, 318, 322, 324, 330, 333, 356, 357, 358, 377, 378, 379, 380, 381, 382, 390, 396, 398, 401, 405, 406, 408, 409, 410, 415, 429, 431, 451, 471, 473, 478, 479, 481, 483, 484, 485, 486, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 522, 524, 525, 527, 528, 529, 530, 535, 536, 537, 602, 605, 606, 607, 608, 616, 618, 619, 621, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 639, 641, 642, 644, 645, 646, 647, 651, 653, 654, 655, 656, 657, 659, 660, 668, 669, 677, 678, 679, 682, 683, 698, 704, 706, 714, 715, 722, 727, 728, 731, 742, 746, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 808], "regexppars": 72, "point": [72, 107, 112, 126, 132, 179, 186, 193, 195, 203, 224, 225, 357, 396, 408, 422, 499, 505, 518, 521, 533, 535, 660, 670, 671, 672, 673, 674, 675, 684, 685, 686, 689, 694, 695, 701, 705, 746, 750, 763, 767, 769, 798], "four": [72, 242, 316, 321, 480, 488, 602, 605, 606, 625, 651, 753, 763, 764, 778, 803], "varieti": [72, 105, 107, 141, 198, 227, 242, 349, 379, 408, 409, 602, 605, 731, 740, 759, 780, 785, 788, 799, 803], "demo_ev": 72, "assum": [72, 82, 83, 91, 107, 108, 144, 159, 172, 194, 201, 213, 216, 225, 243, 255, 284, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 359, 379, 380, 382, 395, 399, 408, 422, 424, 429, 438, 445, 451, 471, 473, 521, 621, 625, 641, 642, 651, 652, 670, 681, 692, 693, 694, 695, 701, 736, 746, 752, 759, 763, 765, 766, 788, 807], "per": [72, 85, 107, 119, 126, 129, 137, 146, 167, 168, 180, 186, 188, 195, 203, 214, 218, 220, 221, 406, 527, 533, 658, 687, 688, 697, 731, 737, 759, 765, 767, 785, 787, 788, 793], "report": [72, 202, 271, 285, 348, 474, 500, 519, 669, 682, 683, 731, 759, 796, 808], "10": [72, 79, 80, 82, 107, 126, 138, 139, 166, 186, 197, 204, 210, 214, 219, 220, 227, 241, 288, 289, 324, 330, 356, 357, 359, 379, 380, 396, 408, 410, 415, 448, 453, 464, 474, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 521, 592, 627, 630, 645, 656, 657, 660, 668, 669, 679, 685, 686, 689, 701, 703, 722, 727, 731, 739, 752, 753, 754, 756, 757, 759, 761, 762, 768, 769, 774, 777, 780, 781, 785, 786, 787, 788, 789, 795, 796, 798, 799, 800, 803, 805, 807, 808], "design": [72, 107, 128, 135, 189, 194, 205, 210, 639, 646, 687, 688, 796], "extra": [72, 80, 107, 126, 186, 289, 355, 374, 376, 383, 391, 402, 408, 410, 681, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 759, 775, 794, 797, 808], "paren": [72, 459, 460, 625, 651, 706, 707, 708, 709, 710, 711, 712, 713, 714, 759], "around": [72, 85, 99, 107, 126, 148, 186, 206, 214, 242, 289, 378, 379, 471, 473, 602, 604, 605, 759, 763, 767, 791, 796], "scope": [72, 447, 474, 763], "sep": [73, 76, 107, 108, 159, 172, 213, 530, 660, 759], "source_tagset": [73, 76, 180], "target_tagset": [73, 76, 180], "mark": [73, 76, 181, 193, 218, 234, 242, 243, 247, 289, 290, 293, 301, 329, 334, 341, 344, 474, 514, 564, 602, 607, 620, 625, 630, 644, 646, 651, 652, 657, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 754, 766, 788, 796, 808], "squar": [73, 76, 85, 243, 247, 293, 299, 304, 311, 315, 316, 321, 408, 422, 757, 766], "slash": [73, 76, 175, 194, 207, 222, 225, 243, 247, 248, 249, 251, 631, 658, 766, 784], "assign": [73, 76, 79, 81, 82, 83, 93, 94, 96, 98, 107, 128, 181, 189, 209, 243, 244, 245, 246, 253, 255, 285, 310, 318, 324, 325, 333, 359, 378, 379, 380, 408, 413, 423, 429, 438, 445, 451, 452, 469, 496, 497, 499, 504, 510, 514, 516, 517, 518, 521, 528, 628, 630, 654, 657, 682, 683, 696, 697, 752, 753, 757, 759, 760, 763, 765, 766, 774, 790, 799], "t": [74, 75, 76, 80, 107, 126, 181, 186, 205, 206, 218, 223, 225, 227, 241, 256, 257, 261, 286, 289, 292, 293, 311, 312, 315, 316, 318, 319, 321, 324, 341, 352, 356, 357, 359, 382, 392, 394, 405, 407, 408, 424, 433, 435, 438, 445, 451, 460, 474, 475, 479, 481, 489, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 521, 525, 533, 538, 585, 616, 621, 628, 629, 631, 632, 633, 641, 653, 654, 657, 658, 659, 660, 671, 672, 681, 683, 684, 688, 690, 691, 692, 693, 694, 700, 701, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 722, 727, 731, 750, 751, 752, 754, 755, 757, 760, 762, 763, 765, 766, 769, 774, 775, 777, 778, 780, 781, 782, 784, 785, 786, 790, 791, 793, 795, 796, 797, 798, 799, 803, 806], "multilin": [74, 76, 107, 108, 116, 119, 120, 124, 125, 144, 147, 149, 159, 172, 177, 180, 182, 185, 201, 204, 205, 213, 623, 646, 647, 797], "conllstr2tre": 76, "conlltags2tre": 76, "ieerstr2tre": 76, "tagstr2tre": [76, 107, 119, 180, 754], "tree2conllstr": 76, "tree2conlltag": 76, "joint": [77, 81, 505, 506, 521], "health": [77, 755], "sport": [77, 83, 755], "wide": [77, 197, 204, 227, 432, 624, 649, 759, 780], "classif": [77, 78, 80, 81, 83, 84, 85, 87, 88, 99, 205, 206, 211, 378, 379, 471, 473, 474, 755, 806, 808, 810], "topic": [77, 83, 221, 630, 657, 731, 759, 806, 808], "ambigu": [77, 208, 285, 351, 447, 476, 488, 743, 744, 759, 763, 784, 805], "sens": [77, 80, 107, 126, 137, 146, 168, 186, 195, 203, 208, 221, 284, 293, 310, 318, 324, 325, 382, 432, 476, 517, 688, 743, 744, 759, 763, 767, 787, 803, 808], "intend": [77, 107, 112, 179, 242, 285, 432, 445, 448, 459, 460, 538, 602, 605, 736, 759, 761, 763, 766, 785, 790, 795], "acoust": [77, 759], "signal": [77, 206, 225, 657, 791], "phonem": [77, 181, 214, 628, 642, 654, 759], "author": [77, 107, 114, 175, 176, 177, 197, 202, 227, 291, 292, 493, 731, 742, 767], "appropri": [77, 78, 79, 80, 82, 91, 95, 96, 97, 98, 100, 107, 126, 175, 186, 194, 207, 218, 222, 225, 242, 408, 409, 448, 460, 482, 490, 497, 498, 499, 502, 503, 504, 505, 508, 510, 515, 516, 517, 518, 521, 528, 529, 602, 605, 685, 705, 736, 746, 759, 764, 766, 767, 774, 791], "examin": [77, 518, 759, 785, 799], "chosen": [77, 80, 93, 95, 97, 227, 696, 697, 700], "aspect": [77, 203, 205, 242, 478, 759, 787], "relev": [77, 107, 163, 216, 319, 438, 445, 451, 475, 500, 519, 731, 736, 752, 790, 795], "decis": [77, 79, 85, 324, 622, 646, 725, 728, 755, 759, 766, 808], "might": [77, 80, 224, 225, 356, 357, 386, 395, 396, 399, 406, 669, 670, 671, 672, 673, 674, 675, 679, 694, 695, 750, 758, 763, 766, 769, 788, 807], "often": [77, 93, 97, 100, 101, 102, 103, 242, 256, 293, 312, 318, 354, 359, 385, 395, 404, 408, 409, 415, 499, 518, 521, 533, 602, 604, 646, 757, 758, 759, 766, 795, 798], "occur": [77, 80, 84, 93, 97, 107, 168, 221, 234, 242, 289, 293, 301, 312, 348, 395, 408, 409, 415, 416, 424, 464, 478, 508, 528, 530, 602, 603, 604, 625, 646, 651, 652, 654, 690, 706, 707, 708, 709, 710, 711, 719, 720, 743, 744, 757, 797, 799, 803, 805], "dictionari": [77, 79, 80, 81, 82, 86, 88, 99, 107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 143, 148, 150, 151, 154, 156, 157, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 178, 179, 181, 183, 184, 185, 186, 187, 189, 196, 198, 199, 200, 207, 212, 214, 216, 219, 221, 222, 223, 225, 226, 227, 242, 243, 244, 246, 247, 284, 286, 287, 291, 293, 299, 301, 304, 314, 352, 356, 357, 379, 380, 394, 395, 399, 408, 409, 410, 412, 413, 415, 421, 431, 436, 440, 445, 446, 451, 459, 464, 466, 471, 472, 473, 474, 475, 477, 478, 480, 488, 493, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 523, 528, 602, 604, 608, 646, 660, 685, 705, 706, 715, 722, 742, 743, 744, 752, 759, 760, 761, 765, 780, 788, 797, 803, 808], "prevword": [77, 80], "detector": [77, 502, 503, 528, 622, 646, 808], "extractor": [77, 471, 473, 474, 762], "store": [77, 90, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 186, 200, 218, 223, 224, 225, 274, 275, 276, 278, 281, 283, 284, 285, 286, 287, 293, 299, 301, 304, 314, 352, 390, 394, 399, 406, 408, 421, 445, 447, 464, 471, 473, 474, 608, 620, 644, 646, 676, 679, 691, 692, 693, 694, 695, 733, 734, 736, 740, 752, 758, 759, 761, 763, 774, 788, 790, 799, 808], "def": [77, 83, 99, 211, 218, 226, 243, 247, 289, 290, 379, 380, 408, 464, 755, 759, 761, 762, 764, 766, 775, 784, 785, 786, 796, 799, 803], "document_featur": 77, "w": [77, 83, 89, 105, 107, 110, 125, 144, 147, 149, 175, 181, 193, 201, 204, 205, 222, 225, 243, 247, 319, 356, 357, 415, 431, 451, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 621, 623, 630, 636, 641, 647, 657, 681, 683, 688, 700, 703, 754, 757, 759, 761, 764, 765, 766, 769, 777, 778, 781, 784, 785, 795, 797], "fed": 77, "fileid": [77, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 749, 753, 759, 784, 785, 786, 787, 788], "vari": [77, 107, 122, 168, 183, 221, 320, 340, 759], "disambigu": [77, 80, 107, 128, 189, 208, 221, 743, 744, 759], "wsd_featur": 77, "max": [77, 82, 107, 141, 198, 324, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 475, 688, 766, 768, 785], "len": [77, 80, 99, 107, 120, 126, 130, 149, 158, 182, 186, 190, 205, 218, 289, 293, 301, 317, 340, 356, 378, 379, 380, 392, 396, 399, 407, 408, 409, 415, 537, 657, 660, 681, 686, 689, 700, 703, 706, 714, 742, 749, 751, 753, 755, 756, 757, 758, 759, 762, 766, 767, 768, 769, 777, 784, 785, 786, 791, 799, 803], "built": [77, 80, 99, 221, 241, 242, 293, 301, 378, 379, 390, 397, 455, 460, 486, 495, 496, 742, 754, 759, 778, 808], "featuredict": 77, "classifieri": [78, 79, 80, 82, 85, 91, 755], "finit": [78, 203, 521, 808], "belong": [78, 95, 98, 107, 126, 186, 205, 221, 379, 380, 535, 695, 731, 737, 759, 788], "exactli": [78, 83, 186, 243, 244, 245, 246, 293, 430, 454, 460, 669, 695, 786, 799], "multiclassifieri": 78, "multi": [78, 93, 107, 126, 183, 186, 240, 242, 310, 312, 318, 518, 620, 644, 703, 706, 707, 711, 720, 746, 758, 799, 808], "except": [78, 81, 89, 107, 125, 143, 168, 173, 186, 200, 201, 221, 224, 225, 240, 256, 257, 261, 277, 286, 287, 288, 289, 290, 359, 390, 396, 430, 431, 432, 433, 435, 437, 439, 440, 445, 448, 451, 459, 460, 608, 617, 625, 639, 647, 651, 663, 664, 665, 666, 706, 711, 712, 720, 731, 740, 752, 755, 756, 759, 760, 761, 764, 766, 770, 777, 778, 790, 796, 797, 799, 803], "fix": [78, 80, 86, 178, 395, 497, 500, 519, 528, 536, 602, 604, 630, 657, 670, 671, 672, 673, 674, 675, 694, 695, 759, 761, 786, 795, 799, 808, 810], "classify_mani": [78, 85, 91, 755], "prob_classifi": [78, 80, 82, 91, 755], "prob_classify_mani": [78, 85, 91, 755], "fs": [78, 80, 91, 765], "distribut": [78, 80, 82, 83, 93, 94, 105, 107, 126, 131, 177, 182, 186, 188, 191, 197, 198, 202, 204, 205, 208, 210, 223, 226, 227, 293, 299, 300, 304, 305, 332, 340, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 482, 490, 505, 506, 514, 518, 521, 602, 604, 605, 606, 670, 671, 672, 673, 674, 675, 685, 690, 691, 692, 693, 694, 695, 759, 761, 780, 785, 786, 787, 791, 799, 807, 808], "probdisti": [78, 80, 82, 85, 91, 332, 340, 408, 411, 413, 416, 417, 419, 420, 421, 422, 423, 424, 505, 521], "basi": [79, 107, 137, 146, 195, 203, 227, 759, 767, 787], "branch": [79, 98, 221, 241, 379, 380, 382, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 803], "condit": [79, 80, 83, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 381, 382, 390, 395, 408, 409, 410, 412, 432, 433, 448, 501, 505, 518, 520, 521, 536, 602, 605, 606, 733, 734, 736, 764, 786, 796], "decisiontreeclassifi": [79, 755], "feature_nam": 79, "kei": [79, 82, 83, 99, 107, 113, 126, 162, 168, 169, 181, 186, 187, 198, 215, 221, 225, 226, 240, 242, 243, 244, 245, 246, 256, 257, 261, 293, 299, 301, 304, 312, 314, 337, 342, 343, 408, 409, 410, 412, 415, 431, 436, 440, 445, 451, 454, 458, 464, 602, 603, 604, 620, 644, 685, 705, 706, 707, 708, 709, 710, 711, 712, 713, 719, 731, 732, 737, 739, 740, 742, 752, 753, 757, 759, 766, 767, 770, 771, 777, 780, 785, 786, 787, 791, 797, 803, 808], "best_binary_stump": 79, "labeled_featureset": [79, 82, 85], "feature_valu": 79, "best_stump": 79, "binary_stump": 79, "70": [79, 621, 624, 633, 641, 649, 659, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 759, 785, 796], "prefix": [79, 107, 138, 220, 227, 228, 241, 243, 248, 249, 251, 290, 324, 390, 395, 402, 477, 478, 480, 481, 488, 489, 494, 583, 734, 740, 765, 766, 799], "4": [79, 80, 93, 100, 102, 107, 166, 168, 182, 186, 199, 206, 210, 214, 219, 221, 223, 242, 288, 293, 299, 300, 304, 305, 311, 315, 316, 321, 324, 326, 333, 356, 357, 359, 379, 380, 390, 396, 406, 408, 422, 451, 460, 479, 484, 491, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 524, 533, 596, 616, 621, 624, 633, 641, 649, 659, 660, 668, 669, 671, 672, 673, 674, 675, 677, 679, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 700, 701, 703, 704, 706, 714, 733, 734, 735, 736, 740, 742, 748, 751, 752, 753, 754, 755, 757, 759, 762, 765, 766, 767, 768, 770, 774, 777, 779, 780, 781, 783, 784, 785, 786, 787, 789, 791, 795, 796, 798, 799, 800, 802, 803, 808], "indent": [79, 107, 163, 166, 216, 219, 287, 288, 436, 458, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742], "pseudocod": 79, "refin": [79, 533, 725, 728], "entropy_cutoff": [79, 755], "depth_cutoff": 79, "support_cutoff": [79, 755], "stump": 79, "05": [79, 357, 396, 759, 777, 803, 805], "100": [79, 82, 99, 218, 223, 324, 334, 341, 474, 500, 519, 602, 605, 606, 624, 649, 731, 735, 740, 748, 759, 765, 769, 777, 780, 785, 786, 791, 795, 796, 799], "treat": [79, 99, 107, 126, 158, 186, 240, 276, 284, 293, 299, 304, 318, 356, 357, 395, 396, 405, 430, 460, 602, 607, 617, 625, 633, 647, 651, 659, 763, 766, 774, 788, 797, 798, 799], "rather": [79, 82, 100, 101, 102, 103, 107, 126, 168, 186, 221, 225, 243, 313, 321, 359, 399, 408, 412, 445, 488, 499, 518, 533, 622, 646, 663, 664, 665, 666, 752, 757, 759, 760, 765, 766, 767], "n": [79, 80, 82, 89, 90, 93, 96, 98, 101, 102, 103, 107, 108, 119, 123, 124, 126, 133, 141, 142, 156, 159, 165, 167, 168, 172, 175, 180, 181, 184, 185, 186, 193, 198, 202, 203, 205, 206, 207, 209, 213, 220, 221, 227, 242, 243, 247, 256, 257, 261, 284, 289, 293, 299, 304, 310, 318, 319, 321, 347, 356, 357, 359, 371, 374, 378, 379, 381, 382, 385, 392, 397, 400, 402, 404, 407, 408, 409, 414, 415, 416, 417, 418, 419, 424, 440, 451, 455, 474, 486, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 525, 528, 536, 537, 561, 602, 604, 608, 616, 619, 621, 626, 629, 631, 632, 633, 635, 636, 641, 645, 646, 647, 653, 658, 659, 660, 680, 681, 682, 683, 687, 688, 692, 699, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728, 742, 743, 744, 750, 751, 752, 753, 757, 759, 761, 763, 764, 765, 766, 767, 768, 769, 772, 777, 778, 780, 781, 784, 785, 786, 787, 788, 790, 792, 793, 795, 796, 797, 799, 800, 803, 804, 805, 806], "entropi": [80, 202, 293, 294, 295, 296, 297, 298, 300, 302, 303, 408, 505, 521, 755, 777, 808], "framework": [80, 445, 752, 808], "empir": 80, "highest": [80, 82, 101, 102, 103, 293, 379, 380, 500, 505, 519, 521, 699, 700, 743, 744, 795, 805], "estim": [80, 82, 83, 85, 93, 95, 293, 408, 411, 414, 416, 417, 418, 419, 420, 422, 424, 505, 506, 521, 681, 690, 691, 692, 693, 694, 695, 759], "frequenc": [80, 83, 89, 100, 101, 102, 103, 107, 168, 221, 293, 299, 301, 304, 311, 312, 315, 316, 321, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 422, 424, 471, 473, 501, 505, 506, 514, 520, 521, 602, 604, 606, 618, 642, 646, 681, 757, 785, 786, 808], "vector": [80, 81, 87, 88, 93, 94, 95, 96, 97, 98, 378, 379, 769], "co": [80, 107, 126, 186, 478, 630, 657, 699, 700, 702, 703, 731, 753, 757, 759, 767, 796, 808], "equal": [80, 82, 90, 98, 99, 107, 132, 158, 168, 182, 193, 218, 221, 240, 242, 243, 244, 245, 246, 247, 254, 256, 260, 293, 301, 312, 317, 322, 324, 329, 340, 341, 356, 357, 387, 399, 403, 408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 432, 433, 434, 435, 448, 450, 459, 460, 474, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 642, 654, 690, 706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 759, 771, 786, 799], "term": [80, 82, 100, 107, 133, 210, 220, 226, 287, 430, 447, 448, 454, 460, 505, 521, 533, 602, 606, 725, 728, 731, 740, 758, 759, 769, 778, 795, 796], "properti": [80, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 186, 192, 195, 203, 218, 220, 225, 227, 240, 241, 243, 248, 249, 251, 271, 273, 274, 284, 285, 286, 293, 301, 321, 356, 357, 396, 406, 408, 410, 430, 433, 434, 440, 445, 448, 451, 460, 475, 496, 497, 498, 502, 503, 504, 505, 508, 510, 515, 516, 517, 521, 528, 529, 535, 536, 537, 608, 634, 639, 646, 668, 677, 679, 687, 688, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 746, 752, 753, 759, 763, 774, 782], "unlabel": [80, 83, 358, 398, 503, 505, 521, 528], "howev": [80, 83, 107, 126, 163, 168, 186, 216, 218, 221, 227, 240, 241, 243, 256, 260, 293, 324, 351, 399, 482, 488, 490, 500, 514, 519, 608, 646, 694, 759, 761, 763, 765, 766, 767, 771, 774, 785, 787, 791, 795, 803, 804], "confus": [80, 107, 125, 201, 312, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 749, 795, 796, 808], "distinct": [80, 107, 168, 221, 348, 521, 759, 765, 798], "literatur": 80, "discuss": [80, 256, 293, 299, 304, 445, 521, 646, 752, 759, 765, 766, 785, 803, 806, 808], "input_feat": 80, "joint_feat": 80, "feat_val": 80, "some_label": 80, "maxentfeatureencodingi": [80, 81], "binarymaxentfeatureencod": 80, "fname": [80, 82, 91, 797], "fval": [80, 81, 82], "unseen_featur": 80, "unseen": [80, 82, 293, 301, 408, 422, 424, 514, 533, 755, 777, 786], "whenev": [80, 218, 225, 234, 242, 292, 399, 533, 759, 766, 799], "encount": [80, 82, 107, 126, 186, 225, 227, 503, 508, 528, 766, 795], "is_unseen": 80, "alwayson_featur": [80, 755], "directli": [80, 87, 90, 100, 101, 102, 103, 107, 149, 163, 172, 205, 213, 216, 225, 227, 243, 244, 245, 246, 303, 305, 359, 408, 413, 485, 493, 499, 518, 602, 605, 616, 646, 653, 692, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 754, 759, 764, 765, 766, 784, 799, 808], "prior": [80, 83, 93, 95, 234, 242, 505, 521, 646, 681, 685, 690, 691, 692, 693, 694, 702, 703, 705], "integ": [80, 182, 206, 218, 240, 243, 244, 245, 246, 247, 289, 310, 318, 356, 357, 379, 380, 408, 415, 431, 451, 474, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 647, 653, 657, 674, 675, 685, 693, 694, 706, 715, 722, 731, 740, 742, 759, 763, 765, 766, 781], "f_id": 80, "fid": 80, "nonzero": [80, 289, 408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "size": [80, 86, 99, 218, 225, 227, 240, 242, 289, 293, 301, 334, 341, 395, 402, 448, 449, 497, 498, 508, 510, 515, 516, 528, 630, 657, 704, 706, 715, 722, 731, 732, 740, 758, 761, 763, 769, 774, 794, 795], "train_tok": [80, 81, 88, 90], "count_cutoff": [80, 755], "cutoff": [80, 90, 293, 301, 497, 498, 508, 515, 516, 528, 795, 808], "discard": [80, 93, 221, 382, 488, 500, 519, 533, 619, 623, 643, 647, 653, 742, 785, 799, 803], "rare": [80, 475, 646], "fewer": [80, 97, 508, 528, 706, 707, 708, 709, 710, 711, 712, 713, 714, 735, 740, 759, 804], "attest": [80, 90], "conditionalexponentialclassifi": [80, 755], "alia": [80, 107, 115, 116, 120, 125, 139, 144, 145, 147, 149, 163, 164, 177, 182, 192, 197, 199, 201, 204, 205, 216, 293, 299, 304, 679], "maxentclassifi": [80, 81, 379, 471, 473, 755], "functionbackedmaxentfeatureencod": 80, "suppli": [80, 99, 107, 143, 200, 208, 240, 243, 289, 318, 408, 415, 508, 528, 639, 654, 680, 681, 759, 766, 767, 784, 787, 795, 805], "spars": [80, 85, 755], "func": [80, 192, 226, 234, 240, 242, 479, 739, 742], "callabl": [80, 186, 226, 284, 505, 521, 696, 697], "feature_vector": 80, "gisencod": 80, "ensur": [80, 93, 95, 107, 126, 186, 240, 242, 356, 357, 395, 396, 408, 421, 460, 507, 522, 538, 559, 583, 628, 654, 680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 703, 725, 728, 731, 746, 759, 780, 795, 799], "sum": [80, 82, 107, 126, 141, 149, 186, 198, 205, 256, 261, 293, 300, 305, 319, 405, 408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 464, 499, 518, 521, 671, 672, 681, 688, 690, 691, 703, 759, 777], "constant": [80, 227, 286, 324, 329, 341, 408, 413, 429, 430, 431, 433, 435, 438, 440, 445, 451, 455, 459, 460, 475, 482, 490, 529, 630, 657, 752, 763, 764, 765, 778, 790], "precondit": [80, 390], "gi": [80, 107, 174, 755], "seealso": [80, 602, 605, 606], "exponenti": [80, 646, 677, 704], "parameter": [80, 408, 419, 537], "equat": [80, 107, 168, 221, 408, 424, 803], "dotprod": 80, "prob": [80, 82, 256, 263, 402, 408, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 602, 605, 606, 709, 713, 755, 784, 786, 799], "zip": [80, 99, 107, 165, 220, 225, 227, 289, 324, 472, 475, 696, 697, 746, 769, 790, 808], "ii": [80, 100, 102, 107, 126, 186, 210, 223, 686, 689, 701, 755, 803, 808], "accept": [80, 107, 160, 173, 214, 240, 256, 261, 290, 406, 722, 727, 731, 732, 740, 759, 761, 773, 805, 808], "logarithm": [80, 293, 308, 311, 315, 316, 321, 408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "explain": [80, 750, 765, 795], "column": [80, 107, 121, 122, 183, 227, 240, 350, 359, 379, 380, 706, 715, 722], "most_informative_featur": [80, 82], "rank": [80, 100, 101, 102, 103, 107, 126, 186, 337, 338, 342, 343, 499, 518, 702, 703, 780], "set_weight": 80, "new_weight": 80, "param": [80, 98, 107, 160, 168, 214, 221, 256, 257, 261, 271, 276, 278, 281, 283, 284, 285, 289, 377, 379, 390, 401, 430, 434, 435, 438, 445, 446, 448, 451, 460, 464, 466, 501, 509, 514, 520, 524, 533, 535, 602, 603, 646, 685, 731, 796], "show_most_informative_featur": [80, 82, 755], "gaussian_prior_sigma": 80, "maxim": [80, 400, 481, 489, 618, 642, 687, 688, 695, 701], "insensit": [80, 107, 126, 186, 479, 585, 602, 603], "scale": [80, 100, 101, 177, 285, 293, 300, 305, 324, 408, 413, 657, 681, 763, 779], "improv": [80, 226, 341, 478, 479, 482, 488, 490, 501, 520, 583, 616, 621, 641, 661, 691, 692, 693, 725, 728, 761, 785, 795, 796, 808], "extern": [80, 81, 91, 105, 107, 273, 277, 608, 695], "bfg": [80, 501, 520], "diagnost": [80, 533], "sigma": [80, 408, 422, 464, 514], "gaussian": [80, 93, 95], "variou": [80, 83, 107, 168, 221, 227, 273, 285, 379, 380, 523, 587, 681, 691, 692, 693, 694, 695, 704, 759, 763, 794, 799, 808], "under": [80, 107, 112, 126, 173, 179, 186, 210, 221, 225, 226, 243, 244, 256, 264, 292, 359, 395, 408, 409, 422, 445, 477, 478, 493, 536, 639, 680, 681, 683, 685, 688, 694, 695, 696, 697, 699, 700, 703, 731, 763, 767, 772, 781, 783, 784, 790, 791, 796], "halt": 80, "max_it": [80, 471, 473, 755], "min_ll": 80, "likelihood": [80, 90, 93, 94, 95, 98, 100, 256, 263, 293, 311, 315, 316, 321, 332, 340, 408, 414, 418, 419, 420, 424, 501, 520, 646, 676, 677, 679, 681, 704, 757, 780], "min_lldelta": 80, "becaus": [80, 107, 126, 170, 186, 193, 194, 221, 222, 225, 240, 243, 255, 276, 284, 293, 296, 301, 305, 324, 325, 390, 405, 485, 488, 493, 504, 528, 608, 632, 653, 659, 670, 671, 672, 673, 674, 675, 680, 681, 688, 692, 693, 694, 695, 703, 704, 750, 751, 759, 766, 777, 803], "present": [80, 89, 99, 107, 168, 203, 221, 243, 244, 245, 274, 276, 278, 281, 283, 284, 289, 342, 343, 374, 378, 379, 381, 382, 402, 409, 410, 412, 431, 436, 440, 471, 473, 477, 478, 490, 671, 672, 673, 674, 675, 681, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 712, 713, 719, 731, 748, 757, 766, 769, 788, 796, 808], "tadmeventmaxentfeatureencod": [80, 88], "tadmmaxentclassifi": 80, "typedmaxentfeatureencod": 80, "recogn": [80, 206, 397, 440, 451, 759, 766, 788, 796], "interpret": [80, 256, 429, 431, 432, 438, 440, 451, 746, 763, 774, 785, 790, 807, 808], "calculate_delta": 80, "unattest": 80, "ffreq_empir": 80, "nfmap": 80, "nfarrai": 80, "nftranspos": 80, "calcul": [80, 82, 84, 86, 89, 93, 95, 99, 100, 107, 112, 168, 179, 218, 221, 227, 256, 257, 261, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 311, 315, 316, 318, 320, 321, 324, 325, 326, 340, 342, 343, 379, 408, 415, 416, 424, 455, 505, 514, 521, 528, 646, 677, 680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 702, 703, 704, 742, 755, 757, 780, 798, 803, 808], "delta": [80, 240, 319, 464, 501, 520], "solv": [80, 349, 624, 649], "exp": [80, 700], "nf": 80, "val": [80, 107, 153, 174, 209, 225, 243, 244, 247, 289, 408, 415, 429, 431, 451, 706, 709, 713, 719, 723, 752, 761, 766, 790, 797, 799], "newton": 80, "sum1": 80, "sum2": 80, "converg": [80, 93, 95, 97, 501, 506, 520, 521], "dens": [80, 209, 792], "ltext": 80, "_delta": 80, "matric": [80, 85, 93, 95], "signific": [80, 90, 320, 340, 514, 757, 763, 785], "arrai": [80, 81, 85, 88, 93, 95, 310, 318, 657, 731, 732, 740, 758], "th": [80, 99, 181, 240, 536, 537, 602, 605, 606, 607, 669, 679, 683, 706, 707, 708, 709, 710, 711, 712, 713, 714, 758, 787], "compress": [80, 225, 227, 319, 474, 734, 735, 737, 740, 761, 808], "uncompress": 80, "transpos": 80, "calculate_empirical_fcount": 80, "calculate_estimated_fcount": 80, "calculate_nfmap": 80, "activ": [80, 203, 240, 284, 474, 680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 746, 761, 805, 806, 808, 810], "7": [80, 99, 107, 126, 186, 187, 214, 221, 288, 289, 356, 357, 377, 390, 396, 401, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 527, 537, 646, 660, 668, 669, 679, 681, 685, 686, 689, 694, 695, 701, 703, 706, 715, 722, 750, 751, 753, 755, 759, 761, 762, 765, 766, 772, 780, 781, 784, 785, 786, 787, 789, 795, 796, 797, 799, 800, 802, 803, 807, 808], "_nfmap": 80, "train_maxent_classifier_with_gi": 80, "train_maxent_classifi": 80, "train_maxent_classifier_with_ii": 80, "train_maxent_classifier_with_megam": 80, "optim": [81, 256, 257, 261, 319, 353, 354, 361, 362, 368, 375, 386, 389, 395, 399, 501, 505, 520, 521, 702, 703, 803, 808], "packag": [81, 85, 91, 100, 168, 221, 222, 224, 225, 273, 277, 359, 406, 572, 587, 646, 707, 708, 709, 710, 711, 712, 713, 714, 742, 746, 755, 757, 759, 774, 778, 780, 807, 808, 810], "tell": [81, 218, 225, 289, 293, 602, 605, 606, 607, 743, 744, 758, 771, 790, 795], "config_megam": 81, "path": [81, 86, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 183, 184, 185, 186, 188, 189, 193, 196, 197, 198, 199, 200, 207, 208, 212, 213, 216, 218, 219, 221, 222, 223, 224, 225, 227, 241, 243, 244, 245, 246, 253, 287, 289, 318, 352, 377, 379, 384, 394, 401, 403, 432, 505, 507, 511, 512, 513, 521, 522, 524, 527, 529, 608, 615, 624, 649, 706, 707, 711, 720, 737, 741, 742, 759, 761, 765, 774, 785, 787, 803, 808], "found": [81, 86, 93, 95, 96, 107, 111, 112, 133, 168, 176, 179, 193, 218, 220, 221, 222, 224, 225, 243, 244, 271, 273, 276, 284, 285, 289, 386, 387, 388, 395, 402, 403, 404, 407, 408, 409, 410, 411, 412, 415, 422, 431, 436, 440, 482, 486, 488, 490, 493, 495, 500, 519, 527, 533, 547, 602, 603, 642, 646, 670, 671, 672, 673, 674, 675, 680, 681, 694, 695, 706, 707, 711, 720, 746, 759, 760, 763, 764, 774, 778, 782, 786, 787, 794, 795, 796, 798, 799, 803], "below": [81, 107, 168, 181, 221, 226, 256, 293, 301, 415, 485, 493, 533, 675, 677, 681, 688, 694, 703, 704, 732, 737, 740, 746, 757, 759, 765, 766, 767, 785, 788], "detail": [81, 89, 107, 110, 126, 128, 135, 166, 175, 184, 186, 189, 194, 209, 219, 221, 227, 240, 408, 422, 477, 478, 493, 501, 505, 509, 520, 521, 524, 529, 533, 682, 683, 731, 732, 740, 753, 765, 767, 801, 807, 808], "call_megam": 81, "bin": [81, 88, 289, 408, 410, 411, 414, 415, 416, 417, 418, 419, 420, 422, 424, 432, 506, 521, 769, 774, 786, 788, 808], "configur": [81, 90, 240, 289, 390, 731, 759, 774, 808], "system": [81, 86, 225, 227, 242, 289, 445, 507, 511, 512, 513, 521, 522, 537, 681, 686, 687, 688, 689, 700, 702, 703, 742, 743, 744, 746, 752, 759, 760, 808], "lookuperror": [81, 225, 289, 774], "parse_megam_weight": 81, "features_count": 81, "explicit": [81, 632, 659, 759], "stdout": [81, 88, 289, 396, 408, 415, 733, 740, 758, 784], "numpi": [81, 88, 93, 95, 657, 769, 780, 807, 808], "handl": [81, 91, 158, 218, 225, 242, 270, 279, 285, 289, 292, 293, 318, 399, 432, 447, 448, 459, 460, 474, 497, 498, 508, 515, 516, 528, 537, 585, 587, 619, 634, 639, 653, 663, 664, 665, 666, 731, 732, 733, 734, 735, 736, 740, 750, 759, 777, 778, 791, 796, 803, 808], "bia": [81, 95], "write_megam_fil": 81, "stream": [81, 88, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 180, 181, 185, 188, 189, 190, 192, 193, 194, 200, 205, 207, 208, 213, 214, 218, 222, 225, 227, 293, 306, 406, 408, 415, 460, 685, 706, 707, 708, 709, 710, 711, 712, 713, 714, 732, 734, 735, 739, 740, 742], "bernoulli": [81, 755], "cost": [81, 86, 224, 312, 324, 325, 326, 329, 341, 356, 357, 374, 396, 402, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 568, 616, 619, 621, 626, 632, 633, 635, 636, 641, 645, 647, 653, 655, 659, 660, 685, 704, 705, 759, 793, 796], "predict": [81, 85, 99, 107, 126, 186, 312, 356, 357, 399, 408, 416, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 524, 691, 692, 693, 765, 767, 796], "written": [81, 88, 347, 445, 537, 659, 731, 734, 735, 737, 740, 741, 752, 759, 766, 774, 799, 806, 808], "explicitli": [81, 82, 107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 207, 212, 219, 221, 222, 223, 227, 293, 299, 304, 408, 759, 761, 766, 782], "would": [81, 107, 122, 126, 183, 186, 243, 244, 245, 246, 254, 286, 293, 318, 324, 326, 348, 379, 386, 395, 430, 460, 499, 503, 518, 528, 536, 537, 608, 681, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 759, 763, 766, 795, 796, 799, 803], "fire": 81, "naiv": [82, 83, 85, 310, 318, 474, 752, 755], "bay": [82, 83, 85, 474, 755], "independ": [82, 107, 166, 219, 241, 311, 315, 316, 320, 321, 340, 537, 645, 680, 681, 693, 759, 808], "f1": [82, 243, 246, 751, 759, 763, 765], "fn": [82, 101, 102, 103, 107, 126, 186, 243, 246, 767], "just": [82, 107, 122, 125, 126, 128, 131, 148, 149, 169, 183, 186, 189, 191, 201, 205, 206, 221, 240, 256, 263, 271, 284, 285, 293, 440, 445, 451, 475, 499, 518, 530, 622, 646, 647, 653, 660, 688, 737, 739, 746, 752, 753, 759, 763, 766, 777, 780, 785, 786, 791, 796, 798, 799, 803], "naivebayesclassifi": [82, 83, 378, 379, 471, 473, 502, 503, 528, 755, 791], "paramater": 82, "receiv": [82, 285, 496, 731, 739, 763, 774], "never": [82, 90, 218, 242, 386, 395, 475, 482, 490, 706, 711, 712, 715, 720, 722, 742, 759, 791, 795, 799], "seen": [82, 293, 301, 408, 417, 422, 424, 496, 504, 528, 755, 761, 765, 791, 795, 799, 803], "reserv": [82, 284, 292, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 397, 399, 408, 424, 695, 805], "own": [82, 107, 126, 163, 186, 206, 216, 224, 225, 242, 243, 537, 625, 651, 652, 706, 707, 708, 711, 712, 720, 731, 759, 763, 767, 787, 788, 794, 799], "label_probdist": 82, "feature_probdist": 82, "lowest": [82, 101, 102, 103, 221, 374, 402, 618, 642, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 803], "label1": [82, 322, 324, 330, 331, 333], "label2": [82, 322, 324, 330, 331, 333], "eleprobdist": [82, 83, 408, 410, 786], "variant": [83, 107, 168, 181, 221, 311, 315, 316, 321, 341, 344, 431, 451, 506, 521], "want": [83, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 186, 205, 216, 218, 242, 256, 257, 261, 293, 294, 295, 299, 300, 302, 303, 304, 305, 318, 352, 394, 408, 422, 445, 471, 473, 474, 503, 511, 527, 528, 731, 746, 752, 757, 759, 761, 763, 764, 766, 774, 784, 785, 788, 795, 798], "complementari": [83, 685], "male": [83, 214, 759, 803], "femal": [83, 214, 753, 759], "Then": [83, 218, 256, 257, 261, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 630, 657, 687, 688, 692, 759, 784], "drawn": [83, 206, 210, 242, 448, 767], "accord": [83, 100, 243, 245, 256, 307, 379, 380, 406, 445, 453, 455, 464, 499, 505, 518, 521, 628, 654, 670, 671, 672, 673, 674, 675, 681, 687, 688, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 719, 739, 752, 759, 773, 783, 788, 795], "positivenaivebayesclassifi": 83, "sports_sent": 83, "team": [83, 796, 808], "domin": [83, 585, 608, 609, 615, 706, 707, 708, 709, 710, 711, 712, 713, 714], "game": [83, 798, 805], "lost": [83, 808], "ball": 83, "intens": [83, 472, 475, 791], "goalkeep": 83, "catch": [83, 221, 742, 795], "various_sent": 83, "presid": [83, 602, 605, 606, 759, 788], "won": [83, 256, 257, 261, 475, 585, 618, 642, 759, 791, 796, 808], "sara": 83, "kid": 83, "went": [83, 743, 744, 805], "off": [83, 107, 116, 128, 147, 177, 189, 204, 312, 408, 417, 474, 490, 496, 633, 646, 659, 660, 739, 759, 763, 771, 774, 784, 785, 796, 808], "court": [83, 796], "had": [83, 107, 120, 182, 408, 417, 757, 758, 759, 796, 800, 808], "whole": [83, 107, 135, 168, 186, 194, 221, 663, 664, 665, 666, 742, 757, 759, 786, 799, 803], "lower": [83, 93, 96, 107, 168, 221, 293, 300, 305, 357, 396, 408, 415, 500, 509, 519, 524, 602, 603, 675, 677, 680, 681, 694, 695, 696, 697, 704, 734, 740, 757, 759, 785], "positive_featureset": 83, "unlabeled_featureset": 83, "Is": [83, 242, 406, 430, 433, 434, 448, 460, 599, 631, 658], "cat": [83, 256, 257, 261, 348, 356, 357, 396, 405, 501, 509, 520, 524, 608, 681, 682, 683, 687, 688, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 754, 759, 764, 765, 772, 779, 784, 793, 799, 803], "positive_prob_prior": 83, "unknown": [83, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 193, 214, 227, 242, 243, 293, 301, 431, 451, 503, 508, 514, 528, 536, 761, 766], "rte": [84, 105, 107, 148, 808], "fail": [84, 225, 243, 244, 245, 246, 255, 289, 431, 451, 547, 646, 731, 740, 750, 765, 766, 774, 795, 808], "entail": [84, 206, 221, 759, 763, 774, 808], "TO": [84, 356, 357, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 759, 784, 787, 795], "lemmat": [84, 486, 495, 803], "rtefeatureextractor": 84, "bag": 84, "throw": [84, 583, 756, 759, 768, 795, 800], "awai": 84, "stopword": [84, 485, 493, 602, 605, 606, 630, 657, 757, 759, 794], "rtepair": [84, 107, 148, 206, 759], "stop": [84, 99, 158, 245, 289, 356, 357, 396, 408, 415, 421, 474, 488, 500, 501, 519, 520, 707, 708, 709, 710, 711, 712, 713, 733, 734, 735, 736, 740, 759, 764], "use_lemmat": 84, "thrown": 84, "hyp_extra": 84, "toktyp": 84, "extran": 84, "ne": [84, 107, 121, 122, 150, 183, 207, 242, 453, 464, 759], "distinguish": [84, 256, 260, 351, 693, 780], "ordinari": 84, "sample_n": 84, "rte_featur": 84, "rte_pair": 84, "scikit": [85, 87, 755], "learn": [85, 87, 93, 94, 96, 98, 341, 471, 473, 499, 500, 501, 506, 518, 519, 520, 521, 531, 533, 646, 695, 742, 755, 759, 786, 795, 807], "machin": [85, 87, 93, 107, 138, 220, 341, 471, 473, 521, 667, 668, 677, 679, 680, 681, 682, 683, 687, 688, 690, 691, 692, 693, 694, 695, 699, 700, 702, 703, 704, 743, 744, 746, 759, 767, 779, 798, 803, 807], "mani": [85, 90, 99, 107, 116, 126, 168, 177, 181, 186, 221, 225, 240, 242, 243, 285, 293, 294, 295, 296, 297, 298, 300, 302, 303, 349, 402, 407, 408, 415, 482, 488, 490, 499, 518, 533, 535, 608, 622, 646, 690, 691, 692, 693, 694, 725, 728, 746, 757, 759, 766, 767, 785, 795, 796, 803, 808], "logist": 85, "regress": [85, 408, 422, 565, 572, 808], "sklearnclassifi": [85, 755], "wrap": [85, 99, 186, 242, 256, 260, 289, 292, 293, 301, 313, 321, 348, 408, 412, 639, 640, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 742, 757, 797], "linear": [85, 377, 401, 408, 422, 459, 514, 759, 803], "sklearn": [85, 755, 769], "linearsvc": 85, "pipelin": [85, 86, 405, 511, 512, 513, 582], "tf": [85, 602, 606, 797], "idf": [85, 602, 606], "chi": [85, 107, 112, 179, 311, 315, 316, 321, 464, 753, 757], "get": [85, 89, 107, 126, 128, 168, 186, 189, 206, 214, 218, 221, 234, 240, 242, 243, 244, 289, 291, 293, 299, 301, 304, 314, 319, 390, 409, 410, 412, 415, 431, 436, 440, 460, 477, 478, 482, 490, 500, 514, 519, 533, 676, 679, 681, 731, 739, 740, 742, 759, 761, 766, 767, 769, 770, 774, 775, 777, 785, 786, 790, 791, 795, 796, 799, 803, 808], "1000": [85, 90, 107, 126, 186, 474, 514, 533, 752, 755, 769, 785, 796, 799], "feature_extract": 85, "tfidftransform": 85, "feature_select": 85, "selectkbest": 85, "chi2": 85, "naive_bay": [85, 755], "multinomialnb": 85, "tfidf": 85, "k": [85, 93, 95, 97, 99, 107, 110, 175, 181, 227, 243, 244, 310, 318, 334, 341, 344, 379, 395, 399, 409, 410, 412, 415, 431, 436, 440, 477, 478, 488, 500, 505, 519, 521, 537, 567, 630, 645, 657, 681, 731, 742, 753, 757, 759, 766, 778, 781, 786, 788, 791, 795, 799, 803], "nb": [85, 324, 326, 496, 501, 520, 525, 766, 775, 806, 808], "dtype": 85, "exclus": [85, 214, 225, 533, 677, 704, 795], "almost": [85, 90, 107, 168, 221, 293, 475, 795], "situat": [85, 107, 126, 186, 767, 795, 808], "respect": [85, 107, 126, 177, 186, 205, 242, 284, 289, 293, 311, 321, 379, 445, 505, 521, 678, 681, 688, 693, 698, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 752, 759, 763, 767, 774, 788, 790], "matrix": [85, 93, 95, 312, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 520, 521, 765, 795, 808], "nlp": [85, 100, 206, 307, 396, 405, 478, 521, 529, 780, 806, 808], "involv": [85, 90, 93, 98, 107, 126, 186, 324, 326, 535, 550, 608, 759, 767, 810], "great": [85, 292, 347, 602, 605, 606, 607, 753, 791, 795, 796, 808], "amount": [85, 227, 241, 242, 318, 379, 380, 408, 422, 533, 677, 704, 725, 728, 732, 740, 759, 785], "memori": [85, 90, 99, 218, 240, 293, 464, 501, 514, 520, 533, 537, 646, 676, 679, 742, 759, 785, 799], "batch": [85, 469], "fit": [85, 293, 294, 295, 296, 297, 298, 300, 302, 303, 350, 759, 767, 777], "supported_oper": [86, 511, 512, 513], "speed": [86, 96, 107, 126, 186, 514, 767, 777, 808], "advantag": [86, 89, 292], "By": [86, 99, 107, 119, 122, 128, 159, 180, 183, 189, 213, 221, 222, 227, 241, 242, 243, 246, 284, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 408, 417, 537, 623, 625, 639, 647, 651, 683, 706, 707, 708, 709, 710, 711, 712, 713, 714, 752, 754, 759, 761, 774, 799, 803], "1024": 86, "max_sentence_s": 86, "senna_main": 86, "specif": [86, 91, 107, 112, 123, 126, 144, 149, 150, 165, 168, 173, 177, 179, 184, 186, 193, 194, 201, 205, 207, 220, 221, 222, 224, 225, 273, 274, 277, 278, 294, 295, 296, 297, 298, 300, 302, 303, 321, 382, 395, 471, 473, 485, 493, 505, 511, 512, 513, 514, 517, 521, 533, 535, 536, 537, 624, 649, 685, 695, 731, 759, 763, 767, 794, 796, 797, 803, 807], "rebuilt": 86, "could": [86, 107, 116, 122, 126, 168, 177, 183, 186, 221, 287, 290, 293, 324, 325, 355, 374, 376, 383, 391, 392, 402, 407, 408, 409, 415, 425, 608, 657, 683, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 757, 758, 759, 761, 765, 796, 803], "misalign": 86, "environ": [86, 107, 163, 216, 289, 377, 401, 432, 527, 529, 587, 627, 656, 742, 746, 774], "utf": [86, 107, 153, 164, 209, 217, 225, 464, 511, 512, 513, 527, 529, 627, 656, 658, 663, 664, 665, 666, 739, 759, 803], "unit": [86, 93, 107, 126, 150, 163, 186, 207, 216, 406, 521, 527, 538, 542, 602, 605, 606, 759, 788], "test_senna": [86, 527, 548], "usr": [86, 107, 125, 144, 164, 192, 201, 217, 227, 455, 511, 527, 746, 759, 774], "v3": [86, 379, 380, 511, 527, 778, 790, 797, 804], "chk": [86, 511, 512, 513], "ner": [86, 356, 357, 396, 511, 512, 513, 527, 808], "dusseldorf": 86, "busi": [86, 788, 805], "center": [86, 95, 242, 693, 694], "loc": [86, 211, 509, 524, 527, 759, 763, 787, 788, 790], "nnp": [86, 356, 357, 358, 396, 398, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 525, 530, 706, 707, 708, 709, 710, 711, 712, 713, 714, 759, 762, 770, 771, 784, 787, 795, 799, 801, 806], "vbz": [86, 356, 357, 396, 405, 406, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 522, 523, 524, 525, 527, 529, 749, 759, 795, 796, 799], "taggeri": [86, 396, 498, 499, 501, 505, 507, 509, 510, 514, 515, 516, 517, 518, 520, 521, 522, 524, 528, 529], "senna_path": 86, "base_path": [86, 511, 512, 513], "tag_sent": [86, 356, 357, 396, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 520, 522, 527, 529], "annot": [86, 93, 107, 112, 122, 126, 137, 146, 171, 179, 182, 183, 186, 193, 195, 203, 205, 206, 210, 223, 310, 318, 324, 333, 501, 520, 622, 646, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 759, 769, 787, 808], "svmclassifi": 87, "call_tadm": 88, "config_tadm": 88, "encoding_demo": 88, "names_demo": [88, 90], "parse_tadm_weight": 88, "paramfil": 88, "write_tadm_fil": 88, "identif": [89, 184, 379, 808], "categor": [89, 107, 114, 115, 117, 145, 173, 176, 177, 192, 201, 211, 213, 693, 806, 808], "cavnar": 89, "j": [89, 107, 138, 220, 240, 285, 286, 329, 341, 356, 357, 395, 397, 399, 475, 481, 488, 489, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 645, 669, 672, 679, 684, 685, 690, 691, 692, 693, 694, 695, 701, 751, 759, 763, 767, 781, 784, 785, 786, 795, 799], "trenkl": 89, "gram": [89, 107, 123, 184, 408, 417, 508, 528, 561, 680, 681, 682, 683, 687, 688, 699, 700, 742, 760], "zipf": 89, "law": [89, 223, 742], "profil": [89, 731], "crubadan": [89, 105, 107, 123, 747], "regard": [89, 521, 624, 649], "rug": [89, 784, 793], "nl": [89, 107, 138, 220], "vannoord": 89, "borel": [89, 184], "slu": [89, 184], "edu": [89, 100, 107, 112, 114, 126, 133, 166, 168, 176, 177, 179, 181, 182, 184, 186, 197, 202, 204, 205, 208, 210, 214, 219, 220, 221, 226, 307, 324, 326, 341, 405, 445, 518, 529, 659, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 752, 759, 774], "html": [89, 107, 135, 165, 166, 168, 175, 184, 192, 194, 208, 210, 219, 220, 221, 226, 242, 285, 341, 359, 377, 401, 408, 422, 445, 493, 559, 562, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 731, 736, 737, 742, 746, 752, 807, 808], "calc_dist": 89, "lang": [89, 107, 123, 138, 168, 184, 220, 221, 464, 496, 525, 526, 627, 628, 654, 656, 731, 732, 735, 740, 753, 760, 803], "trigram": [89, 100, 102, 103, 293, 316, 321, 408, 417, 602, 605, 606, 680, 681, 742, 757, 780, 786], "text_profil": 89, "out": [89, 98, 99, 107, 109, 158, 176, 218, 222, 223, 225, 227, 243, 244, 245, 271, 285, 293, 294, 295, 296, 297, 298, 300, 302, 303, 324, 326, 349, 356, 396, 408, 409, 410, 411, 412, 415, 431, 436, 440, 445, 447, 453, 455, 464, 479, 493, 537, 585, 608, 619, 630, 647, 653, 657, 669, 670, 671, 672, 673, 674, 679, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 719, 732, 739, 752, 758, 759, 761, 765, 769, 785, 788, 791, 795, 799], "fingerprint": 89, "guess_languag": 89, "min": [89, 324, 484, 491, 500, 519, 700, 766, 795], "iso": [89, 107, 109, 123, 141, 164, 168, 176, 184, 198, 217, 221, 225, 292, 464, 496, 507, 522, 525, 526, 731, 760, 785, 803], "639": [89, 107, 123, 141, 168, 184, 198, 221, 496, 525, 526, 731, 760, 803], "lang_dist": 89, "last_dist": 89, "freqdist": [89, 100, 101, 102, 103, 107, 123, 184, 408, 409, 411, 412, 414, 416, 417, 418, 419, 420, 422, 424, 506, 521, 602, 605, 606, 757, 759, 760, 780, 785, 808], "remove_punctu": 89, "rid": [89, 271, 285, 763, 770], "punctuat": [89, 107, 108, 109, 110, 112, 115, 116, 117, 119, 120, 125, 126, 132, 134, 136, 139, 143, 144, 145, 147, 148, 149, 150, 159, 161, 163, 164, 165, 166, 170, 172, 175, 176, 177, 179, 180, 182, 192, 193, 196, 197, 200, 201, 204, 205, 207, 213, 216, 220, 222, 358, 379, 380, 398, 474, 514, 523, 616, 621, 622, 632, 633, 641, 646, 659, 757, 785, 791, 796], "apostroph": 89, "cutoffcheck": 90, "idea": [90, 242, 285, 286, 303, 305, 496, 525, 701, 767], "apply_featur": [90, 471, 473, 791], "feature_func": [90, 471, 473, 501, 520], "tok": [90, 432, 448, 459, 460, 471, 473, 516, 528, 631, 632, 646, 658, 659], "lazymap": [90, 99, 186, 218, 471, 473], "lazi": [90, 99, 107, 110, 112, 150, 175, 179, 193, 207, 292, 293, 356, 357, 396, 405, 509, 524], "analog": [90, 752], "overhead": 90, "lazili": [90, 99, 186, 218, 224, 306, 759, 803], "especi": [90, 99, 214, 473, 475, 759, 805], "underli": [90, 99, 158, 175, 207, 218, 225, 430, 460, 754, 759], "auto": [90, 225, 289, 430, 433, 435, 460, 750, 761, 803], "detect": [90, 99, 107, 130, 173, 190, 218, 503, 528, 630, 646, 657, 746, 803], "attested_label": 90, "binary_names_demo_featur": 90, "check_megam_config": 90, "log_likelihood": [90, 340, 408, 780], "trainer": [90, 471, 473, 474, 500, 506, 519, 521, 535, 537, 786, 791], "names_demo_featur": 90, "partial_names_demo": 90, "wsd_demo": 90, "arff_formatt": 91, "arff": 91, "from_train": 91, "ftype": 91, "data_sect": 91, "instanc": [91, 100, 101, 102, 103, 107, 116, 126, 137, 146, 151, 173, 177, 183, 186, 192, 195, 199, 203, 205, 208, 243, 244, 245, 246, 256, 257, 286, 287, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 352, 356, 357, 377, 379, 394, 395, 396, 401, 405, 408, 415, 417, 430, 433, 435, 440, 448, 451, 460, 461, 469, 471, 473, 474, 481, 489, 498, 500, 505, 506, 514, 515, 516, 519, 521, 528, 533, 535, 536, 537, 602, 605, 606, 607, 608, 622, 634, 639, 646, 679, 685, 703, 731, 736, 753, 766, 774, 780, 787, 790, 791, 794, 796, 799, 803], "nomin": [91, 796], "header_sect": 91, "write": [91, 215, 218, 225, 227, 240, 347, 359, 474, 482, 490, 533, 602, 605, 663, 731, 734, 737, 739, 740, 760, 766, 769, 797, 803, 806], "outfil": [91, 474, 737], "wekaclassifi": [91, 755], "formatt": 91, "model_filenam": [91, 377, 401, 529], "parse_weka_distribut": 91, "parse_weka_output": 91, "quiet": [91, 227, 228, 451, 748], "config_weka": 91, "classpath": [91, 289, 529], "basic": [93, 94, 107, 126, 186, 243, 244, 245, 246, 247, 256, 285, 390, 395, 474, 480, 488, 493, 514, 533, 585, 639, 706, 714, 731, 759, 766, 767], "discov": [93, 759], "similar": [93, 96, 107, 126, 131, 133, 168, 178, 186, 191, 220, 221, 242, 318, 319, 324, 331, 381, 382, 390, 514, 602, 604, 605, 606, 619, 630, 646, 653, 657, 677, 681, 704, 731, 757, 759, 761, 767, 769, 784, 785, 790, 795, 796, 799, 805, 808], "unsupervis": [93, 506, 521, 622, 646], "unannot": [93, 759], "supervis": [93, 506, 521, 646], "difficult": [93, 476, 521, 646, 688], "expens": [93, 218, 289, 311, 321, 675, 694], "obtain": [93, 99, 107, 110, 126, 135, 168, 175, 186, 194, 214, 221, 243, 244, 245, 246, 287, 430, 433, 435, 460, 474, 624, 649, 670, 671, 672, 673, 674, 675, 690, 691, 693, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 739, 759, 767, 791], "quantiti": [93, 706, 721, 724], "major": [93, 642, 654, 795], "knowledg": [93, 197, 205, 210, 225, 445, 752, 759, 761, 765], "acquisit": 93, "bottleneck": [93, 761], "fuel": 93, "qualiti": [93, 107, 141, 149, 198, 205, 654, 699, 700, 702, 703, 759, 810], "approach": [93, 107, 163, 216, 471, 473, 474, 622, 646, 692, 693, 694, 706, 715, 722, 763], "agglom": [93, 96], "dimension": [93, 98, 378, 379], "arbitrari": [93, 97, 290, 445, 731], "alloc": [93, 97, 408, 424], "closest": [93, 96, 97, 107, 168, 218, 221, 630, 657, 681, 731, 759, 803], "recalcul": [93, 97, 293, 301, 646], "centroid": [93, 96, 97], "repeat": [93, 97, 218, 243, 255, 256, 415, 622, 634, 639, 646, 670, 671, 672, 673, 674, 675, 681, 694, 695, 734, 735, 740, 796], "membership": [93, 95, 96, 97, 293, 301, 731, 790], "stabilis": [93, 97], "climb": [93, 97, 670, 671, 672, 673, 674, 675, 692, 693, 694, 695], "local": [93, 97, 107, 125, 144, 164, 192, 201, 217, 218, 225, 227, 292, 464, 670, 671, 672, 673, 674, 675, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 736, 742, 746, 759, 763, 766, 774, 803], "henc": [93, 97, 107, 126, 186, 670, 671, 672, 673, 674, 695, 725, 728, 763, 767, 781], "random": [93, 97, 218, 294, 295, 296, 297, 298, 300, 302, 303, 320, 340, 383, 402, 505, 521, 533, 602, 605, 606, 759, 780, 781, 785], "commonli": [93, 97, 742, 757, 798], "singleton": [93, 96, 790], "rise": [93, 96, 774, 787], "dendrogram": [93, 96, 98], "cut": [93, 96, 98, 177, 475, 646, 739, 757, 759], "mixtur": [93, 95], "covari": [93, 95], "maximis": [93, 95, 506, 521], "arbitrarili": [93, 95, 766], "increas": [93, 95, 218, 242, 289, 293, 297, 305, 337, 338, 342, 395, 399, 408, 416, 475, 488, 514, 677, 686, 689, 695, 703, 704, 757, 759, 774, 803], "extend": [93, 107, 126, 133, 168, 186, 220, 221, 240, 243, 245, 277, 284, 293, 384, 385, 403, 404, 408, 417, 434, 448, 706, 707, 708, 709, 710, 711, 712, 713, 719, 759, 763, 791, 799, 803, 808], "clusteri": [93, 94, 98], "classification_probdist": [93, 94], "vectorspac": 93, "singular": [93, 95, 98, 477, 478, 766, 799, 800], "decomposit": [93, 98, 769], "svd": [93, 95, 96, 97, 98], "normalis": [93, 95, 96, 97, 98, 506, 521], "manner": [93, 395, 432, 735, 740, 763, 767, 774, 790, 796], "preserv": [93, 221, 240, 243, 255, 293, 301, 432, 634, 639, 663, 664, 665, 666, 766, 797], "reparameteris": 93, "ax": [93, 237, 238, 408, 409, 415, 759, 808], "bar": [93, 175, 186, 194, 207, 222, 289, 628, 654, 754, 757, 761, 766, 777, 786, 796, 808], "d": [93, 95, 96, 99, 107, 126, 138, 168, 181, 186, 193, 208, 220, 221, 223, 225, 227, 243, 244, 247, 249, 256, 257, 261, 285, 293, 299, 301, 304, 314, 324, 341, 356, 357, 408, 409, 410, 412, 415, 431, 436, 438, 440, 451, 489, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 620, 621, 623, 625, 629, 630, 631, 632, 633, 641, 644, 646, 647, 651, 652, 653, 657, 658, 659, 686, 689, 692, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 742, 746, 754, 758, 759, 761, 762, 763, 764, 765, 766, 767, 770, 775, 778, 780, 781, 784, 785, 786, 791, 795, 796, 799, 803, 808], "dimens": [93, 95, 96, 97, 98, 379, 657, 769], "fall": [93, 291, 324, 503, 528, 694, 791], "hyperspher": 93, "euclidean_dist": [93, 98], "initialis": [93, 98, 107, 163, 216, 608], "kmeanscluster": [93, 97], "nltk_contrib": 93, "unimelb": 93, "tacohn": 93, "sparsearrai": [93, 95], "cover": [94, 256, 257, 261, 293, 384, 385, 387, 388, 392, 395, 403, 404, 407, 677, 701, 704, 759, 795, 805, 808], "assign_clust": [94, 96, 98], "cluster_nam": 94, "num_clust": [94, 95, 96, 97], "emcluster": 95, "vectorspacecluster": [95, 96, 97, 98], "initial_mean": [95, 97], "covariance_matric": 95, "conv_threshold": 95, "1e": [95, 97, 337, 342, 670, 671, 672, 673, 674, 675, 683, 695, 779, 780], "06": [95, 97, 107, 168, 182, 221, 742, 784, 803, 805], "svd_dimens": [95, 96, 97, 98], "threshold": [95, 319, 453, 464, 501, 520, 618, 642, 646, 704], "mangl": 95, "seq": [95, 98, 338, 342, 500, 505, 519, 521, 533, 703, 795, 799], "deem": [95, 97], "varianc": [95, 408, 759], "dimensionsion": [95, 96, 97, 98], "classify_vectorspac": [95, 96, 97, 98], "cluster_vectorspac": [95, 96, 97, 98], "likelihood_vectorspac": [95, 98], "gaacluster": 96, "cosin": [96, 98, 769, 808], "update_clust": 96, "num_mean": 97, "conv_test": 97, "rng": [97, 505, 521], "avoid_empty_clust": 97, "randomis": 97, "trial": [97, 107, 126, 186, 501, 520, 767], "undefin": [97, 99, 218, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 431, 438, 451, 585, 790], "becom": [97, 192, 211, 243, 355, 402, 725, 728, 761, 765, 766], "reachabl": [98, 803], "leaf_label": 98, "ascii": [98, 107, 126, 168, 186, 221, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 759, 761, 799], "cosine_dist": 98, "u": [98, 107, 138, 165, 174, 205, 220, 291, 405, 500, 519, 602, 605, 606, 607, 624, 627, 631, 645, 649, 656, 658, 660, 750, 758, 766, 778, 781, 785, 788, 795, 799, 807], "minu": [98, 243, 247, 415, 464], "euclidean": 98, "abstractlazysequ": [99, 218], "slice": [99, 158, 289, 616, 660, 758, 799], "view": [99, 107, 122, 126, 137, 146, 158, 172, 173, 175, 178, 180, 183, 185, 186, 188, 189, 193, 194, 195, 197, 200, 201, 203, 207, 208, 213, 216, 218, 222, 234, 242, 244, 409, 410, 412, 415, 431, 436, 440, 565, 694, 725, 728, 731, 732, 740, 758, 767, 785], "without": [99, 107, 128, 150, 189, 194, 207, 224, 240, 243, 292, 293, 301, 324, 326, 377, 401, 408, 413, 422, 460, 464, 475, 477, 480, 481, 488, 489, 521, 583, 646, 680, 681, 750, 751, 755, 759, 766, 774, 777, 786, 791, 797, 799, 808], "load": [99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 186, 193, 221, 224, 225, 227, 270, 272, 285, 292, 310, 318, 352, 359, 386, 394, 395, 406, 445, 464, 500, 509, 519, 524, 542, 602, 606, 646, 742, 752, 756, 759, 763, 765, 769, 774, 785, 786, 790, 795, 796, 799, 808], "piec": [99, 107, 126, 183, 186, 195, 203, 256, 351, 356, 357, 396, 759, 787], "disk": [99, 218, 352, 394], "mutabl": [99, 243, 244, 245, 246, 408, 421, 796], "modif": [99, 243, 480, 482, 488, 490, 493, 550, 646, 725, 728, 742, 766, 799], "cach": [99, 107, 122, 183, 218, 225, 227, 395, 399, 408, 415, 533, 742, 786, 803], "scratch": [99, 352, 394, 759], "__len__": [99, 766], "iterate_from": [99, 158, 218, 759], "count": [99, 100, 101, 107, 158, 168, 221, 225, 245, 256, 265, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 312, 314, 315, 316, 320, 321, 340, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 474, 499, 518, 602, 605, 606, 646, 670, 671, 672, 673, 674, 675, 681, 688, 690, 691, 692, 693, 694, 695, 703, 707, 708, 709, 710, 711, 712, 713, 736, 739, 753, 757, 761, 769, 777, 780, 783, 785, 787, 803], "greater": [99, 107, 158, 168, 221, 240, 242, 293, 301, 324, 325, 392, 407, 408, 415, 501, 520, 634, 639, 706, 707, 708, 709, 710, 711, 712, 713, 714, 796], "bound": [99, 107, 126, 158, 186, 221, 240, 242, 243, 255, 287, 289, 324, 430, 433, 435, 445, 448, 459, 460, 471, 473, 502, 503, 528, 646, 660, 737, 742, 765, 766, 767, 768, 770, 796, 803], "lazyconcaten": [99, 186], "concaten": [99, 105, 107, 174, 218, 381, 382, 479, 530, 766], "keep": [99, 221, 242, 243, 293, 301, 324, 379, 380, 382, 475, 619, 632, 653, 659, 675, 694, 704, 725, 728, 742, 759, 766, 791, 799, 805], "track": [99, 243, 379, 380, 382, 675, 694, 704, 732, 739, 740, 766, 799, 805], "relationship": [99, 107, 168, 177, 221, 256, 258, 381, 382, 731, 753, 803], "offset": [99, 107, 160, 168, 214, 218, 221, 225, 356, 357, 602, 603, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 647, 653, 659, 660, 685, 736, 759, 769, 803, 808], "sublist": [99, 537], "list_of_list": 99, "start_index": [99, 382], "lazyenumer": 99, "lazyzip": 99, "essenti": [99, 256, 263], "enumer": [99, 379, 660, 697, 703, 761, 799], "third": [99, 445, 500, 519, 535, 731, 740, 752, 759, 774, 795, 797, 808], "conserv": [99, 808], "creation": [99, 382, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 761], "addit": [99, 107, 116, 147, 160, 168, 177, 204, 214, 221, 225, 242, 243, 244, 245, 246, 248, 252, 271, 285, 289, 293, 297, 300, 301, 305, 355, 377, 381, 382, 401, 402, 408, 409, 415, 430, 433, 435, 445, 460, 471, 473, 479, 488, 506, 514, 521, 535, 602, 607, 632, 642, 646, 659, 669, 679, 686, 689, 694, 725, 728, 742, 752, 759, 761, 766, 778, 788, 796, 799, 803, 808], "lst": [99, 464, 645], "lazyiteratorlist": [99, 186], "demand": [99, 107, 126, 186, 293], "__repr__": [99, 289, 754, 761, 766], "few": [99, 480, 488, 493, 518, 658, 759, 766, 785], "known_len": 99, "lot": [99, 107, 126, 186, 644, 646, 763, 795, 798], "config": [99, 107, 132, 193, 586, 624, 649], "cache_s": 99, "lazysubsequ": [99, 759], "subsequ": [99, 243, 247, 318, 395, 397, 445, 464, 505, 521, 642, 677, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 752, 765, 791], "min_siz": [99, 759], "minimum": [99, 101, 102, 103, 177, 221, 324, 326, 348, 471, 473, 484, 491, 501, 520, 533, 646, 682, 683, 687, 688, 735, 740, 742, 757, 803, 808], "shorter": [99, 376, 402, 677, 681, 704], "__new__": [99, 192, 199, 243, 244, 245, 246, 289, 409, 410, 412, 415, 431, 436, 437, 439, 440, 669, 679, 707, 708, 709, 710, 711, 712, 713], "cl": [99, 243, 244, 245, 246, 289, 290, 307, 669, 679, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 723, 757, 761], "absolut": [99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 207, 212, 219, 221, 222, 223, 225, 293, 294, 305, 307, 475, 741, 759, 761], "truncat": [99, 221, 312, 314, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 742, 780, 783, 795], "shortest": [99, 107, 168, 221, 256, 257, 261, 291, 681, 701, 803], "sequence1": 99, "sequence2": 99, "6": [99, 107, 126, 149, 168, 181, 186, 205, 214, 221, 288, 289, 329, 341, 356, 357, 358, 390, 396, 398, 406, 448, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 527, 660, 668, 674, 675, 677, 679, 681, 682, 683, 685, 686, 689, 693, 694, 701, 703, 704, 742, 749, 751, 753, 755, 757, 759, 762, 765, 766, 767, 768, 774, 777, 780, 781, 784, 786, 787, 789, 795, 796, 798, 799, 800, 802, 806, 808], "9": [99, 107, 126, 130, 166, 186, 190, 198, 205, 206, 219, 288, 293, 356, 358, 377, 390, 396, 398, 401, 493, 500, 510, 519, 528, 537, 631, 645, 658, 660, 668, 669, 677, 679, 686, 689, 696, 697, 701, 703, 704, 753, 755, 757, 759, 762, 765, 766, 774, 780, 781, 784, 785, 786, 789, 795, 796, 800, 802, 803, 807, 808], "ordereddict": 99, "popitem": [99, 243, 244, 409, 410, 412, 415, 431, 436, 440, 766, 786], "lifo": [99, 243, 244, 409, 410, 412, 415, 431, 436, 440], "keyerror": [99, 234, 240, 242, 243, 244, 409, 410, 412, 415, 431, 436, 440, 451, 766], "setdefault": [99, 243, 244, 408, 409, 410, 412, 415, 431, 436, 440, 766], "failobj": 99, "els": [99, 243, 244, 256, 261, 267, 284, 289, 290, 324, 409, 410, 412, 415, 431, 436, 438, 440, 451, 510, 528, 694, 766, 775, 785, 786, 790, 799, 802], "lack": [99, 243, 244, 409, 410, 412, 431, 436, 440, 757, 759], "trie": [99, 620, 644], "ll": [99, 178, 352, 394, 621, 632, 633, 641, 659, 758, 759, 761, 775, 777, 785, 791, 795, 800, 807], "abc": [99, 225, 227, 303, 637, 759, 761, 766, 796], "consecut": [100, 107, 122, 183, 797], "man": [100, 107, 168, 221, 311, 315, 316, 321, 379, 380, 385, 404, 447, 602, 605, 606, 607, 725, 728, 757, 762, 764, 768, 769, 772, 774, 778, 780, 782, 784, 788, 789, 790, 803], "schutz": [100, 311, 315, 316, 321, 757, 780], "ch": [100, 107, 168, 181, 221, 759], "fsnlp": 100, "promo": 100, "nsp": 100, "perl": [100, 107, 165, 168, 220, 221, 660, 803], "ngram": [100, 101, 102, 103, 107, 131, 191, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 311, 315, 316, 321, 471, 473, 680, 681, 683, 699, 700, 703, 742, 757, 777, 785, 795, 808], "sourceforg": [100, 808], "net": [100, 408, 422, 500, 519, 808], "filter": [100, 103, 107, 126, 128, 132, 141, 186, 189, 193, 198, 256, 257, 261, 271, 285, 293, 301, 397, 453, 464, 537, 585, 602, 604, 608, 630, 657, 706, 707, 708, 709, 710, 711, 712, 713, 714, 732, 735, 740, 759, 763, 784, 785, 788, 803], "retain": [100, 221, 646], "bigramcollocationfind": [100, 757], "trigramcollocationfind": [100, 757], "bigram_measur": [100, 757], "trigram_measur": [100, 757], "abstractcollocationfind": [100, 101, 102, 103], "bigram": [100, 101, 102, 103, 293, 299, 304, 311, 321, 471, 473, 474, 646, 680, 681, 742, 757, 780, 785], "from_word": [100, 101, 102, 103, 757], "word_fd": [100, 101, 102, 103, 757], "bigram_fd": [100, 101, 103, 757], "window_s": [100, 101, 102, 103, 602, 605, 606, 757], "default_w": [100, 101, 102, 103], "church": [100, 101, 107, 168, 221, 223, 486, 495, 685, 803], "hank": [100, 101], "1990": [100, 101, 107, 166, 219, 324, 489], "ratio": [100, 101, 242, 311, 312, 315, 316, 321, 356, 357, 408, 411, 413, 414, 416, 418, 419, 420, 421, 423, 424, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 681, 687, 688, 757, 798], "score_ngram": [100, 101, 102, 103, 757], "score_fn": [100, 101, 102, 103, 321], "w1": [100, 101, 102, 103, 311, 315, 316, 321, 757], "w2": [100, 101, 102, 103, 311, 315, 316, 321, 757], "factor": [100, 101, 324, 408, 413, 415, 424, 533, 675, 677, 694, 700, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 725, 728, 801], "quadgramcollocationfind": [100, 757], "quadgram": [100, 102, 315, 321], "quadgram_fd": [100, 102], "iii": [100, 102, 223, 701], "ixi": [100, 102], "ixxi": [100, 102], "iixi": [100, 102], "ixii": [100, 102], "w3": [100, 102, 103, 193, 315, 316, 321, 445, 753, 757], "w4": [100, 102, 315, 321], "wildcard_fd": [100, 103], "trigram_fd": [100, 103], "bigram_find": [100, 103], "finder": [100, 101, 102, 103, 781], "unigram": [100, 103, 293, 294, 295, 299, 300, 302, 303, 304, 305, 311, 315, 316, 321, 474, 496, 516, 528, 533, 680, 681, 682, 683, 702, 703, 785, 791, 795], "above_scor": [101, 102, 103, 757], "min_scor": [101, 102, 103, 500, 519, 533], "decreas": [101, 102, 103, 218, 242, 402, 475, 676, 679, 725, 728, 759, 785, 786], "apply_freq_filt": [101, 102, 103, 757], "min_freq": [101, 102, 103, 471, 473, 791], "candid": [101, 102, 103, 107, 168, 221, 351, 533, 537, 599, 622, 646, 678, 692, 693, 694, 698, 704, 748, 774, 779, 803, 808], "apply_ngram_filt": [101, 102, 103, 757], "apply_word_filt": [101, 102, 103, 757], "from_docu": [101, 102, 103], "nbest": [101, 102, 103, 757], "add_py3_data": 104, "py3_data": 104, "init_func": 104, "align": [105, 107, 108, 133, 175, 220, 242, 319, 324, 326, 554, 592, 668, 670, 671, 672, 673, 674, 675, 678, 679, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 703, 705, 748, 796, 808], "bcp47": [105, 107], "bnc": [105, 107, 110, 126, 186, 207, 747, 808], "bracket_pars": [105, 107, 706, 721], "categorized_s": [105, 107], "chasen": [105, 107], "cmudict": [105, 107, 113, 759], "comparative_s": [105, 107, 759], "framenet": [105, 107, 126, 166, 219, 747, 808], "indian": [105, 107, 214, 602, 605, 606, 759, 808], "ipipan": [105, 107, 128], "knbc": [105, 107, 130, 776], "lin": [105, 107, 131, 168, 221, 681, 803, 808], "markdown": [105, 107, 808], "mte": [105, 107], "nkjp": [105, 107, 135, 808], "nombank": [105, 107, 137, 576, 759], "nps_chat": [105, 107], "opinion_lexicon": [105, 107, 139], "opinion": [105, 107, 139, 149, 182, 204, 205, 209, 474, 759], "panlex_lit": [105, 107], "panlex_swadesh": [105, 107], "pl196x": [105, 107, 143], "plaintext": [105, 107, 115, 125, 144, 164, 192, 217, 359, 646], "ppattach": [105, 107], "propbank": [105, 107, 126, 146, 186, 747, 767, 808], "pros_con": [105, 107, 147], "review": [105, 107, 149, 177, 197, 474, 759, 786, 791, 808], "custom": [105, 107, 119, 144, 149, 159, 163, 168, 180, 197, 201, 213, 216, 221, 243, 248, 249, 251, 602, 604, 651, 654, 671, 672, 673, 674, 675, 680, 681, 690, 691, 692, 693, 694, 746, 759, 762, 778, 790, 808], "semcor": [105, 107, 150, 803], "sensev": [105, 107, 808], "sentiwordnet": [105, 107, 153, 747, 808], "sinica_treebank": [105, 107, 759], "string_categori": [105, 107], "switchboard": [105, 107, 759, 808], "timit": [105, 107, 160, 161, 213, 808], "udhr": [105, 107, 164, 808], "verbnet": [105, 107, 166, 808], "wordlist": [105, 107, 759, 808], "xmldoc": [105, 107], "ycoe": [105, 107, 171], "nltk_data": [105, 107, 112, 125, 135, 144, 164, 179, 192, 194, 201, 217, 225, 227, 228, 696, 697, 746, 753, 759, 760], "instal": [105, 224, 225, 227, 408, 409, 415, 432, 564, 602, 605, 606, 616, 737, 739, 759, 760, 793, 808], "filenam": [105, 107, 126, 186, 187, 189, 194, 206, 225, 227, 242, 289, 359, 377, 401, 445, 454, 469, 471, 473, 474, 483, 492, 533, 663, 664, 665, 752, 759, 761], "addition": [105, 107, 221, 289, 318, 464, 482, 490, 518, 737, 759], "para": [105, 107, 114, 115, 116, 117, 118, 119, 125, 128, 132, 134, 143, 144, 145, 147, 159, 161, 164, 171, 173, 178, 180, 189, 192, 193, 200, 201, 213, 223, 464, 759, 785, 810], "tagged_word": [105, 107, 109, 110, 111, 112, 114, 117, 118, 119, 121, 122, 124, 128, 129, 130, 132, 134, 135, 136, 143, 150, 154, 157, 159, 161, 171, 173, 175, 176, 178, 179, 180, 183, 185, 188, 189, 190, 193, 194, 196, 200, 207, 212, 213, 223, 408, 410, 749, 753, 757, 759, 776, 785], "tagged_s": [105, 107, 109, 110, 111, 112, 114, 117, 118, 119, 121, 122, 124, 128, 129, 130, 132, 134, 143, 150, 154, 159, 161, 171, 173, 175, 176, 178, 179, 180, 183, 185, 188, 189, 193, 200, 207, 213, 223, 356, 357, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 527, 528, 749, 753, 759, 776, 785, 786, 795], "tagged_para": [105, 107, 114, 117, 118, 119, 128, 132, 134, 143, 159, 161, 171, 176, 178, 180, 189, 193, 200, 213, 223, 759], "chunked_s": [105, 107, 119, 121, 122, 180, 183, 759, 788], "parsed_s": [105, 107, 109, 111, 114, 121, 122, 124, 130, 154, 171, 173, 176, 183, 185, 223, 358, 398, 759, 762, 784, 785, 787, 806], "parsed_para": [105, 107, 114, 176, 759], "xml": [105, 107, 109, 110, 112, 126, 128, 132, 135, 136, 137, 143, 146, 148, 150, 162, 166, 170, 175, 176, 179, 186, 189, 193, 194, 195, 196, 200, 203, 206, 207, 208, 215, 219, 222, 227, 289, 660, 749, 753, 759, 787, 797, 808], "elementtre": [105, 107, 166, 175, 193, 194, 207, 219, 222, 289, 663, 666, 742, 759, 787, 797], "raw": [105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 192, 194, 216, 225, 227, 377, 401, 514, 567, 630, 657, 739, 746, 759, 761, 777, 785, 796, 798], "unprocess": [105, 107, 759], "brown": [105, 107, 126, 169, 186, 221, 225, 356, 357, 396, 405, 408, 410, 496, 509, 510, 516, 524, 525, 526, 528, 630, 657, 690, 691, 692, 693, 694, 695, 746, 753, 757, 759, 767, 769, 777, 786, 796, 803, 808], "join": [105, 107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 207, 212, 218, 219, 221, 222, 223, 225, 227, 318, 358, 390, 395, 398, 485, 493, 533, 536, 634, 639, 646, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 752, 755, 759, 761, 762, 766, 768, 769, 785, 788, 794, 798, 803, 806], "fulton": [105, 107, 510, 516, 528, 746, 759, 796], "counti": [105, 107, 211, 510, 516, 528, 746, 759, 796], "grand": [105, 107, 293, 299, 304, 510, 516, 528, 746, 759, 785, 796], "juri": [105, 107, 510, 516, 528, 746, 759, 796], "said": [105, 107, 356, 396, 510, 516, 528, 632, 659, 746, 757, 759, 777, 787, 788, 796], "alignedcorpusread": [107, 172], "corpusread": [107, 108, 113, 116, 118, 119, 120, 122, 123, 127, 128, 129, 131, 137, 140, 141, 144, 146, 147, 149, 151, 153, 155, 157, 159, 160, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 187, 188, 189, 191, 195, 197, 198, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 653, 759], "word_token": [107, 108, 116, 120, 124, 125, 144, 147, 149, 159, 163, 164, 172, 177, 182, 185, 192, 201, 204, 205, 213, 216, 217, 406, 408, 409, 415, 474, 496, 525, 586, 616, 618, 621, 628, 641, 642, 646, 654, 758, 779, 796, 806, 808], "whitespacetoken": [107, 108, 116, 120, 147, 159, 172, 177, 182, 204, 213, 474, 616, 647, 660], "gap": [107, 108, 116, 119, 120, 124, 125, 144, 147, 149, 159, 172, 175, 177, 180, 182, 185, 201, 204, 205, 213, 623, 630, 647, 648, 657, 687, 688, 796], "discard_empti": [107, 108, 116, 119, 120, 124, 125, 144, 147, 149, 159, 172, 177, 180, 182, 185, 201, 204, 205, 213, 623, 647, 648], "flag": [107, 108, 116, 119, 120, 124, 125, 144, 147, 149, 159, 168, 172, 177, 180, 182, 185, 201, 204, 205, 213, 221, 227, 237, 238, 243, 245, 408, 409, 415, 421, 505, 514, 521, 585, 616, 623, 634, 639, 646, 647, 648, 661, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 731, 733, 734, 735, 736, 740, 746, 804, 808], "dotal": [107, 108, 116, 119, 120, 124, 125, 144, 147, 149, 159, 172, 177, 180, 182, 185, 201, 204, 205, 213, 623, 647], "sent_token": [107, 108, 116, 119, 120, 124, 125, 144, 159, 164, 172, 177, 180, 182, 185, 192, 201, 213, 217, 406, 474, 616, 621, 641, 759, 785, 791, 808], "regexptoken": [107, 108, 119, 124, 159, 172, 180, 185, 213, 617, 635, 636, 647, 648, 759], "alignedsent_block_read": [107, 108, 172], "read_alignedsent_block": [107, 108, 172, 218], "latin1": [107, 108, 164, 172, 217], "txt": [107, 108, 120, 125, 134, 144, 146, 147, 149, 159, 160, 161, 164, 172, 182, 192, 198, 201, 203, 204, 205, 213, 214, 217, 223, 225, 318, 472, 475, 565, 583, 602, 605, 730, 741, 757, 758, 759, 761, 769, 784, 785, 798], "aligned_s": [107, 108, 172, 668, 679, 798], "aligneds": [107, 108, 172, 670, 671, 672, 673, 674, 675, 679, 690, 691, 692, 693, 694, 695, 798, 808], "utter": [107, 108, 110, 112, 115, 117, 119, 125, 132, 134, 144, 145, 159, 160, 161, 164, 172, 175, 179, 180, 192, 193, 201, 212, 213, 214, 351, 759], "alpinocorpusread": [107, 176], "bracketparsecorpusread": [107, 109, 114, 176, 223, 759], "alpino": [107, 109, 176, 227], "dutch": [107, 109, 138, 176, 220, 464, 485, 493, 624, 649, 759, 788, 794, 808], "breakdown": [107, 109, 176, 209, 792], "embed": [107, 109, 176, 731], "_pars": [107, 109, 130, 173, 176, 190], "unfortun": [107, 109, 176, 289, 759], "put": [107, 109, 166, 176, 219, 243, 248, 252, 288, 293, 350, 639, 759, 765, 766, 787, 805], "tag_": [107, 109, 176], "word_": [107, 109, 176], "_tag": [107, 109, 130, 173, 176, 190, 242], "_word": [107, 109, 130, 173, 176, 190], "overridden": [107, 109, 175, 176, 194, 207, 222, 227, 242, 289, 432, 448, 459, 460, 497, 498, 502, 503, 504, 508, 510, 515, 516, 528, 646], "_normal": [107, 109, 176], "untouch": [107, 109, 176], "8859": [107, 109, 164, 176, 217, 225, 507, 522, 785, 795], "tagset": [107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 158, 159, 161, 162, 165, 166, 167, 169, 170, 171, 173, 175, 176, 178, 179, 180, 183, 184, 185, 186, 188, 189, 193, 196, 198, 199, 200, 207, 210, 212, 213, 219, 221, 222, 223, 496, 523, 525, 526, 757, 759, 808], "comment_char": [107, 109, 111, 176, 218, 406, 759], "detect_block": [107, 109, 111, 176], "block": [107, 109, 111, 119, 125, 130, 144, 158, 164, 172, 173, 176, 180, 185, 188, 189, 190, 192, 197, 200, 201, 205, 208, 214, 217, 218, 289, 438, 451, 630, 657, 685, 731, 759], "unindented_paren": [107, 109, 111, 176], "unind": [107, 109, 111, 176], "tagged_": [107, 109, 110, 111, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 169, 170, 171, 173, 175, 176, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 207, 212, 219, 221, 222, 223, 759], "bcp47corpusread": [107, 174], "bcp": [107, 174, 291, 808], "47": [107, 174, 291, 500, 519, 621, 624, 633, 641, 649, 659, 660, 759, 795, 796, 808], "subtag": [107, 174], "sd": [107, 174, 291], "extens": [107, 119, 174, 180, 225, 227, 284, 307, 324, 377, 399, 401, 445, 482, 490, 505, 521, 646, 669, 679, 752, 759, 761, 774, 790], "oc": [107, 174], "gascon": [107, 174], "fr64": [107, 174], "occitan": [107, 174], "post": [107, 136, 174, 196, 621, 633, 641, 659, 731, 740, 746, 753, 759, 788, 796, 808], "1500": [107, 174], "pyr\u00e9n\u00e9": [107, 174], "atlantiqu": [107, 174], "wikidata": [107, 174, 291], "load_wiki_q": [107, 174], "wiki_q": [107, 174], "en": [107, 128, 132, 138, 174, 189, 193, 220, 324, 341, 479, 523, 628, 654, 660, 731, 732, 735, 740, 742, 750, 757, 759, 760, 798], "spangli": [107, 174], "q79388": [107, 174], "data_dict": [107, 174], "registri": [107, 174], "lang2str": [107, 174], "lg_record": [107, 174], "colon": [107, 174, 214, 406, 448, 529, 632, 659, 761, 794], "ca": [107, 138, 174, 220, 291, 310, 318, 319, 483, 492, 628, 632, 633, 654, 659], "latn": [107, 174, 291], "es": [107, 138, 166, 168, 174, 219, 220, 221, 291, 750, 785], "valencia": [107, 174, 291], "catalan": [107, 138, 174, 220, 291, 808], "latin": [107, 164, 174, 217, 225, 291, 464, 507, 522, 742, 785], "spain": [107, 174, 291, 752], "valencian": [107, 174, 291], "parse_tag": [107, 174], "subdiv_dict": [107, 174], "subdiv": [107, 174], "cldr": [107, 174], "subdivis": [107, 174], "val2str": [107, 174], "wiki_dict": [107, 174], "bnccorpusread": [107, 175, 749], "xmlcorpusread": [107, 110, 112, 126, 135, 136, 143, 148, 150, 166, 175, 179, 186, 194, 196, 200, 206, 207, 219, 222], "british": [107, 110, 175, 784], "nation": [107, 110, 135, 175, 182, 194, 205, 496, 602, 605, 606, 788, 808], "ota": [107, 110, 175, 223], "ox": [107, 110, 175], "ac": [107, 110, 175, 223, 285, 453, 464, 742, 785], "uk": [107, 110, 175, 223, 285, 742, 759, 810], "desc": [107, 110, 141, 175, 198, 211], "2554": [107, 110, 175], "archiv": [107, 110, 175, 223, 289, 808], "instanti": [107, 110, 126, 175, 186, 256, 263, 293, 303, 305, 399, 448, 460, 485, 493, 509, 524, 622, 639, 646, 754, 765, 803], "pathpoint": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 183, 184, 185, 186, 188, 189, 196, 197, 198, 199, 200, 207, 208, 212, 213, 218, 219, 221, 222, 223, 225], "implicitli": [107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 207, 212, 219, 221, 222, 223, 242, 256, 257, 261, 759], "file_id": [107, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 136, 138, 139, 140, 141, 142, 148, 150, 151, 154, 156, 157, 162, 165, 166, 167, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 207, 212, 219, 221, 222, 223], "byte": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 178, 179, 183, 184, 185, 186, 189, 196, 198, 199, 207, 212, 219, 221, 222, 223, 225, 227, 585, 731, 742, 759, 761, 776, 803], "strip_spac": [107, 110, 112, 175, 179], "trail": [107, 110, 112, 175, 179, 448, 497, 528, 572, 663, 664, 665, 666, 759, 797], "c5": [107, 110, 175, 749], "simplifi": [107, 110, 175, 274, 276, 277, 278, 281, 283, 284, 430, 433, 435, 448, 454, 459, 460, 739, 759, 763, 770, 771, 785, 808], "syntaxcorpusread": [107, 111, 124, 130, 154, 173, 176, 185, 190, 210], "delin": [107, 111, 176, 759], "penn": [107, 111, 137, 146, 176, 195, 203, 359, 490, 496, 564, 633, 659, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 751, 759, 762, 767, 787, 808], "littl": [107, 111, 126, 176, 186, 206, 390, 475, 533, 644, 703, 767, 801], "bark": [107, 111, 176, 761, 763, 764, 765, 778, 790, 803], "utf8": [107, 111, 113, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 151, 154, 155, 156, 159, 160, 162, 163, 164, 165, 167, 171, 173, 176, 177, 178, 180, 182, 183, 184, 185, 190, 193, 195, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 218, 223, 289, 356, 357, 396, 405, 469, 474, 529, 616, 624, 649, 655, 663, 664, 665, 666, 737, 742, 759, 787, 797], "childescorpusread": [107, 179], "talkbank": [107, 112, 179, 753, 808], "mlu": [107, 112, 179, 753], "speaker": [107, 112, 160, 179, 212, 214, 753, 759], "ag": [107, 112, 179, 242, 753, 759, 765], "month": [107, 112, 179, 753, 808], "year": [107, 112, 179, 358, 398, 509, 524, 602, 605, 606, 753, 757, 759, 762, 796], "childes_url_bas": [107, 112, 179], "php": [107, 112, 179], "url": [107, 112, 126, 163, 177, 179, 186, 216, 225, 227, 289, 356, 357, 396, 406, 731, 737, 742, 761], "convert_ag": [107, 112, 179], "age_year": [107, 112, 179], "caclcul": [107, 112, 179], "corpus_property_kei": [107, 112, 179], "particip": [107, 112, 126, 166, 179, 186, 219, 753, 767, 785], "participant_property_kei": [107, 112, 179], "relat": [107, 112, 126, 168, 177, 179, 182, 186, 197, 204, 205, 206, 221, 227, 243, 256, 257, 261, 289, 329, 341, 359, 379, 382, 390, 430, 432, 440, 442, 445, 446, 451, 454, 457, 460, 464, 466, 585, 608, 674, 693, 752, 753, 759, 762, 763, 766, 767, 785], "choic": [107, 112, 179, 395, 402, 805], "mot": [107, 112, 179, 668, 671, 672, 673, 674, 675, 679, 690, 691, 692, 693, 694, 753, 798], "mother": [107, 112, 126, 179, 186, 753, 767, 804], "exclud": [107, 112, 126, 179, 186, 508, 518, 528, 535, 625, 646, 651, 652, 691, 692, 693, 694, 766, 795], "relation_list": [107, 112, 179], "info": [107, 112, 126, 170, 179, 186, 214, 222, 226, 227, 240, 722, 727, 767], "test_relation_list": [107, 112, 179], "gold_relation_list": [107, 112, 179], "origin": [107, 112, 133, 179, 206, 214, 220, 221, 226, 242, 256, 257, 261, 314, 359, 379, 380, 397, 474, 478, 479, 482, 488, 490, 493, 494, 518, 536, 591, 621, 632, 634, 639, 641, 645, 646, 657, 659, 660, 681, 682, 683, 686, 689, 693, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728, 743, 744, 753, 774, 787, 794, 799, 801, 803, 806, 808], "wat": [107, 112, 179, 702, 703], "watch": [107, 112, 179, 242, 307, 415, 791, 808], "dependent_index": [107, 112, 179], "webview_fil": [107, 112, 179], "urlbas": [107, 112, 179], "websit": [107, 112, 179, 482, 490, 631, 658, 808], "cha": [107, 112, 179, 641], "mirror": [107, 112, 179], "folder": [107, 112, 179, 569, 746, 760], "hierarchi": [107, 112, 179, 242, 432, 628, 654, 737], "psy": [107, 112, 179], "cmu": [107, 112, 114, 176, 179, 181, 696, 697, 759, 808], "eng": [107, 112, 168, 179, 221, 496, 525, 526, 753, 760, 803], "usa": [107, 112, 179, 197, 205, 480, 488, 527, 658, 753, 810], "cornel": [107, 112, 177, 179], "romanc": [107, 112, 179, 757, 759, 785, 786], "spanish": [107, 112, 138, 179, 214, 220, 485, 493, 677, 704, 788, 794, 808], "aguirr": [107, 112, 179], "neither": [107, 112, 179, 256, 257, 261, 435, 460, 475, 791, 795], "unmodifi": [107, 112, 179, 474, 488], "hope": [107, 112, 179, 767], "cmudictcorpusread": [107, 181], "lowercas": [107, 113, 181, 460, 469, 479, 482, 490, 583, 645, 646, 790, 796], "pronunci": [107, 113, 181, 759, 808], "transcript": [107, 113, 160, 181, 214, 759, 808], "categorizedbracketparsecorpusread": [107, 176], "categorizedcorpusread": [107, 114, 115, 116, 117, 143, 145, 147, 173, 176, 177, 192, 200, 201, 204, 213, 786], "nathan": [107, 114, 176, 759, 808, 810], "schneider": [107, 114, 176, 810], "nschneid": [107, 114, 176, 810], "cs": [107, 114, 138, 176, 177, 181, 182, 197, 204, 205, 220, 319, 341, 516, 518, 528, 696, 697, 754, 774, 790, 796], "cat_pattern": [107, 114, 115, 117, 143, 145, 173, 176, 192, 200, 201, 213], "cat_map": [107, 114, 115, 117, 143, 145, 173, 176, 192, 200, 201, 213], "cat_fil": [107, 114, 115, 117, 143, 145, 173, 176, 192, 200, 201, 213], "parsed_word": [107, 114, 176], "mixin": [107, 173], "aid": [107, 173, 347], "cat_delimit": [107, 143, 173, 200], "categorizedplaintextcorpusread": [107, 145, 192, 201], "plaintextcorpusread": [107, 115, 125, 145, 164, 192, 201, 217, 224, 759], "categorizedsentencescorpusread": [107, 177], "row": [107, 116, 177, 240, 350, 356, 357, 445, 474, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 706, 715, 722, 752, 780, 795, 805], "mainli": [107, 116, 177, 243, 247, 653, 737, 759, 761], "istanc": [107, 116, 177], "retriev": [107, 116, 122, 126, 139, 168, 177, 182, 183, 186, 197, 212, 221, 225, 227, 294, 295, 296, 297, 298, 300, 302, 303, 341, 408, 417, 447, 453, 464, 478, 523, 685, 687, 688, 705, 729, 731, 732, 740, 741, 759, 763, 780, 808], "subject": [107, 116, 177, 205, 240, 352, 381, 382, 394, 445, 453, 464, 474, 750, 770, 788, 791], "dataset": [107, 116, 120, 147, 149, 177, 182, 204, 205, 206, 474, 482, 490, 759, 769, 791, 807], "23": [107, 116, 126, 177, 186, 356, 396, 400, 536, 616, 621, 624, 633, 641, 649, 659, 660, 686, 689, 753, 759, 774, 781, 784, 791, 796], "televis": [107, 116, 177, 759], "him": [107, 116, 177, 706, 714, 759, 796], "famou": [107, 116, 177, 681, 759], "hi": [107, 116, 177, 223, 379, 380, 482, 490, 633, 659, 759, 762, 791, 798, 803, 808], "biggest": [107, 116, 177, 759], "hit": [107, 116, 177, 703, 759, 785, 803], "happen": [107, 116, 177, 536, 731, 759, 803], "screen": [107, 116, 177, 347, 731, 735, 739, 740, 759], "obj": [107, 116, 177, 290, 356, 358, 390, 396, 398, 445, 464, 497, 498, 499, 504, 508, 509, 510, 515, 516, 518, 524, 528, 535, 536, 753, 759, 761, 762, 764, 765, 770, 791], "subj": [107, 116, 177, 445, 454, 464, 753, 759, 763, 764, 765, 766, 770, 785, 791], "smart": [107, 116, 177, 759, 791], "alert": [107, 116, 177, 289, 759, 791], "thirteen": [107, 116, 177, 759, 791], "polar": [107, 116, 177, 474, 759], "sentence_polar": [107, 116, 177], "simplist": [107, 116, 177, 500, 519, 759], "silli": [107, 116, 177, 759], "tediou": [107, 116, 177, 293, 759], "laddish": [107, 116, 177, 759], "juvenil": [107, 116, 177, 759], "teenag": [107, 116, 177, 759], "boi": [107, 116, 177, 429, 703, 759, 763, 764, 765, 784, 790], "funni": [107, 116, 177, 759, 791], "corpusview": [107, 115, 116, 120, 125, 139, 144, 145, 147, 149, 163, 164, 177, 182, 197, 201, 204, 205, 216, 218, 759], "streambackedcorpusview": [107, 115, 116, 120, 125, 144, 145, 147, 149, 158, 163, 164, 172, 177, 178, 180, 182, 185, 188, 189, 197, 200, 201, 204, 205, 208, 213, 216, 218, 222, 225, 759], "break": [107, 116, 120, 125, 144, 147, 149, 163, 164, 177, 182, 192, 201, 204, 205, 216, 217, 356, 396, 622, 630, 646, 654, 657, 742, 750, 759, 769, 785, 791, 799, 802, 803], "paragraph": [107, 115, 116, 117, 119, 120, 125, 126, 132, 134, 144, 145, 147, 149, 159, 161, 164, 177, 178, 180, 182, 186, 192, 193, 201, 204, 205, 213, 217, 630, 645, 657, 685, 759, 791], "categorizedtaggedcorpusread": [107, 213, 759], "taggedcorpusread": [107, 117, 132, 134, 161, 193, 213, 223, 759], "chasencorpusread": [107, 178], "sent_splitt": [107, 118, 178], "chunkedcorpusread": [107, 180], "chunktre": [107, 119, 180], "blank": [107, 119, 122, 125, 129, 139, 144, 159, 167, 180, 183, 188, 197, 201, 213, 220, 350, 617, 619, 647, 653, 663, 759], "str2chunktre": [107, 119, 180], "para_block_read": [107, 119, 124, 125, 144, 159, 164, 180, 185, 192, 201, 213, 217], "read_blankline_block": [107, 119, 124, 125, 144, 159, 180, 185, 201, 213, 218], "chunked_para": [107, 119, 180], "chunked_word": [107, 119, 121, 122, 180, 183], "comparativesentencescorpusread": [107, 182], "jindal": [107, 120, 182], "liu": [107, 120, 139, 149, 182, 197, 204, 205, 474, 687, 688], "2006": [107, 120, 166, 182, 219, 324, 333, 646, 722, 727], "comparative_sent": [107, 120, 182], "comparison": [107, 120, 182, 205, 318, 319, 324, 408, 518, 572, 616, 630, 642, 657, 681, 736, 748, 759, 798, 799, 803], "fast": [107, 120, 126, 181, 182, 186, 479, 500, 519, 533, 537, 742, 759, 795], "rewind": [107, 120, 182, 759], "smoothli": [107, 120, 182, 759], "ve": [107, 120, 168, 182, 221, 224, 621, 632, 633, 641, 659, 759, 791, 795, 796, 808], "entity_2": [107, 120, 182, 759], "853": [107, 120, 182, 324, 759], "keywords_readm": [107, 120, 182], "clue": [107, 120, 182], "listofkeyword": [107, 120, 182], "plain": [107, 120, 182, 706, 715, 722], "conllchunkcorpusread": [107, 183, 759], "conllcorpusread": [107, 121, 183, 759], "seri": [107, 122, 183, 510, 521, 528, 695, 754, 808], "grid": [107, 122, 183, 234, 240, 242, 350, 706, 715, 722], "columntyp": [107, 122, 183], "todo": [107, 122, 183, 312, 318, 356, 357, 396, 547, 657, 751, 757, 785], "parallel": [107, 122, 183, 275, 276, 284, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 695, 774], "eg": [107, 122, 166, 183, 219, 221, 476, 514], "docstart": [107, 122, 183], "parsed_docu": [107, 122, 183], "column_typ": [107, 121, 122, 183], "srl": [107, 121, 122, 183], "role": [107, 121, 122, 126, 137, 146, 166, 183, 186, 195, 203, 219, 476, 753, 759, 763, 767, 787, 788, 804, 810], "pos_in_tre": [107, 121, 122, 183], "srl_includes_roleset": [107, 122, 183], "iob_sent": [107, 121, 122, 183], "iob_word": [107, 121, 122, 183], "srl_instanc": [107, 121, 122, 183], "flatten": [107, 121, 122, 183, 293, 306, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 754], "srl_span": [107, 121, 122, 183], "abspath": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 759, 761], "include_encod": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173], "include_fileid": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173], "path_point": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173], "citat": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 221, 699, 700, 743, 744], "bib": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 221], "ensure_load": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 224], "lazycorpusload": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 190, 224], "some_corpu": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173], "decod": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 225, 273, 290, 381, 382, 480, 488, 601, 616, 663, 664, 665, 666, 677, 704, 742, 759, 785, 787, 797, 803, 808], "readm": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 197, 198, 221, 565, 759, 760, 774, 785], "crubadancorpusread": [107, 184], "crubadan_to_iso": [107, 123, 184, 760], "iso_to_crubadan": [107, 123, 184, 760], "lang_freq": [107, 123, 184, 760], "dependencycorpusread": [107, 185], "tabtoken": [107, 124, 185, 653], "europarlcorpusread": [107, 201], "europarl": [107, 125, 201], "chapter": [107, 125, 193, 201, 408, 422, 496, 505, 521, 616, 642, 654, 758, 765, 780, 785, 808], "everyth": [107, 125, 201, 225, 293, 639, 754], "inherit": [107, 125, 126, 186, 201, 289, 293, 298, 305, 321, 408, 759, 767], "reason": [107, 125, 201, 271, 285, 286, 293, 298, 305, 430, 460, 521, 564, 658, 739, 742, 766, 774, 798, 806], "framenetcorpusread": [107, 186], "lu": [107, 126, 186, 767], "3238": [107, 126, 186], "frame": [107, 126, 166, 186, 219, 240, 242, 759], "lexunit": [107, 126, 186, 767], "glint": [107, 126, 186], "frame_by_nam": [107, 126, 186], "prejudic": [107, 126, 186], "framerel": [107, 126, 186, 767], "frame_rel": [107, 126, 186], "lunamepattern": [107, 126, 186], "exemplar": [107, 126, 186], "full_text": [107, 126, 186], "criteria": [107, 126, 186, 210, 686, 689, 753], "buildindex": [107, 126, 186], "faster": [107, 126, 186, 742, 774, 785], "fn_docid": [107, 126, 186], "_type": [107, 126, 186], "fulltextannot": [107, 126, 186], "paragno": [107, 126, 186], "sentno": [107, 126, 186], "docid": [107, 126, 186], "corpid": [107, 126, 186], "apo": [107, 126, 186, 660], "annotationset": [107, 126, 186, 767], "layer": [107, 126, 186], "statu": [107, 126, 186, 207, 227, 731, 732, 740, 767], "unann": [107, 126, 186], "lunam": [107, 126, 186], "luid": [107, 126, 186], "frameid": [107, 126, 186], "framenam": [107, 126, 186], "feid": [107, 126, 186], "regex": [107, 126, 186, 289, 585, 621, 632, 634, 639, 641, 659, 808], "docs_metadata": [107, 126, 186], "field": [107, 126, 155, 162, 186, 192, 199, 211, 214, 215, 379, 445, 474, 657, 663, 664, 665, 666, 679, 737, 739, 752, 759, 808], "78": [107, 126, 186, 621, 624, 633, 641, 649, 659, 759, 796], "107": [107, 126, 186, 642, 654], "resp": [107, 126, 175, 186], "corpnam": [107, 126, 186, 767], "anc": [107, 126, 186], "kbeval": [107, 126, 186], "lucorpu": [107, 126, 186], "v0": [107, 126, 186, 790], "miscellan": [107, 126, 186], "nti": [107, 126, 186], "underscor": [107, 126, 186, 356, 396], "__": [107, 126, 186, 764], "3__20000410_nyt": [107, 126, 186], "20000410_nyt": [107, 126, 186], "fe": [107, 126, 186, 767], "fe2": [107, 126, 186], "lexicograph": [107, 126, 168, 186, 221], "realiz": [107, 126, 186], "overtli": [107, 126, 186], "overt": [107, 126, 186], "fe_rel": [107, 126, 186], "ferel": [107, 126, 186], "isinst": [107, 126, 186, 766, 790, 799, 802], "10020": [107, 126, 186], "12393": [107, 126, 186], "prettydict": [107, 126, 186], "breaklin": [107, 126, 186], "14642": [107, 126, 186], "abounding_with": [107, 126, 186], "lively_plac": [107, 126, 186], "subf": [107, 126, 186], "11370": [107, 126, 186], "degre": [107, 126, 186, 214, 218, 514, 742, 767], "subfenam": [107, 126, 186], "subfram": [107, 126, 186, 767], "1904": [107, 126, 186, 642, 654], "subid": [107, 126, 186], "supid": [107, 126, 186], "2271": [107, 126, 186], "superf": [107, 126, 186], "superfenam": [107, 126, 186], "superfram": [107, 126, 186], "262": [107, 126, 186], "framerelationtyp": [107, 126, 186], "across": [107, 126, 186, 287, 310, 318, 460, 642, 654, 788], "noise_mak": [107, 126, 186], "6043": [107, 126, 186], "sound": [107, 126, 160, 186, 214, 642, 654, 759], "cause_to_make_nois": [107, 126, 186, 767], "sound_mak": [107, 126, 186], "make_nois": [107, 126, 186], "sound_sourc": [107, 126, 186], "sound_mov": [107, 126, 186], "location_of_sound_sourc": [107, 126, 186], "component_sound": [107, 126, 186], "vocal": [107, 126, 175, 186, 803], "attrdict": [107, 126, 186], "fn_fid_or_fnam": [107, 126, 186], "ignorekei": [107, 126, 186], "256": [107, 126, 186, 536, 767, 785], "medical_specialti": [107, 126, 186], "definit": [107, 126, 168, 186, 221, 242, 355, 402, 585, 602, 604, 608, 694, 759, 767, 803, 805], "doesn": [107, 126, 186, 225, 289, 405, 445, 475, 506, 521, 628, 632, 654, 659, 681, 690, 763, 774, 775, 791, 795, 796, 797], "trigger": [107, 126, 168, 186, 221, 234, 242, 481, 489, 536, 742], "imposing_oblig": [107, 126, 186], "1494": [107, 126, 186], "birth": [107, 126, 186, 214, 753], "apply_heat": [107, 126, 186, 767], "etc": [107, 126, 186, 218, 221, 227, 242, 243, 248, 252, 408, 429, 535, 536, 602, 606, 646, 693, 725, 728, 746, 759, 767, 780], "textual": [107, 126, 186, 206, 759, 808], "semtyp": [107, 126, 186, 454, 770], "body_system": [107, 126, 186], "abbrev": [107, 126, 186, 646], "abbrevi": [107, 126, 186, 464, 523, 622, 646, 706, 715, 722, 774, 800], "bod": [107, 126, 186], "coretyp": [107, 126, 186], "core": [107, 126, 186, 396, 445, 447, 634, 639, 765, 790, 810], "peripher": [107, 126, 186], "themat": [107, 126, 166, 186, 219, 759], "requiresf": [107, 126, 186], "excludesf": [107, 126, 186], "fecoreset": [107, 126, 186], "frame_by_id": [107, 126, 186], "fn_fid": [107, 126, 186], "medic": [107, 126, 186], "specialti": [107, 126, 186], "medical_profession": [107, 126, 186], "character": [107, 126, 186, 242, 759], "ralph": [107, 126, 186], "practic": [107, 126, 186, 680, 681, 688, 696, 697, 699, 700, 703, 725, 728, 759, 795, 803, 806], "paediatr": [107, 126, 186], "oncolog": [107, 126, 186], "fn_fname": [107, 126, 186], "check_cach": [107, 126, 186], "frame_ids_and_nam": [107, 126, 186], "frame_relation_typ": [107, 126, 186], "frt": [107, 126, 186], "itemgett": [107, 126, 186, 767], "event": [107, 126, 175, 186, 234, 240, 242, 256, 262, 311, 315, 316, 321, 408, 422, 424, 432, 460, 521, 731, 759, 767, 780, 786], "change_of_consist": [107, 126, 186], "rot": [107, 126, 186], "subframenam": [107, 126, 186], "superframenam": [107, 126, 186], "frame2": [107, 126, 186], "frel": [107, 126, 186], "1676": [107, 126, 186], "2070": [107, 126, 186], "prettylist": [107, 126, 186, 767], "cooking_cr": [107, 126, 186, 767], "maxreprs": [107, 126, 186], "intentionally_cr": [107, 126, 186], "mainentri": [107, 126, 186], "see_also": [107, 126, 186], "referringentri": [107, 126, 186], "274": [107, 126, 186], "dodg": [107, 126, 186], "evad": [107, 126, 186, 767], "1019": [107, 126, 186], "1221": [107, 126, 186], "crim": [107, 126, 186, 767], "200": [107, 126, 186, 500, 519, 731, 739, 740, 759, 767, 780, 785, 795], "criminal_process": [107, 126, 186, 767], "500": [107, 126, 186, 273, 274, 357, 396, 496, 516, 528, 533, 767, 774, 786, 787], "criminal_investig": [107, 126, 186, 767], "692": [107, 126, 186], "crime_scenario": [107, 126, 186], "700": [107, 126, 186, 500, 519], "committing_crim": [107, 126, 186], "brief": [107, 126, 186], "intro": [107, 126, 186], "excerpt": [107, 126, 186, 493], "theori": [107, 126, 186, 432, 642, 654, 767], "ruppenhof": [107, 126, 186], "et": [107, 126, 133, 166, 186, 219, 220, 223, 505, 521, 642, 654, 681, 687, 688, 694, 703, 722, 727, 753, 759, 769, 778], "al": [107, 126, 133, 166, 186, 219, 220, 505, 521, 642, 654, 681, 687, 688, 694, 703, 722, 727, 753, 759, 769, 798, 803], "2010": [107, 126, 186, 690, 691, 692, 693, 694, 695, 702, 703, 704, 753, 798, 810], "script": [107, 126, 186, 199, 235, 241, 242, 292, 449, 645, 659, 660, 699, 700, 702, 703, 767, 791, 803], "conceptu": [107, 126, 186, 221, 293, 408, 425, 533, 536, 767], "prop": [107, 126, 186, 288, 438, 451, 464, 753, 767, 785], "cook": [107, 126, 186, 750, 751, 759, 763, 767, 774], "food": [107, 126, 186, 289, 767, 775], "heating_instru": [107, 126, 186, 767], "evok": [107, 126, 186, 767], "bake": [107, 126, 186, 767], "blanch": [107, 126, 186, 767], "boil": [107, 126, 186, 293, 767], "broil": [107, 126, 186, 767], "simmer": [107, 126, 186, 767], "steam": [107, 126, 186, 767], "IS": [107, 126, 186, 732, 740, 767], "subtyp": [107, 126, 186, 448, 460, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 723, 767], "reveng": [107, 126, 186, 767], "rewards_and_punish": [107, 126, 186, 767], "presuppos": [107, 126, 186, 632, 659, 767], "background": [107, 126, 186, 240, 271, 285, 731, 761, 767], "motion": [107, 126, 186, 348, 767], "subev": [107, 126, 186, 767], "arrest": [107, 126, 186, 767, 788], "arraign": [107, 126, 186, 767], "perspective_on": [107, 126, 186, 767], "perspect": [107, 126, 186, 767, 798], "perspectiv": [107, 126, 186, 767], "hire": [107, 126, 186, 767], "get_a_job": [107, 126, 186, 767], "employment_start": [107, 126, 186, 767], "employ": [107, 126, 186, 767], "employe": [107, 126, 186, 767], "frames_by_lemma": [107, 126, 186, 767], "pat": [107, 126, 186, 377, 401], "attribut": [107, 126, 168, 175, 186, 206, 207, 210, 212, 221, 224, 226, 240, 241, 242, 292, 293, 296, 297, 305, 395, 445, 482, 490, 642, 654, 742, 752, 759, 761, 767, 797, 803, 804], "compos": [107, 126, 175, 183, 186, 194, 207, 222, 395, 397, 474, 767], "lemma": [107, 126, 130, 132, 137, 146, 150, 166, 168, 186, 190, 193, 195, 203, 207, 219, 221, 314, 486, 495, 759, 767, 783, 787], "lexem": [107, 126, 186, 767], "go": [107, 126, 186, 356, 396, 731, 759, 766, 787, 807, 808], "db": [107, 126, 186, 445, 752, 797], "189": [107, 126, 186, 767], "quanti": [107, 126, 186, 767], "2001": [107, 126, 166, 186, 219, 642, 753, 767, 808, 810], "ft_sent": [107, 126, 186], "docnamepattern": [107, 126, 186], "attrnam": [107, 126, 186], "summar": [107, 126, 177, 186, 197, 205, 673, 674, 675, 692, 693, 694], "fn_luid": [107, 126, 186], "placehold": [107, 126, 186, 770], "forese": [107, 126, 186, 767], "cod": [107, 126, 186, 767], "awar": [107, 126, 186, 639, 767], "beforehand": [107, 126, 186, 767], "breakbefor": [107, 126, 186], "headword": [107, 126, 186], "227": [107, 126, 186], "352962": [107, 126, 186], "59699508": [107, 126, 186], "coming_to_believ": [107, 126, 186], "18": [107, 126, 168, 182, 186, 204, 221, 288, 500, 518, 519, 616, 621, 633, 641, 659, 660, 686, 689, 753, 757, 759, 762, 774, 781, 784, 788, 796, 803], "pos_tagset": [107, 126, 186, 767], "gf": [107, 126, 186, 767], "pt": [107, 126, 138, 186, 220, 767, 785, 796], "he": [107, 126, 181, 186, 482, 490, 632, 659, 681, 688, 701, 703, 757, 759, 763, 796], "insid": [107, 126, 186, 225, 356, 357, 374, 396, 402, 405, 447, 559, 625, 639, 651, 652, 725, 728, 766, 796, 805], "hous": [107, 126, 186, 668, 671, 672, 673, 674, 675, 679, 690, 691, 692, 693, 694, 701, 753, 788, 798, 805], "cullei": [107, 126, 186], "notic": [107, 126, 186, 293, 785], "characterist": [107, 126, 186], "c1": [107, 126, 186, 318, 501, 520, 706, 707, 708, 709, 710, 711, 712, 713, 714, 752, 754, 759, 763, 774], "evid": [107, 126, 186, 510, 516, 528, 646, 757, 785, 796], "ini": [107, 126, 186], "cogniz": [107, 126, 186], "totalannot": [107, 126, 186], "incorporatedf": [107, 126, 186], "merger": [107, 126, 186], "total": [107, 126, 186, 214, 218, 227, 293, 299, 304, 311, 321, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 397, 399, 408, 409, 415, 416, 422, 424, 474, 475, 671, 672, 687, 688, 690, 691, 757, 808], "ailment": [107, 126, 186], "sentencecount": [107, 126, 186], "germani": [107, 126, 186, 769, 810], "took": [107, 126, 186, 510, 516, 528, 759, 796, 808], "netherland": [107, 126, 186, 810], "dai": [107, 126, 186, 509, 524, 758, 759, 791, 795], "contrast": [107, 126, 186, 225, 624, 649, 671, 672, 690, 691, 693, 695], "mari": [107, 126, 186, 223, 286, 356, 357, 359, 396, 430, 460, 530, 706, 715, 722, 748, 764, 771, 774, 778, 779, 782, 789, 790, 800, 805], "her": [107, 126, 186, 357, 396, 757, 759, 767], "grandmoth": [107, 126, 186], "lemmaid": [107, 126, 186], "subcorpu": [107, 126, 186], "subcorpora": [107, 126, 186], "nn1": [107, 126, 186, 481, 489, 749], "hood": [107, 126, 181, 186], "That": [107, 126, 186, 194, 758, 765, 766, 774, 795], "principl": [107, 126, 186, 618, 628, 642, 654, 680, 681, 683, 688, 696, 697, 699, 700, 703, 763], "valenc": [107, 126, 186, 472, 475], "here": [107, 126, 186, 214, 221, 226, 243, 247, 289, 293, 310, 318, 321, 324, 445, 479, 485, 493, 509, 524, 529, 539, 608, 677, 690, 694, 695, 703, 704, 752, 758, 759, 763, 766, 769, 774, 775, 777, 785, 788, 790, 795, 796, 798, 803, 808], "too": [107, 126, 147, 186, 204, 218, 472, 475, 634, 639, 675, 692, 693, 694, 703, 757, 759, 766, 775, 791, 796, 803], "though": [107, 126, 186, 293, 301, 310, 318, 324, 325, 382, 499, 518, 702, 703, 759, 766, 796], "lu_bas": [107, 126, 186], "ellips": [107, 126, 186], "account": [107, 126, 186, 285, 289, 293, 324, 333, 379, 380, 680, 681, 691, 694, 731, 746, 805], "framenet2": [107, 126, 186], "icsi": [107, 126, 186], "berkelei": [107, 126, 186, 642], "fnreport": [107, 126, 186], "lu256": [107, 126, 186], "cby": [107, 126, 186], "cdate": [107, 126, 186], "02": [107, 126, 168, 186, 209, 221, 357, 396, 742, 743, 744, 792, 799, 803, 804, 805], "08": [107, 126, 186, 209, 759, 792], "01": [107, 126, 168, 186, 187, 209, 221, 256, 261, 356, 396, 742, 759, 765, 784, 786, 787, 792, 799, 803, 804, 805], "27": [107, 126, 186, 206, 451, 467, 500, 519, 616, 621, 624, 633, 641, 649, 659, 660, 686, 687, 688, 689, 759, 763, 765, 780, 781, 787, 788, 795, 796], "50": [107, 126, 186, 314, 334, 341, 350, 371, 395, 397, 624, 649, 693, 757, 759, 769, 774, 786, 787, 796, 806], "pst": [107, 126, 186, 796], "definitionmarkup": [107, 126, 186], "26": [107, 126, 186, 500, 519, 616, 621, 624, 633, 641, 649, 659, 660, 686, 689, 759, 781, 795, 796], "15082": [107, 126, 186], "fn1_sent": [107, 126, 186], "desir": [107, 126, 186, 227, 241, 319, 505, 506, 521, 745, 759, 767], "lu_ids_and_nam": [107, 126, 186], "11829": [107, 126, 186], "13572": [107, 126, 186], "14733": [107, 126, 186, 767], "14743": [107, 126, 186, 767], "adv": [107, 126, 168, 186, 193, 221, 496, 523, 525, 749, 753, 757, 759, 765, 767, 785, 803], "14744": [107, 126, 186], "bit": [107, 126, 186, 214, 533, 608, 644, 706, 715, 722, 749, 801], "interest": [107, 126, 186, 208, 221, 348, 472, 475, 533, 676, 679, 681, 688, 703, 722, 727, 750, 759, 763, 765, 791, 798, 808], "stimulu": [107, 126, 186], "14894": [107, 126, 186], "14920": [107, 126, 186], "heat": [107, 126, 186, 767], "instrument": [107, 126, 186, 757, 767, 803], "_evoked_": [107, 126, 186, 767], "polysem": [107, 126, 186, 767], "realiti": [107, 126, 186, 767], "link": [107, 126, 135, 186, 192, 194, 221, 583, 585, 608, 685, 731, 746, 759, 767, 803, 808], "michel": [107, 126, 186, 226, 324, 767], "potato": [107, 126, 186, 767], "45": [107, 126, 186, 227, 277, 616, 660, 759, 767, 796], "minut": [107, 126, 186, 660, 731, 740, 759, 767, 796], "cake": [107, 126, 186, 750, 759, 767], "birthdai": [107, 126, 186, 753, 767], "absorb_heat": [107, 126, 186, 767], "30": [107, 126, 186, 227, 273, 285, 341, 344, 616, 621, 624, 633, 641, 646, 649, 659, 660, 733, 734, 735, 736, 740, 753, 759, 767, 781, 785, 795, 796], "constitut": [107, 126, 186, 311, 315, 316, 321, 392, 407, 763, 767], "multiword": [107, 126, 186, 759, 767], "hyphen": [107, 126, 186, 767], "shut": [107, 126, 186, 767], "ey": [107, 126, 181, 186, 767], "idiomat": [107, 126, 186, 767], "nowher": [107, 126, 186, 475, 767], "slip": [107, 126, 186, 767, 808], "isolated_plac": [107, 126, 186, 767], "analyz": [107, 126, 128, 186, 189, 197, 204, 349, 429, 767, 806], "moreov": [107, 126, 186, 293, 767], "approxim": [107, 126, 186, 320, 340, 408, 414, 416, 418, 419, 420, 422, 475, 501, 520, 677, 704, 742, 767], "20": [107, 126, 186, 227, 242, 288, 324, 350, 356, 357, 366, 396, 397, 399, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 602, 604, 605, 606, 630, 657, 660, 685, 686, 689, 731, 733, 736, 739, 753, 757, 759, 767, 769, 774, 780, 781, 785, 787, 788, 795, 796, 798], "illustr": [107, 126, 186, 218, 285, 349, 379, 759, 767, 788], "thesauru": [107, 126, 131, 186, 191, 767], "simplest": [107, 126, 186, 318, 759, 767], "fri": [107, 126, 186, 291, 767], "matild": [107, 126, 186, 767], "catfish": [107, 126, 186, 767], "heavi": [107, 126, 186, 759, 767], "iron": [107, 126, 186, 767], "skillet": [107, 126, 186, 767], "cause_change_of_scalar_posit": [107, 126, 186, 767], "debt": [107, 126, 186, 500, 519, 602, 605, 606, 767, 795], "665": [107, 126, 186, 324, 333, 767], "million": [107, 126, 171, 186, 223, 767, 785], "billion": [107, 126, 186, 206, 500, 519, 759, 767, 769, 795], "asleep": [107, 126, 186, 767], "sleep": [107, 126, 186, 731, 751, 767, 778], "hour": [107, 126, 186, 356, 396, 758, 767], "artifact": [107, 126, 186, 767], "hat": [107, 126, 186, 767], "tower": [107, 126, 186, 767, 791], "pose": [107, 126, 186], "adverb": [107, 126, 168, 186, 221, 486, 495, 500, 510, 519, 523, 528, 767, 795], "prep": [107, 126, 186, 202, 753, 759, 767, 784, 785, 788, 799, 800], "preposit": [107, 126, 140, 186, 202, 464, 523, 693, 754, 759, 767], "num": [107, 126, 175, 186, 193, 207, 211, 273, 277, 285, 445, 451, 480, 488, 500, 519, 523, 602, 605, 606, 752, 753, 757, 759, 763, 765, 767, 784, 785, 790, 793, 795, 799], "intj": [107, 126, 186, 767], "interject": [107, 126, 186, 767], "articl": [107, 126, 186, 347, 500, 510, 519, 528, 750, 759, 767, 795, 808], "scon": [107, 126, 186, 767], "subordin": [107, 126, 186, 767], "propagate_semtyp": [107, 126, 186], "1011": [107, 126, 186], "propag": [107, 126, 186, 242, 438, 451], "Not": [107, 126, 186, 759, 763], "rewritten": [107, 126, 186], "travers": [107, 126, 186, 221, 379, 499, 518, 685, 705, 706, 715, 722, 725, 728, 742, 803], "neighbor": [107, 126, 186, 670, 671, 672, 673, 674, 675, 686, 689, 694, 695], "233": [107, 126, 186, 791], "temperatur": [107, 126, 186], "temp": [107, 126, 186, 390, 761], "semtype_inherit": [107, 126, 186], "st": [107, 126, 186, 223, 481, 483, 484, 489, 491, 492, 493, 505, 521, 529, 660, 796], "superst": [107, 126, 186], "stype": [107, 126, 186], "73": [107, 126, 186, 616, 660, 759, 786, 796], "109": [107, 126, 186, 454, 459, 660, 796], "roottyp": [107, 126, 186], "supertyp": [107, 126, 186], "warn": [107, 126, 168, 186, 218, 221, 274, 276, 278, 281, 283, 284, 289, 537, 695, 742, 754, 774, 799, 808], "enabl": [107, 126, 128, 186, 189, 221, 287, 292, 731, 808], "disabl": [107, 126, 168, 186, 221, 225, 324, 325, 542, 646, 706, 715, 722, 731, 742], "integr": [107, 126, 186, 808], "truthi": [107, 126, 186], "action": [107, 126, 186, 481, 489, 568, 680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 703, 733, 734, 736, 740, 808], "taken": [107, 126, 186, 187, 205, 206, 284, 347, 395, 399, 402, 408, 424, 447, 472, 475, 481, 482, 489, 490, 518, 693, 706, 715, 722, 742, 759, 808], "ieercorpusread": [107, 187], "parsed_doc": [107, 127, 187, 759, 788], "ipipancorpusread": [107, 189], "ipi": [107, 128, 189], "pan": [107, 128, 189, 785], "korpu": [107, 128, 189], "domain": [107, 128, 166, 189, 219, 286, 351, 429, 431, 438, 440, 445, 451, 639, 646, 752, 763, 790, 803, 808, 810], "channel": [107, 128, 189, 214, 805], "metadata": [107, 128, 160, 189, 192, 214, 445, 731, 752, 759], "prasa": [107, 128, 189], "publicystyczni": [107, 128, 189], "simplify_tag": [107, 128, 189, 785], "one_tag": [107, 128, 189], "disamb_onli": [107, 128, 189], "append_no_spac": [107, 128, 189], "append": [107, 128, 189, 225, 240, 243, 245, 310, 318, 382, 436, 445, 458, 474, 671, 672, 673, 674, 675, 677, 690, 691, 692, 693, 694, 704, 706, 707, 708, 709, 710, 711, 712, 713, 719, 731, 741, 759, 761, 769, 782, 797, 799], "append_spac": [107, 128, 189], "amp": [107, 128, 189, 464, 631, 658, 660, 788], "replace_xmlent": [107, 128, 189], "indiancorpusread": [107, 188], "knbcorpusread": [107, 190], "_read_block": [107, 130, 173, 190], "surfac": [107, 130, 190], "pos1": [107, 130, 190], "posid1": [107, 130, 190], "pos2": [107, 130, 190], "posid2": [107, 130, 190], "pos3": [107, 130, 190], "posid3": [107, 130, 190], "corpus1": [107, 130, 190], "kn": [107, 130, 190, 786], "euc": [107, 130, 164, 190, 217], "jp": [107, 130, 164, 190, 217, 702, 703, 808], "morphs2str": [107, 130, 190], "morphlist": [107, 130, 190], "linthesauruscorpusread": [107, 191], "lisp": [107, 131, 191], "thesaurus": [107, 131, 191], "dekang": [107, 131, 191], "badscor": [107, 131, 191], "synonym": [107, 131, 133, 168, 191, 220, 221, 697, 803, 808], "scored_synonym": [107, 131, 191], "lookup": [107, 131, 168, 191, 221, 291, 293, 301, 454, 550, 674, 675, 693, 694, 731, 740, 803], "inner": [107, 131, 191, 379], "ngram1": [107, 131, 191], "ngram2": [107, 131, 191], "mtecorpusread": [107, 193, 808], "tei": [107, 132, 193], "p5": [107, 132, 193, 782], "scheme": [107, 132, 193, 663, 664, 665, 666, 731, 808], "multext": [107, 132, 193, 759, 808], "east": [107, 132, 147, 193, 204, 223, 757, 759, 808], "univers": [107, 132, 142, 181, 182, 193, 197, 199, 205, 208, 284, 319, 356, 357, 396, 477, 480, 488, 493, 496, 501, 520, 523, 525, 526, 529, 642, 654, 658, 690, 691, 692, 693, 694, 695, 704, 757, 759, 763, 769, 778, 781, 798, 808], "oana": [107, 132, 193, 759], "lemma_para": [107, 132, 193], "lemma_s": [107, 132, 193], "lemma_word": [107, 132, 193], "msd": [107, 132, 193, 759], "mwappdbcorpusread": [107, 220], "wordlistcorpusread": [107, 133, 138, 139, 142, 156, 165, 197, 199, 220, 224, 759], "subset": [107, 133, 220, 242, 438, 451, 474, 493, 533, 537, 759, 807, 808], "paraphras": [107, 133, 220], "ppdb": [107, 133, 220, 808], "xxxl": [107, 133, 220], "monolingu": [107, 133, 220], "mwa": [107, 133, 220, 808], "sultan": [107, 133, 220], "2014a": [107, 133, 220], "2014b": [107, 133, 220], "2015": [107, 133, 220, 682, 683, 733, 734, 735, 736, 740, 810], "acl2014": [107, 133, 220, 681, 748], "q14": [107, 133, 220], "1017": [107, 133, 220], "aclweb": [107, 133, 220, 445, 591, 624, 649, 680, 681, 682, 683, 685, 702, 703, 725, 728, 751], "antholog": [107, 133, 220, 445, 591, 624, 649, 680, 681, 682, 683, 685, 702, 703, 725, 728, 751], "s14": [107, 133, 220], "2039": [107, 133, 220], "s15": [107, 133, 220], "2027": [107, 133, 220], "ci": [107, 133, 202, 220, 445, 479, 547, 659, 752, 808], "upenn": [107, 133, 202, 220, 445, 659, 706, 707, 708, 709, 710, 711, 712, 713, 714, 752], "ccb": [107, 133, 220], "uniquepair": [107, 133, 220], "mwa_ppdb_xxxl_fil": [107, 133, 220], "macmorphocorpusread": [107, 213], "mac_morpho": [107, 134, 213, 785], "nkjpcorpusread": [107, 194], "header_mod": [107, 135, 194], "raw_mod": [107, 135, 194], "sents_mod": [107, 135, 189, 194], "words_mod": [107, 135, 189, 194], "polish": [107, 135, 138, 164, 194, 217, 220, 759, 808], "home": [107, 135, 194, 225, 227, 377, 401, 624, 649, 741, 805, 808], "subst": [107, 135, 194, 749], "comp": [107, 135, 194, 523, 753, 759, 765], "poliqarp": [107, 135, 194], "ense2": [107, 135, 194], "wilk": [107, 135, 194], "wilkdom": [107, 135, 194], "wilkwilczi": [107, 135, 194], "add_root": [107, 135, 194], "get_path": [107, 135, 194], "npschatcorpusread": [107, 196], "wrap_etre": [107, 136, 148, 166, 170, 196, 219, 222], "tagged_post": [107, 136, 196, 759], "ie": [107, 126, 136, 143, 148, 166, 170, 187, 196, 200, 206, 222, 287, 430, 460, 514, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728], "xml_post": [107, 136, 196, 759], "nombankcorpusread": [107, 195], "augment": [107, 137, 146, 175, 195, 203, 207, 240, 445, 782], "themselv": [107, 137, 146, 170, 193, 194, 195, 203, 222, 623, 647, 759, 767], "frameset": [107, 137, 146, 195, 203, 787], "turn_on": [107, 137, 146, 195, 203, 787], "coars": [107, 137, 146, 195, 203, 523, 787], "roleset": [107, 137, 146, 183, 195, 203, 759, 787], "nomfil": [107, 137, 195], "framefil": [107, 137, 146, 195, 203], "nounsfil": [107, 137, 195], "parse_fileid_xform": [107, 137, 146, 195, 203], "parse_corpu": [107, 137, 146, 195, 203], "resolv": [107, 137, 146, 195, 203, 270, 279, 285, 430, 432, 433, 435, 460, 764, 774, 803, 808], "baseform": [107, 137, 146, 195, 203], "nombankinst": [107, 137, 195], "roleset_id": [107, 137, 146, 195, 203], "nonbreakingprefixescorpusread": [107, 220], "nonbreak": [107, 138, 220], "mose": [107, 138, 220, 645, 660, 808], "available_lang": [107, 138, 220], "czech": [107, 138, 164, 217, 220, 658, 759], "de": [107, 138, 220, 223, 242, 307, 341, 358, 390, 398, 479, 483, 492, 758, 759, 785, 788, 798], "el": [107, 138, 220, 291, 660, 750, 759, 782, 785, 786, 796], "fi": [107, 138, 220, 628, 654, 785], "finnish": [107, 138, 220, 485, 493, 759, 794], "fr": [107, 138, 220, 760, 770, 798], "french": [107, 138, 220, 485, 493, 658, 693, 759, 794, 803], "german": [107, 138, 220, 291, 479, 485, 493, 642, 658, 765, 773, 794, 796, 808], "greek": [107, 138, 164, 217, 220, 291], "hu": [107, 138, 139, 149, 197, 204, 205, 220, 474, 808], "hungarian": [107, 138, 220, 485, 493, 759, 794], "iceland": [107, 138, 220], "italian": [107, 138, 220, 485, 493, 624, 649, 794], "latvian": [107, 138, 220], "lv": [107, 138, 141, 198, 220], "portugues": [107, 138, 220, 483, 485, 492, 493, 759, 794, 808], "ro": [107, 138, 220], "romanian": [107, 138, 220, 485, 493, 759, 794], "ru": [107, 138, 220, 496, 523, 525, 526], "russian": [107, 138, 206, 220, 485, 493, 496, 525, 526, 658, 794, 808], "sk": [107, 138, 220], "sl": [107, 138, 220], "slovak": [107, 138, 220, 759], "slovenian": [107, 138, 220, 759], "sv": [107, 138, 220], "swedish": [107, 138, 220, 485, 493, 794], "ta": [107, 138, 220, 621, 632, 633, 641, 659], "tamil": [107, 138, 164, 217, 220], "ignore_lines_startswith": [107, 133, 138, 142, 156, 165, 167, 220], "nonbreaking_prefix": [107, 138, 220], "nbp": [107, 138, 220], "\u0b85": [107, 138, 220], "\u0b86": [107, 138, 220], "\u0b87": [107, 138, 220], "\u0b88": [107, 138, 220], "\u0b89": [107, 138, 220], "opinionlexiconcorpusread": [107, 197, 759], "abnorm": [107, 139, 197, 759, 782], "abolish": [107, 139, 197, 759], "alphabet": [107, 139, 197, 242, 350, 454, 505, 506, 521, 636, 642, 646, 647, 654, 759, 766], "abomin": [107, 139, 197, 759], "abort": [107, 139, 197, 759], "ignorereadmecorpusview": [107, 139, 197], "ppattachmentcorpusread": [107, 202], "sentence_id": [107, 140, 202], "noun1": [107, 140, 202, 759], "noun2": [107, 140, 202, 759], "attach": [107, 140, 202, 358, 398, 731, 759], "panlexlitecorpusread": [107, 198], "meaning_q": [107, 141, 198], "dnx2": [107, 141, 198], "mn": [107, 141, 198], "uq": [107, 141, 198], "ap": [107, 141, 198, 752, 759, 785, 788], "ui": [107, 141, 198, 314, 783], "ex2": [107, 141, 198], "tt": [107, 141, 198, 500, 519, 630, 657, 795, 796], "dnx": [107, 141, 198], "ex": [107, 141, 198, 286, 356, 357, 359, 432, 460, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 731, 732, 740, 759, 785, 795], "ON": [107, 141, 198, 758], "AND": [107, 141, 198, 288, 455, 460, 536], "BY": [107, 141, 198], "translation_q": [107, 141, 198], "AS": [107, 141, 198, 214], "trq": [107, 141, 198], "language_varieti": [107, 141, 198], "lc": [107, 141, 168, 198, 221, 630, 657, 797, 803, 808], "panlex": [107, 141, 142, 198, 199, 808], "unspecifi": [107, 141, 198, 243, 255, 395, 774], "seven": [107, 141, 198, 223], "uniform": [107, 141, 198, 395, 408, 423, 424, 670, 671, 672, 673, 674, 675, 680, 681, 690, 691, 692, 693, 694, 695, 706, 715, 722, 791], "expr_uid": [107, 141, 198], "expr_tt": [107, 141, 198], "from_uid": [107, 141, 198], "from_tt": [107, 141, 198], "to_uid": [107, 141, 198], "panlexswadeshcorpusread": [107, 199], "swadesh": [107, 142, 199, 808], "david": [107, 142, 199, 808], "kamholz": [107, 142, 199], "jonathan": [107, 142, 199], "pool": [107, 142, 199], "susan": [107, 142, 199, 324, 642, 654], "colowick": [107, 142, 199], "2014": [107, 142, 199, 475, 658, 681, 748, 810], "resourc": [107, 142, 166, 199, 209, 219, 225, 307, 507, 522, 731, 759, 806], "panlingu": [107, 142, 199], "lrec": [107, 142, 199], "conf": [107, 142, 199, 390], "proceed": [107, 142, 177, 182, 197, 199, 202, 204, 205, 210, 314, 324, 355, 390, 402, 479, 680, 681, 682, 683, 696, 697, 699, 700, 702, 703, 743, 744], "lrec2014": [107, 142, 199], "1029_paper": [107, 142, 199], "cc0": [107, 142, 199], "creativecommon": [107, 142, 199, 210], "publicdomain": [107, 142, 199], "legalcod": [107, 142, 199], "get_languag": [107, 142, 199], "get_macrolanguag": [107, 142, 199], "language_cod": [107, 142, 199], "words_by_iso639": [107, 142, 199], "iso63_cod": [107, 142, 199], "words_by_lang": [107, 142, 199], "lang_cod": [107, 142, 199], "pl196xcorpusread": [107, 200], "decode_tag": [107, 143, 200], "head_len": [107, 143, 158, 200], "2770": [107, 143, 200], "textid": [107, 143, 158, 200], "ident": [107, 143, 168, 200, 221, 293, 296, 305, 322, 324, 342, 343, 381, 382, 445, 505, 521, 752, 757, 787, 799, 803], "accommod": [107, 143, 200, 432], "finer": [107, 143, 200], "granular": [107, 143, 200], "skip": [107, 144, 158, 164, 172, 178, 180, 185, 188, 189, 197, 200, 201, 208, 213, 217, 218, 287, 324, 326, 356, 357, 396, 474, 501, 520, 547, 564, 645, 682, 683, 742, 781], "prefac": [107, 144, 158, 172, 178, 180, 185, 188, 189, 197, 200, 201, 208, 213, 218, 223], "wordpuncttoken": [107, 125, 144, 147, 149, 201, 204, 205, 474, 647], "punktsentencetoken": [107, 125, 144, 201, 616, 646, 650, 661, 761, 785], "webtext": [107, 125, 144, 164, 192, 201, 217, 759], "portuguesecategorizedplaintextcorpusread": [107, 201], "propbankcorpusread": [107, 203], "propfil": [107, 146, 203], "verbsfil": [107, 146, 203], "propbankinst": [107, 146, 203, 759, 787], "prosconscorpusread": [107, 204], "pro": [107, 147, 204, 433, 434, 448, 750, 753, 759, 763, 764, 785], "con": [107, 147, 204, 759], "batteri": [107, 147, 204, 759, 807], "switch": [107, 147, 204, 687, 688, 759, 784, 808], "easi": [107, 147, 204, 293, 455, 518, 537, 639, 759, 771, 798, 806, 808], "maneuv": [107, 147, 204, 759, 805], "gulp": [107, 147, 204, 759], "integratedpro": [107, 147, 204, 759], "econom": [107, 147, 204, 390, 759], "rtecorpusread": [107, 206], "challeng": [107, 148, 206, 808], "docstr": [107, 148, 206, 226, 240, 289, 533], "abov": [107, 148, 168, 206, 221, 306, 430, 445, 460, 500, 514, 519, 618, 642, 646, 670, 671, 672, 673, 674, 675, 695, 746, 752, 757, 759, 760, 766, 767, 785, 786, 787, 798, 799, 803], "reviewscorpusread": [107, 205], "2004": [107, 149, 177, 197, 205, 210, 681], "moment": [107, 149, 205, 682, 683, 765], "product_reviews_1": [107, 149, 205], "camera_review": [107, 149, 205, 759], "canon_g3": [107, 149, 205, 759], "purchas": [107, 149, 205, 759, 808], "canon": [107, 149, 205, 221, 223, 464, 759], "powershot": [107, 149, 205, 759], "g3": [107, 149, 205, 431, 451, 759, 770, 790], "extrem": [107, 149, 205, 475, 759, 761], "satisfi": [107, 149, 205, 284, 293, 301, 324, 390, 438, 451, 536, 759], "pictur": [107, 149, 205, 731, 758, 759], "camera": [107, 149, 205, 759], "stat": [107, 149, 205, 318, 500, 519, 533, 759], "n_review": [107, 149, 205, 759], "feat": [107, 149, 205, 759], "tot": [107, 149, 205, 759], "15": [107, 149, 187, 205, 241, 288, 324, 337, 342, 356, 357, 358, 398, 475, 478, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 624, 649, 681, 686, 689, 740, 742, 749, 753, 755, 759, 762, 765, 772, 774, 781, 784, 785, 795, 799], "24": [107, 149, 187, 205, 293, 356, 396, 489, 500, 518, 519, 616, 621, 624, 633, 641, 649, 659, 660, 686, 689, 755, 757, 759, 781, 787, 795, 796], "strength": [107, 149, 205, 472, 475, 806], "semcorcorpusread": [107, 207], "chunk_sent": [107, 150, 207, 759], "tagged_chunk": [107, 150, 207, 759], "plu": [107, 150, 207, 243, 247, 284, 430, 433, 435, 460, 464, 608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 759, 778, 785, 806, 808], "sensevalcorpusread": [107, 208], "sentisynset": [107, 209], "pos_scor": [107, 152, 209, 792], "neg_scor": [107, 152, 209, 792], "synset": [107, 152, 168, 169, 209, 221, 742, 743, 744, 799, 804, 805, 808], "obj_scor": [107, 152, 209, 792], "sentiwordnetcorpusread": [107, 209], "all_senti_synset": [107, 153, 209, 792], "senti_synset": [107, 153, 209, 792], "sinicatreebankcorpusread": [107, 210], "sinica": [107, 154, 210, 706, 721, 724, 759, 808], "stringcategorycorpusread": [107, 211], "swadeshcorpusread": [107, 220], "switchboardcorpusread": [107, 212], "tagged_discours": [107, 157, 212], "tagged_turn": [107, 157, 212], "teicorpusview": [107, 200], "corpus_fil": [107, 158, 172, 178, 185, 188, 200, 213], "group_by_s": [107, 158, 172, 178, 180, 185, 188, 200, 213], "group_by_para": [107, 158, 178, 180, 200, 213], "block_read": [107, 158, 172, 178, 180, 185, 188, 189, 197, 200, 208, 213, 218, 759], "startpo": [107, 158, 172, 178, 180, 185, 188, 189, 197, 200, 208, 213, 218], "read_block": [107, 158, 172, 178, 180, 185, 188, 189, 193, 194, 200, 208, 213, 218, 222, 759], "str2tupl": [107, 159, 213, 530], "word1": [107, 159, 213], "tag1": [107, 159, 213], "word2": [107, 159, 213], "tag2": [107, 159, 213], "word3": [107, 159, 213], "tag3": [107, 159, 213], "upper": [107, 159, 213, 242, 479, 646, 706, 708, 709, 710, 712, 713, 714, 734, 740, 785, 803], "timitcorpusread": [107, 214], "layout": [107, 160, 214], "timitd": [107, 160, 214], "spkrinfo": [107, 160, 214, 759], "subdirectori": [107, 160, 187, 214, 224, 227, 741, 759], "wrd": [107, 160, 214, 759], "phn": [107, 160, 214, 759], "phonet": [107, 160, 214, 319, 554, 759], "wav": [107, 160, 214, 759], "audiodata": [107, 160, 214], "filetyp": [107, 160, 214], "phone_tim": [107, 160, 214, 759], "16khz": [107, 160, 214], "phone_tre": [107, 160, 214, 759], "phone": [107, 160, 214, 356, 396, 586, 634, 639, 759, 808], "plai": [107, 160, 214, 379, 380, 759, 762, 763, 766, 806], "audio": [107, 160, 214], "sent_tim": [107, 160, 214, 759], "sentid": [107, 160, 214, 759], "spkrid": [107, 160, 214, 759], "someth": [107, 160, 214, 226, 293, 298, 305, 759, 767, 770, 788, 803], "spkrutteranceid": [107, 160, 214], "transcription_dict": [107, 160, 214], "utteranceid": [107, 160, 214, 759], "dialect": [107, 160, 214], "sex": [107, 160, 214, 753, 759], "sent_typ": [107, 160, 214], "region": [107, 160, 214, 242, 445], "gender": [107, 160, 214, 759, 766, 784], "word_tim": [107, 160, 214, 759], "timittaggedcorpusread": [107, 213], "toolboxcorpusread": [107, 215], "unwrap": [107, 162, 215, 289, 663, 664, 665, 666, 797], "unicode_field": [107, 162, 215, 663, 664, 665, 666], "lx": [107, 162, 215, 797], "twittercorpusread": [107, 216, 739], "tweet": [107, 163, 216, 474, 634, 639, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 759, 808], "json": [107, 163, 216, 225, 290, 359, 474, 731, 734, 737, 739, 740, 759], "environment": [107, 163, 216], "invok": [107, 163, 216, 284, 485, 493, 507, 510, 514, 522, 528, 621, 641, 763], "os": [107, 163, 216, 318, 390, 483, 492, 759, 761, 782, 785, 797, 806], "dump": [107, 163, 216, 218, 445, 622, 646, 756, 784, 786, 796, 799], "sort_kei": [107, 163, 216], "tweettoken": [107, 163, 216, 474, 586, 639, 808], "deserialis": [107, 163, 216], "screenanam": [107, 163, 216], "hashtag": [107, 163, 216, 472, 475, 731, 737], "udhrcorpusread": [107, 217], "hebrew": [107, 164, 217], "arab": [107, 164, 217, 477, 478, 480, 485, 488, 493, 583, 586, 759, 794, 808], "cp1256": [107, 164, 217], "czech_ceski": [107, 164, 217], "cp1250": [107, 164, 217], "latin2": [107, 164, 217], "polish_polski": [107, 164, 217], "cyril": [107, 164, 217], "sji": [107, 164, 217], "gb2312": [107, 164, 217], "hungarian_magyar": [107, 164, 217], "16": [107, 164, 214, 217, 240, 288, 356, 357, 358, 398, 478, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 624, 649, 660, 683, 686, 689, 706, 715, 722, 753, 755, 759, 762, 781, 783, 787, 791, 795, 796], "le": [107, 164, 217, 464, 687, 688], "amahuaca": [107, 164, 217], "turkish_turkc": [107, 164, 217], "turkish": [107, 164, 217], "latin5": [107, 164, 217], "lithuanian_lietuviskai": [107, 164, 217], "baltic": [107, 164, 217], "latin4": [107, 164, 217], "japanese_nihongo": [107, 164, 217], "ji": [107, 164, 217], "iso2022_jp": [107, 164, 217], "chinese_mandarin": [107, 164, 217], "hz": [107, 164, 217], "abkhaz": [107, 164, 217], "abkh": [107, 164, 217], "cp1251": [107, 164, 217], "amhar": [107, 164, 217], "afenegus6": [107, 164, 217], "60375": [107, 164, 217], "armenian": [107, 164, 217], "dallakhelv": [107, 164, 217], "azeri_azerbaijani_cyril": [107, 164, 217], "az": [107, 164, 217], "cyr": [107, 164, 217], "normal0117": [107, 164, 217], "azeri_azerbaijani_latin": [107, 164, 217], "lat0117": [107, 164, 217], "bhojpuri": [107, 164, 217], "agra": [107, 164, 217], "burmese_myanmar": [107, 164, 217], "winresearch": [107, 164, 217], "err": [107, 164, 217], "esperanto": [107, 164, 217], "t61": [107, 164, 217], "gujarati": [107, 164, 217], "lao": [107, 164, 217], "magahi": [107, 164, 217], "marathi": [107, 164, 188, 217, 808], "navaho_din": [107, 164, 217], "navajo": [107, 164, 217], "navaho": [107, 164, 217], "russian_russki": [107, 164, 217], "tigrinya_tigrigna": [107, 164, 217], "vg2main": [107, 164, 217], "vietnames": [107, 164, 217, 658], "tcvn": [107, 164, 217], "viqr": [107, 164, 217], "unicharscorpusread": [107, 220], "perldoc": [107, 165, 220], "perluniprop": [107, 165, 220], "tussl": [107, 165, 220], "cpan": [107, 165, 220], "bdfoi": [107, 165, 220], "11": [107, 165, 205, 220, 288, 357, 358, 379, 380, 396, 398, 642, 657, 660, 668, 679, 681, 686, 689, 749, 753, 755, 756, 758, 759, 762, 766, 767, 774, 781, 784, 785, 789, 795, 796, 800, 803, 807, 808], "lib": [107, 165, 220, 225, 227], "pm": [107, 165, 220, 733, 734, 735, 736, 740, 759, 761, 796], "available_categori": [107, 165, 220], "close_punctu": [107, 165, 220], "currency_symbol": [107, 165, 220], "isalnum": [107, 165, 220], "isalpha": [107, 165, 220, 757], "islow": [107, 165, 220], "isn": [107, 165, 220, 382, 475, 496, 525, 632, 659, 760, 791, 795, 799], "issc": [107, 165, 220], "isso": [107, 165, 220], "isupp": [107, 165, 220], "line_separ": [107, 165, 220], "open_punctu": [107, 165, 220], "char": [107, 165, 220, 406, 651, 653, 660, 759, 778], "pup": [107, 165, 220], "verbnetcorpusread": [107, 219], "site": [107, 166, 219, 731, 785, 808], "vn": [107, 166, 219], "kipper": [107, 166, 219], "schuler": [107, 166, 219], "largest": [107, 166, 219, 306, 349, 803], "hierarch": [107, 166, 219, 241, 242, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728], "broad": [107, 166, 219], "coverag": [107, 166, 219, 432], "miller": [107, 166, 219], "fellbaum": [107, 166, 219], "1998": [107, 166, 181, 187, 193, 219, 292, 742, 759], "xtag": [107, 166, 219], "baker": [107, 166, 219], "colorado": [107, 166, 219], "mpalmer": [107, 166, 219], "classid": [107, 166, 219, 759], "wordnetid": [107, 166, 219, 759], "vnclass_id": [107, 166, 219], "vnclass": [107, 166, 219, 759], "longid": [107, 166, 219, 759], "shortid": [107, 166, 219, 759], "37": [107, 166, 219, 518, 621, 624, 633, 641, 649, 659, 660, 759, 781, 796], "confess": [107, 166, 219, 759], "pprint": [107, 166, 183, 186, 219, 221, 408, 415, 706, 707, 708, 709, 710, 711, 712, 713, 714, 742, 759, 762, 766, 767, 770, 803], "pprint_fram": [107, 166, 219], "pprint_memb": [107, 166, 219], "pprint_subclass": [107, 166, 219], "pprint_themrol": [107, 166, 219], "themrol": [107, 166, 219, 759], "fileid_or_classid": [107, 166, 219], "wordnetcorpusread": [107, 221, 696, 697, 803], "adj_sat": [107, 168, 221], "morphological_substitut": [107, 168, 221], "er": [107, 168, 181, 187, 221, 479, 701, 758, 773, 785], "est": [107, 168, 221, 785, 786], "se": [107, 168, 221, 359, 759, 785], "xe": [107, 168, 221], "ze": [107, 168, 221, 800], "che": [107, 168, 221], "she": [107, 168, 181, 221, 357, 396, 749, 751, 753, 757, 796], "sh": [107, 168, 181, 221], "men": [107, 168, 221], "ed": [107, 168, 181, 221, 285, 500, 510, 519, 528, 642, 654, 742, 780, 795], "ing": [107, 168, 221, 484, 491, 500, 510, 519, 528, 750, 758, 788, 795], "omw_read": [107, 168, 221], "add_exomw": [107, 168, 221], "omw": [107, 168, 221, 808], "wn": [107, 168, 221, 742, 799, 803, 804, 805], "intrins": [107, 168, 221], "eng_wikt": [107, 168, 221], "per_s": [107, 168, 221], "as_such": [107, 168, 221], "add_omw": [107, 168, 221, 803], "add_prov": [107, 168, 221], "multilingu": [107, 168, 221, 646, 803, 808], "proven": [107, 168, 221, 286, 782], "all_eng_synset": [107, 168, 221], "all_lemma_nam": [107, 168, 221, 803], "all_omw_synset": [107, 168, 221], "all_synset": [107, 168, 221, 803, 808], "custom_lemma": [107, 168, 221], "tab_fil": [107, 168, 221], "princeton": [107, 168, 221, 803], "omwn": [107, 168, 221], "omw1": [107, 168, 221], "digraph": [107, 168, 221, 359, 493, 742], "maxdepth": [107, 168, 221, 742, 802], "attr": [107, 168, 198, 221, 241, 742], "graph": [107, 168, 221, 242, 359, 377, 378, 379, 380, 381, 382, 390, 401, 408, 409, 415, 454, 521, 722, 727, 742, 803, 808], "visualis": [107, 168, 221], "program": [107, 168, 221, 235, 241, 242, 285, 289, 351, 359, 392, 395, 397, 407, 432, 449, 482, 485, 490, 493, 505, 521, 602, 605, 685, 725, 728, 742, 753, 806, 808], "graphviz": [107, 168, 221, 359, 742], "imag": [107, 168, 192, 221, 359, 464, 731, 742], "dependencygraph": [107, 168, 221, 358, 377, 378, 379, 380, 381, 382, 390, 398, 401, 454, 742, 759, 762, 770, 810], "dot2img": [107, 168, 221, 359, 742], "dot_str": [107, 168, 221, 359, 742], "longest": [107, 168, 221, 256, 257, 261, 642, 695, 803], "global": [107, 168, 206, 221, 292, 474, 739, 742, 803], "cycl": [107, 168, 221, 359, 379, 380, 742, 766, 803], "canin": [107, 168, 221, 742, 799, 803], "carnivor": [107, 168, 221, 742, 799, 803], "placent": [107, 168, 221, 742, 803], "chordat": [107, 168, 221, 742, 799, 803], "domestic_anim": [107, 168, 221, 742, 803], "living_th": [107, 168, 221, 742, 803], "mammal": [107, 168, 221, 742, 799, 803], "vertebr": [107, 168, 221, 742, 803], "physical_ent": [107, 168, 221, 742, 803], "disable_custom_lemma": [107, 168, 221], "mistakenli": [107, 168, 221], "get_vers": [107, 168, 221, 803], "ic": [107, 168, 169, 221, 474, 743, 744, 803, 808], "weight_senses_equ": [107, 168, 221], "syns": [107, 168, 221], "3333": [107, 168, 221], "index_sens": [107, 168, 221], "jcn_similar": [107, 168, 221, 803], "synset1": [107, 168, 221, 803], "synset2": [107, 168, 221, 803], "jiang": [107, 168, 221, 803], "conrath": [107, 168, 221, 803], "subsum": [107, 168, 221, 243, 244, 245, 246, 287, 379, 380, 803], "ancestor": [107, 168, 221, 242, 608, 706, 708, 712, 720, 803], "s1": [107, 168, 221, 256, 257, 261, 285, 324, 325, 326, 341, 344, 479, 634, 639, 669, 679, 742, 763, 774, 780, 790, 796, 803], "s2": [107, 168, 221, 324, 325, 326, 341, 344, 479, 669, 679, 742, 763, 774, 780, 790, 796, 803], "wordnet_": [107, 168, 169, 221, 803], "lch_similar": [107, 168, 221, 803], "simulate_root": [107, 168, 221, 803], "leacock": [107, 168, 221, 803], "chodorow": [107, 168, 221, 803], "taxonomi": [107, 168, 221, 782, 803], "2d": [107, 168, 221, 803], "fake": [107, 168, 221, 803], "well": [107, 168, 183, 208, 221, 242, 293, 445, 536, 622, 642, 646, 660, 687, 688, 725, 728, 752, 759, 766, 774, 777, 785, 787, 796, 798], "lemma_count": [107, 168, 221], "lemma_from_kei": [107, 168, 221, 803], "lin_similar": [107, 168, 221, 803], "map_to_mani": [107, 168, 221], "map_to_on": [107, 168, 221], "map_wn30": [107, 168, 221], "morphi": [107, 168, 221, 486, 495], "check_except": [107, 168, 221], "affix": [107, 168, 221, 476, 477, 478, 483, 484, 485, 487, 491, 492, 493, 497, 528, 794], "aardwolv": [107, 168, 221, 486, 495, 803], "aardwolf": [107, 168, 221, 486, 495, 759, 803], "abaci": [107, 168, 221, 486, 495, 803], "abacu": [107, 168, 221, 486, 495, 803], "hardrock": [107, 168, 221, 486, 495, 803], "of2ss": [107, 168, 221], "path_similar": [107, 168, 221, 803], "hypernym": [107, 168, 221, 742, 799, 803], "hypnoym": [107, 168, 221, 803], "res_similar": [107, 168, 221, 803], "resnik": [107, 168, 221, 803], "ss2of": [107, 168, 221], "ss": [107, 168, 221, 621, 630, 632, 633, 641, 657, 659, 791, 805], "synset_from_pos_and_offset": [107, 168, 221, 803], "1740": [107, 168, 221], "synset_from_sense_kei": [107, 168, 221, 803, 808], "sense_kei": [107, 168, 221], "senseidx5wn": [107, 168, 221], "lex_sens": [107, 168, 221], "ss_type": [107, 168, 221], "lex_filenum": [107, 168, 221], "lex_id": [107, 168, 221], "head_word": [107, 168, 221], "head_id": [107, 168, 221], "digit": [107, 168, 221, 341, 460, 509, 524, 632, 659], "satellit": [107, 168, 221, 486, 495, 808], "head": [107, 168, 183, 192, 221, 256, 258, 259, 262, 359, 378, 379, 381, 382, 390, 693, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 721, 724, 725, 728, 762, 774, 787, 788], "drive": [107, 168, 221, 445, 752, 759, 803], "04": [107, 168, 197, 205, 209, 210, 221, 753, 786, 787, 792, 803, 805], "03": [107, 168, 209, 221, 703, 725, 728, 753, 759, 792, 803, 805], "wup_similar": [107, 168, 221, 803], "wu": [107, 168, 221, 687, 688, 803], "palmer": [107, 168, 221, 803], "previous": [107, 168, 221, 346, 471, 473, 663, 664, 665, 666, 694, 706, 707, 708, 709, 710, 711, 712, 713, 714, 803], "_not_": [107, 168, 221], "agre": [107, 168, 221, 318, 535, 794, 803], "pedersen": [107, 168, 208, 221, 311, 321, 798, 803], "now": [107, 168, 221, 293, 537, 687, 688, 757, 758, 759, 761, 763, 765, 766, 770, 775, 784, 785, 786, 791, 795, 796, 799, 803, 808], "necessarili": [107, 168, 221, 497, 528, 694, 706, 708, 712, 720, 803], "deepest": [107, 168, 221, 803], "longer": [107, 168, 218, 221, 242, 346, 376, 402, 507, 522, 677, 688, 701, 704, 706, 715, 722, 759, 761, 799, 803, 808], "wordneticcorpusread": [107, 221], "icfil": [107, 169, 221], "dat": [107, 169, 221, 803], "spec": [107, 170, 222, 536, 770], "ycoecorpusread": [107, 223], "york": [107, 171, 187, 214, 223, 356, 357, 396, 616, 619, 621, 626, 632, 633, 635, 636, 641, 645, 647, 653, 655, 659, 660, 690, 691, 692, 693, 694, 695, 704, 793, 796], "toronto": [107, 171, 223, 319], "helsinki": [107, 171, 223], "old": [107, 171, 223, 288, 358, 398, 494, 602, 605, 606, 742, 753, 759, 762, 796, 803, 808], "prose": [107, 171, 223], "find_corpus_fileid": [107, 218], "tagged_treebank_para_block_read": [107, 218], "modul": [138, 148, 165, 168, 431, 480, 501, 505, 538, 548, 549, 590, 624, 689, 752, 759, 761, 763, 766, 771, 774, 787, 788, 790, 799, 803, 808], "worri": [158, 218], "although": [158, 218, 240, 356, 357, 396, 646, 725, 728, 755, 759, 769, 788, 795, 796], "upon": [158, 218, 347, 379, 380, 408, 417, 422, 424, 435, 460, 509, 524, 621, 641, 731, 758, 759, 796], "garbag": [158, 218, 505, 521], "start_tok": [158, 218], "alignedsentcorpusview": 172, "bncsentenc": 175, "bncwordview": 175, "xmlcorpusview": [175, 193, 194, 207, 222], "editor": [175, 788], "handle_elt": [175, 193, 194, 207, 222], "elt": [175, 193, 194, 207, 222], "inclus": [175, 194, 207, 222, 533, 535], "unless": [175, 194, 207, 218, 222, 225, 782], "elt_handl": [175, 193, 194, 207, 222], "foo": [175, 186, 194, 207, 222, 289, 628, 645, 654, 754, 761, 766, 777, 786, 790, 796, 808], "baz": [175, 194, 207, 222, 766, 777], "grandpar": [175, 194, 207, 222, 725, 728], "handle_head": 175, "handle_s": [175, 207], "handle_word": [175, 207], "tags_to_ignor": 175, "paus": 175, "pb": 175, "unclear": [175, 759], "technic": [175, 725, 728], "natcorp": 175, "urg": [175, 759], "ref": [175, 187, 312, 329, 334, 341, 432, 433, 448, 678, 682, 683, 687, 688, 698, 700, 703], "titl": [175, 187, 192, 205, 223, 237, 238, 242, 408, 409, 415, 759], "bo": [177, 285, 432, 447, 455, 765, 778], "pang": [177, 474, 808], "lillian": 177, "lee": [177, 181, 474, 750, 765, 808], "peopl": [177, 221, 310, 318, 346, 602, 605, 606, 725, 728, 805], "pabo": 177, "movi": [177, 474, 791, 808], "permiss": [177, 182, 188, 197, 202, 204, 205, 208, 227], "paper": [177, 182, 197, 202, 204, 205, 318, 324, 347, 379, 479, 482, 490, 518, 591, 681, 682, 683, 702, 703, 757, 808], "educ": [177, 214, 806], "analysi": [177, 205, 314, 319, 324, 330, 390, 470, 471, 473, 474, 475, 479, 602, 605, 630, 657, 757, 759, 808], "acl": [177, 208, 624, 649, 680, 681, 696, 697, 725, 728, 808], "star": [177, 455], "exploit": 177, "2005": [177, 197, 204, 292, 379, 380, 455, 488, 686, 689, 810], "chasencorpusview": 178, "chasenread": 178, "taggedcorpusview": [178, 213, 759], "corpus_root": [179, 753], "save": [179, 225, 227, 390, 471, 473, 501, 509, 520, 524, 533, 602, 603, 633, 659, 731, 753, 761, 763, 765, 769], "nltk_data_dir": 179, "chunkedcorpusview": 180, "carnegi": 181, "mellon": 181, "pronounc": 181, "ftp": [181, 761], "copyright": [181, 226, 227, 292, 319], "uppercas": [181, 460, 646, 796], "altern": [181, 201, 227, 289, 306, 356, 357, 382, 396, 408, 412, 485, 493, 535, 537, 625, 651, 706, 715, 722, 757, 759, 761, 764, 774, 778, 784, 800, 807, 808], "vowel": [181, 319, 481, 489, 493, 618, 628, 642, 654], "stress": 181, "secondari": [181, 634, 639, 759], "ae1": [181, 759], "er0": [181, 759], "ah0": [181, 759], "127069": 181, "119400": 181, "6830": 181, "839": 181, "39": [181, 759, 772, 784], "aa": [181, 759, 760, 778], "odd": [181, 657], "ae": [181, 759], "ah": [181, 749], "hut": 181, "hh": [181, 759], "ao": [181, 310, 318, 483, 492, 759, 785], "ought": [181, 780, 795], "aw": 181, "cow": 181, "ay": 181, "iy": 181, "chees": 181, "dee": [181, 764], "dh": [181, 759], "thee": 181, "eh": [181, 759], "hurt": [181, 533, 759], "ate": [181, 772, 784], "fee": [181, 765], "ih": 181, "jh": [181, 759], "gee": 181, "knee": 181, "ng": [181, 703, 759, 785], "ping": 181, "ow": [181, 481, 489], "oat": 181, "oy": 181, "toi": [181, 225, 746, 761, 808], "pee": 181, "sea": [181, 445, 757], "tea": 181, "theta": [181, 464], "uh": [181, 475, 759], "uw": [181, 791], "vee": 181, "zee": 181, "zh": [181, 627, 656], "seizur": 181, "read_cmudict_block": 181, "nitin": [182, 808], "bing": [182, 197, 204, 205], "depart": [182, 197, 205, 477], "sicenc": 182, "illinoi": [182, 197, 205], "chicago": [182, 197, 205], "contact": [182, 197, 204, 205, 227, 292, 796], "njindal": 182, "uic": [182, 197, 204, 205], "liub": [182, 197, 204, 205], "acm": [182, 197, 205, 489, 699, 700, 743, 744, 808], "sigir": [182, 314, 489], "confer": [182, 197, 202, 204, 205, 475, 478, 682, 683, 743, 744, 808], "mine": [182, 197, 204, 205, 209, 759], "compr": 182, "twenti": 182, "artifici": [182, 205, 286, 477, 533, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 801], "intellig": [182, 205, 286, 477, 791], "aaai": [182, 205], "murthi": [182, 204], "ganapathibhotla": [182, 204], "22nd": [182, 204], "cole": [182, 204, 681], "2008": [182, 204, 205, 774, 810], "manchest": [182, 204], "22": [182, 197, 204, 356, 357, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 624, 649, 686, 689, 753, 759, 766, 781, 784, 786, 787, 788, 795], "august": [182, 204, 808], "comp_typ": 182, "entity_1": 182, "gradabl": 182, "equ": 182, "superl": 182, "conllsrlinst": 183, "verb_head": 183, "verb_stem": 183, "tagged_span": 183, "argspan": 183, "argid": [183, 195, 203, 787], "conllsrlinstancelist": 183, "include_tre": 183, "gather": [184, 618, 642, 646, 742, 796], "potenti": [184, 243, 256, 318, 646, 759, 763, 766], "goal": [184, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 706, 721, 724, 774, 782], "dependencycorpusview": 185, "stackoverflow": 186, "com": [186, 205, 225, 227, 240, 292, 307, 377, 401, 483, 492, 493, 523, 538, 547, 559, 567, 583, 592, 631, 645, 658, 660, 682, 683, 722, 727, 731, 737, 739, 740, 742, 746, 750, 753, 758, 759, 761, 769, 777, 785, 796, 803, 807, 808], "14620633": 186, "8879": 186, "frameneterror": 186, "futur": [186, 203, 284, 399, 477, 478, 677, 704, 735, 740, 759, 799, 805], "proxi": [186, 224, 732, 740, 742], "adapt": [186, 639, 641, 722, 727], "gist": 186, "github": [186, 225, 493, 538, 547, 559, 567, 583, 592, 631, 645, 658, 660, 682, 683, 722, 727, 731, 742, 745, 750, 758, 769, 777, 796, 803, 807, 808], "sergei": 186, "miryanov": 186, "2935416": 186, "loader": [186, 290], "repr": [186, 243, 247, 464, 533, 536, 754, 759, 799], "prettylazyconcaten": 186, "prettylazyiteratorlist": 186, "prettylazymap": 186, "speciallist": 186, "NOT": [186, 455, 460, 471, 473, 514, 699, 700], "typ": [186, 291, 646], "mimic_wrap": 186, "wrap_at": 186, "65": [186, 757, 759, 772, 784], "textwrap": [186, 759], "recognit": [187, 506, 521, 788, 808], "1999": [187, 210, 292, 341], "itl": 187, "gov": [187, 324], "iad": 187, "894": 187, "er_99": 187, "htm": [187, 210, 223], "newswir": 187, "develop": [187, 202, 225, 285, 432, 445, 479, 485, 493, 500, 519, 538, 699, 700, 731, 745, 752, 761, 765, 795, 796, 808], "ie_er_99": 187, "devtest": 187, "nwt": 187, "shorten": 187, "apw_19980314": [187, 759], "apw_19980424": [187, 759], "apw_19980429": [187, 759], "nyt_19980315": [187, 759, 788], "nyt_19980403": [187, 759], "nyt_19980407": [187, 759], "ieerdocu": [187, 759], "docno": [187, 759], "doctyp": [187, 759], "date_tim": [187, 759], "headlin": [187, 759], "press": [187, 642, 654, 690, 691, 692, 693, 694, 695, 704, 798], "weekli": 187, "14": [187, 197, 204, 288, 357, 396, 475, 482, 485, 490, 493, 624, 645, 649, 686, 689, 699, 700, 753, 757, 759, 761, 762, 772, 774, 775, 777, 781, 784, 795, 799], "march": [187, 753, 808], "april": [187, 733, 734, 735, 736, 740, 808], "29": [187, 358, 398, 477, 624, 649, 757, 759, 762, 781, 795, 796], "kumaran": 188, "microsoft": 188, "india": [188, 752, 803], "bangla": [188, 808], "iit": 188, "kharagpur": 188, "hindi": [188, 808], "bombai": [188, 752], "telugu": [188, 808], "iiit": 188, "hyderabad": [188, 752], "indiancorpusview": 188, "tag_mapping_funct": [188, 213], "ipipancorpusview": 189, "paras_mod": 189, "categorizedmarkdowncorpusread": 192, "markdowncorpusread": 192, "_modul": 192, "cat_field": 192, "blockquote_read": 192, "blockquot": 192, "code_block_read": 192, "code_block": 192, "concatenated_view": 192, "image_read": 192, "link_read": 192, "list_read": 192, "metadata_read": 192, "section_read": 192, "codeblock": 192, "markdownblock": 192, "src": 192, "_cl": [192, 199, 679], "href": 192, "is_ord": 192, "markdownsect": 192, "comma_separated_string_arg": 192, "comma": [192, 243, 247, 256, 266, 460, 632, 633, 659, 731, 740, 766], "read_parse_blankline_block": 192, "mtecorpusview": 193, "tagspec": [193, 194, 222], "handler": [193, 194, 222, 243, 247, 438, 451, 731, 732, 740], "signatur": [193, 194, 222, 226, 240, 243, 247, 286, 430, 432, 433, 434, 435, 448, 460, 502, 503, 528, 706, 707, 708, 709, 710, 711, 712, 713, 714, 743, 744, 759, 778, 788], "mtefileread": 193, "file_path": 193, "ns": [193, 753], "namespac": [193, 194, 292], "para_path": 193, "bodi": [193, 804, 805], "div": 193, "sent_path": 193, "tag_n": [193, 506, 521], "word_path": 193, "xml_n": 193, "mtetagconvert": 193, "mapping_msd_univers": 193, "conj": [193, 242, 496, 523, 757, 785, 788, 800], "pron": [193, 378, 379, 523, 749, 757, 759, 784, 785, 788], "prt": [193, 496, 523, 525, 757], "adp": [193, 523, 757, 759], "msd_to_univers": 193, "multex": 193, "xpath": 193, "nkjpcorpus_header_view": 194, "handle_queri": 194, "nkjpcorpus_morph_view": 194, "ann_morphosyntax": 194, "nkjpcorpus_segmentation_view": 194, "ann_segment": 194, "get_segm_id": 194, "example_word": 194, "get_sent_beg": 194, "beg_word": 194, "get_sent_end": 194, "end_word": 194, "get_sent": 194, "sent_segm": 194, "remove_choic": 194, "segm": 194, "nkjpcorpus_text_view": 194, "xml_tool": 194, "declar": [194, 482, 490, 493, 608, 759, 798, 808], "build_preprocessed_fil": 194, "remove_preprocessed_fil": 194, "nombankchaintreepoint": 195, "nombankpoint": 195, "chain": [195, 203, 306, 505, 521, 786, 787], "nombanksplittreepoint": 195, "nombanktreepoint": 195, "sentnum": [195, 203, 787], "wordnum": [195, 203, 787], "sensenumb": [195, 203], "predid": [195, 203], "argloc": [195, 203, 787], "arg0": [195, 203], "argm": [195, 203, 787], "tmp": [195, 203], "concret": [195, 203, 293, 294, 295, 300, 302, 303, 305, 535, 759, 803], "height": [195, 203, 214, 240, 242, 357, 396, 706, 707, 708, 709, 710, 711, 712, 713, 714, 787, 799], "treepo": [195, 203, 706, 707, 711, 720, 787, 799], "minq": [197, 204, 205], "scienc": [197, 205, 210, 478, 480, 488, 759], "sigkdd": [197, 205], "discoveri": [197, 205, 602, 605, 606], "kdd": [197, 205], "aug": 197, "25": [197, 209, 324, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 602, 603, 605, 606, 624, 649, 680, 681, 686, 689, 702, 703, 753, 759, 772, 778, 781, 784, 785, 787, 792, 795, 796, 802, 803], "seattl": 197, "washington": [197, 565, 759, 788, 808], "junsheng": [197, 204], "cheng": [197, 204], "observ": [197, 204, 310, 318, 408, 424, 505, 506, 521, 693, 785], "14th": [197, 204], "world": [197, 204, 289, 356, 396, 445, 500, 519, 537, 602, 605, 606, 681, 688, 703, 752, 759, 795, 796], "chiba": [197, 204], "japan": [197, 204], "lite": [198, 808], "sqlite": 198, "worst": [198, 791], "source_group": 198, "panlexlanguag": 199, "panlex_uid": 199, "iso639": [199, 291, 808], "iso639_typ": 199, "langvar_uid": 199, "42960": 202, "administr": [202, 746], "46742": 202, "inventor": [202, 490], "microchip": 202, "devset": 202, "bitstr": 202, "mutual": [202, 311, 315, 316, 321, 757, 803], "wall": [202, 356, 357, 396, 655, 759], "street": [202, 324, 759, 765], "journal": [202, 324, 408, 422, 477, 722, 727, 759, 808], "ratnaparkhi": 202, "adwait": 202, "1994": [202, 314, 785], "arpa": 202, "human": [202, 293, 299, 304, 493, 533, 534, 642, 687, 688, 696, 697, 763, 767, 785, 798, 806, 808], "technolog": [202, 479], "hlt94": 202, "ps": [202, 288, 797], "propbankchaintreepoint": [203, 787], "propbankpoint": 203, "propbanksplittreepoint": [203, 787], "propbanktreepoint": [203, 787], "propbankinflect": [203, 787], "gerund": [203, 500, 510, 519, 528, 795], "infinit": [203, 759, 768, 775, 777, 803], "participl": 203, "passiv": [203, 395], "past": [203, 240, 500, 510, 519, 528, 734, 735, 739, 740, 753, 765, 766, 795], "perfect": [203, 678, 698, 798], "perfect_and_progress": 203, "third_person": 203, "tens": [203, 476, 478, 500, 510, 519, 523, 528, 765, 766, 787, 795], "voic": [203, 787, 803], "inflect": [203, 787, 803], "who": [203, 211, 227, 357, 396, 731, 745, 759, 765, 767, 791], "adjut": 203, "product_reviews_2": 205, "amazon": [205, 645, 759], "nineteeth": 205, "xiaowen": 205, "ding": 205, "philip": 205, "yu": [205, 210], "holist": 205, "appraoch": 205, "wsdm": 205, "feb": 205, "12": [205, 227, 288, 356, 358, 396, 398, 500, 519, 523, 616, 621, 624, 633, 641, 649, 659, 660, 668, 670, 671, 672, 673, 674, 675, 679, 681, 685, 686, 689, 695, 733, 734, 735, 736, 740, 753, 759, 762, 766, 774, 781, 784, 786, 789, 795, 796, 799, 800, 803, 808], "california": [205, 211, 759], "xxxx": 205, "strongest": 205, "weakest": 205, "pronoun": [205, 448, 523, 757], "suggest": [205, 256, 257, 261, 681, 731, 808], "cc": [205, 356, 357, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 778, 795, 796, 799], "compet": 205, "brand": 205, "ipod": 205, "sd500": 205, "due": [205, 474, 476, 514, 624, 649, 681, 759, 803], "fact": [205, 240, 395, 445, 752, 759, 763], "suffici": [205, 227, 739, 757, 774], "peculiar": 205, "consider": [205, 218, 471, 472, 473, 475, 478, 536, 677, 694, 695, 704, 759], "review_lin": 205, "reviewlin": 205, "add_lin": 205, "rte1": [206, 759], "rte2": [206, 759], "rte3": [206, 759], "_dev": 206, "_test": 206, "latter": [206, 674, 675, 693, 694], "sale": [206, 808], "pai": [206, 483, 492, 759, 785, 791], "yuko": 206, "tax": [206, 759], "bill": [206, 286, 324, 759, 782], "yuganskneftegaz": 206, "sold": 206, "compani": [206, 645, 758, 759, 796, 799], "baikalfinansgroup": 206, "bought": [206, 796], "oil": [206, 759], "rosneft": 206, "gid": [206, 759], "hyp": [206, 221, 329, 334, 341, 682, 683, 687, 688, 700, 703, 759], "compon": [206, 225, 429, 455, 646, 763, 764, 767, 803], "norm": [206, 477, 478, 480, 488, 725, 728], "value_str": 206, "semcorsent": 207, "semcorwordview": 207, "bracket_s": 207, "pos_tag": [207, 377, 401, 406, 496, 578, 759, 795, 806], "sem_tag": 207, "One": [207, 218, 293, 294, 295, 296, 297, 298, 300, 302, 303, 324, 706, 708, 709, 710, 712, 713, 714, 766, 774, 789], "oov": [207, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 795], "siglex": 208, "ted": [208, 221], "tpeders": 208, "umn": 208, "minnesota": 208, "hard": [208, 624, 649, 759, 796], "sensevalcorpusview": 208, "sensevalinst": [208, 759], "isti": 209, "cnr": 209, "swn": [209, 792], "posscor": [209, 792], "negscor": [209, 792], "slow": [209, 533, 739, 791, 792, 798], "deceler": [209, 792], "bore": [209, 792, 796], "dull": [209, 792], "slowli": [209, 792], "behind": [209, 242, 792], "happi": [209, 474, 792], "happy0": 209, "875": 209, "125": [209, 324, 624, 649, 783], "rocl": 210, "tw": 210, "ckip": 210, "engvers": 210, "academia": 210, "balanc": [210, 754, 791], "modern": [210, 291, 808], "chines": [210, 586, 645, 706, 721, 724], "sinicacorpu": 210, "modern_e_wordtyp": 210, "institut": [210, 223, 480, 488, 788, 805], "creativ": 210, "noncommerci": 210, "sharealik": 210, "nc": [210, 408, 422, 523, 759], "sa": 210, "feng": 210, "yi": [210, 408, 422], "chen": [210, 303, 305, 307, 681, 687, 688, 748], "pi": [210, 289, 310, 318, 464], "fang": 210, "tsai": 210, "keh": 210, "jiann": 210, "chu": 210, "ren": 210, "huang": [210, 505, 521], "87": [210, 624, 649, 759], "104": [210, 660, 796], "zhao": 210, "ming": 210, "gao": [210, 681, 687, 688], "kuang": 210, "guidelin": 210, "2nd": [210, 408, 422, 780], "workshop": [210, 682, 683, 686, 689, 702, 703, 798], "hsieh": 210, "ijcnlp": 210, "pp560": 210, "565": 210, "dist": [211, 759], "denver": [211, 759], "aspen": [211, 759], "citi": [211, 214, 225, 445, 752, 759, 765, 788, 796], "modesto": [211, 759], "hum": 211, "galileo": 211, "atom": [211, 287, 288, 382, 430, 432, 438, 451, 459, 460, 464, 765, 790], "hawaii": 211, "switchboardturn": 212, "spearker": 212, "omit": [213, 214, 359, 445, 706, 707, 708, 709, 710, 711, 712, 713, 714, 731, 740, 752], "130": [214, 482, 485, 490, 493, 624, 649], "among": [214, 696, 697, 703, 757, 759], "sa1": [214, 759], "sa2": [214, 759], "spoken": [214, 505, 521], "160": [214, 759, 803], "sphere": 214, "pcm": 214, "dr1": [214, 759], "fvmh0": [214, 759], "sx206": [214, 759], "itemid": 214, "timi": 214, "dr": [214, 432, 434, 448, 449, 759, 764, 771, 774, 796], "england": [214, 759], "northern": 214, "north": 214, "midland": 214, "south": 214, "southern": [214, 788], "western": [214, 291], "armi": [214, 680, 681, 688, 696, 697, 699, 700, 703], "brat": 214, "trn": [214, 759], "tst": 214, "recdat": [214, 759], "birthdat": [214, 759], "ht": [214, 481, 489, 507, 522, 759], "race": [214, 759], "wht": [214, 759], "white": [214, 240, 602, 605, 606, 607, 663, 664, 665, 666, 686, 689, 788, 797], "blk": 214, "black": [214, 808], "amr": 214, "american": [214, 324, 356, 357, 396, 602, 605, 606, 645, 655], "spn": 214, "orn": 214, "orient": [214, 241], "hs": 214, "high": [214, 218, 227, 477, 496, 500, 519, 533, 624, 642, 649, 681, 739, 757, 759, 766, 795], "school": [214, 769, 808], "bs": [214, 759], "bachelor": 214, "ba": [214, 324, 325], "ms": [214, 788], "master": [214, 240, 242, 347, 493, 567, 631, 645, 658, 660], "ma": [214, 484, 491, 785], "phd": [214, 319, 454, 459, 642], "doctor": [214, 357, 396, 658], "jd": 214, "md": [214, 227, 356, 357, 358, 396, 398, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 762, 795], "speakerinfo": [214, 759], "read_timit_block": 214, "manipul": [215, 663, 769, 808], "serialis": 216, "mostli": [217, 505, 521, 533, 646], "deal": [217, 293, 455, 514, 583, 646, 736, 759, 804], "concatenatedcorpusview": [218, 759], "corpus_view": 218, "picklecorpusview": 218, "serial": [218, 225, 447, 464, 533, 761], "pickl": [218, 225, 474, 509, 524, 533, 646, 756, 761, 784, 785, 786, 796, 799], "don": [218, 256, 257, 261, 286, 293, 318, 438, 451, 475, 481, 489, 538, 633, 659, 660, 754, 766, 775, 782, 786, 795, 796, 799], "techniqu": [218, 506, 521, 681, 748, 774], "feature_corpu": 218, "detect_featur": 218, "some_fileid": 218, "pcv": 218, "block_siz": [218, 759], "protocol": [218, 225, 406, 761], "delete_on_gc": 218, "cache_to_tempfil": 218, "output_fil": 218, "simple_block_read": [218, 759], "readlin": [218, 225, 759], "care": [218, 408, 409, 499, 518, 759, 791, 796], "toknum": [218, 759], "filepo": [218, 759], "dure": [218, 243, 255, 256, 257, 261, 287, 293, 379, 380, 496, 497, 499, 501, 504, 518, 520, 528, 632, 646, 659, 675, 691, 692, 693, 694, 695, 696, 697, 759], "lifetim": 218, "lead": [218, 379, 385, 404, 497, 528, 572, 681, 759, 788, 806, 810], "_block_read": 218, "_toknum": 218, "_filepo": 218, "_stream": 218, "_len": 218, "_eofpo": 218, "_cach": 218, "start_toknum": 218, "end_toknum": 218, "concat": [218, 759], "read_line_block": 218, "read_regexp_block": 218, "start_r": 218, "end_r": 218, "eof": [218, 619, 653], "read_sexpr_block": [218, 759], "16384": 218, "read_whitespace_block": [218, 759], "read_wordpunct_block": 218, "hyponym": [221, 803], "antonym": [221, 803], "_wordnetobject": 221, "salt": [221, 757], "salti": 221, "salin": 221, "syntactic_mark": 221, "wninput5wn": 221, "instance_hypernym": 221, "instance_hyponym": 221, "member_holonym": [221, 803], "substance_holonym": 221, "part_holonym": 221, "member_meronym": 221, "substance_meronym": 221, "part_meronym": 221, "topic_domain": [221, 803], "region_domain": [221, 803], "usage_domain": [221, 803], "derivationally_related_form": [221, 803], "also_se": [221, 742, 803], "verb_group": [221, 803], "similar_to": 221, "pertainym": [221, 803], "wordnet_corpus_read": 221, "lexname_index": 221, "frame_id": [221, 803], "frame_str": [221, 803], "lexnam": 221, "root_hypernym": [221, 803], "common_hypernym": 221, "lowest_common_hypernym": [221, 803, 804], "acyclic_tre": [221, 742], "cut_mark": [221, 742, 803], "eventu": [221, 742, 766, 774], "acyclic_depth_first": [221, 742], "closur": [221, 256, 257, 261, 286, 445, 742, 752], "transit": [221, 256, 257, 261, 390, 445, 501, 505, 506, 520, 521, 742, 752, 765, 787, 803, 808], "breadth": [221, 742, 803], "computer_sci": [221, 803], "userwarn": 221, "duplic": [221, 272, 285, 293, 299, 304, 471, 473, 537, 681, 742, 759, 808], "hypernym_dist": 221, "hypernym_path": [221, 803], "lemma_nam": [221, 803], "use_min_depth": [221, 804], "nltk2": 221, "nltk3": [221, 808], "accur": [221, 445, 725, 728, 752, 804], "small": [221, 256, 261, 284, 293, 311, 321, 533, 668, 671, 672, 673, 674, 675, 679, 690, 691, 692, 693, 694, 700, 725, 728, 759, 765, 767, 781, 786, 791, 803, 804, 808], "concern": [221, 803], "chef": [221, 750, 803, 804], "fireman": 221, "mimic": 221, "older": [221, 225, 627, 656, 766, 807], "v2": [221, 379, 380, 770, 778, 790], "min_depth": 221, "strang": 221, "max_depth": [221, 803], "mst": [221, 379, 380, 742], "unweight": [221, 499, 518, 742, 803], "unweighted_minimum_spanning_tre": [221, 742, 803], "unfre": [221, 742, 803], "confin": [221, 742, 759, 803], "topmost": 221, "shortest_path_dist": [221, 803], "wordneterror": 221, "information_cont": [221, 803, 808], "conflict": [222, 243], "flat": [222, 293, 306, 657, 663, 706, 707, 708, 709, 710, 711, 712, 713, 714, 759], "ancestri": 222, "anywher": [222, 786], "wlement": 222, "oxford": 223, "ahd": 223, "compli": 223, "lang22": 223, "ycoehom": 223, "ycoeparsecorpusread": 223, "ycoetaggedcorpusread": 223, "coadrian": 223, "o34": 223, "adrian": 223, "ritheu": 223, "coaelhom": 223, "o3": 223, "\u00e6lfric": 223, "supplement": 223, "homili": 223, "coaeliv": 223, "live": [223, 735, 740, 757, 759, 767], "saint": 223, "coalcuin": 223, "alcuin": 223, "virtutibu": 223, "vitii": 223, "coalex": 223, "o23": 223, "alexand": [223, 479], "letter": [223, 291, 311, 315, 316, 321, 324, 326, 348, 350, 431, 451, 479, 481, 489, 493, 760, 803, 808], "aristotl": 223, "coapollo": 223, "apolloniu": 223, "tyre": 223, "coaugust": 223, "augustin": 223, "cobed": 223, "o2": 223, "bede": 223, "histori": [223, 387, 388, 403, 404, 497, 498, 502, 503, 504, 508, 510, 515, 516, 528, 681, 688, 694, 703], "cobenrul": 223, "benedictin": 223, "coblick": 223, "blickl": 223, "coboeth": 223, "boethiu": 223, "consol": [223, 602, 605, 739, 774], "philosophi": 223, "cobyrhtf": 223, "byrhtferth": 223, "cocanedgd": 223, "edgar": 223, "cocanedgx": 223, "cocathom1": 223, "cathol": 223, "cocathom2": 223, "cochad": 223, "o24": 223, "chad": 223, "cochdrul": 223, "chrodegang": 223, "metz": 223, "cochristoph": 223, "christoph": [223, 642], "cochrona": 223, "anglo": 223, "saxon": 223, "chronicl": 223, "cochronc": 223, "cochrond": 223, "cochron": 223, "cocura": 223, "cura": 223, "pastorali": 223, "cocurac": 223, "cotton": [223, 759], "codict": 223, "cato": 223, "codocu1": 223, "o1": 223, "codocu2": 223, "o12": 223, "codocu3": 223, "codocu4": 223, "o4": 223, "coeluc1": 223, "honoriu": 223, "autun": 223, "elucidarium": 223, "coeluc2": 223, "coepigen": 223, "epilogu": 223, "genesi": [223, 757, 759, 803], "coeuphr": 223, "euphrosyn": 223, "coeust": 223, "eustac": 223, "companion": 223, "coexodusp": 223, "exodu": 223, "cogenes": 223, "cogregdc": 223, "gregori": 223, "dialogu": [223, 759], "cogregdh": 223, "coherbar": 223, "pseudo": [223, 320, 340, 392, 407], "apuleiu": 223, "herbarium": 223, "coinspold": 223, "wulfstan": 223, "politi": 223, "coinspolx": 223, "cojam": 223, "jame": 223, "colacnu": 223, "lacnunga": 223, "colaec": 223, "leechdom": 223, "colaw1cn": 223, "cnut": 223, "colaw2cn": 223, "colaw5atr": 223, "\u00e6thelr": 223, "colaw6atr": 223, "colawaf": 223, "alfr": 223, "colawafint": 223, "introduct": [223, 324, 330, 806], "colawg": 223, "gerefa": 223, "colawin": 223, "ox2": 223, "Ine": 223, "colawnorthu": 223, "northumbra": 223, "preosta": 223, "lagu": 223, "colawwllad": 223, "william": [223, 324, 782], "lad": 223, "coleofri": 223, "leofric": 223, "colsigef": 223, "sigefyrth": 223, "colsigewb": 223, "sigeweard": 223, "colsigewz": 223, "colwgeat": 223, "wulfgeat": 223, "colwsiget": 223, "wulfsig": 223, "colwsigexa": 223, "xa": 223, "colwstan1": 223, "colwstan2": 223, "comargac": 223, "margaret": [223, 808], "comargat": 223, "comart1": 223, "martyrolog": 223, "comart2": 223, "comart3": 223, "comarvel": 223, "marvel": [223, 759], "comari": 223, "egypt": [223, 660, 796], "coneot": 223, "neot": 223, "conicoda": 223, "gospel": 223, "nicodemu": 223, "conicodc": 223, "conicodd": 223, "conicod": 223, "coorosiu": 223, "orosiu": 223, "cootest": 223, "heptateuch": 223, "coprefcath1": 223, "coprefcath2": 223, "coprefcura": 223, "coprefgen": 223, "coprefl": 223, "coprefsolilo": 223, "soliloqui": 223, "coquadru": 223, "medicina": 223, "quadrupedibu": 223, "corood": 223, "holi": 223, "rood": 223, "cosevensl": 223, "sleeper": 223, "cosolilo": 223, "cosolsat1": 223, "solomon": 223, "saturn": 223, "cosolsat2": 223, "cotempo": 223, "temporibu": 223, "anni": 223, "coverhom": 223, "vercelli": 223, "coverhoml": 223, "covinceb": 223, "vincent": [223, 690, 691, 692, 693, 694, 695, 761, 763, 778, 790], "bodlei": 223, "343": [223, 791], "covins": 223, "vindicta": 223, "salvatori": 223, "cowsgosp": 223, "west": 223, "cowulf": 223, "this_corpu": 224, "stand": [224, 243, 246, 293, 301, 432, 445, 766], "defer": [224, 292, 761, 795], "__class__": 224, "__dict__": [224, 226], "instruct": [224, 225, 242, 538, 739, 774, 785, 807, 808], "properli": [224, 569, 585, 784], "restart": [224, 386, 395], "reader_cl": 224, "nltk_data_subdir": 224, "rural": [225, 759, 761], "githubusercont": [225, 227, 746, 761], "auto_format": [225, 761], "fcfg": [225, 406, 455, 469, 752, 761, 763, 764, 765, 773, 784, 790], "fol": [225, 279, 285, 429, 433, 445, 448, 752, 761, 763, 774, 778], "pcfg": [225, 256, 263, 265, 355, 374, 376, 383, 391, 392, 402, 406, 407, 761, 772, 784, 808], "yaml": [225, 761], "bufferedgzipfil": [225, 761], "gzipfil": 225, "releas": [225, 759, 806, 810], "gzip": [225, 474, 734, 735, 737, 740], "logicpars": [225, 448, 459, 460, 462, 761, 778], "logic_pars": [225, 243, 247, 460, 462, 761, 763, 764], "valuat": [225, 273, 274, 284, 429, 431, 438, 445, 451, 463, 761, 774], "filesystempathpoint": [225, 759, 761], "_path": 225, "ioerror": [225, 759], "file_s": 225, "readabl": [225, 310, 318, 534, 602, 605, 606, 622, 646, 660, 743, 744, 763, 767, 785, 801, 808], "regardless": [225, 395, 759, 798], "seekabl": 225, "gzipfilesystempathpoint": 225, "lazyload": [225, 761], "openondemandzipfil": 225, "zipfil": [225, 227, 761], "writestr": 225, "notimplementederror": [225, 289, 754, 755, 775], "zipfilepathpoint": [225, 761], "seekableunicodestreamread": 225, "codec": [225, 663, 664, 665, 666, 737, 759], "streamread": [225, 759], "still": [225, 237, 238, 240, 256, 257, 261, 359, 379, 380, 514, 602, 607, 681, 758, 759, 763, 797, 806, 808], "broken": [225, 455, 500, 519, 618, 628, 642, 654, 759, 795], "motiv": [225, 518, 693], "stateless": 225, "shouldn": [225, 475, 777, 795], "builtin": [225, 663, 664, 665, 666], "bytebuff": 225, "char_seek_forward": 225, "discard_lin": 225, "linebuff": [225, 759], "hold": [225, 240, 284, 390, 399, 455, 533, 536, 645, 657, 695, 759, 767, 774, 803], "newlin": [225, 406, 507, 522, 586, 619, 635, 646, 647, 653, 663, 664, 665, 666, 797], "sizehint": 225, "keepend": 225, "whenc": 225, "xreadlin": 225, "clear_cach": [225, 761], "resource_nam": 225, "posix": 225, "platform": [225, 227, 759, 806, 808], "resource_url": 225, "fstruct_read": [225, 764], "formula": [225, 271, 284, 285, 324, 429, 438, 451, 454, 455, 459, 460, 462, 681, 703, 761, 764, 774], "tri": [225, 284, 310, 318, 355, 374, 376, 383, 387, 391, 402, 403, 514, 528, 536, 624, 649, 732, 740, 742, 795], "featstructread": [225, 243, 244, 245, 246, 764, 766], "tom": [225, 696, 697, 808, 810], "env39": 225, "appdata": [225, 696, 697], "roam": [225, 696, 697], "resid": 225, "show_cfg": [225, 752, 765], "escap": [225, 289, 460, 660, 706, 715, 722, 759, 766], "prepend": 225, "simionato": 226, "michelesimionato": 226, "libero": 226, "bsd": 226, "phyast": 226, "pitt": 226, "memoiz": 226, "caller": [226, 507, 522], "factori": [226, 408, 409, 410, 448, 459, 460, 528, 537], "kw": [226, 227, 234, 240, 242, 451], "chatti": 226, "__name__": [226, 784], "getinfo": 226, "argnam": 226, "fullsignatur": 226, "new_wrapp": 226, "functool": [226, 766], "update_wrapp": 226, "moreovo": 226, "tkinter": [227, 235, 240, 241, 242, 449, 742, 808], "unzip": [227, 746], "colleciton": 227, "download_dir": [227, 228, 569], "default_download_dir": 227, "gh": [227, 746, 796], "page": [227, 307, 390, 490, 624, 649, 731, 746, 751, 808], "datadir": 227, "package_id": 227, "fromxml": 227, "default_url": 227, "index_timeout": 227, "3600": [227, 736, 795], "stale": 227, "not_instal": 227, "corrupt": [227, 754, 791], "server_index_url": 227, "clear_status_cach": 227, "pythonhom": 227, "python25": 227, "info_or_id": [227, 228], "forc": [227, 228, 501, 520, 680, 681, 683, 688, 696, 697, 699, 700, 703, 731, 759, 788, 805], "halt_on_error": [227, 228], "raise_on_error": [227, 228], "print_error_to": [227, 228], "colorama": [227, 228], "ansitowin32": [227, 228], "streamwrapp": [227, 228], "incr_download": 227, "is_instal": 227, "is_stal": 227, "show_packag": 227, "show_collect": 227, "more_prompt": 227, "skip_instal": 227, "xmlinfo": 227, "downloadergui": 227, "subdir": [227, 730, 734, 738, 740, 741], "checksum": 227, "edit": [227, 233, 236, 310, 318, 324, 325, 326, 408, 422, 761, 765, 780, 808], "_package_to_column": 227, "column_weight": [227, 240], "resiz": [227, 235, 241, 449], "column_width": 227, "default_column_width": 227, "nthat": 227, "nin": [227, 356, 357, 396, 616, 619, 621, 626, 632, 633, 635, 636, 641, 647, 653, 655, 659, 660, 793, 796], "ndownload": 227, "ncollect": 227, "nwhen": 227, "ndirectori": 227, "nthe": 227, "nmodel": 227, "nkeyboard": 227, "initial_column": 227, "dataserv": 227, "use_thread": 227, "destroi": [227, 232, 235, 236, 241, 242, 449, 622, 646, 731, 759], "mainloop": [227, 232, 235, 236, 241, 242, 449, 742], "downloadermessag": 227, "commun": [227, 507, 522, 806], "downloadershel": 227, "errormessag": 227, "finishcollectionmessag": 227, "finish": [227, 275, 276, 284], "finishdownloadmessag": 227, "finishpackagemessag": 227, "finishunzipmessag": 227, "decompress": 227, "unzipped_s": 227, "svn_revis": 227, "email": [227, 688, 796], "holder": [227, 774], "files": 227, "subvers": [227, 432], "revis": [227, 765, 766, 808], "progressmessag": 227, "selectdownloaddirmessag": 227, "stalemessag": 227, "startcollectionmessag": 227, "startdownloadmessag": 227, "startpackagemessag": 227, "startunzipmessag": 227, "uptodatemessag": 227, "build_index": 227, "base_url": 227, "download_gui": 227, "download_shel": 227, "md5_hexdigest": 227, "md5": 227, "reset_workspac": [232, 236], "workspace_markprod": [232, 236], "dialog": [233, 236, 242, 791], "impos": [233, 236, 243, 247, 256, 261, 759, 766], "arrow": [233, 234, 236, 243, 247, 634, 639, 796], "\u00fe": [233, 234, 236, 242, 464, 645], "set_cfg_callback": [233, 236], "colorizedlist": [234, 236, 242], "tk": [234, 240, 242, 742], "widget": [234, 240, 241, 242], "add_callback": [234, 242], "regist": [234, 241, 242, 290, 292, 731, 732, 740, 759], "callback": [234, 240, 241, 242, 731], "click1": [234, 242], "click2": [234, 242], "click3": [234, 242], "focu": [234, 240, 242, 759, 774], "cnf": [234, 240, 242, 468, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728], "highlight": [234, 242, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722], "markonli": [234, 242], "pack": [234, 240, 242, 803], "remove_callback": [234, 242], "deregist": [234, 242], "unmark": [234, 242], "adjust": [234, 242, 319, 488, 786, 791], "visibl": [234, 240, 242, 243, 292, 766], "enter": [235, 241, 242, 449, 505, 521, 731, 733, 734, 735, 736, 740, 758, 759, 785], "secript": [235, 241, 242, 449], "soon": [235, 241, 242, 449], "visual": [236, 242, 474, 706, 715, 722, 725, 728, 731, 764, 769, 808], "cfgdemo": 236, "cfgeditor": 236, "productionlist": 236, "demo2": [236, 514], "demo3": [236, 514], "dispersion_plot": [237, 602, 605, 606], "ignore_cas": [237, 238], "plot": [237, 238, 408, 409, 415, 474, 533, 542, 602, 605, 606, 630, 657, 769, 791, 794, 808], "matplotlib": [237, 238, 408, 409, 415, 533, 542, 769], "diagram": [239, 241, 706, 707, 708, 709, 710, 711, 712, 713, 714], "listbox": 240, "multilistbox": 240, "recip": [240, 349, 808], "cookbook": [240, 808], "activest": 240, "52266": 240, "deleg": [240, 431, 451, 736, 790], "frame_config": 240, "888": [240, 791], "highlightthick": 240, "takefocu": 240, "label_config": 240, "444": [240, 791], "borderwidth": 240, "helvetica": 240, "bold": 240, "foreground": 240, "relief": 240, "listbox_config": 240, "activestyl": 240, "exportselect": 240, "selectbackground": 240, "selectborderwidth": 240, "label_": 240, "listbox_": 240, "sender": 240, "label_foreground": 240, "red": [240, 242, 509, 524, 706, 715, 722], "bbox": [240, 242], "col": [240, 350, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 780, 795], "box": [240, 242, 681, 731, 737, 746, 748], "cell": [240, 350, 359, 382, 762], "corner": [240, 242, 256, 257, 261, 354, 379, 380, 395, 759, 784], "bind_to_column": 240, "bind": [240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 255, 287, 399, 430, 432, 433, 435, 441, 443, 447, 459, 460, 608], "mult": [240, 778], "leak": 240, "bind_to_label": 240, "bind_to_listbox": 240, "column_label": 240, "column_index": [240, 379, 380], "conveni": [240, 289, 293, 299, 304, 308, 639, 640, 670, 671, 672, 673, 674, 675, 694, 695, 738, 741, 742, 765, 766, 778, 808], "column_nam": 240, "columnconfig": 240, "col_index": 240, "bg": [240, 763], "fg": [240, 759], "selectforeground": 240, "columnconfigur": 240, "mlb": 240, "listbox_foreground": 240, "curselect": 240, "hide_column": 240, "safe": [240, 293, 632, 659, 696, 697], "hidden": [240, 242, 505, 506, 521], "show_column": 240, "itemcget": 240, "itemconfig": 240, "row_index": 240, "itemconfigur": 240, "nearest": 240, "rowconfig": 240, "rowconfigur": 240, "scan_dragto": 240, "scan_mark": 240, "newli": [240, 459, 799], "select_anchor": 240, "select_clear": 240, "select_includ": 240, "select_set": 240, "selection_anchor": 240, "selection_clear": 240, "selection_includ": 240, "selection_set": 240, "yview": 240, "yview_moveto": 240, "yview_scrol": 240, "hello": [240, 289, 632, 633, 659, 759, 761, 766, 786, 796], "3rd": 240, "john": [240, 286, 324, 356, 357, 359, 395, 396, 397, 399, 430, 454, 460, 496, 525, 530, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 748, 763, 764, 765, 766, 771, 772, 774, 778, 779, 782, 784, 787, 789, 790, 796, 803, 805], "__getitem__": [240, 242, 766], "__setitem__": [240, 242, 766, 799], "__nonzero__": 240, "incompat": [240, 243, 253, 255, 808], "behav": [240, 377, 401, 440, 451], "_mlb": 240, "_row": 240, "scrollbar": [240, 242], "click_to_sort": 240, "reprfunc": 240, "colum": 240, "suitabl": [240, 337, 338, 342, 359, 474, 660, 677, 695, 704, 742, 774, 806], "cell_valu": 240, "rowvalu": 240, "foxu": 240, "selected_row": 240, "sort_bi": 240, "ascend": [240, 243, 245, 677, 695, 704, 706, 707, 708, 709, 710, 711, 712, 713, 719, 734, 740], "descend": [240, 242, 243, 245, 374, 402, 608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 734, 740, 785, 803], "greatest": [240, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 706, 715, 722], "revers": [240, 243, 245, 324, 326, 632, 659, 668, 679, 681, 706, 707, 708, 709, 710, 711, 712, 713, 719, 757, 760], "treesegmentwidget": 241, "canvaswidget": [241, 242], "roof": 241, "triangular": 241, "xspace": 241, "horizont": [241, 242, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728], "manag": [241, 242, 356, 357, 396, 507, 522, 731, 759, 763, 788, 807, 808, 810], "yspace": 241, "outlin": [241, 242, 379, 380], "006060": 241, "fill": [241, 242, 293, 350, 392, 407, 533, 537, 694, 759, 788], "downward": [241, 242], "rightward": [241, 242, 381, 382], "vertic": [241, 242, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 725, 728], "draggabl": [241, 242], "drag": [241, 242], "attrib": [241, 242, 289, 449, 759, 787], "insert_child": [241, 242], "remove_child": [241, 242], "replace_child": [241, 242], "oldchild": [241, 242], "newchild": [241, 242], "set_label": [241, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 799], "treeview": 241, "treewidget": 241, "node_attr": 241, "loc_attr": 241, "textwidget": [241, 242], "line_color": 241, "roof_color": 241, "collaps": [241, 379, 380, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 759, 791, 801], "roof_fil": 241, "shapeabl": 241, "make_nod": 241, "make_leaf": 241, "bind_click_leav": 241, "bind_click_nod": 241, "bind_click_tre": 241, "bind_drag_leav": 241, "bind_drag_nod": 241, "bind_drag_tre": 241, "collapsed_tre": 241, "path_to_tre": 241, "i1": [241, 706, 714], "i2": [241, 706, 714], "expanded_tre": 241, "toggle_collaps": 241, "treeseg": 241, "draw_tre": 241, "tree_to_treeseg": 241, "tree_": 241, "node_": 241, "leaf_": 241, "loc_": 241, "primarili": [242, 759, 810], "student": [242, 311, 315, 316, 321, 757, 763, 765, 806, 808], "encapsul": [242, 445, 668, 679, 752], "submodul": 242, "canvasfram": 242, "scrollwatcherwidget": 242, "scroll": 242, "acknowledg": 242, "clig": 242, "grapher": 242, "homepag": [242, 285, 482, 490, 583, 742], "uni": [242, 307, 514, 785, 788], "sb": 242, "konrad": 242, "abstractcontainerwidget": 242, "boxwidget": 242, "ovalwidget": 242, "abstractcanvascontain": 242, "_updat": 242, "set_child": 242, "interior": 242, "margin": [242, 256, 261, 311, 312, 313, 315, 316, 321, 475, 671, 672, 690, 691, 706, 707, 708, 709, 710, 711, 712, 713, 714, 757], "pixel": 242, "bracketwidget": 242, "scrollregion": 242, "add_widget": 242, "destroy_widget": 242, "basewidget": 242, "coordin": [242, 382, 706, 715, 722, 731], "area": [242, 685, 774, 808], "print_to_fil": 242, "postscript": [242, 449], "prompt": [242, 402, 407, 759, 785], "remove_widget": 242, "radiu": 242, "cn": [242, 706, 707, 708, 709, 710, 711, 712, 713, 714], "bind_click": 242, "bind_drag": 242, "unbind_click": 242, "unbind_drag": 242, "_add_child_widget": 242, "_manag": 242, "arrang": [242, 350, 805], "__canva": 242, "__parent": 242, "__children": 242, "__updat": 242, "__draggabl": 242, "__press": 242, "buttonpress": 242, "__drag_x": 242, "dx": 242, "__drag_i": 242, "dy": 242, "__callback": 242, "xmin": 242, "ymin": 242, "xmax": 242, "ymax": 242, "rectangl": 242, "enclos": [242, 765, 805], "child_widget": 242, "temporarili": [242, 285], "upward": 242, "movement": 242, "moveto": 242, "anchor": 242, "nw": [242, 682, 683], "subpart": 242, "_init_colortag": 242, "_item_repr": 242, "colortag": 242, "entrydialog": 242, "original_text": 242, "set_callback": 242, "mutableoptionmenu": 242, "menubutton": 242, "widgetnam": 242, "menu": [242, 746], "oval": 242, "doubl": [242, 474, 493, 763, 766, 796], "414213562373095": 242, "parenwidget": 242, "parenthas": 242, "parenthasi": 242, "watcher": 242, "add_child": 242, "sequencewidget": 242, "increment": [242, 285, 289, 371, 392, 395, 397, 407, 408, 409, 415, 533, 622, 646, 808], "showtext": 242, "textbox_opt": 242, "find_diment": 242, "spacewidget": 242, "set_height": 242, "set_width": 242, "stackwidget": 242, "symbolwidget": 242, "negat": [242, 284, 430, 433, 435, 460, 474, 475, 759, 763, 774, 778, 791], "sign": [242, 243, 247, 785, 806], "disj": 242, "foral": [242, 448, 460, 464], "subseteq": 242, "notsubset": 242, "emptyset": 242, "imp": [242, 288, 455, 459, 460], "rightarrow": 242, "notequ": 242, "epsilon": [242, 256, 261, 319, 464, 501, 520, 681, 683], "render": [242, 464, 763], "\u00f9": [242, 464], "\u00fa": [242, 464, 645], "\u00e6": [242, 464, 645], "intersect": [242, 327, 335, 339, 340, 535, 537, 669, 686, 689, 766, 769, 788], "\u00e7": [242, 464], "\u00e4": [242, 464], "\u00f8": [242, 464, 645], "\u00b9": [242, 464], "\u00eb": [242, 464], "\u00ec": [242, 464], "\u00ed": [242, 464], "union": [242, 286, 669, 686, 689, 766], "\u00e8": [242, 464, 645], "set_symbol": 242, "symbolsheet": 242, "justifi": 242, "justif": [242, 628, 654], "wider": [242, 759], "set_text": 242, "featdict": [243, 245, 246, 766], "featlist": [243, 244, 246, 247, 766], "unif": [243, 255, 287, 399, 765, 784, 808], "inconsist": [243, 763, 766, 774, 808], "reentrant": [243, 245, 246, 247, 766], "reentranc": [243, 244, 245, 246, 247, 248, 249, 251, 255, 765], "fresh": 243, "strictli": [243, 757, 766, 788, 795], "unbound": [243, 255], "alias": [243, 255, 430, 433, 435, 460, 766], "fledg": [243, 766], "light": [243, 477, 478, 493, 583], "nonequ": [243, 766], "easili": [243, 408, 421, 521, 533, 737, 759, 764, 766, 769, 798], "frozen": [243, 244, 245, 246, 482, 490, 766], "hash": [243, 244, 245, 246, 408, 784], "walk": [243, 244, 245, 246, 285, 286, 356, 357, 396, 454, 706, 715, 722, 758, 763, 764, 765, 766, 768, 774, 778, 782, 789, 790, 800, 803], "cyclic": [243, 244, 245, 246, 766], "plan": [243, 766, 788], "strongli": [243, 482, 490, 758, 766, 803, 807], "freez": [243, 244, 245, 246, 706, 707, 708, 709, 710, 711, 712, 713, 714, 759, 766, 784], "morefeatur": [243, 244, 245, 246], "name_or_path": [243, 244], "has_kei": [243, 244, 766], "pop": [243, 244, 245, 288, 409, 410, 412, 415, 431, 436, 440, 706, 707, 708, 709, 710, 711, 712, 713, 719, 766, 786, 799], "paresd": [243, 245], "indexerror": [243, 245, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 795, 798, 799], "stabl": [243, 245, 706, 707, 708, 709, 710, 711, 712, 713, 719], "substitutebindingsi": [243, 246, 399, 435, 460], "fstruct": [243, 246, 247, 459, 766, 770], "f2": [243, 246, 759, 765], "equal_valu": [243, 244, 245, 246, 766], "check_reentr": [243, 244, 245, 246, 766], "remove_vari": [243, 244, 245, 246, 766], "rename_vari": [243, 244, 245, 246, 766], "used_var": [243, 244, 245, 246], "new_var": [243, 244, 245, 246], "retract_bind": [243, 244, 245, 246, 766], "substitute_bind": [243, 244, 245, 246, 287, 430, 433, 435, 441, 460, 766], "rename_var": [243, 244, 245, 246, 255, 766], "find_vari": [243, 244, 245, 246], "value_handl": [243, 247], "read_fstruct_valu": [243, 247], "compil": [243, 247, 249, 454, 459, 475, 479, 481, 489, 514, 621, 623, 631, 632, 633, 639, 641, 645, 646, 647, 658, 659, 754, 765, 774, 788], "read_var_valu": [243, 247], "za": [243, 247], "z_": [243, 247], "z0": [243, 247], "9_": [243, 247], "read_str_valu": [243, 247], "uu": [243, 247, 359], "rr": [243, 247], "read_int_valu": [243, 247], "read_sym_valu": [243, 247], "read_app_valu": [243, 247], "read_logic_valu": [243, 247], "read_set_valu": [243, 247], "read_tuple_valu": [243, 247], "fdict_class": [243, 247, 764], "flist_class": [243, 247], "dash": [243, 247], "unquot": [243, 247], "alphanumer": [243, 247, 766], "mention": [243, 247, 464, 731, 759, 766, 774, 788, 803], "read_parti": [243, 247], "read_valu": [243, 247, 248, 249, 251, 451], "unify_base_valu": [243, 248, 249, 251], "fval1": [243, 248, 249, 251], "fval2": [243, 248, 249, 251], "unificationfailur": [243, 248, 249, 251, 766], "rangefeatur": [243, 766], "range_r": [243, 249], "slashfeatur": 243, "fstruct1": [243, 253, 254, 255], "fstruct2": [243, 253, 254, 255], "fs_class": [243, 255, 766], "x2": [243, 255, 766, 770, 778, 799], "renam": [243, 255, 430, 433, 435, 448, 460, 766, 784], "collis": [243, 255], "fromkei": [244, 409, 410, 412, 415, 431, 436, 440, 766], "9223372036854775807": [245, 707, 708, 709, 710, 711, 712, 713], "phrasal": [256, 260, 706, 715, 722, 759], "treetoken": 256, "accident": [256, 538], "procedur": [256, 379, 380, 384, 403], "prod": [256, 392, 407, 464, 784], "calculate_leftcorn": [256, 257, 261], "leftcorn": [256, 257, 261], "binar": [256, 257, 261, 725, 728], "pad": [256, 257, 261, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 306, 536, 586, 632, 659, 742, 777], "check_coverag": [256, 257, 261], "chomsky_normal_form": [256, 257, 261, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 801, 808], "new_token_pad": [256, 257, 261], "customis": [256, 257, 261], "binaris": [256, 257, 261], "eliminate_start": [256, 257, 261], "s0": [256, 257, 261, 285, 481, 489, 505, 521, 634, 639, 742, 763, 796], "s0_sigma": [256, 257, 261], "is_binaris": [256, 257, 261], "is_chomsky_normal_form": [256, 257, 261], "is_flexible_chomsky_normal_form": [256, 257, 261], "is_leftcorn": [256, 257, 261], "is_lex": [256, 257, 259, 261, 263, 264], "lexicalis": [256, 257, 261], "is_nonempti": [256, 257, 261], "is_nonlex": [256, 257, 259, 261, 263, 264], "pretermin": [256, 257, 261], "b1": [256, 257, 261, 399, 429, 765, 790], "bn": [256, 257, 261], "opposit": [256, 257, 261, 276, 284, 342, 343, 757], "leftcorner_par": [256, 257, 261], "invers": [256, 257, 261, 291, 501, 520], "reflex": [256, 257, 261, 445, 742], "beta": [256, 257, 261, 395, 399, 430, 433, 435, 448, 460, 464, 505, 521, 682, 683, 696, 697, 700, 702, 703, 808], "max_len": [256, 257, 261, 293, 682, 683, 687, 688, 742, 777], "min_len": [256, 257, 261, 682, 683, 687, 688, 742], "remove_unitary_rul": [256, 257, 261], "nonlex": [256, 257, 261, 496], "unitari": [256, 257, 261], "dependencygrammar": [256, 262, 264, 379, 380, 382, 762], "mod": [256, 258, 262, 359, 753], "dependencyproduct": [256, 258, 262], "unord": [256, 259], "hashabl": [256, 260, 264, 310, 318, 497, 498, 508, 515, 516, 528, 536], "_symbol": [256, 260], "probabilisticproduct": [256, 261], "probabilisticdependencygrammar": [256, 381, 382], "immutableprobabilisticmixin": [256, 263, 408], "_lh": [256, 264], "_rh": [256, 264], "induce_pcfg": [256, 784], "induc": [256, 265, 506, 521, 725, 728, 784], "read_grammar": 256, "nonterm_pars": [256, 267], "logprob": [263, 408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 709, 713], "set_logprob": [263, 408, 709, 713], "set_prob": [263, 408, 709, 713], "brown_tagset": 268, "tagpattern": 268, "claws5_tagset": 268, "upenn_tagset": 268, "theorem": [269, 275, 276, 277, 284, 287, 288, 430, 433, 434, 435, 448, 460, 763, 771, 808], "prove": [269, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 324, 763, 774, 782], "readingcommand": [270, 272, 285], "gramfil": [270, 285, 763, 790], "parse_to_read": [270, 272, 279, 285], "combine_read": [270, 272, 279, 285], "to_fol": [270, 272, 279, 285], "process_thread": [270, 272, 279, 285], "sentence_read": [270, 272, 279, 285], "anaphora": [270, 279, 285], "ongo": [271, 285, 742], "reading_command": [271, 285], "add_sent": [271, 285, 763], "informchk": [271, 285, 763], "consistchk": [271, 285, 763], "_input": [271, 285], "_sentenc": [271, 285], "thread": [271, 284, 285, 602, 605, 606, 607], "_read": [271, 285], "retract_sent": [271, 285, 763], "show_thread_read": [271, 285, 763], "expand_thread": [271, 285, 763], "thread_id": [271, 285], "mace4": [271, 273, 285, 763, 782, 808], "add_background": [271, 285, 763], "multipli": [271, 285, 311, 321, 415, 481, 489, 680, 681], "semtype_fil": [272, 285, 454], "remove_dupl": [272, 285, 454, 474], "deppars": [272, 285, 356, 396, 454, 763, 771], "builder": [273, 274, 275, 276, 284, 285], "prover9par": [273, 277], "modelbuild": [273, 274, 275, 276, 284, 774], "end_siz": [273, 774], "macecommand": [273, 277, 774], "prover9commandpar": [273, 274, 277, 278], "basemodelbuildercommand": [273, 274, 276, 284], "print_assumpt": [273, 274, 276, 277, 278, 281, 283, 284, 774], "max_model": [273, 274], "model_build": [273, 274], "proof": [273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 287, 288, 774], "decode_result": 273, "model_found": 273, "spacer": [273, 277, 285], "test_build_model": 273, "test_make_relation_set": 273, "test_model_found": 273, "exhibit": [273, 277, 759], "test_transform_output": 273, "argument_pair": 273, "interpformat": 273, "mace": [274, 277, 285, 774], "add_assumpt": [274, 276, 278, 281, 283, 284, 774], "new_assumpt": [274, 276, 278, 281, 283, 284], "unnecessari": [274, 276, 278, 281, 283, 284, 287], "get_model_build": [274, 276, 284], "output_format": [274, 277, 278, 774], "retract_assumpt": [274, 276, 278, 281, 283, 284, 774], "retract": [274, 276, 278, 281, 283, 284, 763, 770, 774], "prover": [275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 430, 433, 434, 435, 448, 460, 771, 782, 808], "whichev": [275, 276, 284, 381, 382, 683], "success": [275, 280, 282, 284, 387, 388, 403, 404, 447, 660, 693, 694, 731, 742, 754], "baseprovercommand": [276, 277, 278, 281, 283, 284, 287, 288], "_result": [276, 284], "basetheoremtoolcommand": [276, 284], "decorate_proof": [276, 277, 278, 281, 283, 284], "proof_str": [276, 277, 278, 281, 283, 284], "get_prov": [276, 278, 281, 283, 284], "timeout": [277, 278, 356, 357, 396, 732, 739, 740], "60": [277, 278, 356, 357, 396, 488, 621, 633, 641, 659, 660, 731, 759, 761, 780, 785, 796], "prover9_input": 277, "prover9command": [277, 774, 782], "provercommand": [277, 278, 284], "prover9except": 277, "returncod": 277, "prover9fatalexcept": 277, "prover9limitexceededexcept": 277, "binary_loc": [277, 774], "config_prover9": [277, 774], "convert_to_prover9": 277, "test_config": 277, "test_convert_to_prover9": 277, "expr": [277, 438, 451, 454, 460, 784, 790], "ok": [277, 731, 775, 797, 799], "test_prov": 277, "prover9": [278, 808], "answer_kei": [280, 287], "find_answ": [281, 287, 789], "is_atom": [282, 288, 430, 460], "modelbuildercommand": [284, 774], "theoremtoolcommand": 284, "quantifi": [284, 447, 460, 559, 763, 764, 778], "constrain": [284, 382, 505, 521, 670, 671, 672, 673, 674, 675, 694, 695, 803], "modelbuildercommanddecor": 284, "theoremtoolcommanddecor": 284, "parallelproverbuild": 284, "parallelproverbuildercommand": 284, "provercommanddecor": [284, 286], "theoremtoolthread": 284, "threadgroup": 284, "decim": 284, "invoc": 284, "curt": 285, "blackburn": [285, 455, 778], "inf": [285, 742, 777, 785, 800], "jbo": 285, "comsem": 285, "book1": 285, "carri": [285, 324, 326, 445, 447, 752, 759, 788, 791], "discoursetest": [285, 763], "sid": [285, 791], "boxer": [285, 761, 763, 774, 778], "chase": [285, 706, 707, 708, 709, 710, 711, 712, 713, 714, 759, 763, 764, 771, 772, 782, 784, 790, 793, 799, 803], "girl": [285, 429, 763, 764, 765, 771, 782, 790, 796], "r1": [285, 703, 754, 763, 770], "r0": [285, 703, 763], "boxerdog": [285, 761, 763, 774], "tid": 285, "d0": [285, 763], "cartesian": [285, 537], "beyond": [285, 318, 621, 641, 725, 728, 759, 795], "cfgreadingcommand": 285, "drtgluereadingcommand": [285, 763], "discourse_demo": 285, "drt_discourse_demo": 285, "load_fol": [285, 763], "foundat": [286, 788, 808], "michael": [286, 324, 701, 743, 744, 791], "genesereth": 286, "nil": 286, "nilsson": 286, "closeddomainprov": [286, 782], "replace_qu": 286, "all_express": 286, "d1": [286, 429, 752, 763, 770, 790], "d2": [286, 752, 763, 770, 790], "OR": [286, 288, 455, 460, 533, 536, 681, 725, 728, 731], "closedworldprov": [286, 782], "ostrich": [286, 782], "socrat": [286, 774, 782, 789], "tweeti": [286, 782], "sam": [286, 757, 782, 808], "predhold": 286, "know": [286, 289, 290, 293, 485, 493, 521, 646, 765, 774, 785, 803], "append_prop": 286, "new_prop": 286, "append_sig": 286, "new_sig": 286, "validate_sig_len": 286, "proverparseerror": [286, 287, 288], "sethold": 286, "uniquenamesprov": [286, 782], "premis": [286, 770, 782], "closed_domain_demo": 286, "closed_world_demo": 286, "combination_prover_demo": 286, "default_reasoning_demo": 286, "get_domain": 286, "print_proof": 286, "unique_names_demo": 286, "bindingdict": [287, 459, 770], "binding_list": 287, "abstractvariableexpress": [287, 430, 448, 460], "atomicexpress": [287, 459], "bindingexcept": 287, "issubsetof": 287, "is_tautolog": 287, "tautolog": 287, "ground": [287, 521, 687, 688, 803], "exact": [287, 311, 320, 321, 340, 448, 514, 697, 757], "successfulli": [287, 350, 387, 388, 403, 404, 807], "thing": [287, 293, 602, 605, 606, 607, 608, 631, 658, 742, 763, 765, 766, 787, 791, 803], "debugobject": 287, "resolutionprov": [287, 774], "resolutionprovercommand": [287, 774, 789], "unificationexcept": [287, 459, 770], "clausifi": [287, 774, 789], "apart": [287, 746], "most_general_unif": 287, "resolution_test": 287, "testresolutionprov": 287, "test_clausifi": 287, "agenda": [288, 353, 354, 361, 362, 368, 375, 386, 389, 395, 399, 454], "clone": 288, "mark_alls_fresh": 288, "mark_neqs_fresh": 288, "pop_first": 288, "put_al": 288, "put_atom": 288, "replace_al": 288, "d_neg": 288, "eq": [288, 460, 700], "19": [288, 341, 356, 357, 478, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 621, 633, 641, 659, 686, 689, 690, 691, 692, 693, 694, 695, 753, 759, 774, 781, 795, 796], "n_all": [288, 315, 321, 688], "n_and": 288, "n_app": 288, "n_atom": 288, "n_eq": 288, "n_exist": 288, "n_iff": 288, "17": [288, 415, 477, 500, 519, 616, 621, 624, 633, 641, 649, 659, 660, 681, 686, 689, 749, 753, 759, 762, 767, 781, 784, 787, 796], "n_imp": 288, "n_or": 288, "n_prop": 288, "13": [288, 289, 616, 621, 624, 633, 641, 642, 649, 654, 659, 660, 668, 679, 681, 686, 689, 753, 757, 759, 762, 768, 774, 781, 784, 787, 789, 795, 796, 799, 803], "tableauprov": [288, 764, 774], "tableauprovercommand": [288, 774], "tableau_test": 288, "testhigherordertableauprov": 288, "testtableauprov": 288, "initial_valu": 289, "newclassnam": 289, "goe": [289, 786], "oldclassnam": 289, "elementwrapp": 289, "nicer": 289, "__str__": [289, 395], "doctest": [289, 356, 357, 396, 500, 501, 519, 520, 539, 542, 560, 586, 589, 645, 680, 681, 774, 777, 784], "etre": [289, 759, 787, 797], "findal": [289, 602, 605, 606, 607, 639, 759, 785, 787], "getchildren": 289, "getiter": 289, "makeel": 289, "readerror": [289, 775], "read_": 289, "config_java": 289, "java": [289, 377, 401], "xmx512m": 289, "heap": 289, "512": 289, "megabyt": 289, "find_binari": [289, 547], "path_to_bin": [289, 507, 522], "env_var": [289, 356, 357, 396], "searchpath": 289, "binary_nam": 289, "find_binary_it": 289, "file_nam": [289, 730, 741], "find_dir": 289, "find_fil": 289, "find_file_it": 289, "finding_dir": 289, "find_jar": [289, 547], "name_pattern": [289, 547], "path_to_jar": [289, 396, 405, 529, 627, 655, 656], "is_regex": [289, 356, 357, 396], "find_jar_it": 289, "jar": [289, 377, 401, 529, 547, 627, 656], "find_jars_within_path": 289, "import_from_stdlib": 289, "shadow": 289, "stdlib": 289, "inspect": [289, 445, 475, 752, 763, 765, 774], "is_writ": 289, "cmd": [289, 782, 784], "stdin": [289, 535, 536, 537, 742, 803], "stderr": [289, 396], "subprocess": [289, 359, 784], "pipe": [289, 396, 507, 522, 631, 658, 784], "descriptor": 289, "devnul": [289, 396], "With": [289, 312, 356, 357, 377, 401, 431, 451, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 521, 537, 670, 671, 672, 673, 674, 675, 694, 695, 725, 728, 750, 759, 763, 795, 799, 808], "redirect": [289, 359, 396], "captur": [289, 379, 464, 602, 607, 623, 647, 769, 796], "spawn": 289, "popen": 289, "oserror": [289, 396], "eateri": [289, 775], "batch_eat": [289, 775], "raise_unorderable_typ": 289, "read_int": 289, "start_posit": 289, "end_posit": 289, "cast": [289, 681, 703, 758], "_read_int_r": 289, "42": [289, 314, 602, 605, 606, 624, 649, 757, 759, 765, 768, 780, 791], "read_numb": 289, "_read_number_valu": 289, "14159": 289, "read_str": 289, "liter": 289, "_string_start_r": 289, "_string_end_r": 289, "eval": [289, 358, 390, 398, 686, 689, 784], "slice_bound": 289, "slice_obj": 289, "allow_step": 289, "qualifi": [290, 791], "2011": [290, 810], "anyon": [290, 356, 396, 750, 759], "jsontaggeddecod": [290, 761], "jsondecod": 290, "decode_obj": 290, "jsontaggedencod": [290, 761], "jsonencod": 290, "serializ": 290, "typeerror": [290, 293, 299, 301, 304, 535, 537, 706, 711, 712, 720, 766, 799], "register_tag": [290, 761], "registr": 291, "sil": [291, 808], "codeset": 291, "evolv": 291, "retir": [291, 732, 740], "kept": [291, 346, 474, 537, 759], "iso639retir": 291, "fallback": [291, 683], "langcod": 291, "lgn": 291, "frisian": 291, "fy": 291, "fry": [291, 767], "inverse_dict": 291, "dic": [291, 742], "biject": 291, "lang2q": 291, "low": [291, 499, 518, 533, 757, 766, 795, 808], "q25433": 291, "1453": 291, "ell": [291, 803], "q2name": 291, "qcode": 291, "q4289225": 291, "mecklenburg": 291, "vorpommern": 291, "q2tag": 291, "nd": [291, 479], "demv": 291, "tag2q": 291, "promin": 292, "impact": [292, 700], "startup": 292, "marc": 292, "andr": 292, "lemburg": 292, "mailto": 292, "mal": 292, "lazymodul": 292, "__doc__": 292, "__getattr__": 292, "week": [292, 788, 808], "neural": [293, 405, 687, 688, 808], "our": [293, 471, 473, 539, 624, 649, 687, 688, 754, 757, 759, 765, 770, 774, 785, 786, 791, 795, 796, 798, 799, 808], "simplic": [293, 690, 694, 808], "wouldn": [293, 475, 766, 791], "somehow": 293, "fortun": 293, "pad_sequ": [293, 742], "pad_left": [293, 742], "left_pad_symbol": [293, 742], "pad_right": [293, 742], "right_pad_symbol": [293, 742], "anywai": 293, "pad_both_end": [293, 306], "robust": [293, 477], "helpfulli": 293, "everygram": [293, 306, 742, 777, 808], "padded_bigram": 293, "readi": [293, 356, 357, 396, 765], "reli": [293, 432, 547, 759], "vocabulari": [293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 306, 307, 329, 334, 341, 344, 551, 553, 583, 693, 777, 785, 795], "padded_everygram_pipelin": [293, 306, 777], "vocab": [293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 307, 602, 605, 606, 777], "mle": [293, 294, 295, 296, 297, 300, 302, 303, 305, 506, 521, 777, 786], "unk_label": [293, 301], "unk": [293, 301, 514, 777], "alien": [293, 299, 301, 304], "mar": 293, "didn": [293, 474, 475, 766, 796, 799, 806], "enough": [293, 348, 351, 355, 402, 475, 761, 765, 781, 791, 796], "ngramcount": [293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 307, 550], "real": [293, 314, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 464, 537, 692, 783, 795, 803], "15384615384615385": 293, "chanc": [293, 318, 788], "underflow": [293, 408, 422], "logscor": [293, 294, 295, 296, 297, 298, 300, 302, 303], "700439718141092": 293, "perplex": [293, 294, 295, 296, 297, 298, 300, 302, 303], "292481250360578": 293, "449489742783178": 293, "advis": [293, 299, 304, 484, 491, 759], "cool": 293, "random_se": [293, 294, 295, 296, 297, 298, 300, 302, 303, 602, 605, 606], "reproduc": [293, 294, 295, 296, 297, 298, 300, 302, 303, 602, 605, 606, 777, 781], "text_se": [293, 294, 295, 296, 297, 298, 300, 302, 303, 602, 605, 606], "absolutediscountinginterpol": [293, 305], "interpolatedlanguagemodel": [293, 294, 295, 302, 305], "interpol": [293, 294, 295, 302, 303, 305, 307, 514, 681], "discount": [293, 294, 295, 305, 307, 408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "languagemodel": [293, 294, 295, 296, 297, 298, 300, 302, 303, 305], "ngrams_fn": [293, 294, 295, 296, 297, 298, 300, 302, 303, 305], "pad_fn": [293, 294, 295, 296, 297, 298, 300, 302, 303, 305], "kneserneyinterpol": [293, 305], "kneser": [293, 295, 305, 307, 408, 417], "nei": [293, 295, 305, 307, 408, 417, 798], "laplac": [293, 297, 305, 408, 418, 786], "lidston": [293, 296, 305, 408, 419, 505, 521, 777, 786], "basengrammodel": [293, 296, 297, 298, 300, 305], "gamma": [293, 296, 297, 305, 395, 399, 408, 419, 464, 505, 521, 696, 697, 777, 786], "unmasked_scor": [293, 294, 295, 296, 297, 298, 300, 302, 303, 305], "feed": [293, 299, 304, 759, 765, 803], "text_bigram": [293, 299, 304], "text_unigram": [293, 299, 304], "ngram_count": [293, 299, 304], "conditionalfreqdist": [293, 299, 304, 408, 410, 808], "friendli": [293, 299, 304, 732, 740], "similarli": [293, 299, 304, 479, 521, 757, 759, 788, 795], "ngram_text": [293, 299, 304], "wait": [293, 299, 304, 460, 732, 740], "stupidbackoff": [293, 305], "uniti": [293, 300, 305], "mask": [293, 294, 295, 296, 297, 298, 300, 302, 303, 305], "unk_cutoff": [293, 301], "vocab2": [293, 301], "influenc": [293, 301, 677, 704], "stai": [293, 301, 701], "popul": [293, 301, 445, 471, 473, 474, 752], "seed": [293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 602, 604, 605, 606, 695, 781], "counter_arg": [293, 301], "counter_kwarg": [293, 301], "wittenbellinterpol": [293, 305, 777], "witten": [293, 302, 305, 307, 408, 424, 777], "bell": [293, 302, 305, 307, 408, 424, 777, 799], "context_count": [294, 295, 296, 297, 298, 300, 302, 303, 777], "text_ngram": [294, 295, 296, 297, 298, 300, 302, 303], "vocabulary_text": [294, 295, 296, 297, 298, 300, 302, 303], "num_word": [294, 295, 296, 297, 298, 300, 302, 303], "goodman": [303, 305, 307], "1995": [303, 305, 307, 408, 422, 518], "ideal": [303, 759], "backoff": [303, 307, 497, 498, 500, 502, 503, 504, 508, 510, 515, 516, 519, 528, 777, 785, 795], "alpha_gamma": [303, 307], "unigram_scor": [303, 307], "smoothing_cl": 305, "padded_everygram": 306, "absolutediscount": 307, "knesernei": 307, "ucsd": 307, "rlevi": 307, "lign256": 307, "winter2008": 307, "kneser_ney_mini_exampl": 307, "youtub": [307, 808], "ody1ysutd7o": 307, "medium": 307, "dennyc": 307, "4600addf38b8": 307, "heidelberg": 307, "ss15": 307, "smt": [307, 645, 660], "scribe6": 307, "i6": 307, "informatik": 307, "rwth": 307, "aachen": 307, "public": [307, 321, 602, 605, 606, 731, 735, 739, 740, 759, 808], "951": 307, "icassp": 307, "wittenbel": 307, "log_base2": 308, "artstein": [310, 318], "poesio": [310, 318], "2007": [310, 318, 696, 697, 751, 759, 810], "coder": [310, 318], "wherea": [310, 318], "interv": [310, 318, 324, 330, 535], "notabl": [310, 318], "masi": [310, 318, 324, 333], "binary_dist": [310, 318, 324, 780], "load_arrai": [310, 318], "agr": [310, 318, 765, 766, 784, 793, 794], "cb": [310, 318], "nk": [310, 318], "nik": [310, 318], "nck": [310, 318, 742], "avg_ao": [310, 318], "do_kw_pairwis": [310, 318], "max_dist": [310, 318], "disagr": [310, 318, 567], "kappa": [310, 318, 464], "coeffici": [310, 311, 318, 321, 342, 343, 501, 520, 703, 742, 757], "do_kw": [310, 318], "bennett": [310, 318], "albert": [310, 318], "goldstein": [310, 318], "1954": [310, 318], "scott": [310, 318], "1955": [310, 318], "siegel": [310, 318], "castellan": [310, 318], "1988": [310, 318], "ae_kappa": [310, 318], "kappa_pairwis": [310, 318], "cohen": [310, 318], "1960": [310, 318], "multi_kappa": [310, 318], "davi": [310, 318], "fleiss": [310, 318], "1982": [310, 318], "label_freq": [310, 318], "krippendorff": [310, 318, 324, 330, 567, 808], "1980": [310, 318, 324, 330, 482, 485, 490, 493], "weighted_kappa_pairwis": [310, 318], "1968": [310, 318], "weighted_kappa": [310, 318], "ngramassocmeasur": [311, 313, 315, 316, 321, 471, 473], "bigram_score_fn": [311, 321], "n_ii": [311, 321, 757], "n_ix": [311, 321, 757], "n_xi": [311, 321, 757], "n_xx": [311, 321, 757], "conting": [311, 313, 315, 316, 321], "n_oi": [311, 321, 757], "n_io": [311, 321, 757], "n_oo": [311, 321, 757], "phi_sq": [311, 321, 780], "phi": [311, 321, 464, 692, 693, 694], "pearson": [311, 315, 316, 321], "correl": [311, 321, 342, 343, 687, 688, 696, 697, 703, 759, 780], "chi_sq": [311, 315, 316, 321, 757, 780], "n_ix_xi_tupl": [311, 321], "sq": [311, 321], "fisher": [311, 321, 780], "1996": [311, 321, 381, 382], "sensit": [311, 321, 496, 517, 602, 605, 606, 803], "pmi": [311, 315, 316, 321, 471, 473, 474, 757, 780], "scipi": [311, 321, 657, 742], "dice": [311, 321, 780], "jaccard": [311, 315, 316, 321, 780], "likelihood_ratio": [311, 315, 316, 321, 757, 780], "mi_lik": [311, 315, 316, 321, 780], "power": [311, 315, 316, 321, 504, 528, 759], "expon": [311, 315, 316, 321], "No": [311, 315, 316, 321, 381, 382, 477, 481, 489, 625, 651, 652, 681, 684, 701, 725, 728, 731, 742, 759, 763, 782, 785, 796], "pointwis": [311, 315, 316, 321, 505, 521, 757], "poisson_stirl": [311, 315, 316, 321, 780], "poisson": [311, 315, 316, 321], "stirl": [311, 315, 316, 321], "raw_freq": [311, 315, 316, 321, 757, 780], "student_t": [311, 315, 316, 321, 757, 780], "vb": [312, 356, 357, 358, 396, 398, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 522, 529, 536, 759, 762, 763, 770, 771, 780, 787, 793, 795, 796, 806], "cm": [312, 780], "diagon": 312, "ri": 312, "tj": 312, "sort_by_count": [312, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 780, 795], "tabul": [312, 356, 357, 408, 409, 415, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 703, 808], "prec": [312, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "0000": [312, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "7500": [312, 755], "5000": [312, 356, 357, 408, 410, 474, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 759, 795], "6667": [312, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "2pr": [312, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 780], "loos": [312, 445, 759, 801], "show_perc": 312, "values_in_chart": [312, 780], "understem": 314, "overstem": 314, "oi": [314, 783], "sw": [314, 783], "errt": [314, 783], "chri": [314, 489, 725, 728], "get_words_from_dictionari": 314, "five": [315, 321, 480, 488, 803], "trigram_score_fn": [315, 316, 321], "n_iiii": [315, 321], "n_iiix": [315, 321], "n_iixi": [315, 321], "n_ixii": [315, 321], "n_xiii": [315, 321], "n_iixx": [315, 321], "n_ixix": [315, 321], "n_ixxi": [315, 321], "n_xixi": [315, 321], "n_xxii": [315, 321], "n_xiix": [315, 321], "n_ixxx": [315, 321], "n_xixx": [315, 321], "n_xxix": [315, 321], "n_xxxi": [315, 321], "n_xxxx": [315, 321], "n_iii": [316, 321], "n_iix": [316, 321], "n_ixi": [316, 321], "n_xii": [316, 321], "n_ixx": [316, 321], "n_xix": [316, 321], "n_xxi": [316, 321], "n_xxx": [316, 321], "fraction": [317, 335, 339, 340, 533, 681], "inter": [318, 808], "survei": [318, 324, 624, 649], "annotationtask": 318, "convent": [318, 382, 535, 537, 647, 653, 695, 759, 765, 785, 788], "tripl": [318, 356, 359, 396, 405, 452, 453, 464, 469, 624, 649, 762, 766, 788], "v1": [318, 379, 380, 770, 778, 790], "c2": [318, 501, 520, 706, 707, 708, 709, 710, 711, 712, 713, 714, 752, 759, 763, 774], "bennet": 318, "dirnam": 318, "__file__": [318, 785], "artstein_poesio_exampl": 318, "88": [318, 324, 356, 357, 396, 616, 619, 621, 624, 626, 632, 633, 635, 636, 641, 645, 646, 647, 649, 653, 655, 659, 660, 759, 786, 793, 796], "round": [318, 324, 496, 500, 519, 671, 672, 673, 674, 675, 680, 681, 690, 691, 692, 693, 694, 696, 697, 703, 733, 734, 735, 736, 740, 777, 779, 798], "79953": 318, "82": [318, 624, 649, 759, 786, 796], "wrong": [318, 681, 759, 766, 784, 803], "785fb79": 318, "t2": [318, 754], "t3": [318, 754], "othr": 318, "webdoc": 319, "ualberta": 319, "kondrak": 319, "2002": [319, 341, 464, 505, 521, 646, 680, 681, 699, 700, 759], "grzegorz": 319, "histor": 319, "sociolinguist": 319, "synchron": [319, 759], "phonolog": [319, 642, 654], "tune": [319, 408, 422, 681], "c_skip": 319, "c_sub": 319, "c_exp": 319, "c_vwl": 319, "salienc": 319, "replic": 319, "publish": [319, 482, 490, 699, 700, 757, 806, 808], "\u03b8in": 319, "tenwi": 319, "\u03b8": [319, 464], "dissert": [319, 454, 459, 642, 658], "54": [319, 660, 668, 679, 755, 759, 780, 795, 796], "str1": 319, "str2": 319, "51": [319, 500, 519, 616, 621, 624, 633, 641, 649, 659, 660, 759, 784, 786, 796], "diff": 319, "52": [319, 616, 621, 624, 633, 641, 649, 659, 660, 759, 784, 796], "sigma_exp": 319, "sigma_skip": 319, "indel": 319, "sigma_sub": 319, "randomli": [320, 340, 408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 474, 505, 521], "unpermut": [320, 340], "shuffl": [320, 340], "bigramassocmeasur": [321, 471, 473, 474, 757, 780], "trigramassocmeasur": [321, 757, 780], "contingencymeasur": [321, 757], "count_of_ngram": 321, "count_of_n": 321, "1gram_1": 321, "1gram_j": 321, "2gram_1": 321, "2gram_k": 321, "count_of_1gram_1": 321, "count_of_1gram_n": 321, "count_of_total_word": 321, "_n": 321, "_conting": 321, "usabl": 321, "quadgramassocmeasur": [321, 757, 780, 808], "custom_dist": 324, "edit_dist": [324, 568, 780, 808], "substitution_cost": [324, 325, 326, 568], "transposit": [324, 325, 326, 568], "levenshtein": [324, 325, 326, 780, 808], "rain": [324, 325, 326, 758, 759, 780, 790, 796], "shine": [324, 325, 326, 780], "sain": [324, 325], "shin": [324, 325], "penalti": [324, 325, 646, 677, 681, 696, 697, 699, 700, 702, 703, 704, 798], "ab": [324, 325, 358, 398, 497, 523, 528, 759, 779, 780, 796], "analys": [324, 325, 602, 605], "edit_distance_align": [324, 780, 808], "cs124": [324, 326], "lec": [324, 326], "med": [324, 326], "backtrac": [324, 326], "fractional_pres": 324, "interval_dist": 324, "81": [324, 330, 624, 649, 759, 795, 796], "methodolog": [324, 330, 642], "jaccard_dist": [324, 780], "jaro_similar": 324, "jaro": 324, "matthew": [324, 509, 524], "1989": [324, 506, 521], "linkag": 324, "1985": 324, "censu": 324, "tampa": 324, "florida": 324, "84": [324, 660, 755, 759, 791, 796], "406": [324, 624, 649], "414": 324, "wikipedia": [324, 660, 742], "wiki": [324, 660, 742, 807, 808], "e2": [324, 778, 789], "93winkler_dist": 324, "jaro_sim": 324, "s_1": 324, "s_2": 324, "s_i": [324, 505, 521], "half": [324, 334, 341, 347, 349], "jaro_winkler_similar": 324, "max_l": 324, "winkler": 324, "enhanc": [324, 514, 745, 808, 810], "fellegi": 324, "sunter": 324, "354": 324, "359": [324, 751], "jaro_winkler_sim": 324, "upperbound": 324, "overweigh": 324, "srd": 324, "rr93": 324, "rescal": 324, "winkler_exampl": 324, "billi": [324, 782], "blili": 324, "massi": 324, "massei": 324, "yvett": 324, "yevett": 324, "bolli": 324, "dwayn": 324, "duan": 324, "dixon": 324, "dickson": 324, "winkler_scor": 324, "967": 324, "947": 324, "944": 324, "911": [324, 803], "893": 324, "858": 324, "jaro_scor": 324, "933": 324, "889": [324, 671, 690], "867": 324, "822": 324, "790": 324, "p_factor": 324, "jscore": 324, "wscore": 324, "rr94": 324, "shackleford": 324, "shackelford": 324, "dunningham": 324, "cunnigham": 324, "nichleson": 324, "nichulson": 324, "jone": [324, 796], "johnson": [324, 687, 688], "abrom": 324, "abram": 324, "hardin": 324, "martinez": 324, "itman": 324, "smith": [324, 646, 687, 688, 808], "jeraldin": 324, "geraldin": 324, "marhta": 324, "martha": 324, "juli": [324, 808], "juliu": 324, "tanya": 324, "tonya": 324, "sean": [324, 808], "jon": [324, 658], "jan": [324, 646, 774], "brookhaven": 324, "brrokhaven": 324, "brook": [324, 356, 357, 396, 529, 788], "hallow": 324, "hllw": 324, "decatur": 324, "decatir": 324, "fitzrureit": 324, "fitzenreit": 324, "higbe": 324, "highe": 324, "higve": 324, "lacura": 324, "locura": 324, "iowa": 324, "iona": 324, "1st": [324, 682, 683], "ist": [324, 668, 671, 672, 673, 674, 675, 679, 690, 691, 692, 693, 694], "970": 324, "896": 324, "926": 324, "722": 324, "467": 324, "869": 324, "783": 324, "917": 324, "905": 324, "856": 324, "833": 324, "982": 324, "956": 324, "832": 324, "922": 324, "961": [324, 757], "921": 324, "880": 324, "805": 324, "943": 324, "913": 324, "900": [324, 795], "bad": [324, 472, 474, 475, 496, 525, 696, 697, 754, 761, 766, 791, 803], "masi_dist": [324, 780], "passonneau": [324, 333], "pragmat": [324, 333], "presenc": [324, 474], "card": [327, 335, 339, 340], "ins_cost": [329, 341], "del_cost": [329, 341], "shift_cost_coeff": [329, 341], "ham": [329, 341, 657, 690, 755, 757], "hypothet": [329, 341], "kulyukin": [329, 341], "1100100000": [329, 341], "1100010000": [329, 341], "1100000001": [329, 341], "011": [329, 341, 685], "110": [329, 341, 624, 649, 660, 757, 796], "111": [329, 341, 356, 396, 624, 649], "2f": [334, 341, 344, 755, 757, 786], "0100": [334, 341], "400": [334, 341, 780, 797, 799], "00": [334, 341, 344, 759, 796, 803], "rank_gap": [337, 342, 757], "ty": [337, 342], "spearman_correl": [337, 338, 342, 757, 780], "approxrand": 340, "windowdiff": [341, 780], "pevzner": 341, "hearst": [341, 796], "critiqu": 341, "28": [341, 356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 681, 686, 689, 759, 774, 781, 784, 795], "36": [341, 500, 519, 616, 621, 624, 633, 641, 649, 659, 660, 759, 781, 784, 796, 803], "bookstein": 341, "raita": 341, "353": 341, "375": [341, 783, 791], "baselin": [341, 500, 519, 533, 795], "usu": 341, "vkulyukin": 341, "vkweb": 341, "softwar": [341, 529, 753, 808], "ghd": 341, "studi": [341, 356, 357, 396, 529, 642, 654], "benefit": 341, "versu": 341, "begsten": 341, "quel": 341, "pour": [341, 759], "mesur": 341, "efficacit": 341, "taln": 341, "pk": 341, "beeferman": 341, "berger": 341, "lafferti": 341, "34": [341, 624, 649, 660, 759, 781, 795, 796, 803], "177": 341, "210": 341, "seg1": [341, 344], "seg2": [341, 344], "000100000010": [341, 344, 780], "000010000100": [341, 344, 780], "s3": [341, 344, 479, 742, 763, 780, 790, 796], "100000010000": [341, 344, 780], "ranks_from_scor": [342, 757], "ranks_from_sequ": [342, 757], "ranks1": [342, 343], "ranks2": [342, 343], "meaning": [342, 343, 780], "servic": [346, 731, 759, 803], "babelize_shel": 346, "noam": 347, "assembl": [347, 759, 788], "eleg": 347, "stylist": 347, "generate_chomski": 347, "line_length": 347, "72": [347, 624, 649, 660, 757, 759, 796], "remaind": [348, 349, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 397, 399], "fat": 348, "vs": [348, 669, 679, 725, 728, 766, 784], "drain": 348, "wind": [348, 757, 758], "air": 348, "rapid": 348, "coil": [348, 759], "display_al": 348, "experiment": [349, 477, 667, 677, 704], "bubbl": [349, 781], "adjac": [349, 381, 382, 395, 706, 715, 722, 780], "swap": [349, 670, 671, 672, 673, 674, 675, 695], "halv": 349, "quick": [349, 356, 357, 396, 405, 509, 524, 781], "scan": 349, "smallest": 349, "revword": 350, "xf": 350, "yf": 350, "word_find": [350, 781], "alph": 350, "abcdefghijklmnopqrstuvwxyz": 350, "morphem": 351, "shiftreducepars": [351, 388, 404, 784, 808], "recursivedescentpars": [351, 387, 403, 784, 793], "dynam": [351, 392, 395, 397, 407, 505, 521, 725, 728], "from_unified_model_dir": [352, 394], "parser_model": [352, 394], "reranker_featur": [352, 394], "reranker_weight": [352, 394], "parser_opt": [352, 394], "reranker_opt": [352, 394], "rerank": [352, 394], "rerankingpars": [352, 394], "load_parser_opt": [352, 394], "load_reranker_model": [352, 394], "tagged_pars": [352, 394, 405], "word_and_tag_pair": [352, 394], "unconstrain": [352, 394], "model_dir": [352, 394], "get_unified_model_paramet": [352, 394], "parser_arg": [353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 389, 395, 397, 399], "chartrulei": [353, 354, 361, 362, 368, 375, 386, 389, 395, 399], "trace_chart_width": [353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 397, 399], "use_agenda": [353, 354, 361, 362, 368, 375, 386, 389, 395, 399], "chart_class": [353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 397, 399, 406, 765], "chart_pars": [353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 386, 389, 395, 397, 784], "queue": [355, 374, 376, 383, 391, 402, 406], "sort_queu": [355, 374, 376, 383, 391, 402], "_grammar": [355, 392, 402, 407], "beam_siz": [355, 374, 376, 383, 391, 402, 406, 784], "fundament": [355, 374, 376, 383, 391, 399, 402, 765, 806], "genericcorenlppars": [356, 357, 396], "setup_fixt": [356, 357, 396, 507, 522, 538, 774, 782], "check_jar": [356, 357, 396, 547], "corenlpserv": [356, 357, 396], "_jar": [356, 357, 396, 529], "corenlppars": [356, 396], "dep_pars": [356, 396, 405, 454], "raw_pars": [356, 357, 396, 405], "fox": [356, 357, 396, 405, 509, 524], "jump": [356, 357, 396, 405, 509, 524, 764, 803], "to_conl": [356, 359, 396, 762], "normalize_whitespac": [356, 357, 396], "amod": [356, 358, 396, 398, 405, 762], "nsubj": [356, 396, 405], "obl": [356, 396], "punct": [356, 396, 405, 448, 459, 460, 645, 800], "outsid": [356, 357, 396, 684, 695, 701, 725, 728, 798, 805], "governor": [356, 396, 757, 788], "dep": [356, 359, 396, 750, 762], "parse_fox": [356, 357, 396], "parse_dog": [356, 357, 396], "raw_parse_s": [356, 357, 396, 405], "grei": [356, 357, 396, 405], "wolf": [356, 357, 396, 405, 501, 520, 803], "parse_friend": [356, 357, 396], "friend": [356, 357, 396, 405, 731], "tabbi": [356, 357, 396, 405], "prp": [356, 357, 396, 405, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 524, 759, 763, 785, 795, 800], "vbp": [356, 357, 396, 405, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 523, 772, 795, 800], "cop": [356, 396, 753], "nmod": [356, 358, 396, 398, 405, 762], "poss": [356, 396, 753, 767], "lrb": [356, 357, 396, 405, 621, 632, 633, 641, 659, 795], "rrb": [356, 357, 396, 405, 621, 632, 633, 641, 659, 795], "parse_john": [356, 357, 396], "parse_mari": [356, 357, 396], "parse_text": [356, 357, 396], "love": [356, 357, 359, 396, 429, 474, 748, 774, 778, 779, 784, 790, 791, 805], "anhalt": [356, 396], "ounc": [356, 396], "soda": [356, 396], "bottl": [356, 396], "crash": [356, 396, 660, 796], "555": [356, 396, 795], "disappear": [356, 396, 759, 765], "nfp": [356, 396], "aux": [356, 396, 753, 765, 801], "rb": [356, 357, 396, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 525, 528, 759, 761, 785, 795, 800, 801, 806], "advmod": [356, 396], "insight": [356, 396, 795], "dream": [356, 396, 759], "life": [356, 396, 767], "electron": [356, 396, 645, 788], "cyber": [356, 396], "cultur": [356, 396], "film": [356, 396, 791], "quarter": [356, 396], "pull": [356, 396, 464, 547, 750, 796, 803], "cohes": [356, 396], "stori": [356, 396, 758, 759], "compound": [356, 396, 791], "parser_annot": [356, 357, 396], "make_tre": [356, 357, 396], "9000": [356, 357, 396, 795], "tagtyp": [356, 357, 396], "strict_json": [356, 357, 396], "retag": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517], "api_cal": [356, 357, 396], "confusionmatrix": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 780], "perceptrontagg": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 515, 516, 517, 524, 795], "gold_data": [356, 357, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 795], "cd": [356, 357, 358, 398, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 528, 762, 784, 787, 795, 796, 806], "jjr": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "rbr": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 759, 795, 796], "rp": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "vbg": [356, 357, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 528, 795], "wdt": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795, 796, 799], "evaluate_per_tag": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "7143": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "8333": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "9167": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517], "8800": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517], "8980": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517], "8889": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "9333": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517], "8615": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517], "8929": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "9434": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "9500": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517], "9744": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517], "4000": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 630, 657, 759, 785, 795], "5714": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 681, 795], "8571": [356, 357, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 795], "raw_tag_s": [356, 357, 396], "span_token": [356, 357, 586, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 646, 647, 653, 659, 660, 796], "start_i": [356, 357, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 647, 653], "end_i": [356, 357, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 647, 653], "span_tokenize_s": [356, 357, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637], "rami": [356, 357, 396, 529], "eid": [356, 357, 396, 529], "stoni": [356, 357, 396, 529], "ny": [356, 357, 396, 527, 529], "state_or_provinc": [356, 357, 396], "airspe": [356, 357, 396, 507, 511, 522, 527, 529], "unladen": [356, 357, 396, 507, 511, 522, 527, 529], "swallow": [356, 357, 396, 507, 511, 522, 527, 529, 685, 803], "wp": [356, 357, 396, 507, 522, 527, 529, 795], "muffin": [356, 357, 396, 616, 619, 621, 626, 632, 633, 635, 636, 641, 645, 647, 653, 655, 659, 660, 793, 796], "bui": [356, 357, 396, 616, 619, 621, 626, 632, 633, 635, 636, 641, 647, 653, 655, 659, 660, 793, 796], "ntwo": [356, 357, 396, 616, 619, 621, 626, 632, 633, 635, 636, 641, 647, 653, 655, 659, 796], "nthank": [356, 357, 396, 616, 619, 621, 626, 632, 633, 635, 636, 641, 647, 653, 655, 659, 660, 793, 796], "thank": [356, 357, 396, 616, 619, 621, 632, 633, 635, 636, 641, 647, 653, 655, 659, 745, 793, 796, 806, 808], "colour": [356, 357, 396, 655], "tokenize_s": [356, 357, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 649, 796], "pretty_print": [357, 396, 433, 434, 448, 706, 707, 708, 709, 710, 711, 712, 713, 714, 764, 799], "_______________": [357, 396], "__________________________": [357, 396, 800], "_________": [357, 396, 764, 800], "___": [357, 396, 764, 799, 800], "________": [357, 396, 764, 799, 800], "____": [357, 396, 706, 715, 722, 800], "__________": [357, 396, 764, 800], "_______": [357, 396, 800], "parse_wolf": [357, 396], "___________": [357, 396, 800], "_____________": [357, 396], "________________________": [357, 396], "_____": [357, 396, 799, 800], "______": [357, 396, 800], "nasiriya": [357, 396], "iraq": [357, 396], "iraqi": [357, 396], "former": [357, 396, 758, 784], "prison": [357, 396, 757], "jessica": [357, 396], "lynch": [357, 396], "angrili": [357, 396], "dismiss": [357, 396], "claim": [357, 396, 765, 791], "biographi": [357, 396], "rape": [357, 396], "captor": [357, 396], "broader": [357, 396], "poor": [357, 390, 396, 761, 791], "spx": [357, 396], "46": [357, 396, 621, 624, 633, 641, 649, 659, 660, 755, 759, 796], "997": [357, 396], "gold_sent": [358, 390, 398, 501, 520], "pierr": [358, 398, 759, 762], "vinken": [358, 398, 759, 762], "61": [358, 398, 489, 624, 649, 660, 759, 762, 772, 784, 796, 803], "vc": [358, 398, 762], "board": [358, 398, 759, 762], "vmod": [358, 398, 762], "nonexecut": [358, 398, 762], "director": [358, 398, 759, 762, 788], "pmod": [358, 398, 762], "nov": [358, 398, 500, 519, 762], "la": [358, 398, 480, 488, 750, 759, 785, 796, 798, 799], "ua": [358, 398], "00001": [358, 398], "stp": 359, "lingfil": 359, "nivr": [359, 390], "maltxml": 359, "tree_str": [359, 801], "cell_extractor": [359, 762], "zero_bas": [359, 762], "cell_separ": 359, "top_relation_label": [359, 377, 401, 762], "dummi": [359, 390, 695], "zpar": [359, 762], "examlpl": 359, "null": [359, 377, 401, 669, 673, 674, 675, 681, 690, 691, 692, 693, 694, 695, 762], "add_arc": 359, "head_address": 359, "mod_address": 359, "arc": [359, 379, 380, 382, 390], "address": [359, 379, 380, 746, 759, 762, 765], "add_nod": 359, "connect_graph": 359, "contains_address": 359, "node_address": 359, "contains_cycl": 359, "dg": [359, 381, 382, 762], "treebank_data": [359, 762], "cyclic_dg": 359, "child1": 359, "ntop": 359, "child2": 359, "child3": 359, "child4": 359, "get_by_address": 359, "get_cycle_path": 359, "curr_nod": 359, "goal_node_index": 359, "left_children": 359, "node_index": [359, 379, 380], "nx_graph": 359, "nodelist": 359, "networkx": 359, "redirect_arc": 359, "remove_by_address": 359, "right_children": 359, "to_dot": 359, "dependencygrapherror": 359, "conll_demo": 359, "conll_file_demo": 359, "cycle_finding_demo": 359, "svg": [359, 706, 715, 722], "fom": 359, "jpeg": 359, "ep": 359, "png": 359, "webp": 359, "capture_output": 359, "malt_demo": 359, "nx": [359, 759], "incrementalchartpars": [360, 366, 369, 370, 372, 373, 397], "earlei": [360, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 395, 397, 784, 808], "featurechartpars": [361, 362, 366, 368, 397, 399, 784], "featureincrementalchartpars": [363, 364, 365, 367, 397, 784], "leafinitrul": [366, 371, 395, 397, 399], "featureemptypredictrul": [366, 397, 399], "featurebottomuppredictcombinerul": [366, 397, 399], "featurecompletefundamentalrul": [366, 397], "featureincrementalchart": [366, 397], "jai": [371, 397], "predictorrul": [371, 397], "scannerrul": [371, 397], "completerrul": [371, 397], "emptypredictrul": [371, 395, 397, 399], "bottomuppredictcombinerul": [371, 395, 397, 399], "completefundamentalrul": [371, 397], "incrementalchart": [371, 397], "bottomupprobabilisticchartpars": [374, 376, 383, 391, 402], "absent": [374, 402, 793], "mco": [377, 401], "malt_pars": [377, 401], "malt_model": [377, 401], "mp": [377, 401], "engmalt": [377, 401], "shot": [377, 401, 762], "eleph": [377, 401, 762, 782], "pajama": [377, 401, 762], "parser_dirnam": [377, 401], "additional_java_arg": [377, 401], "chalk": [377, 401], "185": [377, 401, 642, 654], "heapsiz": [377, 401], "xmx1024m": [377, 401], "goo": [377, 401], "gl": [377, 401, 785], "mpdbvq": [377, 401], "parse_tagged_s": [377, 401], "generate_malt_command": [377, 401], "inputfilenam": [377, 401, 624, 649], "outputfilenam": [377, 401], "depgraph": [377, 390, 401, 436, 454, 458, 770], "train_from_fil": [377, 401], "conll_fil": [377, 401], "dependencyscoreri": [378, 379, 380], "scorer": [378, 379, 380], "conll_data2": [378, 379, 381, 382], "npp": [378, 379, 380], "probabilisticnonprojectivepars": [378, 379], "cathi": [378, 379, 381, 382], "zag": [378, 379, 381, 382], "hen": [378, 379, 381, 382], "zwaaien": [378, 379, 381, 382], "punc": [378, 379, 759, 788], "confid": [378, 379, 759, 805, 808], "multidimension": [378, 379], "demoscor": 379, "outer": 379, "fig": [379, 700], "keith": [379, 687, 688], "hall": [379, 759], "naivebayesdependencyscor": 379, "phenomena": [379, 380], "dependency_grammar": [379, 382], "accomplish": [379, 782], "ungrammat": [379, 406, 773], "lattic": 379, "grammat": [379, 406, 476, 773], "nonproject": [379, 380], "mcdonald": [379, 380, 523], "liken": [379, 380], "taught": [379, 380, 762], "golf": [379, 380, 762, 788], "dachshund": [379, 380], "ndp": [379, 380], "best_incoming_arc": [379, 380], "incom": [379, 380, 731, 796], "destin": [379, 380], "collapse_nod": [379, 380], "new_nod": [379, 380], "cycle_path": [379, 380], "g_graph": [379, 380], "b_graph": [379, 380], "c_graph": [379, 380], "compute_max_subtract_scor": [379, 380], "cycle_index": [379, 380], "subtract": [379, 380, 415], "compute_original_index": [379, 380], "new_index": [379, 380], "initialize_edge_scor": [379, 380], "original_best_arc": [379, 380], "dependency_scor": [379, 380], "establish": [379, 380, 507, 522], "update_edge_scor": [379, 380], "hall_demo": 379, "nonprojective_conll_parse_demo": 379, "rule_based_demo": 379, "nonprojectivedependencypars": [380, 762], "eisner": [381, 382], "ppdp": [381, 382], "wild": [381, 382], "span1": [381, 382], "span2": [381, 382], "vice": [381, 382, 602, 605, 606, 785], "versa": [381, 382], "pivot": [381, 382], "dependencyspan": [381, 382], "compute_prob": [381, 382], "chartcel": 382, "cyk": [382, 725, 728], "amongst": 382, "_start_index": 382, "_end_index": 382, "_head_index": 382, "depict": 382, "end_index": 382, "head_index": 382, "probabilisticprojectivedependencypars": 382, "meet": [382, 759, 794], "understood": [382, 767], "arity_parse_demo": 382, "projective_prob_parse_demo": 382, "projective_rule_parse_demo": 382, "repeatedli": [385, 387, 388, 403, 404, 408, 409], "heurist": [385, 404, 646, 784], "midwai": [386, 388, 395, 404], "set_strategi": [386, 395], "_restart": [386, 395], "current_chartrul": [386, 395], "set_grammar": [386, 387, 388, 395, 403, 404], "set_chart": [386, 395], "_histori": [387, 388, 403, 404], "rtext": [387, 403], "trippl": [387, 403], "_tried_": [387, 403], "_tried_m": [387, 403], "subtoken": [387, 403, 505, 521, 537], "remaining_text": [387, 388, 403, 404], "undon": [387, 388, 403, 404, 632, 659], "expandable_product": [387, 403], "untried_expandable_product": [387, 403], "untried_match": [387, 403], "currently_complet": [387, 403], "setp": [388, 404], "reducible_product": [388, 404], "aim": [390, 476], "transfer": [390, 408, 422], "dep_graph": [390, 405], "extract_featur": [390, 471, 473], "31": [390, 500, 519, 616, 621, 624, 627, 633, 641, 649, 656, 659, 660, 759, 781, 784, 795, 796], "sandra": 390, "kubler": 390, "ryan": 390, "mcdonal": 390, "joakim": 390, "left_arc": 390, "leftarc": 390, "right_arc": 390, "rightarc": 390, "alg_opt": 390, "eager": [390, 749], "arc_eag": 390, "arc_standard": 390, "modelfil": 390, "dependencyevalu": [390, 398], "att": 390, "sbj": [390, 759, 787, 800], "financi": [390, 805], "market": 390, "pc": 390, "pu": 390, "stk_0_pos_top": 390, "buf_0_form_econom": 390, "buf_0_lemma_econom": 390, "buf_0_pos_jj": 390, "buf_1_form_new": 390, "buf_1_pos_nn": 390, "buf_2_pos_vbd": 390, "buf_3_pos_jj": 390, "stk_0_form_on": 390, "stk_0_lemma_on": 390, "stk_0_pos_in": 390, "stk_1_pos_nn": 390, "buf_0_form_market": 390, "buf_0_lemma_market": 390, "buf_0_pos_nn": 390, "buf_1_form_": 390, "buf_1_pos_": 390, "buf_0_ldep_att": 390, "tempfil": [390, 759, 761, 797], "input_fil": 390, "namedtemporaryfil": 390, "transition_pars": 390, "gettempdir": 390, "parser_std": 390, "_create_training_examples_arc_std": 390, "arcstd": 390, "parser_eag": 390, "_create_training_examples_arc_eag": 390, "arceag": 390, "whatev": [391, 402], "mlc": [392, 407], "old_p": [392, 407], "new_p": [392, 407], "new_tre": [392, 407], "start_symbol": [392, 407], "bllippars": 394, "blackboard": [395, 397], "steppingchartpars": 395, "apply_everywher": 395, "bottomupchartpars": [395, 784], "bottomupleftcornerchartpars": [395, 784], "bottomuppredictrul": [395, 399], "fundamentalrul": [395, 399], "cachedtopdownpredictrul": [395, 397, 399], "topdownpredictrul": 395, "flush": 395, "_token": 395, "_num_leav": 395, "_edg": 395, "_edge_to_cpl": 395, "_index": 395, "singleedgefundamentalrul": [395, 397, 399], "filteredbottomuppredictcombinerul": 395, "filteredsingleedgefundamentalrul": [395, 397], "leftcornerchartpars": [395, 784], "topdownchartpars": [395, 784], "topdowninitrul": [395, 399], "predictor": [395, 765], "oken": [395, 402], "from_product": [395, 399, 402], "move_dot_forward": [395, 399], "new_end": [395, 399], "print_tim": [395, 397, 399, 784], "print_grammar": [395, 397, 399, 784], "print_tre": [395, 397, 399], "cooki": [395, 397, 399, 759, 784, 799], "numpars": [395, 397, 784], "demo_grammar": [395, 399, 768, 784], "corenlpdependencypars": 396, "path_to_models_jar": [396, 405], "java_opt": [396, 405, 529, 627, 655, 656], "corenlp_opt": [396, 405], "corenlpservererror": 396, "tokenizeri": [396, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 637, 639, 641, 642, 644, 645, 646, 647, 649, 651, 653, 654, 655, 656, 657, 658, 659], "try_port": 396, "appeal": [397, 759], "earleychartpars": [397, 784], "formul": 397, "1970": 397, "featuresingleedgefundamentalrul": [397, 399], "featurecompleterrul": 397, "featureearleychartpars": [397, 763, 765, 784], "featureincrementalbottomupchartpars": [397, 784], "featureincrementalbottomupleftcornerchartpars": [397, 784], "featureincrementaltopdownchartpars": [397, 784], "featurepredictorrul": 397, "featuretopdownpredictrul": [397, 399], "featurescannerrul": 397, "filteredcompletefundamentalrul": 397, "incrementalbottomupchartpars": [397, 784], "incrementalbottomupleftcornerchartpars": [397, 784], "incrementalleftcornerchartpars": [397, 784], "incrementaltopdownchartpars": [397, 784], "featurebottomupchartpars": [399, 784], "featurebottomupleftcornerchartpars": [399, 784], "featurebottomuppredictrul": 399, "featurefundamentalrul": 399, "featstructnontermin": [399, 764], "featuretreeedg": 399, "b2": [399, 429, 765, 790], "b3": 399, "featuretopdownchartpars": [399, 784], "featuretopdowninitrul": 399, "next_with_bind": 399, "instantiatevarschart": [399, 765], "inst_var": 399, "instantiate_edg": 399, "print_sent": 399, "run_profil": 399, "maltpars": [401, 763, 771], "find_malt_model": 401, "find_maltpars": 401, "malt_regex_tagg": 401, "insidechartpars": [402, 784], "randomchartpars": [402, 784], "longestchartpars": [402, 784], "beam": [402, 514], "aka": [402, 678, 681, 686, 688, 689, 698, 700, 742, 787], "probabilisticbottomupinitrul": 402, "probabilisticbottomuppredictrul": 402, "probabilisticfundamentalrul": 402, "probabilisticleafedg": 402, "probabilistictreeedg": 402, "singleedgeprobabilisticfundamentalrul": 402, "edge1": 402, "unsortedchartpars": [402, 784], "draw_pars": 402, "print_pars": 402, "summari": [402, 407], "steppingrecursivedescentpars": 403, "steppingshiftreducepars": 404, "genericstanfordpars": 405, "model_path": 405, "lexpars": 405, "englishpcfg": 405, "ser": [405, 529, 785], "gz": [405, 529, 761, 769], "mx4g": 405, "stanfordpars": 405, "tagged_parse_s": 405, "stanforddependencypars": 405, "stanfordneuraldependencypars": 405, "unimpl": 405, "stanfordcorenlp": 405, "prn": 405, "testgrammar": [406, 773], "suit": [406, 539, 646, 786, 803, 806], "reject": [406, 759, 763, 773], "show_tre": 406, "extract_test_sent": [406, 784], "load_pars": [406, 752, 764, 765, 784], "grammar_url": 406, "load_arg": 406, "featuregrammar": [406, 452, 456, 461, 469, 765, 784, 790], "taggedsent_to_conl": 406, "foobar": [406, 628, 654, 786], "taggedsents_to_conl": 406, "viterbipars": [407, 784], "outcom": [408, 409, 414, 415, 416, 418, 419, 785], "analyt": [408, 755], "conditionalprobdisti": [408, 410, 412, 505, 521], "conditionalprobdist": [408, 412, 786], "defaultdict": [408, 409, 446, 453, 464, 466, 677, 704, 742, 802], "formal": [408, 409, 415, 521, 536], "cfdist": [408, 409, 410], "freq": [408, 409, 415, 757], "cond_sampl": [408, 409], "deepcopi": [408, 409, 781, 799, 801], "cumul": [408, 409, 415, 786], "probdist": [408, 410, 411, 412, 421, 422], "mleprobdist": [408, 410, 780, 786], "heldoutprobdist": [408, 410, 786], "factory_arg": [408, 410], "cpdist": [408, 410], "423": [408, 410], "probdist_factori": [408, 410], "factory_kw_arg": [408, 410], "crossvalidationprobdist": [408, 786], "held": [408, 411, 805], "sum_to_on": [408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "dictionaryconditionalprobdist": [408, 786], "probdist_dict": [408, 412], "dictionaryprobdist": 408, "prob_dict": [408, 413], "lidstoneprobdist": [408, 414, 418, 786], "fdist": [408, 415], "nr": [408, 415, 416, 422, 516, 528, 784, 796, 800], "hapax": [408, 415], "legomena": [408, 415], "pformat": [408, 415, 706, 707, 708, 709, 710, 711, 712, 713, 714, 787], "maxlen": [408, 415], "r_nr": [408, 415], "heldout": [408, 416], "tr": [408, 416, 445], "precomput": [408, 416], "_estim": [408, 416], "_max_r": [408, 416], "base_fdist": [408, 416], "heldout_fdist": [408, 416], "probabilisticmixin": [408, 706, 709, 713, 719, 723], "kneserneyprobdist": [408, 786], "prefer": [408, 417, 445, 642, 645, 677, 704, 750], "set_discount": [408, 417], "laplaceprobdist": [408, 786], "mutableprobdist": [408, 786], "prob_dist": [408, 421], "store_log": [408, 421], "garner": [408, 421], "nonneg": [408, 742], "samp": [408, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "probabilistica": 408, "prob_kwarg": [408, 706, 709, 713, 719, 723], "redefin": [408, 786], "simplegoodturingprobdist": [408, 786], "simplegoodtur": [408, 422], "ture": [408, 422, 786], "tear": [408, 422], "gale": [408, 422, 685], "sampson": [408, 422], "quantit": [408, 422], "vol": [408, 422, 477], "217": [408, 422], "237": [408, 422], "jurafski": [408, 422], "martin": [408, 422, 482, 485, 490, 493, 583], "p103": [408, 422], "grsampson": [408, 422], "rgoodtur": [408, 422], "xi": [408, 422, 464], "slope": [408, 422, 805], "intercept": [408, 422], "mass": [408, 422, 424, 484, 491, 537], "find_best_fit": [408, 422], "_slope": [408, 422], "_intercept": [408, 422], "smoothednr": [408, 422], "uniformprobdist": 408, "wittenbellprobdist": [408, 786], "add_log": 408, "logx": [408, 425], "logi": [408, 425], "overflow": [408, 425], "pdist": [408, 426, 755], "test_pdist": [408, 427], "actual_pdist": [408, 427], "sum_log": 408, "default_factori": 409, "__missing__": 409, "abcabc": [415, 766], "knuth": 415, "prime": [415, 464, 761], "1836": 415, "prime_factor": 415, "most_common": [415, 757, 786], "abracadabra": 415, "kwd": 415, "witch": 415, "theoret": [429, 440, 451, 477, 478, 642, 693], "_counter": [429, 763, 764, 765, 771, 774, 778, 782, 789, 790], "_valu": [429, 763, 764, 765, 771, 774, 778, 782, 789, 790], "g1": [429, 770, 790], "adam": [429, 759, 774, 790], "betti": [429, 790], "fido": [429, 430, 460, 761, 763, 790], "g2": [429, 770, 774, 790], "dom": [429, 431, 451, 752, 785, 790], "compris": [430, 460], "functionvariableexpress": [430, 448, 460], "constantexpress": [430, 448, 452, 456, 459, 460, 469, 770, 789], "lambdaexpress": [430, 448, 460, 765], "thought": [430, 460, 602, 605, 606, 607, 725, 728], "curri": [430, 460], "findtyp": [430, 433, 435, 460, 778], "visit": [430, 433, 435, 448, 460], "uncurri": [430, 460], "pred": [430, 455, 460, 608, 753, 770, 778], "oppos": [430, 460], "applyto": [430, 433, 434, 435, 448, 454, 459, 460, 770], "equiv": [430, 433, 434, 435, 448, 460, 464, 771], "type_check": [430, 432, 435, 448, 459, 460], "make_variableexpress": [430, 433, 434, 435, 448, 454, 459, 460], "newvar": [430, 433, 435, 448, 460], "replace_bound": [430, 433, 435, 448, 460], "alpha_convert": [430, 433, 435, 448, 460, 778], "clash": [430, 435, 448, 460], "typecheck": [430, 433, 434, 435, 448, 460, 778], "visit_structur": [430, 433, 435, 448, 460], "subexpress": [430, 435, 460], "aggreg": [430, 435, 460, 533, 688], "individualvariableexpress": [431, 448, 451, 460, 765], "x0": [431, 451, 790], "y332": [431, 451], "u1": [431, 451], "u2": [431, 451], "u3": [431, 451], "u4": [431, 451], "closer": [431, 451, 757], "textbook": [431, 451, 808], "g4": [431, 451, 770], "purg": [431, 451, 790], "varnam": [431, 451], "latest": [432, 732, 740, 808], "candc": 432, "abstractboxerdr": 432, "clean": [432, 761, 798, 808], "renumber_sent": 432, "variable_typ": 432, "proposit": [432, 438, 451, 774], "johan": 432, "drss": [432, 764, 771, 774], "boxer_drs_interpret": 432, "elimeq": 432, "bin_dir": 432, "nltkdrtboxerdrsinterpret": 432, "anaphor": 432, "van": [432, 464, 722, 727, 788], "der": [432, 618, 642, 654, 773], "sandt": 432, "discourse_id": 432, "occur_index": 432, "drtexpress": [432, 433, 448, 764], "interpret_multi": 432, "interpret_multi_s": 432, "interpret_s": [432, 469, 790], "set_bin_dir": 432, "boxercard": 432, "boxerindex": 432, "sent_index": 432, "word_indic": 432, "boxerdr": 432, "cond": [432, 433, 448, 764, 785], "consequ": [432, 433, 448, 459, 642, 681], "boxerdrspars": 432, "drtparser": [432, 448, 763, 764, 774], "repars": [432, 447], "attempt_adjunct": [432, 460], "get_all_symbol": [432, 448, 459, 460], "get_next_token_vari": [432, 460], "nullableinttoken": 432, "boxereq": 432, "var1": 432, "var2": 432, "boxernam": 432, "change_var": 432, "boxernot": 432, "boxeror": 432, "drs1": [432, 764], "drs2": [432, 764], "boxeroutputdrspars": 432, "prolog": [432, 445, 752], "handle_condit": 432, "handle_dr": [432, 448], "parse_condit": 432, "parse_dr": 432, "parse_index": 432, "parse_vari": 432, "boxerpr": 432, "boxerprop": 432, "referenced_label": 432, "boxerrel": 432, "boxerwhq": 432, "ans_typ": 432, "passthroughboxerdrsinterpret": 432, "unparseableinputexcept": 432, "drtindividualvariableexpress": [433, 448], "get_ref": [433, 434, 448, 764], "abstractexpress": [433, 448], "eliminate_equ": [433, 434, 448, 764], "is_pronoun_funct": [433, 434, 448], "make_equalityexpress": [433, 434, 448, 460], "resolve_anaphora": [433, 434, 448], "subterm": [434, 448], "nor": [435, 460, 475, 791], "safeappend": [436, 458], "to_glueformula_list": [436, 454, 458, 770], "glue_dict": [436, 458], "to_depgraph": [436, 458, 770], "read_depgraph": [436, 458, 770], "varex": [438, 451], "variableexpress": [438, 451, 459, 460, 766, 770, 778], "ari": [440, 451, 493], "xs": [440, 451, 742], "interrog": [445, 752], "geographi": [445, 752], "earli": [445, 752, 758, 808], "warren": [445, 752, 791], "pereira": [445, 752], "j82": [445, 752], "3002": [445, 752], "oldi": [445, 752], "world0": [445, 752], "river": [445, 752], "countri": [445, 752], "border": [445, 752], "slightli": [445, 475, 479, 687, 688, 752], "world1": [445, 752], "athen": [445, 752, 759], "greec": [445, 752], "1368": [445, 752], "population_of": [445, 752], "albania": [445, 752], "contains0": [445, 752], "africa": [445, 752, 788], "central_africa": [445, 752], "bundl": [445, 752], "schema": [445, 752], "notion": [445, 752], "preflabel": [445, 752], "symmetr": [445, 669, 686, 687, 688, 689, 752, 765, 803], "val_dump": [445, 752], "val_load": [445, 752], "zloti": [445, 752], "propn": [445, 752, 763, 765, 790], "sg": [445, 751, 752, 765, 784, 790], "chat_pnam": [445, 752], "sko": 445, "swbp": 445, "guid": [445, 680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 703, 806, 807], "ariti": [445, 451, 457, 752], "altlabel": 445, "extension": 445, "binary_concept": 445, "franc": [445, 769, 803], "pari": [445, 765, 769], "capital_of": 445, "b_of": 445, "cities2t": 445, "rel_nam": 445, "dbname": 445, "setup": [445, 539, 562, 573, 601, 739, 777, 790], "clause2concept": [445, 752], "circle_of_lat": [445, 752], "circle_of_long": [445, 752], "contin": 445, "ocean": 445, "label_indiv": 445, "make_lex": 445, "proper": [445, 523, 587, 759], "make_valu": [445, 752], "process_bundl": 445, "sql_demo": 445, "sql_queri": [445, 752], "sql": [445, 464], "unary_concept": 445, "reldict": [446, 464, 466, 788], "relsym": [446, 464, 788], "clausal": [446, 464], "cooperstor": [447, 790], "cooper": [447, 759], "storag": [447, 669, 679], "parse_with_bindop": [447, 790], "s_retriev": [447, 790], "hack": [447, 778], "bindop": [447, 765], "ugh": 447, "z1": [447, 763, 764, 770, 771, 778, 782, 790], "anaphoraresolutionexcept": [448, 763, 764], "drsdrawer": 448, "outerspac": 448, "topspac": 448, "size_canva": 448, "drtabstractvariableexpress": 448, "drtapplicationexpress": 448, "applicationexpress": [448, 455, 459, 460, 774, 778], "drtbinaryexpress": 448, "binaryexpress": [448, 460], "drtbooleanexpress": 448, "booleanexpress": [448, 460], "drtconcaten": 448, "getop": [448, 460], "drtconstantexpress": 448, "drtequalityexpress": 448, "equalityexpress": [448, 460], "drteventvariableexpress": 448, "eventvariableexpress": [448, 460], "drtfunctionvariableexpress": 448, "drtlambdaexpress": 448, "binder": [448, 460], "drtnegatedexpress": 448, "negatedexpress": [448, 455, 460], "drtorexpress": 448, "orexpress": [448, 455, 460], "calculu": [448, 460, 765, 808], "get_booleanexpression_factori": [448, 459, 460], "handle_cond": 448, "handle_prop": 448, "handle_ref": 448, "isvari": [448, 460], "make_applicationexpress": [448, 460], "make_booleanexpress": [448, 459, 460], "make_lambdaexpress": [448, 454, 460], "make_negatedexpress": [448, 460], "drtproposit": 448, "drttoken": 448, "close_bracket": 448, "drs_conc": 448, "open_bracket": 448, "impli": [448, 460, 696, 697, 764], "iota": [448, 460, 464, 808], "drtvariableexpress": [448, 764], "possibleanteced": 448, "test_draw": 448, "drswidget": 449, "drtgluedemo": 449, "prev": 449, "satisfact": 451, "foldemo": 451, "folmodel": 451, "is_rel": [451, 790], "propdemo": 451, "satdemo": 451, "set2rel": [451, 790], "unchang": [451, 467, 479, 485, 486, 493, 495, 670, 671, 672, 673, 674, 675, 694, 695, 786], "subjclass": [453, 464, 788], "objclass": [453, 464, 788], "semi_rel2reldict": [453, 464, 788], "filler": [453, 464, 788], "conll2002": [453, 464, 759, 788, 808], "sre_pattern": [453, 464], "mk_reldict": [453, 464], "drtglue": [454, 771], "get_glue_dict": 454, "drtgluedict": 454, "gluedict": [454, 770], "get_glueformula_factori": 454, "drtglueformula": 454, "glueformula": [454, 459, 770], "depgraph_to_glu": 454, "get_pos_tagg": 454, "get_read": [454, 770], "gfl_to_compil": [454, 770], "gfl": [454, 770], "parse_to_compil": 454, "parse_to_mean": [454, 771], "train_deppars": 454, "add_missing_depend": 454, "find_label_nam": 454, "unique_index": 454, "get_glueformulas_from_semtype_entri": 454, "get_label": 454, "pick": [454, 696, 697, 759], "get_meaning_formula": 454, "get_semtyp": 454, "plausibl": [454, 731, 740], "initialize_label": [454, 459], "lookup_uniqu": 454, "read_fil": 454, "empty_first": 454, "iddo": [454, 459], "lev": [454, 459], "p108": [454, 459], "lambda_abstract": [454, 770], "show_exampl": 454, "csli": 455, "driver": 455, "underspecifi": [455, 683, 765], "plug": 455, "leq": 455, "andexpress": [455, 460], "iffexpress": [455, 460], "impexpress": [455, 459, 460, 770], "holesemant": 455, "fragment": [455, 514, 696, 697, 759], "legal": [455, 618, 642, 742], "formula_tre": 455, "is_nod": 455, "hole_read": 455, "grammar_filenam": 455, "semkei": [456, 465, 469, 790], "fstructur": [458, 770], "demo_read_depgraph": 458, "argument_indic": 459, "came": [459, 758], "linearlogicapplicationexcept": [459, 770], "implic": [459, 460, 778], "compile_neg": 459, "index_count": 459, "glueformulafactori": 459, "compile_po": [459, 770], "other_indic": 459, "anteced": 459, "linearlogicpars": 459, "attempt_applicationexpress": [459, 460], "variablebindingexcept": [459, 770], "allexpress": [460, 774], "quantifiedexpress": 460, "getquantifi": 460, "anytyp": 460, "basictyp": 460, "complextyp": [460, 778], "entitytyp": 460, "eventtyp": 460, "existsexpress": 460, "expectedmoretokensexcept": 460, "logicalexpressionexcept": [460, 764, 778], "bicondit": 460, "illegaltypeexcept": 460, "typeexcept": [460, 778], "other_typ": 460, "allowed_typ": 460, "inconsistenttypehierarchyexcept": [460, 778], "iotaexpress": 460, "variablebinderexpress": 460, "assertnexttoken": 460, "asserttoken": 460, "attempt_booleanexpress": 460, "attempt_equalityexpress": 460, "get_quantifiedexpression_factori": 460, "handle_lambda": 460, "handle_neg": [460, 474], "handle_open": 460, "handle_qu": 460, "handle_vari": 460, "has_prior": 460, "inrang": 460, "make_quanifiedexpress": 460, "process_next_express": 460, "process_quoted_token": 460, "data_idx": 460, "currentindex": 460, "lookahead": 460, "lookback": 460, "capabl": 460, "signifi": 460, "disjunct": [460, 468, 778, 788], "all_list": 460, "and_list": 460, "binop": 460, "eq_list": 460, "exists_list": 460, "iff_list": 460, "imp_list": 460, "iota_list": 460, "lambda_list": 460, "neq": 460, "neq_list": 460, "not_list": 460, "or_list": 460, "quant": [460, 753], "truthvaluetyp": 460, "msg": 460, "typeresolutionexcept": 460, "unexpectedtokenexcept": 460, "unexpect": [460, 764, 778, 799], "binding_op": [460, 778], "boolean_op": [460, 778], "demoexcept": 460, "demo_error": 460, "equality_pr": [460, 778], "is_eventvar": 460, "is_funcvar": 460, "is_indvar": 460, "printtyp": 460, "read_log": 460, "read_typ": 460, "type_str": 460, "skolem_funct": 460, "univ_scop": [460, 468], "unique_vari": 460, "rtupl": [464, 788], "interven": [464, 706, 707, 708, 709, 710, 711, 712, 713, 714, 757], "circumv": 464, "subjsym": [464, 788], "objsym": [464, 788], "canonic": 464, "class_abbrev": 464, "conllesp": 464, "conlln": 464, "copula": 464, "descape_ent": 464, "aelig": 464, "aacut": 464, "\u00e1": [464, 645], "acirc": 464, "\u00e2": [464, 645], "agrav": 464, "\u00e0": [464, 785], "\u03b1": [464, 645], "\u00e5": 464, "atild": 464, "\u00e3": 464, "auml": 464, "\u03b2": [464, 682, 683], "ccedil": 464, "\u03c7": [464, 645], "dagger": 464, "\u03b4": 464, "eth": 464, "\u00f0": [464, 645], "eacut": 464, "\u00e9": [464, 645, 785], "ecirc": 464, "\u00ea": [464, 645], "egrav": 464, "\u03b5": 464, "eta": 464, "\u03b7": 464, "euml": 464, "\u03b3": 464, "iacut": 464, "icirc": 464, "\u00ee": 464, "igrav": 464, "\u03b9": 464, "iuml": 464, "\u00ef": 464, "\u03ba": 464, "\u03bb": 464, "mu": [464, 481, 489], "\u03bc": [464, 645], "ntild": 464, "\u00f1": 464, "nu": 464, "\u03bd": [464, 645], "oelig": 464, "\u0153": 464, "oacut": 464, "\u00f3": [464, 785], "ocirc": 464, "\u00f4": 464, "ograv": 464, "\u00f2": [464, 645], "omega": 464, "\u03c9": [464, 645], "omicron": 464, "\u03bf": [464, 645], "oslash": 464, "otild": 464, "\u00f5": [464, 645], "ouml": 464, "\u00f6": [464, 645], "\u03c6": 464, "\u03c0": [464, 765], "psi": 464, "\u03c8": 464, "rho": [464, 703], "\u03c1": 464, "scaron": 464, "\u0161": 464, "\u03c3": [464, 645], "thorn": 464, "tau": [464, 703], "\u03c4": 464, "uacut": 464, "ucirc": 464, "\u00fb": [464, 645], "ugrav": 464, "upsilon": 464, "\u03c5": 464, "uuml": 464, "\u00fc": [464, 645], "\u03be": 464, "yacut": 464, "\u00fd": 464, "yuml": 464, "\u00ff": 464, "zeta": 464, "\u03b6": [464, 645], "acut": 464, "alefsym": 464, "\u2135": [464, 645], "ang": 464, "asymp": 464, "bdquo": 464, "brvbar": 464, "bull": 464, "cap": [464, 475, 785], "cedil": 464, "cent": 464, "circ": 464, "\u02c6": 464, "club": [464, 758], "cong": 464, "crarr": 464, "cup": 464, "curren": 464, "darr": 464, "deg": 464, "diam": 464, "emsp": 464, "u2003": 464, "ensp": 464, "u2002": 464, "euro": [464, 621, 633, 641, 659, 759], "fnof": 464, "\u0192": 464, "frac12": 464, "\u00bd": 464, "frac14": 464, "\u00bc": 464, "frac34": 464, "\u00be": 464, "frasl": 464, "ge": [464, 479, 797], "gt": [464, 660, 786], "harr": 464, "heart": [464, 759], "hellip": 464, "iexcl": 464, "\u2111": 464, "infin": 464, "iquest": 464, "isin": 464, "larr": 464, "laquo": 464, "lceil": 464, "ldquo": 464, "lfloor": 464, "lowast": 464, "loz": 464, "lrm": 464, "u200": 464, "lsaquo": 464, "lsquo": 464, "lt": [464, 660, 759, 808], "macr": 464, "mdash": 464, "micro": [464, 681, 703, 796], "\u00b5": 464, "middot": 464, "nabla": 464, "nbsp": 464, "xa0": [464, 631, 658], "ndash": 464, "ni": 464, "notin": 464, "nsub": 464, "olin": 464, "oplu": 464, "ordf": 464, "\u00aa": 464, "ordm": 464, "\u00ba": 464, "otim": 464, "permil": 464, "perp": 464, "piv": 464, "\u03d6": 464, "plusmn": 464, "pound": [464, 759, 803], "rarr": 464, "radic": 464, "raquo": 464, "rceil": 464, "rdquo": 464, "\u211c": 464, "reg": 464, "rfloor": 464, "rlm": 464, "u200f": 464, "rsaquo": 464, "rsquo": 464, "sbquo": 464, "sdot": 464, "sect": 464, "shy": 464, "xad": [464, 759], "sigmaf": 464, "\u03c2": 464, "sim": 464, "spade": 464, "sube": 464, "sup": 464, "sup1": 464, "sup2": 464, "\u00b2": 464, "sup3": 464, "\u00b3": 464, "supe": 464, "szlig": 464, "\u00df": [464, 645], "there4": 464, "thetasym": 464, "\u03d1": 464, "thinsp": 464, "u2009": 464, "tild": 464, "trade": [464, 801], "uarr": 464, "uml": 464, "upsih": 464, "\u03d2": 464, "weierp": 464, "yen": 464, "zwj": [464, 586], "u200d": 464, "zwnj": 464, "u200c": 464, "inspir": [464, 658], "effbot": 464, "extract_rel": [464, 788], "ieer_headlin": 464, "in_demo": 464, "list2sym": 464, "roles_demo": 464, "lcon": [464, 466, 788], "rcon": [464, 466, 788], "tree2semi_rel": [464, 788], "subjtext": [464, 788], "objtext": [464, 788], "semi": 464, "facilit": [464, 473, 533, 808], "ne_label": 464, "syntre": [465, 469, 790], "used_vari": 468, "to_cnf": 468, "demo_legacy_grammar": 469, "legaci": [469, 790], "demo_model0": 469, "evaluate_s": [469, 790], "read_sent": 469, "root_semrep": [469, 790], "all_word": [471, 473, 791], "unigram_word_feat": [471, 473, 791], "top_n": [471, 473], "bigram_collocation_feat": [471, 473], "assoc_measur": [471, 473], "add_feat_extractor": [471, 473, 791], "training_set": [471, 473, 791], "save_classifi": [471, 473], "save_fil": [471, 473], "test_set": [471, 473, 780, 791, 793], "lexicon_fil": [472, 475], "vader_lexicon": [472, 475], "make_lex_dict": [472, 475], "polarity_scor": [472, 475, 791], "neutral": [472, 474, 475, 785], "sentiment_val": [472, 475], "sentitext": [472, 475, 808], "score_val": [472, 475], "sentimentanalyz": [473, 474, 791], "teach": [473, 505, 521, 806, 808], "demo_liu_hu_lexicon": 474, "demo_movie_review": 474, "n_instanc": [474, 791], "demo_sent_subject": 474, "demo_subject": 474, "save_analyz": 474, "demo_tweet": 474, "10000": [474, 761, 769, 785], "demo_vader_inst": 474, "demo_vader_tweet": 474, "extract_bigram_feat": 474, "absenc": 474, "warm": 474, "polic": 474, "melt": 474, "extract_unigram_feat": [474, 791], "mark_neg": [474, 791], "riot": 474, "json2csv_preprocess": 474, "json_fil": 474, "gzip_compress": [474, 734, 735, 737, 740], "skip_retweet": 474, "skip_tongue_tweet": 474, "skip_ambiguous_tweet": 474, "strip_off_emoticon": 474, "csv": [474, 737], "writer": [474, 788], "retweet": [474, 731, 740], "emoticon": [474, 639, 791, 796], "sad": 474, "double_neg_flip": 474, "_neg": 474, "affirm": 474, "deactiv": 474, "like_neg": 474, "this_neg": 474, "movie_neg": 474, "output_markdown": 474, "parse_tweets_set": 474, "skip_head": 474, "blanklinetoken": [474, 647], "split_train_test": 474, "all_inst": 474, "timer": 474, "hutto": 475, "gilbert": 475, "parsimoni": 475, "social": [475, 804], "eighth": 475, "weblog": 475, "icwsm": 475, "ann": [475, 789], "arbor": 475, "mi": 475, "june": [475, 781, 808], "punc_list": 475, "regex_remove_punctu": 475, "allcap_differenti": 475, "sentimentintensityanalyz": [475, 791], "vaderconst": 475, "booster_dict": 475, "293": 475, "amazingli": 475, "awfulli": 475, "bare": [475, 478, 530, 608, 759], "decidedli": 475, "deepli": 475, "ef": [475, 796], "enorm": [475, 785], "exception": 475, "fabul": 475, "flippin": 475, "flip": [475, 505, 521, 693], "frickin": 475, "frick": 475, "friggin": 475, "frig": 475, "fuck": 475, "greatli": [475, 808], "hardli": 475, "hella": 475, "highli": [475, 757, 774], "huge": [475, 704, 788], "incred": [475, 791], "kinda": [475, 791], "kindof": 475, "majorli": 475, "occasion": 475, "partli": 475, "pure": 475, "remark": 475, "scarc": 475, "somewhat": [475, 608], "sorta": 475, "sortof": 475, "substanti": [475, 675, 694, 808], "thoroughli": 475, "tremend": 475, "uber": 475, "unbeliev": [475, 791], "unusu": [475, 759], "utterli": 475, "b_decr": 475, "b_incr": 475, "c_incr": 475, "733": 475, "ain": 475, "aint": 475, "aren": 475, "arent": 475, "cant": 475, "couldn": [475, 791, 796], "couldnt": 475, "daren": 475, "darent": 475, "despit": [475, 646, 791], "didnt": 475, "doesnt": 475, "dont": 475, "hadn": 475, "hadnt": 475, "hasn": 475, "hasnt": 475, "haven": [475, 755], "havent": 475, "isnt": 475, "mightn": 475, "mightnt": 475, "mustn": 475, "mustnt": 475, "needn": 475, "neednt": 475, "nope": 475, "oughtn": 475, "oughtnt": 475, "seldom": 475, "shan": 475, "shant": 475, "shouldnt": 475, "uhuh": 475, "wasn": [475, 632, 659, 796], "wasnt": 475, "weren": 475, "werent": 475, "wont": 475, "wouldnt": 475, "n_scalar": 475, "74": [475, 725, 728, 759, 765], "special_case_idiom": 475, "ass": 475, "mustard": 475, "mouth": 475, "kiss": [475, 646, 790], "death": 475, "bomb": [475, 788], "shit": [475, 791], "yeah": 475, "input_word": 475, "include_nt": 475, "scalar_inc_dec": 475, "is_cap_diff": 475, "nullifi": 475, "stemmer": [476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 583, 696, 697, 746, 785, 808], "irregular": [476, 510, 516, 528, 796], "complic": 476, "ceil": [476, 693, 695, 791], "stemmeri": [476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 696, 697], "abainia": [477, 478], "ouamour": 477, "sayoud": 477, "novel": 477, "jetai": 477, "2017": [477, 479, 642, 810], "557": 477, "573": 477, "infix": [477, 478], "paic": [477, 489, 747], "promis": 477, "telecommun": 477, "usthb": 477, "algier": 477, "algeria": [477, 478], "fem2masc": [477, 478], "feminin": [477, 478], "masculin": [477, 478], "diacrit": [477, 478, 480, 488], "hamzat": [477, 478], "alif": [477, 478], "alifmaqsura": [477, 478], "yaa": [477, 478], "waaw": [477, 478], "plur2s": [477, 478], "plural": [477, 478, 500, 510, 519, 528, 794, 795, 800], "pref": [477, 478], "suff": [477, 478], "verb_t1": [477, 478], "verb_t2": [477, 478], "verb_t3": [477, 478], "verb_t4": [477, 478], "verb_t5": [477, 478], "verb_t6": [477, 478], "rebbani": 478, "arlstem": [478, 808], "ictaac": 478, "skikda": 478, "decemb": [478, 808], "2019": 478, "\u064a\u0639\u0645\u0644": [478, 794], "\u0639\u0645\u0644": [478, 794], "stem1": 478, "imper": 478, "offici": [479, 699, 700, 702, 703, 742], "leoni": 479, "weissweil": 479, "fraser": 479, "publicli": 479, "societi": 479, "gscl": 479, "lmu": 479, "conduct": [479, 796, 800], "propos": [479, 482, 490, 642, 654, 677, 704], "thrice": 479, "case_insensit": 479, "incorrectli": 479, "repl_xx": 479, "repl_xx_back": 479, "replace_back": 479, "replace_to": 479, "subsitut": 479, "alter": 479, "speicherbeh\u00e4ltern": 479, "speicherbeh\u00e4lt": 479, "ern": 479, "grenzposten": 479, "grenzpost": 479, "ausgefeilter": 479, "ausgefeilt": 479, "speicherbeh\u00e4l": 479, "tern": 479, "grenzpo": 479, "sten": 479, "ausgefeil": 479, "tere": 479, "speicherbehalt": 479, "speicherbeh": 479, "strip_emr": 479, "mr": [479, 646, 758, 759, 791], "strip_esn": 479, "esn": 479, "strip_g": 479, "strip_nd": 479, "strip_t": 479, "nevada": [480, 488], "vega": [480, 488], "minor": [480, 488, 493, 808], "1256": [480, 488], "hamza": [480, 488], "pre32": [480, 488], "suf32": [480, 488], "waw": [480, 488], "\u0648": [480, 488, 645], "pro_w4": [480, 488], "pro_w53": [480, 488], "pro_w54": [480, 488], "end_w5": [480, 488], "pro_w6": [480, 488], "six": [480, 488, 785, 799], "pro_w64": [480, 488], "end_w6": [480, 488], "suf1": [480, 488], "sufix": [480, 488], "pre1": [480, 488], "um": [481, 489, 785], "intact": [481, 489], "presum": [481, 489], "ply": [481, 489], "provis": [481, 489], "sion": [481, 489], "ear": [481, 489], "ditto": [481, 489], "conson": [481, 489, 493, 618, 642], "cry": [481, 489], "meant": [481, 489, 695, 754], "cement": [481, 489], "cem": [481, 489], "st_pre": [481, 489], "strip_prefix_flag": [481, 489], "kilomet": [481, 489], "met": [481, 489, 686, 689, 800], "st_custom": [481, 489], "rule_tupl": [481, 489], "ssen4": [481, 489], "s1t": [481, 489], "ness": [481, 489, 500, 510, 519, 528, 785, 795], "default_rule_tupl": [481, 489], "ai": [481, 489, 509, 524], "bb1": [481, 489], "city3": [481, 489], "ci2": [481, 489], "cn1t": [481, 489], "dd1": [481, 489], "dei3i": [481, 489], "deec2ss": [481, 489], "dee1": [481, 489], "de2": [481, 489], "dooh4": [481, 489], "e1": [481, 489, 778, 789], "feil1v": [481, 489], "fi2": [481, 489], "gni3": [481, 489], "gai3i": [481, 489], "ga2": [481, 489], "gg1": [481, 489], "hsiug5ct": [481, 489], "hsi3": [481, 489], "i1i": [481, 489], "ji1d": [481, 489], "juf1": [481, 489], "ju1d": [481, 489], "jo1d": [481, 489], "jeh1r": [481, 489], "jrev1t": [481, 489], "jsim2t": [481, 489], "jn1d": [481, 489], "j1": [481, 489], "lbaifi6": [481, 489], "lbai4i": [481, 489], "lba3": [481, 489], "lbi3": [481, 489], "lib2l": [481, 489], "lc1": [481, 489], "lufi4i": [481, 489], "luf3": [481, 489], "lu2": [481, 489], "lai3": [481, 489], "lau3": [481, 489], "la2": [481, 489], "ll1": [481, 489], "mui3": [481, 489], "msi3": [481, 489], "mm1": [481, 489], "nois4j": [481, 489], "noix4ct": [481, 489], "noi3": [481, 489], "nai3": [481, 489], "na2": [481, 489], "nee0": [481, 489], "ne2": [481, 489], "pihs4": [481, 489], "pp1": [481, 489], "re2": [481, 489], "rae0": [481, 489], "ra2": [481, 489], "ro2": [481, 489], "ru2": [481, 489], "rr1": [481, 489], "rt1": [481, 489], "rei3i": [481, 489], "sei3i": [481, 489], "sis2": [481, 489], "si2": [481, 489], "ss0": [481, 489], "suo3": [481, 489], "su": [481, 489, 767], "tacilp4i": [481, 489], "ta2": [481, 489], "tnem4": [481, 489], "tne3": [481, 489], "tna3": [481, 489], "tpir2b": [481, 489], "tpro2b": [481, 489], "tcud1": [481, 489], "tpmus2": [481, 489], "tpec2iv": [481, 489], "tulo2v": [481, 489], "tsis0": [481, 489], "tsi3": [481, 489], "tt1": [481, 489], "uqi3": [481, 489], "ugo1": [481, 489], "vis3j": [481, 489], "vie0": [481, 489], "vi2": [481, 489], "ylb1": [481, 489], "yli3i": [481, 489], "ylp0": [481, 489], "yl2": [481, 489], "ygo1": [481, 489], "yhp1": [481, 489], "ymo1": [481, 489], "ypo1": [481, 489], "yti3": [481, 489], "yte3": [481, 489], "ytl2": [481, 489], "yrtsi5": [481, 489], "yra3": [481, 489], "yro3": [481, 489], "yfi3": [481, 489], "ycn2t": [481, 489], "yca3": [481, 489], "zi2": [481, 489], "zy1": [481, 489], "parserul": [481, 489], "rule_dictionari": [481, 489], "_rule_tupl": [481, 489], "137": [482, 485, 490, 493, 785], "tartaru": [482, 485, 490, 493, 583], "endors": [482, 490], "contributor": [482, 490, 731, 745], "original_algorithm": [482, 490], "faith": [482, 490, 805], "martin_extens": [482, 490], "behaviour": [482, 490, 680, 681, 737, 799], "nltk_extens": [482, 490], "devis": [482, 490], "to_lowercas": [482, 490, 583], "erico": [483, 492], "verissimo": [483, 492], "m\u00fasica": [483, 492], "clarissa": [483, 492], "risca": [483, 492], "giz": [483, 492], "quadro": [483, 492, 785], "negro": [483, 492], "paisagem": [483, 492, 785], "que": [483, 492, 750, 759, 785], "aluno": [483, 492], "devem": [483, 492], "copiar": [483, 492, 785], "uma": [483, 492, 785], "casinha": [483, 492], "porta": [483, 492], "janela": [483, 492], "cima": [483, 492], "duma": [483, 492], "coxilha": [483, 492], "clariss": [483, 492], "risc": [483, 492], "negr": [483, 492], "alun": [483, 492], "dev": [483, 492, 538, 731, 737, 739, 740, 745, 759, 807], "janel": [483, 492], "cim": [483, 492], "dum": [483, 492], "coxilh": [483, 492], "read_rul": [483, 492], "apply_rul": [483, 492], "rule_index": [483, 492], "car": [484, 491, 765, 784, 803], "bee": [484, 491], "advi": [484, 491, 750], "danish": [485, 493, 759, 794], "norwegian": [485, 493, 794], "autobahnen": [485, 493], "autobahn": [485, 493], "runtim": [485, 493], "germanstemm": [485, 493], "ignore_stopword": [485, 493, 794], "wnl": [486, 495], "taghva": 488, "elkouri": 488, "coomb": 488, "khoja": 488, "\u062a\u0641\u0627\u0639\u064a\u0644": 488, "isristemm": 488, "husk": 489, "forum": [489, 788, 806], "56": [489, 616, 621, 624, 633, 641, 649, 659, 660, 759, 781, 796], "lancasterstemm": 489, "deviat": 490, "porterstemm": [490, 493, 583, 696, 697, 794, 808], "regexpstemm": 491, "rslpstemmer": [492, 785], "arabicstemm": 493, "_standardstemm": 493, "snowballstem": 493, "blob": [493, 538, 631, 645, 658, 660, 808], "stem_unicod": 493, "sbl": 493, "assem": 493, "chelli": 493, "abdelkrim": 493, "lakhdar": 493, "benzahia": 493, "is_defin": 493, "is_noun": 493, "is_verb": 493, "prefix_step2a_success": 493, "prefix_step3a_noun_success": 493, "prefix_step3b_noun_success": 493, "suffix_noun_step1a_success": 493, "suffix_noun_step2a_success": 493, "suffix_noun_step2b_success": 493, "suffix_noun_step2c2_success": 493, "suffix_verb_step2a_success": 493, "suffix_verb_step2b_success": 493, "suffixe_noun_step1b_success": 493, "suffixes_verb_step1_success": 493, "danishstemm": 493, "_scandinavianstemm": 493, "__vowel": 493, "__conson": 493, "__double_conson": 493, "__s_end": 493, "__step1_suffix": 493, "__step2_suffix": 493, "__step3_suffix": 493, "dutchstemm": 493, "__step3b_suffix": 493, "3b": 493, "englishstemm": 493, "__li_end": 493, "li": [493, 628, 654, 763, 808], "__step0_suffix": 493, "__step1a_suffix": 493, "1a": 493, "__step1b_suffix": 493, "1b": 493, "__step4_suffix": 493, "__step5_suffix": 493, "__special_word": 493, "finnishstemm": 493, "__restricted_vowel": 493, "__long_vowel": 493, "frenchstemm": 493, "__step2a_suffix": 493, "2a": 493, "__step2b_suffix": 493, "2b": 493, "__st_end": 493, "hungarianstemm": 493, "_languagespecificstemm": 493, "__digraph": 493, "__step6_suffix": 493, "__step7_suffix": 493, "__step8_suffix": 493, "__step9_suffix": 493, "italianstemm": 493, "norwegianstemm": 493, "portuguesestemm": 493, "romanianstemm": 493, "russianstemm": 493, "__perfective_gerund_suffix": 493, "__adjectival_suffix": 493, "__reflexive_suffix": 493, "__verb_suffix": 493, "__noun_suffix": 493, "__superlative_suffix": 493, "__derivational_suffix": 493, "snowballstemm": [493, 794, 808], "spanishstemm": 493, "swedishstemm": 493, "prefix_replac": 494, "suffix_replac": 494, "wordnetlemmat": [495, 803], "fly": [496, 530, 782, 803], "tagged_tok": 496, "shelf": [496, 774, 808], "pdt": [496, 525, 795], "\u0438\u043b\u044c\u044f": 496, "\u043e\u0442\u043e\u0440\u043e\u043f\u0435\u043b": 496, "\u0438": 496, "\u0434\u0432\u0430\u0436\u0434\u044b": 496, "\u043f\u0435\u0440\u0435\u0447\u0438\u0442\u0430\u043b": 496, "\u0431\u0443\u043c\u0430\u0436\u043a\u0443": 496, "unigramtagg": [496, 500, 519, 528, 785, 795], "mitchel": [496, 808], "decri": 496, "unemploy": 496, "AT": [496, 500, 510, 516, 519, 528, 759, 762, 795], "600": [496, 631, 658, 783], "735": [496, 791], "consult": [496, 497, 498, 502, 503, 504, 508, 510, 515, 516, 521, 528, 682, 683, 785], "pos_tag_s": [496, 525], "wsj": [496, 525, 526, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 759], "contexttagg": [497, 508, 528], "affix_length": [497, 528], "min_stem_length": [497, 528], "json_tag": [497, 498, 499, 504, 508, 509, 510, 515, 516, 518, 524, 528, 535, 536, 761], "context_to_tag": [497, 498, 508, 515, 516, 528], "encode_json_obj": [497, 498, 499, 504, 508, 509, 510, 515, 516, 518, 524, 528, 535, 536, 761], "decode_json_obj": [497, 498, 499, 504, 508, 509, 510, 515, 516, 518, 524, 528, 535, 536, 761], "choose_tag": [497, 498, 502, 503, 504, 508, 510, 515, 516, 528], "unabl": [497, 498, 502, 503, 504, 508, 510, 515, 516, 528, 761, 774], "sequentialbackofftagg": [497, 498, 502, 503, 504, 508, 510, 515, 516, 528], "tag_on": [497, 498, 502, 503, 504, 508, 510, 515, 516, 528], "ngramtagg": [498, 515, 516, 528], "defaulttagg": [499, 518, 528, 785], "tagrul": [499, 518, 536], "taggertrain": [499, 518], "initial_tagg": [499, 500, 518, 519], "training_stat": [499, 518], "learnt": [499, 518], "train_stat": [499, 500, 518, 519], "print_template_statist": [499, 500, 518, 519, 795], "test_stat": [499, 500, 518, 519, 795], "printunus": [499, 500, 518, 519, 795], "contribut": [499, 518, 533, 671, 672, 690, 691, 731, 759, 808], "unus": [499, 518, 533], "batch_tag_increment": [499, 500, 518, 519, 795], "ineffici": [499, 518], "batch_tag": [499, 518], "tagged_sequ": [499, 518], "determinist": [500, 519, 521, 533], "ruleformat": [500, 519, 533], "adjud": [500, 519], "ti": [500, 519, 628, 654, 765], "untrain": [500, 514, 519], "brilltagg": [500, 518, 519, 531], "train_sent": [500, 519, 534], "max_rul": [500, 519, 533, 795], "min_acc": [500, 519, 533], "untag": [500, 519, 530, 759, 795], "regexptagg": [500, 519, 528, 763, 771, 795], "training_data": [500, 519, 551, 795], "baseline_data": [500, 519, 795], "testing_data": [500, 519, 795], "ly": [500, 510, 519, 528, 795], "note1": [500, 519], "243": [500, 519], "_cleartempl": [500, 519, 795], "tagger1": [500, 519, 785, 795], "2417": [500, 519, 795], "tpl": [500, 519, 795], "acc": [500, 519, 765, 784, 795], "847": [500, 519], "132": [500, 519, 660, 791, 796], "85": [500, 519, 624, 649, 759, 803], "69": [500, 519, 621, 633, 641, 659, 759, 796], "63": [500, 519, 621, 624, 633, 641, 649, 659, 759, 796], "162": [500, 519], "33": [500, 519, 624, 649, 681, 748, 759, 765, 766, 781, 784, 795], "001": [500, 519, 536, 618, 642, 795], "initialerror": [500, 519], "finalerror": [500, 519], "rulescor": [500, 519], "1776": [500, 519], "1270": [500, 519], "2652": [500, 519], "4746": [500, 519], "305": [500, 519], "603": [500, 519], "201": [500, 519], "397": [500, 519], "43834": [500, 519], "foreign": [500, 519, 523, 602, 605, 606, 684, 701, 795], "64": [500, 519, 616, 660, 759, 795, 796, 807], "1859": [500, 519], "1380": [500, 519], "67": [500, 519, 624, 649, 660, 757, 759, 781, 796], "58": [500, 519, 616, 624, 649, 660, 759, 791, 795, 796], "32": [500, 519, 621, 624, 633, 641, 646, 649, 659, 757, 759, 774, 781, 796], "tagger2": [500, 519, 785], "99": [500, 519, 660, 766, 796, 803], "43996744": [500, 519], "fixm": [500, 519], "2013": [500, 519, 681, 769, 810], "workaround": [500, 519, 533, 608], "crfsuit": [501, 520, 808], "pypi": [501, 520, 807], "ct": [501, 520], "train_data": [501, 520, 755, 777], "meat": [501, 520], "set_model_fil": [501, 520], "training_opt": [501, 520], "_get_featur": [501, 520], "lbfg": [501, 520], "minfreq": [501, 520], "possible_st": [501, 520], "possible_transit": [501, 520], "l1": [501, 514, 520, 759], "l2": [501, 514, 520, 759], "max_iter": [501, 505, 506, 520, 521], "num_memori": [501, 520], "hessian": [501, 520], "period": [501, 520, 622, 633, 646, 658, 659, 758, 759], "criterion": [501, 520, 608], "linesearch": [501, 520], "morethuent": [501, 520], "thuent": [501, 520], "strongbacktrack": [501, 520], "strong": [501, 520, 642], "max_linesearch": [501, 520], "model_fil": [501, 520], "mode_fil": [501, 520], "feature_detector": [502, 503, 528], "classifier_build": [502, 503, 528], "cutoff_prob": [502, 503, 528], "featuresettaggeri": [503, 517, 528], "default_tagg": [504, 528], "markov": [505, 506, 514, 521, 706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 801], "acero": [505, 521], "hon": [505, 521], "molina": [505, 521], "pr": [505, 521, 742], "s_j": [505, 521], "state_j": [505, 521], "o_k": [505, 521], "emit": [505, 521], "_ident": [505, 521], "labeled_sequ": [505, 506, 521], "test_sequ": [505, 521], "unlabeled_sequ": [505, 506, 521], "baum": [505, 506, 521], "welch": [505, 506, 521], "log_prob": [505, 521, 676, 679], "best_path": [505, 521], "reset_cach": [505, 521], "best_path_simpl": [505, 521], "random_sampl": [505, 521], "unintellig": [505, 521], "amus": [505, 521, 759], "sum_": [505, 521], "summat": [505, 521], "s_0": [505, 521], "sum_t": [505, 521], "s_t": [505, 521], "s_": [505, 521], "o_t": [505, 521], "sum_s0": [505, 521], "alpha_0": [505, 521], "beta_0": [505, 521], "si": [505, 521], "sj": [505, 521], "alpha_t": [505, 521], "beta_t": [505, 521], "point_entropi": [505, 521], "hiddenmarkovmodeltagg": [506, 521], "labelled_sequ": [506, 521], "word_1": [506, 521], "tag_1": [506, 521], "word_n": [506, 521], "train_unsupervis": [506, 521], "update_output": [506, 521], "tutori": [506, 521, 608, 725, 728, 808], "lawrenc": [506, 521], "rabin": [506, 521], "ieee": [506, 521], "convergence_logprob": [506, 521], "train_supervis": [506, 521, 786], "cprobdisti": [506, 521], "check_binari": [507, 522, 547, 774, 782], "en_wsj": [507, 522], "path_to_model": [507, 522, 627, 656], "charset": [507, 522], "perfectli": [508, 528], "greedi": [509, 524], "honnib": [509, 524], "explos": [509, 524, 803], "blog": [509, 524, 796], "todai": [509, 524, 759, 791, 796], "beauti": [509, 524, 791, 795], "pretrain": [509, 524], "start2": [509, 524, 537], "end2": [509, 524, 537], "return_conf": [509, 524], "use_tagdict": [509, 524], "save_loc": [509, 524], "nr_iter": [509, 524], "test_sent": [510, 516, 528, 534, 564, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694], "regexp_tagg": [510, 528], "fridai": [510, 516, 528, 796], "investig": [510, 516, 528, 547, 753, 759, 763, 795, 796], "atlanta": [510, 516, 528, 796], "elect": [510, 516, 528, 759, 796], "bio_to_chunk": [511, 527], "bio": [511, 527], "chktagger": [511, 527], "statis": 514, "thorsten": 514, "brant": 514, "aclantholog": [514, 752], "a00": 514, "1031": 514, "WITH": [514, 759], "BE": 514, "tagdata": 514, "unseg": 514, "basic_sent_chop": 514, "argmax": 514, "proj": 514, "t_i": 514, "w_i": 514, "t_t": 514, "l3": [514, 759], "solut": 514, "differenti": 514, "capit": [514, 646, 647, 791, 803], "gain": [514, 725, 728], "conform": [514, 808], "_lx": 514, "bi": 514, "_tagword": 514, "unigram_tagg": [516, 528, 795], "tl": [516, 528, 759, 796], "dti": [516, 528, 796], "supplementari": [517, 559], "featuresettagg": 517, "nearbi": 518, "extract_properti": [518, 535, 536], "brill24": 518, "semin": 518, "describe_template_set": 518, "fntbl37": 518, "postag": [518, 533], "fntbl": 518, "jhu": 518, "rflorian": 518, "nltkdemo18": 518, "nltkdemo18plu": 518, "brilltaggertrain": [519, 795], "crftagger": 520, "assess": [521, 695, 759, 798], "characteris": 521, "led": 521, "invari": 521, "sink": 521, "vertex": 521, "a_": 521, "ij": [521, 523], "b_i": 521, "x_t": 521, "optimis": 521, "greedili": 521, "regim": 521, "hiddenmarkovmodeltrain": [521, 786], "demo_bw": 521, "demo_po": 521, "demo_pos_bw": 521, "load_po": 521, "num_sent": [521, 533], "logsumexp2": 521, "arr": 521, "hunpostagg": 522, "petrov": 523, "da": [523, 668, 671, 672, 673, 674, 675, 679, 690, 691, 692, 693, 694, 785, 798], "adposit": 523, "postposit": 523, "particl": 523, "typo": 523, "arxiv": [523, 687, 688], "1104": 523, "2086": 523, "googl": [523, 687, 688, 731, 769, 803, 808], "map_tag": 523, "source_tag": 523, "ptb": [523, 621, 632, 633, 641, 659, 759, 787], "tagset_map": 523, "rnc": 523, "vg": [523, 800], "yes_no_s": 523, "ptcl": 523, "averagedperceptron": [524, 808], "average_weight": 524, "sennatagg": 527, "sennachunktagg": 527, "sennanertagg": 527, "nertagg": 527, "shakespear": [527, 808], "theatr": 527, "london": [527, 803], "headquart": 527, "affixtagg": 528, "bigramtagg": [528, 785], "classifierbasedpostagg": 528, "_train": 528, "_context_to_tag": 528, "_tagger": 528, "trigramtagg": 528, "stanford_model": [529, 627, 656], "stanfordpostagg": 529, "stanfordnertagg": 529, "stanfordtagg": 529, "3class": 529, "distsim": 529, "parse_output": 529, "bidirect": [529, 602, 604, 686, 689], "_cmd": 529, "_separ": 529, "mx1000m": [529, 655], "tuple2str": 530, "corpus_s": 533, "demo_": 533, "demo_error_analysi": 533, "erron": 533, "demo_generated_templ": 533, "demo_high_accuracy_rul": 533, "demo_learning_curv": 533, "curv": 533, "demo_multifeature_templ": 533, "demo_multiposition_featur": 533, "demo_repr_rule_format": 533, "exemplifi": 533, "demo_serialize_tagg": 533, "reload": 533, "demo_str_rule_format": 533, "demo_template_statist": 533, "demo_verbose_rule_format": 533, "tagged_data": 533, "incremental_stat": 533, "template_stat": 533, "error_output": 533, "serialize_output": 533, "learning_curve_output": 533, "learning_curve_tak": 533, "baseline_backoff_tagg": 533, "separate_baseline_data": 533, "cache_baseline_tagg": 533, "reus": [533, 706, 712, 720, 765, 799], "learner": 533, "wors": [533, 758], "sensibl": [533, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694], "error_list": 534, "property_nam": 535, "classnam": 535, "endpoint": [535, 731, 740], "enforc": [535, 759], "traceback": [535, 536, 537, 651, 685, 705, 751, 754, 755, 759, 760, 761, 766, 768, 774, 775, 786, 787, 790, 796, 797, 798, 799, 803], "306": [535, 791], "illeg": [535, 754, 764, 778, 796], "winlen": 535, "excludezero": [535, 537], "371": 535, "scalar": 535, "issuperset": [535, 669], "superset": 535, "fulfil": [536, 608, 759], "templateid": 536, "original_tag": 536, "replacement_tag": 536, "not_found": 536, "brilltemplatei": 537, "applicable_rul": 537, "correcttag": 537, "brillrul": 537, "get_neighborhood": 537, "neighborhood": 537, "alltempl": 537, "permit": [537, 757, 759, 785, 799], "start1": 537, "end1": 537, "wfeat1": 537, "wfeat2": 537, "pfeat": 537, "Or": [537, 757, 796, 803], "143": 537, "feature1": 537, "feature2": 537, "correct_tag": 537, "featurelist": 537, "skipintersect": 537, "k1": 537, "k2": 537, "wd_0": 537, "wd_01": 537, "pos_m2": 537, "pos_m33": 537, "wordtpl": 537, "postpl": 537, "713": 537, "eight": [537, 806], "tighten": 537, "disjoint": 537, "bug": [538, 559, 583, 772, 781, 803, 808, 810], "local_test": 538, "rst": 538, "childes_fixt": [538, 753, 763], "classify_fixt": [538, 755], "conftest": 538, "gensim_fixt": [538, 769], "gluesemantics_malt_fixt": [538, 771], "portuguese_en_fixt": [538, 785], "probability_fixt": [538, 786], "test_suit": 539, "egg": [539, 757, 803], "setuptool": [539, 807], "har": 539, "additional_test": 539, "setup_modul": [540, 541, 543, 544, 545, 546, 555, 563, 571, 584, 753, 755, 763, 769, 771, 785, 786], "mock_plot": 542, "mocker": 542, "teardown_loaded_corpora": 542, "unload": 542, "pytest": [547, 780], "3060": 547, "issuecom": [547, 777], "1268355108": 547, "test_alin": 548, "test_bllip": 548, "test_bril": 548, "test_cfd_mut": 548, "test_cfg2chomski": 548, "test_chunk": 548, "test_classifi": 548, "test_colloc": 548, "test_concord": 548, "test_corenlp": 548, "test_corpora": 548, "test_corpus_view": 548, "test_data": [548, 755, 781], "test_disagr": 548, "test_dist": 548, "test_download": 548, "test_freqdist": 548, "test_hmm": 548, "test_json2csv_corpu": 548, "test_json_seri": 548, "test_metr": 548, "test_naivebay": 548, "test_nombank": 548, "test_pl196x": 548, "test_pos_tag": 548, "test_rib": 548, "test_rte_classifi": 548, "test_seekable_unicode_stream_read": 548, "test_stem": [548, 794], "test_tag": 548, "test_tgrep": 548, "test_token": [548, 563], "test_twitter_auth": 548, "test_util": 548, "test_wordnet": 548, "test_count": 549, "test_model": 549, "test_preprocess": 549, "test_vocabulari": 549, "testngramcount": 550, "setup_class": [550, 587], "test_n": 550, "test_counter_len_changes_with_lookup": 550, "test_ngram_order_access_unigram": 550, "test_ngram_conditional_freqdist": 550, "test_bigram_counts_seen_ngram": 550, "test_bigram_counts_unseen_ngram": 550, "test_unigram_counts_seen_word": 550, "test_unigram_counts_completely_unseen_word": 550, "testngramcountertrain": 550, "test_empty_input": 550, "test_train_on_unigram": 550, "test_train_on_illegal_sent": 550, "test_train_on_bigram": 550, "test_train_on_mix": 550, "bigram_training_data": 551, "trigram_training_data": 551, "mle_bigram_model": 551, "test_mle_bigram_scor": 551, "expected_scor": 551, "test_mle_bigram_logscore_for_zero_scor": 551, "test_mle_bigram_entropy_perplexity_seen": 551, "test_mle_bigram_entropy_perplexity_unseen": 551, "test_mle_bigram_entropy_perplexity_unigram": 551, "mle_trigram_model": 551, "test_mle_trigram_scor": 551, "lidstone_bigram_model": 551, "test_lidstone_bigram_scor": 551, "test_lidstone_entropy_perplex": 551, "lidstone_trigram_model": 551, "test_lidstone_trigram_scor": 551, "laplace_bigram_model": 551, "test_laplace_bigram_scor": 551, "test_laplace_bigram_entropy_perplex": 551, "test_laplace_gamma": 551, "wittenbell_trigram_model": 551, "test_wittenbell_trigram_scor": 551, "kneserney_trigram_model": 551, "test_kneserney_trigram_scor": 551, "absolute_discounting_trigram_model": 551, "test_absolute_discounting_trigram_scor": 551, "stupid_backoff_trigram_model": 551, "test_stupid_backoff_trigram_scor": 551, "kneserney_bigram_model": 551, "test_sums_to_1": 551, "model_fixtur": 551, "test_generate_one_no_context": 551, "test_generate_one_from_limiting_context": 551, "test_generate_one_from_varied_context": 551, "test_generate_cycl": 551, "test_generate_with_text_se": 551, "test_generate_oov_text_se": 551, "test_generate_none_text_se": 551, "testpreprocess": 552, "testcas": [552, 553, 556, 557, 558, 559, 562, 563, 564, 565, 567, 573, 574, 575, 576, 577, 578, 582, 583, 585, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601], "test_padded_everygram_pipelin": 552, "ngrammodelvocabularytest": 553, "setupclass": [553, 562], "fixtur": [553, 562, 573, 601], "test_truthi": 553, "test_cutoff_value_set_correctli": 553, "test_unable_to_change_cutoff": 553, "test_cutoff_setter_checks_valu": 553, "test_counts_set_correctli": 553, "test_membership_check_respects_cutoff": 553, "test_vocab_len_respects_cutoff": 553, "test_vocab_iter_respects_cutoff": 553, "test_update_empty_vocab": 553, "test_lookup": 553, "test_lookup_iter": 553, "test_lookup_empty_iter": 553, "test_lookup_recurs": 553, "test_lookup_non": 553, "test_lookup_int": 553, "test_lookup_empty_str": 553, "test_eq": 553, "test_str": 553, "test_creation_with_count": 553, "test_len_is_const": 553, "test_aline_delta": 554, "testbllippars": 555, "test_parser_loads_a_valid_tre": 555, "test_tagged_parse_finds_matching_el": 555, "testbril": 556, "test_pos_templ": 556, "test_brill_demo": 556, "testemptycondfreq": 557, "test_tabul": 557, "test_plot": 557, "test_incr": 557, "chomskynormalformforcfgtest": 558, "test_simpl": [558, 575], "test_complex": 558, "testchunkrul": 559, "test_tag_pattern2re_pattern_quantifi": 559, "1597": 559, "curli": 559, "ch07": 559, "assert_classifier_correct": 560, "test_megam": 560, "test_tadm": 560, "close_enough": 561, "verifi": [561, 732, 740, 763], "_epsilon": 561, "test_bigram2": 561, "test_bigram3": 561, "test_bigram5": 561, "stdout_redirect": 562, "testconcord": 562, "ch01": 562, "teardownclass": 562, "deconstruct": [562, 682, 683], "teardown": 562, "test_concordance_list": 562, "test_concordance_width": 562, "test_concordance_lin": 562, "test_concordance_print": 562, "mock": 563, "teardown_modul": [563, 581], "testtokenizerapi": 563, "testtaggerapi": 563, "test_pos_tagg": 563, "test_ner_tagg": 563, "test_unexpected_tagtyp": 563, "testparserapi": 563, "test_pars": 563, "test_dependency_pars": 563, "testudhr": 564, "test_word": 564, "test_raw_unicod": 564, "test_polish_encod": 564, "testindian": 564, "test_tagged_word": 564, "testcess": 564, "test_catalan": 564, "test_esp": 564, "testfloresta": 564, "testsinicatreebank": 564, "test_parsed_s": 564, "testconll2007": 564, "testptb": 564, "test_fileid": 564, "test_categori": 564, "test_news_fileid": 564, "test_category_word": 564, "pytestmark": 564, "skipif": 564, "testmwappdb": 564, "test_entri": 564, "mwa_ppdb": 564, "testcorpusview": [565, 577], "linetok": 565, "linetoken": [565, 653], "inaugur": [565, 759, 808], "1793": [565, 759], "1909": [565, 759], "taft": [565, 759], "test_correct_valu": 565, "test_correct_length": 565, "test_find_raises_except": 566, "test_find_raises_exception_with_full_resource_nam": 566, "testdisagr": 567, "test_easi": 567, "foolswood": 567, "krippendorffs_alpha": 567, "test_easy2": 567, "matter": [567, 690, 759], "apha": 567, "test_advanc": 567, "agreestat": 567, "research_pap": 567, "onkrippendorffalpha": 567, "test_advanced2": 567, "testeditdist": 568, "test_with_transposit": 568, "test_downloader_using_existing_parent_download_dir": 569, "tmp_path": [569, 572], "test_downloader_using_non_existing_parent_download_dir": 569, "test_iterating_returns_an_iterator_ordered_by_frequ": 570, "test_forward_prob": 571, "test_forward_probability2": 571, "test_backward_prob": 571, "json2csv": [572, 737], "json2csv_ent": [572, 737], "files_are_ident": 572, "patha": 572, "pathb": 572, "carriag": 572, "infil": [572, 737], "test_textoutput": 572, "test_tweet_metadata": 572, "test_user_metadata": 572, "test_tweet_hashtag": 572, "test_tweet_userment": 572, "test_tweet_media": 572, "test_tweet_url": 572, "test_userurl": 572, "test_tweet_plac": 572, "test_tweet_place_boundingbox": 572, "test_retweet_original_tweet": 572, "test_file_is_wrong": 572, "saniti": 572, "testjsonseri": 573, "test_default_tagg": 573, "test_regexp_tagg": 573, "test_affix_tagg": 573, "test_ngram_tagg": 573, "test_perceptron_tagg": 573, "test_brill_tagg": 573, "testlikelihoodratio": 574, "test_lr_bigram": 574, "test_lr_trigram": 574, "test_lr_quadgram": 574, "naivebayesclassifiertest": 575, "nombankdemo": 576, "test_numb": 576, "test_inst": 576, "test_framefiles_fileid": 576, "test_corpus_read": 577, "testpostag": 578, "test_pos_tag_eng": 578, "test_pos_tag_eng_univers": 578, "test_pos_tag_ru": 578, "test_pos_tag_rus_univers": 578, "test_pos_tag_unknown_lang": 578, "test_unspecified_lang": 578, "test_ribes_empty_word": 579, "test_ribes_one_word": 579, "test_ribes_two_word": 579, "test_no_zero_div": 579, "testrteclassifi": 580, "test_rte_feature_extract": 580, "test_feature_extractor_object": 580, "test_rte_classification_without_megam": 580, "test_rte_classification_with_megam": 580, "check_read": 581, "unicode_str": 581, "test_read": 581, "test_reader_stream_closes_when_delet": 581, "testsennapipelin": 582, "unittest": [582, 784], "test_senna_pipelin": 582, "testsennatagg": 582, "test_senna_tagg": 582, "test_senna_chunk_tagg": 582, "test_senna_ner_tagg": 582, "snowballtest": 583, "test_arab": 583, "test_russian": 583, "test_german": 583, "test_spanish": 583, "test_short_strings_bug": 583, "portertest": 583, "test_vocabulary_martin_mod": 583, "voc": [583, 753], "test_vocabulary_nltk_mod": 583, "test_vocabulary_original_mod": 583, "test_oed_bug": 583, "1581": 583, "test_lowercase_opt": 583, "2507": 583, "test_bas": 584, "testsequencefunct": 585, "test_tokenize_simpl": 585, "test_tokenize_encod": 585, "test_tokenize_link_typ": 585, "test_tokenize_exampl": 585, "tgrep2": [585, 608], "test_tokenize_quot": 585, "test_tokenize_nodenam": 585, "test_tokenize_macro": 585, "macro": [585, 608, 681, 683, 688, 703], "test_node_simpl": 585, "test_node_print": 585, "test_node_encod": 585, "test_node_nocas": 585, "test_node_quot": 585, "test_node_regex": 585, "test_node_regex_2": 585, "test_node_tree_posit": 585, "test_node_noleav": 585, "search_leav": [585, 608, 611, 612], "tests_rel_domin": 585, "test_bad_oper": 585, "test_com": 585, "test_rel_sister_nod": 585, "sister": [585, 608], "tests_rel_indexed_children": 585, "test_rel_preced": 585, "test_exampl": 585, "test_use_macro": 585, "test_tokenize_node_label": 585, "test_tokenize_segmented_pattern": 585, "test_labeled_nod": 585, "emili": 585, "bender": 585, "test_multiple_conj": 585, "test_trailing_semicolon": 585, "semicolon": 585, "failur": [585, 788, 803], "load_stanford_segment": 586, "testtoken": 586, "test_tweet_token": 586, "accent": [586, 759], "test_tweet_tokenizer_expand": 586, "test_input": 586, "match_phone_numb": [586, 634, 639, 640], "strip_handl": [586, 634, 639, 640, 796], "reduce_len": [586, 634, 639, 640, 796], "test_sonority_sequencing_syllable_token": 586, "syllabletoken": [586, 654, 808], "test_syllable_tokenizer_numb": 586, "test_legality_principle_syllable_token": 586, "legalitysyllabletoken": [586, 642], "test_stanford_segmenter_arab": 586, "test_stanford_segmenter_chines": 586, "test_phone_token": 586, "resembl": 586, "test_emoji_token": 586, "emoji": [586, 808], "skin": [586, 808], "tone": [586, 808], "test_pad_asterisk": 586, "asterisk": 586, "test_pad_dotdot": 586, "dotdot": 586, "test_remove_handl": 586, "remove_handl": [586, 639], "craft": 586, "test_treebank_span_token": 586, "treebankwordtoken": [586, 616, 621, 632, 641, 659, 660, 661, 796, 808], "test_word_token": 586, "test_punkt_pair_it": 586, "test_punkt_pair_iter_handles_stop_iteration_except": 586, "test_punkt_tokenize_words_handles_stop_iteration_except": 586, "test_punkt_tokenize_custom_lang_var": 586, "test_punkt_tokenize_no_custom_lang_var": 586, "punkt_debug_decis": 586, "input_text": 586, "n_sent": 586, "n_split": 586, "lang_var": [586, 622, 646, 796], "test_punkt_debug_decisions_custom_end": 586, "test_sent_token": 586, "auth": 587, "testcredenti": 587, "credenti": [587, 730, 731, 741], "test_environ": 587, "test_scenarios_that_should_raise_error": 587, "scenario": [587, 775], "test_correct_fil": 587, "succe": [587, 706, 707, 708, 709, 710, 719, 759, 774], "everygram_input": 588, "test_everygrams_without_pad": 588, "test_everygrams_max_len": 588, "test_everygrams_min_len": 588, "test_everygrams_pad_right": 588, "test_everygrams_pad_left": 588, "wordnnetdemo": 589, "test_retrieve_synset": 589, "test_hyperhyponym": 589, "test_derivationally_related_form": 589, "test_meronyms_holonym": 589, "test_antonym": 589, "test_misc_rel": 589, "test_lch": 589, "test_domain": 589, "test_in_topic_domain": 589, "test_wordnet_similar": 589, "test_omw_lemma_no_trailing_underscor": 589, "test_iterable_type_for_all_lemma_nam": 589, "test_bleu": 590, "test_gdfa": 590, "test_ibm1": 590, "test_ibm2": 590, "test_ibm3": 590, "test_ibm4": 590, "test_ibm5": 590, "test_ibm_model": 590, "test_meteor": 590, "test_nist": 590, "test_stack_decod": 590, "bleu": [591, 645, 681, 682, 683, 687, 688, 699, 700, 703, 747, 808], "testbleu": 591, "test_modified_precis": 591, "p02": [591, 680, 681, 682, 683], "1040": [591, 680, 681, 682, 683], "test_brevity_penalti": 591, "test_zero_match": 591, "test_full_match": 591, "test_partial_matches_hypothesis_longer_than_refer": 591, "testbleufringecas": 591, "test_case_where_n_is_bigger_than_hypothesis_length": 591, "test_empty_hypothesi": 591, "test_length_one_hypothesi": 591, "test_empty_refer": 591, "test_empty_references_and_hypothesi": 591, "test_reference_or_hypothesis_shorter_than_fourgram": 591, "testbleuvsmteval13a": 591, "test_corpus_bleu": 591, "testbleuwithbadsent": 591, "test_corpus_bleu_with_bad_sent": 591, "testbleuwithmultipleweight": 591, "test_corpus_bleu_with_multiple_weight": 591, "testgdfa": 592, "test_from_eflomal_output": 592, "eflom": 592, "1829": 592, "ibm": [593, 594, 595, 596, 597, 598, 670, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 695, 808], "testibmmodel1": 593, "test_set_uniform_translation_prob": 593, "test_set_uniform_translation_probabilities_of_non_domain_valu": 593, "test_prob_t_a_given_": [593, 594, 595, 596, 597], "testibmmodel2": 594, "test_set_uniform_alignment_prob": 594, "test_set_uniform_alignment_probabilities_of_non_domain_valu": 594, "testibmmodel3": 595, "test_set_uniform_distortion_prob": 595, "test_set_uniform_distortion_probabilities_of_non_domain_valu": [595, 596], "testibmmodel4": 596, "test_set_uniform_distortion_probabilities_of_max_displac": 596, "testibmmodel5": 597, "test_set_uniform_vacancy_probabilities_of_max_displac": 597, "test_set_uniform_vacancy_probabilities_of_non_domain_valu": 597, "test_prun": 597, "testibmmodel": 598, "test_vocabularies_are_initi": 598, "test_vocabularies_are_initialized_even_with_empty_corpora": 598, "test_best_model2_align": 598, "test_best_model2_alignment_does_not_change_pegged_align": 598, "test_best_model2_alignment_handles_fertile_word": 598, "test_best_model2_alignment_handles_empty_src_sent": 598, "test_best_model2_alignment_handles_empty_trg_sent": 598, "test_neighboring_finds_neighbor_align": 598, "test_neighboring_sets_neighbor_alignment_info": 598, "test_neighboring_returns_neighbors_with_pegged_align": 598, "test_hillclimb": 598, "test_sampl": 598, "testmeteor": 599, "istest": 599, "test_reference_type_check": 599, "test_candidate_type_check": 599, "testnist": 600, "test_sentence_nist": 600, "teststackdecod": 601, "test_find_all_src_phras": 601, "test_distortion_scor": 601, "test_distortion_score_of_first_expans": 601, "test_compute_future_cost": 601, "test_compute_future_costs_for_phrases_not_in_phrase_t": 601, "test_future_scor": 601, "test_valid_phras": 601, "create_fake_phrase_t": 601, "create_fake_language_model": 601, "testhypothesi": 601, "test_translation_so_far": 601, "test_translation_so_far_for_empty_hypothesi": 601, "test_total_translated_word": 601, "test_translated_posit": 601, "test_untranslated_span": 601, "test_untranslated_spans_for_empty_hypothesi": 601, "teststack": 601, "test_push_bumps_off_worst_hypothesis_when_stack_is_ful": 601, "test_push_removes_hypotheses_that_fall_below_beam_threshold": 601, "test_push_does_not_add_hypothesis_that_falls_below_beam_threshold": 601, "test_best_returns_the_best_hypothesi": 601, "test_best_returns_none_when_stack_is_empti": 601, "bring": [602, 759, 780, 808], "concordanceindex": [602, 605, 606], "find_concord": [602, 603], "print_concord": [602, 603], "contextindex": [602, 605, 606], "context_func": [602, 604], "common_context": [602, 604, 605, 606], "fail_on_unknown": [602, 604], "similar_word": [602, 604, 605, 606], "word_similarity_dict": [602, 604], "bypass": [602, 605, 761], "mobi": [602, 605, 758], "melvil": [602, 605, 758], "moby_dick": [602, 605, 758], "collocation_list": [602, 605, 606, 808], "text4": [602, 605, 606], "fellow": [602, 605, 606, 759], "citizen": [602, 605, 606, 759], "ago": [602, 605, 606, 753], "feder": [602, 605, 606], "govern": [602, 605, 606, 759, 773, 786], "god": [602, 605, 606, 706, 708, 709, 710, 712, 713, 714, 759], "bless": [602, 605, 606], "chief": [602, 605, 606, 757, 788], "justic": [602, 605, 606], "almighti": [602, 605, 606], "magistr": [602, 605, 606], "tribe": [602, 605, 606], "79": [602, 605, 606, 725, 728, 759, 795], "concordance_list": [602, 605, 606, 758], "pylab": [602, 605, 606], "text1": [602, 605, 606, 607, 758, 785, 786], "text5": [602, 605, 606, 607], "text9": [602, 605, 606, 607], "bro": [602, 605, 606, 607], "twizt": [602, 605, 606, 607], "moni": [602, 605, 606, 607], "nervou": [602, 605, 606, 607], "danger": [602, 605, 606, 607], "piou": [602, 605, 606, 607], "queer": [602, 605, 606, 607], "matur": [602, 605, 606, 607], "cape": [602, 605, 606, 607], "wise": [602, 605, 606, 607, 703, 759], "butterless": [602, 605, 606, 607], "fiendish": [602, 605, 606, 607], "pale": [602, 605, 606, 607], "furiou": [602, 605, 606, 607], "dismast": [602, 605, 606, 607], "younger": [602, 605, 606, 607], "brave": [602, 605, 606, 607], "thick": [602, 605, 606, 607, 758], "textcollect": 602, "text2": [602, 606, 786], "text3": [602, 606], "mytext": [602, 606], "tf_idf": [602, 606], "tokensearch": 602, "parentedtre": [608, 611, 612, 706, 708, 711, 719, 720], "tgrep_nod": 608, "tgrep_posit": 608, "selector": [608, 759], "treeposit": [608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 799], "recov": [608, 609, 731, 740], "awkwardli": 608, "daughter": 608, "statefulli": 608, "onto": 608, "_tgrep_exprs_act": 608, "tgrepexcept": 608, "tgrep_compil": [608, 611, 612], "tgrep_str": [608, 610, 613], "tgrep_token": 608, "treepositions_no_leav": 608, "unique_ancestor": 608, "wordpunct_token": [616, 647, 757, 793], "caution": [616, 647], "38": [616, 621, 624, 633, 641, 649, 659, 660, 757, 759, 796], "44": [616, 624, 642, 649, 660, 759, 796], "48": [616, 621, 633, 641, 659, 660, 759, 784, 796, 808], "49": [616, 660, 759, 767, 795], "55": [616, 621, 624, 633, 641, 649, 659, 660, 757, 758, 759, 766, 796], "59": [616, 621, 624, 633, 641, 649, 659, 660, 755, 757, 759, 784, 791, 796], "66": [616, 660, 759, 781, 786], "preserve_lin": [616, 661], "syllabifi": [618, 628, 642, 654], "onset": [618, 642], "wonder": [618, 642, 758, 806], "text_word": [618, 642], "lp": [618, 642], "ful": [618, 642], "sen": [618, 628, 642, 654], "ten": [618, 628, 642, 654, 757, 785], "ce": [618, 628, 642, 654], "tokenized_source_text": [618, 642], "aeioui": [618, 642], "legal_frequency_threshold": [618, 642], "ipa": [618, 642, 654], "find_legal_onset": [618, 642], "syllabl": [618, 628, 642, 654], "syllable_list": [618, 628, 642, 654], "blanklin": [619, 643, 653], "add_mw": [620, 644], "_mwe": [620, 644], "hor": [620, 644, 796], "oeuvr": [620, 644, 796], "tonight": [620, 644, 796], "sir": [620, 644, 796], "mung": [621, 641], "treebankworddetoken": [621, 641, 659, 796, 808], "detoken": [621, 632, 641, 659, 660, 796, 808], "nltkdestructivewordtoken": [621, 641], "revert": [621, 641], "starting_quot": [621, 632, 633, 641, 659], "ignorecas": [621, 632, 633, 641, 659], "ending_quot": [621, 632, 633, 641, 659], "mm": [621, 632, 633, 641, 659], "dd": [621, 632, 633, 641, 659], "parens_bracket": [621, 632, 633, 641, 659], "convert_parenthes": [621, 632, 633, 641, 659], "lsb": [621, 632, 633, 641, 659], "rsb": [621, 632, 633, 641, 659], "lcb": [621, 632, 633, 641, 659], "rcb": [621, 632, 633, 641, 659], "double_dash": [621, 632, 633, 641, 659], "contractions2": [621, 632, 633, 641, 659], "gim": [621, 632, 633, 641, 659], "gon": [621, 632, 633, 641, 659], "na": [621, 632, 633, 641, 659, 785], "got": [621, 632, 633, 641, 659, 766, 799], "lem": [621, 632, 633, 641, 659], "wan": [621, 632, 633, 641, 659], "contractions3": [621, 632, 633, 641, 659], "return_str": [621, 631, 633, 641, 645, 658, 659], "roughli": [621, 633, 641, 659, 759], "hoc": [621, 633, 641, 659, 796], "align_token": [621, 633, 641, 659, 660], "40": [621, 633, 641, 659, 733, 734, 735, 736, 740, 757, 759, 780, 784, 796, 808], "53": [621, 633, 641, 659, 759, 781, 784, 796], "62": [621, 624, 633, 641, 649, 659, 759, 796], "68": [621, 624, 633, 641, 649, 659, 660, 759, 796], "76": [621, 624, 633, 641, 649, 659, 660, 755, 759, 796], "77": [621, 624, 633, 641, 649, 659, 759, 795, 796], "punktbaseclass": [622, 646, 796], "european": [622, 645, 646], "train_text": [622, 646], "token_cl": [622, 646], "punkttoken": [622, 646], "sole": [622, 646], "punktparamet": [622, 646, 796], "punkttrain": [622, 646, 796], "realign_boundari": [622, 646, 796], "debug_decis": [622, 646], "format_debug_decis": [622, 646], "sentences_from_text": [622, 646], "text_contains_sentbreak": [622, 646], "sentences_from_text_legaci": [622, 646], "sentences_from_token": [622, 646], "_gap": [623, 647], "regexflag": [623, 647, 648], "rebecca": [624, 649], "dridan": [624, 649], "stephan": [624, 649, 687, 688], "oepen": [624, 649], "2012": [624, 649, 810], "p12": [624, 649], "rulebas": [624, 649], "35": [624, 649, 660, 757, 759, 772, 780, 781, 784, 795, 796], "alva": [624, 649], "keep_token_posit": [624, 649], "43": [624, 649, 660, 753, 759, 796], "91": [624, 649, 660, 759, 781], "92": [624, 649, 759, 781, 786], "102": [624, 649], "103": [624, 649, 660, 787, 796], "57": [624, 649, 759, 781, 796], "71": [624, 649, 759, 784, 796], "86": [624, 649, 759, 765, 786, 795], "93": [624, 649, 660, 759, 786], "94": [624, 649, 759], "95": [624, 649, 757], "101": [624, 649], "105": [624, 649], "106": [624, 649], "112": [624, 649, 791], "113": [624, 649, 671, 690], "120": [624, 649, 660, 796], "121": [624, 649, 795], "122": [624, 649, 660, 795, 796], "126": [624, 649], "129": [624, 649], "134": [624, 649], "135": [624, 649], "141": [624, 649, 722, 727], "142": [624, 649, 803], "repp_dir": [624, 649], "generate_repp_command": [624, 649], "parse_repp_output": [624, 649], "repp_output": [624, 649], "find_repptoken": [624, 649], "repp_dirnam": [624, 649], "expres": [625, 651], "ill": [625, 651], "backslash": [625, 651, 652, 797], "unmatch": [625, 651, 652, 697, 759], "stringtoken": [626, 629, 637, 653], "2016": [627, 656, 682, 683, 687, 688, 810], "path_to_slf4j": [627, 656], "provied": [627, 656], "seg": [627, 656], "your_path": [627, 656], "slf4j": [627, 656], "default_config": [627, 656], "\u8fd9\u662f\u65af\u5766\u798f\u4e2d\u6587\u5206\u8bcd\u5668\u6d4b\u8bd5": [627, 656], "\u8fd9": [627, 656], "\u662f": [627, 656], "\u65af\u5766\u798f": [627, 656], "\u4e2d\u6587": [627, 656], "\u5206\u8bcd\u5668": [627, 656], "\u6d4b\u8bd5": [627, 656], "\u0647\u0630\u0627": [627, 656], "\u0647\u0648": [627, 656], "\u062a\u0635\u0646\u064a\u0641": [627, 656], "\u0633\u062a\u0627\u0646\u0641\u0648\u0631\u062f": [627, 656], "\u0627\u0644\u0639\u0631\u0628\u064a": [627, 656], "\u0644\u0644\u0643\u0644\u0645\u0627\u062a": [627, 656], "\u0644": [627, 656], "\u0627\u0644\u0643\u0644\u0645\u0627\u062a": [627, 656], "java_class": [627, 656], "path_to_dict": [627, 656], "path_to_sihan_corpora_dict": [627, 656], "sihan_post_process": [627, 656], "keep_whitespac": [627, 656], "mx2g": [627, 656], "segment_fil": [627, 656], "input_file_path": [627, 656], "segment_s": [627, 656], "sonor": [628, 654], "ssp": [628, 654, 808], "ju": [628, 654], "tion": [628, 654], "ke": [628, 654], "sonority_hierarchi": [628, 654], "assign_valu": [628, 654], "soron": [628, 654], "validate_syl": [628, 654], "tb": [629, 653], "subtop": [630, 657, 796], "pseudosent": [630, 657], "proce": [630, 657], "peak": [630, 657], "similarity_method": [630, 657, 796], "block_comparison": [630, 657], "vocabulary_introduct": [630, 657], "smoothing_method": [630, 657, 796], "default_smooth": [630, 657], "smoothing_width": [630, 657], "smoothing_round": [630, 657], "cutoff_polici": [630, 657], "polici": [630, 657, 731, 808], "hc": [630, 657], "demo_mod": [630, 657], "jonsafari": [631, 658], "525": [631, 646, 658], "favorit": [631, 658, 731], "weird": [631, 658], "everywher": [631, 658, 694], "non_break": [631, 658], "funky_punct_1": [631, 658], "funky_punct_2": [631, 658], "en_em_dash": [631, 658], "amperc": [631, 658], "124": [631, 658, 660, 791], "comma_in_num": [631, 658], "prob_single_quot": [631, 658], "stupid_quotes_1": [631, 658], "stupid_quotes_2": [631, 658], "final_period_1": [631, 658], "final_period_2": [631, 658], "multi_comma": [631, 658], "multi_dash": [631, 658], "multi_dot": [631, 658], "open_punct": [631, 658, 796], "close_punct": [631, 658, 796], "currency_sym": [631, 658], "open_punct_r": [631, 658], "close_punct_r": [631, 658], "currency_sym_r": [631, 658], "url_foe_1": [631, 658], "url_foe_2": [631, 658], "url_foe_3": [631, 658], "url_foe_4": [631, 658], "lstrip": [631, 658], "rstrip": [631, 658], "one_spac": [631, 658], "toktok_regex": [631, 658], "treebanktoken": [632, 659], "mxpost": [632, 659], "expected_token": [632, 659], "expected_detoken": [632, 659], "feel": [632, 659, 759, 800, 806], "feet": [632, 659], "twd": [632, 659], "duck": [632, 659], "contract": [633, 641, 659, 791, 808], "invest": [633, 659], "tknzr": [634, 639, 796], "cooool": [634, 639, 796], "dummysmilei": [634, 639, 796], "remi": [634, 639, 796], "waaaaayyyi": [634, 639, 796], "waaayyi": [634, 639, 796], "preserve_cas": [634, 639, 640, 796], "capitalis": [634, 639], "word_r": [634, 639], "phone_word_r": [634, 639], "downcas": 639, "casual_token": 639, "reduce_lengthen": 639, "usernam": [639, 731, 742, 746, 796], "macintyrecontract": 641, "robert": [641, 659, 690, 691, 692, 693, 694, 695, 808], "macintyr": 641, "contractions4": 641, "whad": 641, "ya": [641, 796], "wha": 641, "nltkwordtoken": [641, 808], "agnost": [642, 654, 683], "coda": 642, "admit": [642, 759], "mit": [642, 654], "dm": 642, "bartlett": [642, 654, 657], "daniel": 642, "kahn": 642, "1976": 642, "argu": [642, 791], "tendenc": 642, "syllabif": [642, 654], "benchmark": [642, 654], "pg": [642, 654], "311": [642, 654, 690, 691, 692, 693, 694, 695], "otto": [642, 654], "jespersen": [642, 654], "lehrbuch": [642, 654], "phonetik": [642, 654], "leipzig": [642, 654], "teubner": [642, 654], "silb": [642, 654], "203": [642, 654], "theo": 642, "vennemann": 642, "syllab": 642, "1972": 642, "diss": [642, 785], "elisabeth": [642, 654], "selkirk": [642, 654], "1984": [642, 654, 759], "aronoff": [642, 654], "oehrl": [642, 654], "cambridg": [642, 654, 690, 691, 692, 693, 694, 695, 704, 798], "136": [642, 654], "jeremi": 642, "goslin": 642, "ulrich": 642, "frauenfeld": 642, "409": 642, "436": 642, "hlt": [642, 654, 699, 700, 798], "naacl": [642, 654, 681, 798], "308": [642, 654], "316": [642, 654], "hench": 642, "reson": 642, "prosodi": 642, "uc": 642, "mwetoken": 644, "retoken": 644, "spite": 644, "a_littl": 644, "a_little_bit": 644, "a_lot": 644, "in_spite_of": 644, "mosesdecod": [645, 660], "mteval": [645, 681, 699, 700], "v14": 645, "l926": 645, "lium": 645, "nmtpy": 645, "mtevalbleu": 645, "l162": 645, "nisttoken": 645, "expected_low": 645, "expected_cas": 645, "international_token": [645, 808], "albb": 645, "alibaba": 645, "\u963f\u91cc\u5df4\u5df4\u96c6\u56e2\u63a7\u80a1": 645, "\u6709\u9650\u516c\u53f8": 645, "commerc": 645, "amz": 645, "\u02c8\u00e6m\u0259z\u0252n": 645, "rkt": 645, "rakuten": 645, "\u697d\u5929\u682a\u5f0f\u4f1a\u793e": 645, "kabushiki": 645, "gaisha": 645, "japanes": [645, 747, 808], "internet": 645, "tokyo": 645, "expected_albb": 645, "expected_amz": 645, "\u02c8\u00e6": 645, "expected_rkt": 645, "patch": [645, 803], "1926": 645, "expected_s": 645, "dash_preceed_digit": 645, "international_regex": 645, "x00": 645, "x7f": 645, "\u1d11": 645, "\ufc9e": 645, "\u1f34\u314e\uffc4": 645, "\u110e": 645, "\ua287": 645, "\u0513\ua781": 645, "\u1482\u1239\u183b\uaa41\u0270\u1618\ua33e\u1ee1": 645, "\u18c0\ua297\u1493": 645, "\u1194\u125d\ua769\u05e0\ua91c\u0775\u1552\ua3c6": 645, "\ua8f2\ua1f2": 645, "\u2dd8\u310a": 645, "\ufc1c\ua805\u1dab": 645, "\ua647": 645, "\ua3fe\u1db3\u07dd\u1671": 645, "\ua93e\u2cbb\ua3ad\uab02\ua27e": 645, "\u2cbf\ua5bb": 645, "\u3154\uffa1": 645, "\ua269\u01ef\u1668\u079f\u316f": 645, "\u03b8\uaa89\u0585\u1496\ua0de\ufc3a": 645, "\u07e2\u0273\u2112\u0b86\ua55b\u1c12\ua0bc\ua064": 645, "\ua379\ufcab\ua109\u1b9f\uabc3\ufe93": 645, "\u1446\ua097\u0515\u0ebd\u107b\u1697": 645, "\u15b1\u1c23\ufcdf\u0b35": 645, "\ufc9a\u0183": 645, "\ua300\u15e2\u14fe": 645, "\ua3e8": 645, "\ua50f": 645, "\u30c0": 645, "\uaa14\ua30a\ufd8b\u1f06\ua90f\u113d\u1403\ua434": 645, "\ua541\u1b86\u1c4d": 645, "\u2dd4\ua65d\u02cfu\u1693": 645, "\u1fc4": 645, "\u1192": 645, "\u06a2\u015f\u026d": 645, "\u1f37\u0d33": 645, "\u16d0": 645, "\u1619\ua284\u052f\ufcf0": 645, "\ua5b4\u2e2f": 645, "\ufc5f": 645, "\u189c": 645, "lang_dependent_regex": 645, "nonascii": 645, "period_comma_follow": 645, "period_comma_prece": 645, "punct_1": 645, "punct_2": 645, "strip_eol_hyphen": 645, "u2028": 645, "strip_skip": 645, "split_non_ascii": 645, "lang_independent_sub": 645, "substituit": 645, "number_regex": 645, "\u071a\u17a6": 645, "\ud7bb\u1e4d\u02ac": 645, "\u2cec": 645, "\ua6ac\ua252": 645, "\uab3a": 645, "\u067a": 645, "\ua0dd\ua1d2\ua9e7": 645, "\ufbb0\ufed0": 645, "\u1218\u2d38\ua511\u2c43": 645, "\u1882\u3136\u0aa2": 645, "\u0da8": 645, "\ua321": 645, "\ua08a\u1877\u04d9\u0a72\ua4db": 645, "\u1915\u04ff\u1e2b": 645, "\u03f1\u1518": 645, "\u1dbb": 645, "\u2c5c\u1ea1\u1d45\u148b\u1f20": 645, "\ua325\u0630\ua366\u1d65\u0776\u1ff4": 645, "\u1190\ua97c": 645, "\ufc9b": 645, "\ua4dd\ua01e\u0d8e\u16d6\ua811\u1ef7\u1d63": 645, "\uab0c": 645, "\u1573\ua243\u1310\u0d36\ua391\u2c87": 645, "\ufcd1\u3074\u1982": 645, "\u1b13\u11ff": 645, "\u1678": 645, "\ua525\u314f\u0922": 645, "\u1cea\u183d": 645, "\u0e45\ua6c3\u05e1": 645, "\u15d5\u3155\ua166\ua888": 645, "\u14f3": 645, "\u00e5\u2d11\u056c\u1200\u19b5": 645, "\ua45e\u158b": 645, "\u30df\ud7d6": 645, "\u1edd\u3141\ua3d8\ua46f": 645, "\ua4d6\u1a22\ua200\u0eab\u11c1\ua137\ua235\u1170": 645, "\u18b9": 645, "\u310d\u05d3\u127d": 645, "\u02cb\ua922\ua975\u01e7": 645, "\u0b90\ua460\u0d9a\u1f52": 645, "\ufc29": 645, "\u141a\u2c3f": 645, "\ufb06\ufdbb\u1e85": 645, "\uff52": 645, "\ua1a5\u1629": 645, "\u18cf": 645, "\u191a": 645, "\u129e\u1f57": 645, "\u15f1": 645, "\u3187\u318e\u0d2c": 645, "\ufd63": 645, "\uff59": 645, "\uab35\u212d\u2d1f": 645, "\u0253": 645, "\ud7b0\ua57b\u0a73\ua6cc\u2caf": 645, "\ua0b0\ua659\u18ed\u2c47": 645, "\u30ca\uff9e": 645, "\u03e3\uab4c\u1d60\ua77c": 645, "\u0783": 645, "\u15d6": 645, "\ua0a7\ufd30\u16ea\u00ff": 645, "\ua576\ufb39\ua330\u1b85": 645, "\ua14b": 645, "\u1a37\u151b\u3105\ua2fa\ua2cb": 645, "\u154c": 645, "\u111f": 645, "\u2dce\ua661": 645, "\u1d39\u046d": 645, "\u2c31\u306d": 645, "\ua351": 645, "\ua32a\u09a1\ufec7": 645, "\ua25d": 645, "\uabcd": 645, "\ua785\u0c16\u00e4\ufc41": 645, "\u2d50\uff87\u151c\ufcaf\u1d0f": 645, "\u2dc1\u1225": 645, "\ua2aa\uff69\u015d": 645, "\ufc6f\uabd8\ua40c\ua059\u05d0\u1d21\u1294\ua2d5\ua203": 645, "\ua799\u1611": 645, "\u07ea": 645, "\ufb70\ua234\u1563\ua201": 645, "\ua3f2": 645, "\ua53a": 645, "\ua863\ua141\u014d\u0b71\u0cb1\u0e18\ua413": 645, "\u04e3\ua006\u0105\ufb3c\u07ca\u0450\u1554\u1b47\ua4fc\u1ed5\u1ec1\u10d8\u107f\u3110\uff51\u1858": 645, "\u0c28\u2da2\u1765": 645, "\ua19f": 645, "\ufee2": 645, "\u0e2e\u107c\u18a7": 645, "\u0c0a\u04a7": 645, "\u14f4": 645, "\u1387": 645, "\u0b88\ua032\u081a": 645, "\ua0f9": 645, "\u00f3\ua71e\u1751": 645, "\uaaa6\u04b1\u1a14\u1e2b\u12e8\u1673": 645, "\ua024\u10fd": 645, "\u2d49": 645, "\ua38e\u1f03": 645, "\u0183\u0a15\ua2ca\u0db8\u06b5\u1574\u1a31": 645, "\ufeb4\u15ff\u12e0": 645, "\u06d1\u2d43\u11bb\u1e41": 645, "\u0477\u1e13\u0b15": 645, "\u015b": 645, "\ufbf7": 645, "\u1eab": 645, "\u15f6\ua04f\u0511": 645, "\u01e3\ufb1d\ua056": 645, "\ua723\u08a9\u1250\u0125\u1546\u1612": 645, "\u1d2e\ua2c5\ua521": 645, "\uabdd\u0123\u072d\u0793": 645, "\u0760": 645, "\u1c22": 645, "\ufb2d\u1430": 645, "\u11a6\uab2b\u18a8\ua3e4\u0858\u1edf": 645, "\u0444\u1724\ufe91": 645, "\u2184": 645, "\u174d\ufd34": 645, "\u140f\u30a5": 645, "\u16a2\u06c2\u1630": 645, "\ua733\u03b3": 645, "\u127c\u0692\u1e5b\ufed7": 645, "\u14bb\ua2d4\u1325\u134f\u090e": 645, "\u1014\u057d": 645, "\ufdac": 645, "\u18a6": 645, "\ua177\u03ef\u12f2\u0804": 645, "\u1f82": 645, "\u19b1": 645, "\u0693\u16a3\ua2ab\u1d52": 645, "\ua0be\u1241\u1e9f": 645, "\u1ef3\u2cdb": 645, "\u1389\ua43d\ua916\uaa26": 645, "\u0990\u2c41": 645, "\ua155\u0493": 645, "\u190b\u1519\ua797\u02a4\u1061": 645, "\u0c58": 645, "\u0289\ufbab\uaa93": 645, "\u2d5c": 645, "\u0e0f\u2db4": 645, "\u30ff\uff88\u03c9": 645, "\u1f85\ufc46\ua821": 645, "\ua331": 645, "\ua186\ua376\uff8b": 645, "\u1db5": 645, "\u03db\ua4e2": 645, "\u1d95": 645, "\u084e": 645, "\u04c6\ua2c7\ua71d": 645, "\u1f00\u1d38": 645, "\ua083\u18c2\ua3a7": 645, "\ufcb5": 645, "\u2cd7": 645, "\u04ed": 645, "\ufb5d\uaa10\ua88b\ua693": 645, "\ua183\u123a": 645, "\ua999": 645, "\u0d2b\u0696": 645, "\u13fc\u1ec9": 645, "\u045d": 645, "\u134a\u00ec": 645, "\ufbac\u03ad\ufca7\u0c94\u14dd\u0443": 645, "\u2c61\u0101\u07e0\ua6c7\u15b2": 645, "\uabc5": 645, "\u0699": 645, "\ufe7c\u0203\ua910\ua430\u1348\ufc49\u0f51\ua791\ua912": 645, "\ua2e9\uaa9f": 645, "\u30d7\u3162": 645, "\u3119\u018d\u0433\ufeb8\u154a": 645, "\u0433\u1968": 645, "\ua80d": 645, "\u1c7d\ua392": 645, "\u023c\ua215": 645, "\u0a0a": 645, "\u0c0b": 645, "\u1e71": 645, "\u01e1\u0e12": 645, "\u1009\u2d64\u1263\u048f\u0785\u06a8": 645, "\u04c6\ua3f1\u15e8\u0579": 645, "\ua6ba": 645, "\u10e1\u196b\u037a\u1666\u01e9\ud7bc\u2c4f\u2c59\u1bcb\u1e09": 645, "\u03c8\u1e5f\ua025\ua4f3\ua66b\u1e77\u2ca7\ua56f": 645, "\ua229": 645, "\u08b1\u067c\u1177\u140d\u18da\u3048": 645, "\uaa95\u307b\ua1a1\uaaa3\u131c": 645, "\u1f15\u1232\u0f45\u1d50\u1001\u0a2f\u2cf3\ua0f3\u11c5\u1e0b": 645, "\ufd50\u1b89": 645, "\u1db7": 645, "\u1138": 645, "\u160b\u1ead\u1e4f\ufee1": 645, "\u0dac\uffd4": 645, "\u15ea": 645, "\u074e\ua231\u0f57\u03b7\u0129": 645, "\u2d22\u1e03\u0271": 645, "\u08a6\u00fd": 645, "\u0769": 645, "\ua3bf": 645, "\u1d30\u1cf0": 645, "\uff4c": [645, 686, 689], "\u011d": 645, "\u03b8\ua1e1\u1385": 645, "\ua865\u0d05": 645, "\uabd2\ua655": 645, "\u1f40\u2cee\ua1c4\u2cd9\u2c4b\u068c\uff7e\uaa0e\u121e\u0621\u1148\u1615": 645, "\u022d\u0723\u1f83": 645, "\u126c\u0a28\ua0e0\u0b0c": 645, "\u043e\u2ccf\u2da3\ua0bd\ua5a5\u0173\u1d78\ua5ea": 645, "\u1b30": 645, "\u097c\u2dc2\u2c57\ua815\uab41\ua0a3": 645, "\u0b28": 645, "\ua554\u0564": 645, "\u06a0\u0286\ua363": 645, "\u01a1\ufca0\u2c83": 645, "\u209b\u1fa5\u3153\ua070\ua4f9": 645, "\ua4f7": 645, "\ua3d0\ua068": 645, "\uffab": 645, "\u1592": 645, "\u115d": 645, "\u1577\ufd51": 645, "\u2c42": 645, "\uff57": 645, "\u0259\ua171\ufef2\u132b": 645, "\u1a4d": 645, "\u30b9\u2d4d\ua749": 645, "\ua562\ua663\u1463": 645, "\ufc0e\u0c88\u3159\ufda2\u1c72": 645, "\ua237": 645, "\u188f": 645, "\ua431\ua361\u2d8c\ufd83": 645, "\u145a": 645, "\u14c1\u11ad\u1594\u0ca3\u1f24": 645, "\u1d67": 645, "\u0127\u09aa\ua21d": 645, "\uaaaa": 645, "\u2094\uab76": 645, "\u30cb\u101e": 645, "\u04b7": 645, "\ua308\ua52e\ua571\u1f67\ua918\u0252\u1683\u0a22\ua847": 645, "\u0236\ua68f\u0c9a": 645, "\ua5c2\u14d1": 645, "\u012d": 645, "\ua1c3": 645, "\u196a": 645, "\u1f7d\ufb2e\u021f": 645, "\u0219\u0107": 645, "\ua339\ua945\ufd97\ua21c\u1052": 645, "\u02e3\u03ed\u156d": 645, "\u029c": 645, "\uab72\ufc8d": 645, "\ufb9d\ufce7\u2d12\u14e8": 645, "\ufb9f\u1d08": 645, "\u3091\ud7cf\ufb99\u1d46\u1e37\u1a28\u1556": 645, "\ua3a9\u01f3\ud7c1": 645, "\ufc26": 645, "\ua1fa": 645, "\u0574\uaac2": 645, "\ua227": 645, "\ufd86\u117a\u3034": 645, "\ua39d": 645, "\u0da1\u2c9f\u1db8\u025b\u18a2\ua127\ua522\u3188\uffa2\ufd15\u2d8a\u1569\u1fe1": 645, "\ua6a5\ufd85\ufdc3\u10e9": 645, "\u0371\ufcdb\u1024\ua0eb\ua0ed": 645, "\u15d7": 645, "\ua209": 645, "\u0f69\ua693": 645, "\ua1d0\u2d00\ua12b": 645, "\u11a1\u057c\u0a88\ufdb7\u2c51": 645, "\u190a": 645, "\u1ee7\uff44\u0157\u0679\ud7b6\u1da8": 645, "\u131d\u31fe": 645, "\ua0c7\u146e\u159a": 645, "\ua7a3\u16a5\ua34d\ufcbc\u02c1\ua3b1\ufb5f": 645, "\u03c4\u1db4": 645, "\ua6e1\ua1c7\ua2d7\u0115\u3184\uabd3": 645, "\u189e\uab14\ufc11\u12f9\u15ec\ufbe0\u18e4\u0d7e\u309f\ua973\u1476\u04df\ufc08\u1726\u10f3\u16e0": 645, "\u0784\u1efb\u1d14": 645, "\ua5e1": 645, "\u0233\u1b92\u0473\u0a38": 645, "\u2139\u03bb": 645, "\ua3ea\u026c\ufb04": 645, "\u2cbd": 645, "\ua24a\u17a9\u18b0\u03b9\u1b8d\u16da\ua2e4": 645, "\u06d0": 645, "\ua2a0": 645, "\u0255\u0c87\ua27b": 645, "\u1f93\u2c46": 645, "\u1fb1\u1319": 645, "\u11d5": 645, "\u31f0\u2c41\ua424": 645, "\u0f61\u1657\uabae": 645, "\u0459\u2cdd": 645, "\ua598\ufdb9\ufd9f": 645, "\u0ec2\u1158": 645, "\u1f97\u1187": 645, "\uaa82\u0457": 645, "\u1d06\u047b": 645, "\u30e2": 645, "\ua442": 645, "\u05e9": 645, "\uaa85": 645, "\u2d13\u11fc\u17a4\ufd73": 645, "\u1017\u1eb5": 645, "\u1eb3": 645, "\ufdbf": 645, "\ua350\u090a\u1238\u0377\u0a5c\u0908": 645, "\u1cee\ua347\ua727": 645, "\u11dc\u1710\u1315\u120b\u14b1\u1f90\ua1a6\u01c6\u0ec0\ufd55": 645, "\u150f\u1987": 645, "\ua5a3": 645, "\ua653\uaa1b\u00eb\u0959": 645, "\u0148\uaa94\u099b\u09ab": 645, "\ua14d": 645, "\ua960\ua9e2\u0cb6": 645, "\ua33d\u214e": 645, "\u0a9e\u10f6": 645, "\u1004": 645, "\u1568\ua058\ua5dd\u03ac\u1789\ufba4": 645, "\u1ec3\u30f7": 645, "\u0c37\ua861\ua73f\u0266": 645, "\ua09a": 645, "\ua77a": 645, "\ua2b8\uabad": 645, "\u04a1": 645, "\u0567\u1f53\u15f7\uff73": 645, "\u16b6\u0235\u050f\ua322\ua8b0": 645, "\ua9a2\u2d3f\u0c99\ua4e5\u0690": 645, "\u1587\u14cb\uaaba\ua1fe": 645, "\u14d7\u14e1\u1567\ua0a9": 645, "\u14f8": 645, "\u1b17\u1171\u0e28": 645, "\u30af\uaa71\ua90e": 645, "\ua727\u209a\ufcbe": 645, "\ua659\u1652\ufee8\ua85b\u1f30\ua5c1\u1451": 645, "\ua618": 645, "\ua606\ua59e": 645, "\u1215\u12a0\u1fd6": 645, "\ua311\u1783\u1c5a": 645, "\ua504\u1417\u1e91": 645, "\u044b": 645, "\u2c44": 645, "\ud7f0\u0931\u16d4\uabc4\u0577": 645, "\uabcf\u11dd": 645, "\u0434\ua537\u11c8": 645, "\ufeca\u1643\u1147\u311e\ua64f\ufc36\ua75b\u1501": 645, "\ufc1a": 645, "\u14e6": 645, "\u1844\u057b\u04f7\ufc34\u1c1d\u0155": 645, "\u133f": 645, "\uaa02\u06ca\u1286": 645, "\ufdf7\ua1fb": 645, "\u1ec7": 645, "\u1b84\u3086": 645, "\ua725\u30e3": 645, "\u01f5": 645, "\u106f\uab82\u3069\u0229": 645, "\u1c67": 645, "\u122a\u1549\u3093": 645, "\u2dd9\ua067\u1131": 645, "\u080d": 645, "\u0e81": 645, "\u2d0e": 645, "t\u159f": 645, "\u1e15": 645, "\u046d": 645, "\ua931\ufc7c\u2d3a\ua0dc": 645, "\u149c\ua415\u00e0\u09df": 645, "\u04d1": 645, "\u0715": 645, "\ua699\ua20f\u127a\u138a\u1bdd\u1e3f\u0ab7\ua568": 645, "\u2c9d": 645, "\ua077\ua28f\ua529": 645, "\ua4d1": 645, "\u07d8": 645, "\u1223": 645, "\u122b\ua086": 645, "\u1166\u0c25\u1464\ua22f\ufba6\u0c9f\u01dd": 645, "\u1327\u0950\ua65d": 645, "\u14e4\ua560\u04b7\uab36\u10f5o": 645, "\u16cb\u0edd\u2134\u12fa": 645, "\u30ce\ua5fe": 645, "\ufcd3": 645, "\u16cd\u1901f\ua0c1\ua1a0\ua10b": 645, "\u1d47\u14d0": 645, "\u30e1\u14b0": 645, "\u0c14\u03cd\u16e6\u1076\u2147\ufcc1\u1958\u1199\u1a3e": 645, "\ufcbd": 645, "\ua11c\uff76\u30de\u15ca\u1e7b": 645, "\u1b24": 645, "\u0579\u15db\u00f8": 645, "\u0e42": 645, "\u05e2\u1831": 645, "\ua933": 645, "\ua3f4\ua61d\u0935": 645, "\ua2e8\ua892": 645, "\u024b": 645, "\uaa6d\u3081\uffb5\ua5ab": 645, "\u15bd\u07a3\u119e": 645, "\ua71c\u1227\u199b\u1eef": 645, "\ua089\ua276": 645, "\u1d7d\u157c\u1a07\u1ef5\u05d7": 645, "\u07df\ufd13\u0918": 645, "\u0854\u11e0\u2111\ua942": 645, "\uff71\ua1a9": 645, "\ua044\u0a26\u0996": 645, "\u056a": 645, "\u1db6\u075f\u0e25\u3156": 645, "\ufc30": 645, "\u07d6\uab50\ua84a\u1426": 645, "\u315d\u0aa1": 645, "\u0f59\u1a15\u1f97": 645, "\ua8a3": 645, "\u1261\u1781": 645, "\u1edb\u1972\ua36b": 645, "\u1e87": 645, "\ua1eb\u14b7\uab3e\u1b9b": 645, "\u1fa5\u12fd": 645, "\u0d39\u1eed": 645, "\ua076\ua6a1\ufdbc": 645, "\u0c1b\uab25": 645, "\u1f33": 645, "\u044d\u0109\u026a": 645, "\u1f73": 645, "\u09b0\u06ef": 645, "\u157b": 645, "\u3163\u114c\u1f96": 645, "\ua3f7\ua486\ua50d\u316b\u01c9\ua22a": 645, "\u0aae": 645, "\u1f83": 645, "\u1c05\u2cd5\u12ff\u00fb": 645, "\u10e4": 645, "\u1870\ua074\ua484\u18d0": 645, "\ufcd4": 645, "\u078b": 645, "\u0205\u3139\ua42c": 645, "\u12ce\u2c48\ufc71": 645, "\ua216": 645, "\ua5d9\ua669\u148e": 645, "\u30bf": 645, "\ufdf1\u1d57\uaae9": 645, "\u1154\ufb33": 645, "\u18a4\ua39b\u0454": 645, "\u1747\u1c5b\u1d7f\ufdb6\ua5ff": 645, "\u30ae\uff94\u185d\ufbf9": 645, "\u313c": 645, "\u316a\ua607\u1a53\ua856\u1344": 645, "\u03e1\u0910\u0e03\u12b9\ua76f\ufedf\u185b\ua751": 645, "\u1846": 645, "\ufb00": 645, "\ufdb8": 645, "\u1f7dg\u0c8f": 645, "\u2136": 645, "\ua858": 645, "\u12ab\u18c1\ua8a0": 645, "\u027b\ua615": 645, "\u0c36": 645, "\u10f2": 645, "\u0c60\u1e47": 645, "\u2d27\ufec6\ua004\ua5a9": 645, "\u3111\ufcc9": 645, "\u1175": 645, "\u18c3\u3131": 645, "\u04ce": 645, "\u30dd": 645, "\u0c2e\uab20\u05e3\u01f9\ua313\ufcb2\u112b\ufe81\ua0e1\u056b": 645, "\ufcea\u1487\u156c": 645, "\ufe76\u2ca5\u182f\ufd2d": 645, "\ua3b2\u099f\u1456\ua23d": 645, "\u0163\ufcff": 645, "\u164c": 645, "\ua6b7\u1873\u1c76\u315c\u0695\u3134\ua86b\ua0ff\ufbad": 645, "\u1c0f\ua2e3\u14c0\u11b0\u17d7": 645, "\ua5cb": 645, "\uaac0\u12bc\u2d48": 645, "\uff9b": 645, "\ua5a2\u2ce1\u161d": 645, "\ua258\ua89a\u12c3": 645, "\u1796\u01b9\u1531\ua65f\u08ad\uabb2\ufede\u1e23\u11b1\u1a51": 645, "\u0841\ud7bf": 645, "\u1e63\ua21b\ua4f5\u1d33": 645, "\u107e\uab85\u16cf\u05e6": 645, "\u11f5": 645, "\ua6d8": 645, "\u044f\u04e9\ua555": 645, "\u0509": 645, "\u1681\ua860\ufda6\ufebf\u19b0\ua937": 645, "\ua59d\ufca2": 645, "\u0447\u06b8\u0a95": 645, "\ufc04": 645, "\u1c08\u1011\u0757\u11b8\u1974\u0baf": 645, "\u3094": 645, "\ufc55": 645, "\u0283": 645, "\u022f\u1d17\u03be\u1f01\ua296\u1108\u124c\u0cad\u0b99": 645, "\ua90c\ua446": 645, "\u1066\ua06f": 645, "\ua114\ua16a\uaadc": 645, "\u1883": 645, "\u1498\uab54": 645, "\u0f56": 645, "\ua1ee": 645, "\ua566": 645, "\ua4e4": 645, "\u01bf\u1966": 645, "\u016d\ud7e4\u0d3d\u1f60": 645, "\uab5f": 645, "\ud7ef": 645, "\ua2f9\ufd1c\u1b46": 645, "\u14be": 645, "\u1d56\uab0b": 645, "\ua80a\u076b\u0142": 645, "\u04cc": 645, "\u156a\u06c9": 645, "\u31a9\u1ee9\u01be\u0851\u2c76\u2d4f\u0e05\ua10a\ufcb0\ua27c\u1794": 645, "\u164d\u1b97\u0794\u1e3d\uaa67\u1534": 645, "\ua168\u14f1\uab77\ufc0f\ua14f": 645, "\u063c": 645, "\u018c\u1236\u03bc\u2ca7\ua072\ufed4\u126f\u1a50\u31b2\ua0d6\u123e": 645, "\u2d35": 645, "\u1a0b": 645, "\u2da5": 645, "\u30ba\u1e9b": 645, "\u090c\u1f55\ufed6\ua76f\ufb7b\u14fc\u19bc": 645, "\uabd9\u12e9": 645, "\u01e9\u31a0": 645, "\ua172\u1e71\ua1aa\ua3b8\ua5ec\uaa03": 645, "\u10df": 645, "\u11bd\ufe8e": 645, "\u1100\u1f42\ua3aa": 645, "\u01aa\u1255\ua073\ua919\ua787": 645, "\ua08e\u1852\u1ecf\ua2ff": 645, "\ufd65\u0299": 645, "\ufc3e\ua7a1\ua387\u11d1\u06b3": 645, "\ua00d": 645, "\u199e": 645, "\ua819\ua8a1": 645, "\u210f\u2c49\u2c46\u126a\u1be0\ua47b": 645, "\u0117": 645, "\u1727\uab86\u07cc": 645, "\u0753": 645, "\ua9fe\u015d": 645, "\ua2c0\ufb05\ufb71\u2db0\u16af\u304c\u2cc7\u1992\ua5db\u0aaf": 645, "\u0caf\ua6b8": 645, "\u0e33": 645, "\ua096\u0781": 645, "\u2d5a\ua4d5\u01bd": 645, "\ua03a\ua75f\ufc00\ua649": 645, "\u078e\u2c54": 645, "\u1a39\u069a": 645, "\ua509": 645, "\u0eb0": 645, "\u02e0\ua1e3\u097d\u1d19": 645, "\u2c7a\uab22\ua932\u118e": 645, "\ua589\uaaa4\ua0f2\ufd05\uabb4\u2d90": 645, "\u16b3\ua448": 645, "\u0a06\ua54f\u17a0": 645, "\u01ef\u2d80\u09ae": 645, "\u1323\ua896\u14b4": 645, "\u0a74\u03b4": 645, "\u3144\u1c69\ua578\ua2e6\u1ec3\ufdb3\u124b": 645, "\u1e31\u0442\uaa65\u029e\ua9ee": 645, "\u1d76\u2d2d": 645, "\ua689\u145f": 645, "\u026b\u1e43\u2cd5\u2d8d\ud7e2": 645, "\ufdb1\ua6e5": 645, "\u07de": 645, "\u116d": 645, "\u07e4\u100a\u1292": 645, "\u1fa1\ua2b3": 645, "\ua590\ua850": 645, "\u1526\u0445\u18b7\ua3f9\u08b0": 645, "\u1881": 645, "\u3127\ufb57": 645, "\uff81": 645, "\u15c8": 645, "\u114f\u0c05": 645, "\u2c99\u02ab\uaa0f": 645, "\u0529\u2c30\u0b3d": 645, "\u1660\ua2bf": 645, "\u1e4b\u1896\ufc53": 645, "\u0780\u1d85": 645, "\u0207\u016f": 645, "\u1b98\u1468\u01fb\u211a": 645, "\u04a3\u1d93\u1e0d": 645, "\ua2b4\u1d35\u0694\u0b2f\u02a9": 645, "\ua32b\ua3e5": 645, "\u1f24\u2c4c\u144e\u1b9a\ua508": 645, "\u1180\u0d1a": 645, "\ufd8f\u1f63\u317c\ufb23\ua304\ua935": 645, "\u03dd\ua655\u1867": 645, "\u0976\u1b8c": 645, "\ua84f\u1157": 645, "\ua5f0\u163b": 645, "\u18a5\u2cb1\ufcf1": 645, "\u0260": 645, "\u0a1d\u14c9\u01d0\ua188": 645, "\u16c9\u178e\u10d5": 645, "\u2cd7\ua3c9\u1b27": 645, "\u1a4c\ua0a6\u02c9\u0624\u09f1": 645, "\uabdf": 645, "\u16dc": 645, "\ua079\u0c32": 645, "\uaa74\ua862\u1178": 645, "\u1185\ua0b2\u0a5a": 645, "\u1692\u1d97": 645, "\u3189": 645, "\ua9fa": 645, "\u2d15\u0575\u1e59": 645, "\u2c4d": 645, "\ua1b2\u0c1d": 645, "\u01c1\u1b0a\u0c3d": 645, "\ua071\u0461\u114e": 645, "\ua9e3": 645, "\u185a": 645, "\ua5f5\ua8aa": 645, "\u1843": 645, "\u0f4c": 645, "\u0cb2": 645, "\u10d1\u19c1\u0c97": 645, "\ua1c0\ua318": 645, "\ua579\u1fd3\u0467": 645, "\ua603": 645, "\u2dba\ufcfa\ufce0": 645, "\u30a4\ua8f3\uaabb\u2d20": 645, "\u18d7\ua0c4\u1284\u19ab\u0e1e\u0280": 645, "\u2cbf\ua468\u14f5": 645, "\u1350\ua32c\u1307": 645, "\u15cb": 645, "\u049d": 645, "\ua1c6": 645, "\uab23\ua938": 645, "\u2c85\ua0d8\u0b21\ufb78": 645, "\u1588": 645, "\ufb60\u2cb5\u17b3": 645, "\ua5e6\ufce9": 645, "\u133c": 645, "\ud7ea": 645, "\u1eeb": 645, "\ufc85": 645, "\u018c": 645, "\ua773": 645, "\ua08f\u092d": 645, "\u1fe0\u0a8c\u16b5": 645, "\u1909\u1b16\u1eb1\u1f05\u02a1\u1d3a": 645, "\uaa25": 645, "\ua3c5\u147a": 645, "\ufd01\u01d2": 645, "\u1851": 645, "\u0165\u189d\ua0e3": 645, "\u210c\ua2f2\u2c5e\u01e1\u18e1\u1b29\u0c18": 645, "\u01d8\u12cc\u1828\u0f55": 645, "\u312d\u1490": 645, "\u0728\u14aa": 645, "\ua37a": 645, "\u179c\uaa1d\ua1b1": 645, "\ua840\u1d68\u1a03\uab89": 645, "\u15b6": 645, "\ua3d6\u0932\u2d62\u2da8\u166c\u0285": 645, "\u15cf\ufbfb\u0850\u1597\u1bd0": 645, "\ua41e\uaaf4\u1b83\u1db1\u3171\u051f\u1541\uab32\u0f44\ua375": 645, "\u0431": 645, "\u0bb8\u0559\ua349\ua4e9\u1260\u1847\ua6a3\ua59f\ua406": 645, "\u1f7a\u1a52": 645, "\ua5e5": 645, "\u0e1c\u02b7\uaa83\ua3df": 645, "\ua265\u1127\u1b88\ua1ea\ua3ba\u1898\u0ca0": 645, "\ua13e\u1eb7\u1267\ua717\u14f2\u1622\ufeae\ua814\u2d56": 645, "\ua248\u0927\u1421\u1547\u143b": 645, "\ua18d": 645, "\ufc2c\u05dd\u0d89": 645, "\ud7e8\u057e\uff47": 645, "\ua27f\ua43a\ufd74\u1165\u1ebd\u14ea\u179d\u14cd": 645, "\u1fa7\u0d93\u0925": 645, "\u1f74\u1188\u056c": 645, "\u047f": 645, "\u077f": 645, "\u1700\u0930": 645, "\ufd61\ua575": 645, "\u0ab5\ua514\u15fa": 645, "\ua0b5\ua15e\ua23b": 645, "\u2cc1": 645, "\u0374\uffc3": 645, "\u114d\ua57a": 645, "\uff4f\u0e2b": 645, "\ua299": 645, "\u3058\u12e3\u1422\u2d5b\ua6c2\ua77f": 645, "\u145b": 645, "\u3113\ufc8b\ua53b\u08af": 645, "\uab95": 645, "\u1d8d": 645, "\ua408": 645, "\u145c": 645, "\u1248\u04a9\ua774\u3117\u1053": 645, "\u11a9": 645, "\u2d88": 645, "\u198f\ufc90": 645, "\ua1f3\ua872\u0803": 645, "\ufdb0\uab53": 645, "\ua2dd": 645, "\ua099\ua61c\u15ee\u1a27": 645, "\u10e3\u15f8": 645, "\u1d4f\u077c\u163e\u1f31\ua1f0\u11cf\u0da6": 645, "\ufd5c": 645, "\u04d7\ufd6e": 645, "\u2145\ua0d9\u0573\ua22d\u0287\ua085\ua7fc\u1e01\u0e9f": 645, "\u11f9\ufcf9\u01f3": 645, "\u068b": 645, "\u0e9a\u03ae": 645, "\ua066\u1989\ua1d4": 645, "\u16de\uabba": 645, "\ufda1\u079d": 645, "\ufe79\u1654": 645, "\ua7f8\u2c66\ua2a7\u0808\u18d3": 645, "\u1bca\ufd8a": 645, "\ufee7\u1d05\u01fd\u2d0f\u1f7b\ud7b9\uab44": 645, "\ufbfc\u1d7e\u03cc": 645, "\u0a5b": 645, "\ufe80": 645, "\ufd69\u1bd8\ufc5d": 645, "\ud7d1": 645, "\u1e09\ufeb5\u1849\u0107\u30a2\u0b25\ua2ec\u1411\ua161\u0bb6": 645, "\u11b2\ua267\u02b3": 645, "\u019e\ua74f\ufeec\u1436\ua117\ua45d\ufcb3\u1559\u138b\ua2ae\u146b": 645, "\u31a7": 645, "\ufcfd\u1183": 645, "\u1ebf\u1704": 645, "\u1d41\ufc09\u0249\u06cf\u0d0c\ufdf2\uff68\u186e\u167d\u1798\u2d18": 645, "\u1e99\ufb7e\u0519": 645, "\ua6d9": 645, "\u1e1d": 645, "\u0840\ud7f7": 645, "\ufc43": 645, "\ua84d": 645, "\u1762\u30d3\ua8b2": 645, "\u2c52\u0562\u01d8": 645, "\u118c": 645, "\ua317": 645, "\u03ae\u074f\u2cee\u0564": 645, "\u1208\u1b9c\u1d13\u10e0\u18b8": 645, "\ua73d\ufc98": 645, "\ufd9b": 645, "\u1242\u1494\ua3b4": 645, "\ufb14": 645, "\ua793": 645, "\uaae0": 645, "\ua81a\ua3e9\u1d74": 645, "\u1d9c\ufc42\u0458\ua437": 645, "\u09ce": 645, "\u00ed\uff7a": 645, "\u1e15\u067b\u116b": 645, "\ufbdf": 645, "\ua614\ua78c": 645, "\u1571": 645, "\u1659\ua97a\u1b25": 645, "\uffb6": 645, "\u12d5": 645, "\ua3ac\u08b2\u151e\u1a2d\u0987\ua1a7\u1388\u098a\u12aa\u04fb\u050b\u1405\u12ac\ufc4c\u1146\u1424\u2d32": 645, "\u2ccf\ufeda\ufc38": 645, "\u1b94": 645, "\ufb53\u1472": 645, "\u03ed": 645, "\ua35c": 645, "\u0254\ufd6f\u1533\uff8a\u15c2": 645, "\ua1dc\u0dc6\u0117\u13f9": 645, "\u0215": 645, "\u2d02\u0585": 645, "\ufdc6\ua870\ufc5c\u2d59\ua551": 645, "\u06a4": 645, "\uab38\u0622\uff92\ua135\u09a8": 645, "\ua895\u03cd\ua266\u01b4": 645, "\u123b": 645, "\ua2bc\u118b": 645, "\u11ea\u091b\u1eff\u1c4f": 645, "\u0f63": 645, "\u1f13\u0db4\u158a\u0904": 645, "\u1329\ua336\ufea6": 645, "\u1da4\u06cd\ua54e\u07f4": 645, "\ufcbb\ufcdc\u1167\u3178\u0455\u2cab": 645, "\ufd99\ua770": 645, "\u195b\ua38f": 645, "\ufc69\u117c\u1fb3": 645, "\u0921": 645, "\ua2a1\u3112\u1fe1\u14b3\uab05": 645, "\ua53d\u2dda\ua9e0\ua357\uaaa0": 645, "\ua4d8\u138c\u0e9b\u1780\ua091\u1f7c\uaa92": 645, "\ufc63\u17af": 645, "\u0dbd\u1128": 645, "\ufd75": 645, "\u132a": 645, "\u037c\u0852\ua1cd\uab30": 645, "\ufc2b": 645, "\u1d81\ua316\u0791": 645, "\u15c4": 645, "\u14c6": 645, "\u146d\u19a9\u0dc5": 645, "\ua743\ufcac\ua020": 645, "\u0277\uffbc\u01bd\u1553": 645, "\ua587": 645, "\ua797": 645, "\u037b\ufd78\u14bc\ua348o": 645, "\u1da3\ufbef\u10ec": 645, "\u1d18\u168f\uffce": 645, "\u04b5\u1460\ufb56\u30fd\u10de\u0bb1": 645, "\u0b07": 645, "\u12a9\ua2d6\u1285\ua0ee\ua816\ufd20\ufb9c\u0b2a": 645, "\u03fb": 645, "\u11e1": 645, "\u0688\u079a\u1264": 645, "\u044a\u30b6\uff54\ua799\u1f54\uffa4": 645, "\u0b9e\u0d21\ufe9d\u012b\uabd1\u0f88\u213e\u02b1\u1fa4\uab7f\u1506": 645, "\u3145\uffb2": 645, "\u1213": 645, "\u3031\u3106": 645, "\ua355\u1f03\ua9ed": 645, "\u0109\u12b3\u1689": 645, "\u0446": 645, "\u161e": 645, "\u0569\ua66d\u0629\ua462\u174a\u0274\u1ef9": 645, "\u2c36": 645, "\ua22e\ua599": 645, "\u0daa": 645, "\u03ad\u16a6\u176a\uffb9\ud7e6\u0b08\u2db9": 645, "\u2c39\u06c0": 645, "\uabb6": 645, "\u1656": 645, "\ua129\ufc73\u05e5\u1211\u1a04\u0a30\u190c": 645, "\uab03": 645, "\ua33c": 645, "\u0986\u07dc\uff55\u2d19": 645, "\u14d5\ua8f7\ua99a\u123c\u3115\ua56c\ua51c": 645, "\u2d3d\uaab6": 645, "\u02c7\u1bc3\u0131": 645, "\u30a8\u19c9\ua5a1": 645, "\ua741\u2ca3\u101a\ufb59\u056f": 645, "\ua98c\uab3c": 645, "\u1959": 645, "\u0855": 645, "\ufebc": 645, "\u0843": 645, "i\u1fd2": 645, "\ua3de\u0b33": 645, "\u01b6\ufb15": 645, "\u021b\ufc47": 645, "\ua52b\ua3e3": 645, "\u155d": 645, "\u146f\u1c18\ufc58\u18e5\u114a\u03dd\u1e4f": 645, "\u12dd\ua767": 645, "\ud7d0": 645, "\u1106": 645, "\u043f\u1c70\u2cb1": 645, "\ua5d0\ua970": 645, "\u05ea\ua465\ufbd3\ua689": 645, "\u30a1\uabd7": 645, "\ua54c": 645, "\ua53e\ufba8": 645, "\u1905\u1ec7\u1a24\uabb9\u1863\u0ca2": 645, "\u1ecb\ua095\uab4a": 645, "\u10d0\ufcb8": 645, "\u092f\u1b1a\ua09b": 645, "\ufd7e": 645, "\uffd5": 645, "\u15fb": 645, "\u1fa1": 645, "\u10ef": 645, "\u15bc\u18a1\ua17a\ua5da\u1a09\u1be2\u1b32\u2113\ufb6f\u0581": 645, "\ua46d\u093d\u091e\u12bd": 645, "\u134b": 645, "\u1628": 645, "\u01f9": 645, "\u133e": 645, "\u1174\u161c": 645, "\ua069\ufc18\ufcae": 645, "\u11fe": 645, "\u1d25\u0e1a": 645, "\u1d75\u0643\u0b5c\u153b\u1908": 645, "\ua572": 645, "\u2cad\uff47\u1e6b": 645, "\u11fd": 645, "\ua5d1": 645, "\u2c54": 645, "\ua278": 645, "\ua0aa": 645, "\u1fd0": 645, "\u1d5f\u1d3c\u304f\ua1d7\u0ea7": 645, "\ua1cc": 645, "\u1d09\u0d18\u1853\ufd07\uaa47\u1a2c\u1fb3": 645, "\u2d06\u1621\u1a40": 645, "\u1209": 645, "\u028e\u012b": 645, "\ua641": 645, "\u147d\u198c\ua11a": 645, "\ua98b\uaa73\ua3f6\u12c0": 645, "\ua80f": 645, "\ua394\ufcd2\ua44e\u01b0": 645, "\u186d": 645, "\u0c22\u1e31\u1256": 645, "\u022f\u1f37\u19bd\u1222": 645, "\u0c08\ua665\u1c75\u0a20\u0103\ufda0\u02a7\u0724\u074d": 645, "\ua0f8\u3164": 645, "\ua6da": 645, "\u1c1a": 645, "\ua3f0": 645, "\u11b9\ufec1\u045e\u1dad": 645, "\ua217": 645, "\ua64b\u0257": 645, "\u0d2e\u0722\ua56b": 645, "\ufce8\u0b83\u2d14\ud7b5\ufd0b\u043d\u0a17": 645, "\ua47d\u0c9c": 645, "\ua1b8\ua74b\ua91f\u1e01\u0d3a\u209c": 645, "\u0451\ua455\u2d17\u10ed\u0824\u1f23\u04f3\ua889\u1021\u2d07": 645, "\u1e3d\u1e19": 645, "\u04ff": 645, "\u2ce3\u0e09\u1437": 645, "\ua1d3\ua611\ua6a8\u0566": 645, "\u1be4\uaa8f\u0e43\u15de\u0638": 645, "\ua03c\u0c21": 645, "c\u1bc4": 645, "\u0a96\u1383\u1008\u310b": 645, "\ua221\uff70": 645, "\u0719\ua162\u11c7\ua4e7\u0373\u0e11\u15bf\u1f31\u0687": 645, "\u18aa\u0171": 645, "\ufb01\u18b1": 645, "\u1301": 645, "\ua189\u0297": 645, "\u165a\ufb76": 645, "\ud7ee": 645, "\u2d58\u045c\u03d5": 645, "\u2d11\ua054\u1eeb": 645, "\u18e8\u1f20\ua146\ua17f": 645, "\u1466\u1a44": 645, "\u1f40": 645, "\uaa0a\u155f\u0e8a\u141b": 645, "\u196c\u0b1a\u1993\ua0cf": 645, "\ufd80\u31f8\ufb8a": 645, "\ua1b0": 645, "\u047d": 645, "\u0562": 645, "\uab24\u17b1\u183f\u2dd6\u1a33\ua563": 645, "\u119c": 645, "\ua695\u172a": 645, "\u1c04\u0a85\ufc4b": 645, "\u2146": 645, "\u1134\u045d": 645, "\ua963\u1478": 645, "\ua9e1\ufd67": 645, "\u0a14": 645, "\u028b\u18dd": 645, "\ua65b": 645, "\u1761\u1c5f\u1f90\u19b6\ua23a\ua388\ufd5d": 645, "\u2d3b": 645, "\u17a8\ua052": 645, "\u1ef7\uabab\u1408\uff96\ufd14": 645, "\u186a\u3177\ua29f\ua368\ufed3\ufce1\u1b05": 645, "\u1a4f": 645, "\u1163\u0da0\ua61b\u1fbe\u1d71\uaa97": 645, "\u0495\u1d44\u1f81": 645, "\uaae8\u1956\u045a\u2d3e": 645, "\ua273": 645, "s\ua2c2\u1195\ua3e6": 645, "\ua2cf\u062a": 645, "\u1244\u04f3": 645, "\ua298\u0f4f\uaa6e": 645, "\u1461\u18f3\u1e96\u02ec\u0698": 645, "\u1bcf\ua99e\u1012\ufbf2\u1833\ua9ef\u0d20\u1835\u0676\ua43e": 645, "\ufda5\ufd02\u150b\ua04a\u1271": 645, "\u04ca": 645, "\u18cc": 645, "\u2c53\u1c6a\ua6b9\uff93": 645, "\u14b2": 645, "\u2c93\u1f10\u1e1b\u11f7\u2cd1\u1e33\u1d0e\ua3af\ufcc2": 645, "\u1766": 645, "\ua820": 645, "\u12e7\u2c3e\u04db\u0e2f": 645, "\u2dcb\u1d4b\u0a07\ua5b6\ud7ce\u1326\u11eb\u0e14\u134e\u3090\ua553\ufcc5\u1613k\u30f8": 645, "\u0261": 645, "\u0aa3\u1b31\u07d3\u0b5d\ua1ca": 645, "\u0dc0\ua1c8\u043c\u0263\u0167": 645, "\u1d72\u043e\u2cc7\ufc9d": 645, "\u0f66": 645, "\u0800\u1214\u0807": 645, "\u0eb3": 645, "\ua57c": 645, "\u1f14": 645, "\u0203": 645, "\u0287\u2c6c\u1eb7": 645, "\ufb5e\u1dbe\u1e27\u307c\u130a": 645, "\ua4fd\ufb4d\u00fa": 645, "\ua45f": 645, "\u1633\ud7df\ua422\u158e": 645, "\u1113\u19a1": 645, "\ua5f7\u0f5b": 645, "\u0a13\ua29a\u03cb\u10f9\u1d1c\u2c3d": 645, "\uaa6c\u01bf\u0c07\u1295\u3114\ua601": 645, "\u0c31\ua31e": 645, "\ua288\u1471\ua2e7\ua93b\ufc79\ua386\u1ecd\u03e7\ua565": 645, "\u2071\u0979\u12d4\ufd3c": 645, "\ua119": 645, "\uabd5\u04ad": 645, "\u15f0\u1299\uabaa": 645, "\u1330": 645, "\u027e\u04bb\ua817\u2c42": 645, "\u1f57\u0503\u10f1\uab51": 645, "\u0459": 645, "\uaa17": 645, "\u092c\u0f4d\ufcfc": 645, "\u1793": 645, "\ua864": 645, "\u158c\ua4d9\ufc44\uff43": 645, "\u16c1": 645, "\ua3d1\u135a\u11ec\uaa7a\ua193\u2c40\ufc82": 645, "\u1bc5\u1c79": 645, "\uab9c\u1303\u0d9c\u31a1\u2d55\u1699": 645, "\u3124\uaa08\u1e53": 645, "\u1197\u1706": 645, "\u1861\u167b": 645, "\ua85d\ua01d\ua9a6\ua106\ud7d4": 645, "\uaa1f\u2124": 645, "\ua51a\ufe7b\u029e\ua7a9\u1da0\u04b1\u17b0\u01cc\u112dy\u04ab\u1d90": 645, "\u31ba": 645, "\u02a0": 645, "\u057f": 645, "\u1204": 645, "\ua5bf\ufebb": 645, "\ua07f": 645, "\uaa86": 645, "\u0523\u12f0\u1f23\ua530": 645, "\u15eb": 645, "\u16ab": 645, "\u3059\u057c\uff45\u0440\u1404": 645, "\ua2ba\u129d\u06ac\u1d16\ufba1": 645, "\ufcf5\ua389\u0a8a": 645, "\u157a\u1f02\u160d\u19a2": 645, "\u30c7": 645, "\ua986\u0d24": 645, "\u1d4d": 645, "\ud7f9": 645, "\u2c78\ua941": 645, "\uab90\u159c": 645, "\ufc45\u03ac\uaba2": 645, "\u1986\ud7fb\u0675": 645, "\u1266": 645, "\u1210\u1c74\ua6c5\u124d": 645, "\u1293\ufb30\u1447\u1c0d\u1ed3\ua56e": 645, "\u0ede\uab4b": 645, "\u0207\u15bb": 645, "\u04f5": 645, "\u0721\u1f84\u0438\u11f2\ua59c\u1a41\u0e06\u115e": 645, "\u0ca7\ua535": 645, "\u0d23": 645, "\u120c": 645, "\u12f3\u3053\ufed5": 645, "\u052d\u056b\u2cf3\u2d30\u313b": 645, "\ufd5f\ua0a2": 645, "\u0caa\u0725": 645, "\ua34e\u1dba\ua2a4\u09dd": 645, "\ua5d6\ua846\ufc88\ua14a\u168a\ufbe6": 645, "\ufd2f\u1302\ud7f5\uab9f\uab0a\u07fa\ua24c\ua20c": 645, "\u1ee3": 645, "\ua2b1\u1028\u0454\u114b": 645, "\ua0d4\u152a\ua0c2": 645, "\ufea4\u03f8": 645, "\u1e0f\u072b\u11d7": 645, "\u1bdc": 645, "\u0195": 645, "\u0c1e\ua130\ua167": 645, "\u1ee5": 645, "\ufd3a": 645, "\u1b9d\u2c6c": 645, "\u0127": 645, "\ua405": 645, "\u1f21": 645, "\u2d08": 645, "\u1826": 645, "\ua22b\u2c52\u03df\ua68b\u068e\uab71\u11ae\u1e55": 645, "\ua36f\u1ebb": 645, "\ua312\ua757\ua220": 645, "\u1a54\u08ab\u3180\u1e8d": 645, "\ua1d8\u063f": 645, "\u2c9d\u2c7b\ufc4f\u3071": 645, "\u1595": 645, "\u2d1a\u00df\u03b0": 645, "\ua045\ufecd\u0905": 645, "\u1d1a\ua02d\u3175\u1f15\ua765\ua477\u01da\ua913\ua0f7\u3170\u1996\u1c06\u043b\ua34b\ua041\ufd77\u30e7": 645, "\u15c3\u3078": 645, "\u00f2\u1b08": 645, "\u0d85\u1990\uab7e\ufb77\u04d3\u1458\ua747": 645, "\u0d0b\ua0fc\u1cf2\u2c55": 645, "\u1661\u1918\u1e4d": 645, "\u03d9": 645, "\ua014": 645, "\ua687\u1507\uaaaf\ufb21": 645, "\ufdaa\u2128\u12cb": 645, "\u0161\u1352\u2c73\ud7da\u0e32\ua196\u06c8\u1e0b\u1a35": 645, "\ufc99\u0805\u155e": 645, "\ua0af\u2d03": 645, "\u0d07\u1442\u1725\u1953\uabcc": 645, "\u020b\u0265\u1ea7\u0812\u0a2c\ua6d3": 645, "\ufcc6\u1955": 645, "\u1d22": 645, "\u18f0\u1c60\u017e": 645, "\u116c\u1c63": 645, "\u03ba\uabd0\u1503": 645, "\ua681\u0cae": 645, "\ua3cf\ua5e4\ua00b\ua72b\u04eb": 645, "\u2d31": 645, "\uab0e\uffcf\u0baa\u1e4b\ua010\u1ebb\ufb22\ufc9f\u1764": 645, "\u1b8e": 645, "\u1331\uaaac\ufeaf": 645, "\u16d9\ua13c\u0269\ua3bb\ua180\u021b": 645, "\ua0d2": 645, "\ua40b\u02ee\ua795\u0e8d\u048f\uab43\ua665": 645, "\u30cd\u0e99\ua46e\ud7de\u1740": 645, "\u30c3\u1413": 645, "\u1492\uff49\u129a": 645, "\u1560\u14a2\u024d": 645, "\u2ce4": 645, "\u0abd\u1f36\ua9a0\ua030\u06c3": 645, "\u15d1\u3109": 645, "\ua695\ua605": 645, "\u08a5\u1841": 645, "\u12c5\u15fe\ua450": 645, "\uab91\u1312\ua604": 645, "\ua85c\u308c": 645, "\u0c09\ua253\uaa46\u1d80\u02aa\u16c3\u2d66\u147e\uab34": 645, "\ua731": 645, "\u12d3\u1504\u0626\ufd36\u07cd\ua4d4\ua745": 645, "\u1664\u04e7\u0a23\ufec5j\u0568\u01e3": 645, "\u1750\ua105\u3047\u1fe0": 645, "\ua09f\ua2d0": 645, "\u02cc\ua556\u04c4\u0c2a\u03bd\ua2eb\u15b3\u1f75": 645, "\ua47e\ua867": 645, "\u30cc\u1f25": 645, "\u118d": 645, "\u03b7\u097e\u01a5\u0b0f": 645, "\ua385\u01b0": 645, "\u18be": 645, "\ua5f1\u17ae\u19b7\u3061\ua8b1": 645, "\ua410\ua6e3\u0e1f\u0920": 645, "\u3126": 645, "\u0db3\u1a32\u189a": 645, "\u1075\ua791\ua404\u16c2\u044a": 645, "\u172c\u19b8": 645, "\ua142\ua4df\u1212": 645, "\ua178\u2c58\ua19b\u166a\u1911": 645, "\ua885\ua19e\ua236\ufb7c\ua58c": 645, "\ua7ff\uaaab\u0140\u1e7d": 645, "\u1500\u12ec\u048d\u1f84\ufc16\u0a18\u0455": 645, "\u3033\u052d": 645, "\u153e\u1423": 645, "\ua204": 645, "\u2cdb": 645, "\ua5a4": 645, "\u1e5f": 645, "\ud7c3": 645, "\ufeb0\u00aa\ua19c\u1be1\u011b\u156e\u144b": 645, "\u16a4\u31b3\u05d4\ua05e\ua192\ua800\u11a7\ua2ee\u02a2": 645, "\uaa99\u01ba\u062b\u2c43\u304d\u190f\u1b8a\u0177\u30f9": 645, "\ua26a\u1475\ua8ae": 645, "\u12e1\uaba1": 645, "\ua6d4\uffd3": 645, "\u017c\ua4e1\u1555": 645, "\ufe85\u03bf\uff74\ufccf": 645, "\u122d": 645, "\u149d": 645, "\ua136\ua275\u0714\ua987\u1217\u2d53": 645, "\u142e": 645, "\u14ff": 645, "\u314b\u1e9c\u04a7": 645, "\u30b2": 645, "\ua28e": 645, "\ud7c6": 645, "\ua1de\ua456\ua71f": 645, "\u1d96\u1bc0": 645, "\ua9ea\u043f\u1d2f\u0d9b\u03c5\u2c95\u00e7\ufd0a\u1be5": 645, "\u1e67\ua6bd\u092a\ua8ac\ua238\u3060": 645, "\u084c\u0f8c\ua29c\ufdaf": 645, "\u1c5d\u19c0\u2d5d\u140a\u1e8f\u1a48": 645, "\u1bcd\u0e08": 645, "\ua99f\ua647\ufeac\ufc40": 645, "\ua483\ua080\u0292": 645, "\u0d1d": 645, "\u1f79\ufb17\ua31c\ufc10\ufc75": 645, "\u1513": 645, "\u0171": 645, "\ua68f\ua72d": 645, "\ufdf8\ua38b": 645, "\ufcec\ua101": 645, "\ua50c\u1070": 645, "\u1f42": 645, "\u00ee\ua96a": 645, "\ua16f": 645, "\u30f6": 645, "\u1354": 645, "\u1016\u2d1e\u1516\u0101\u03f8\u1ec1\u191b\uffbe": 645, "\u01d6": 645, "\ufd28": 645, "\ua30e\u01da": 645, "\u0b23\u0d2f\ua2af\u05d1\uaaa1\ua06b\uaaf3\u1743\ua33a": 645, "\ua85a": 645, "\u02bd\ua50a\u0133": 645, "\u0515b": 645, "\u1d7c\u0456\ua2e0\ua009": 645, "\u312a": 645, "\ufdc2\u2d0e": 645, "\u315a\ua06d": 645, "\u115f\u07a4\u16c7\u0978": 645, "\u2d0d\u1bd7": 645, "\u00e2\u2cec\u07d9": 645, "\u1d7b\ua52c\u051f\ua39a": 645, "\u309d": 645, "\u2dc3\u0290\ua50b\u1dac": 645, "\u1c09": 645, "\ua268\u2d63\ua2c9": 645, "\ua2a9": 645, "\u1596\u010d\u0503": 645, "\u07f5\u2cb9\ua869\ua2b2\uaa18": 645, "\u1fd0\u3129\ua967\u04bd\u3182\ua08c": 645, "\u076d\u18e2\u2102\u2c5d\u1013\u05db": 645, "\u31f4d": 645, "\u132f\u1aa7": 645, "\ufb6e\u0265\ua0b3": 645, "\ufc2f": 645, "\u11c6\u0631\u0231\u1054\u1fb0\u12fb\ufea0\u049b\ua69d": 645, "\u14d8\ua818": 645, "\u0491": 645, "\u1ea9\u0463\u1f87\ua47f\uff82\u178a\ua31d\ua74f\u0169\uab59": 645, "\ufedb\uffdb\u159b\ufd3b\u046b": 645, "\u1d01\u03d7\u162f\ufc96\u091a\u3108": 645, "\u2c4a\ua855\u30bc": 645, "\u0b93": 645, "\u1265": 645, "w\ua2e1": 645, "\ua199\ufd33\u01df": 645, "\uffcc\u0924\u113a": 645, "\u1723": 645, "\u1121": 645, "\u1f72": 645, "\ua88d\ua138\u056f": 645, "\ua6e0\u2d0b\u1305\u03c8\u16c6\u15ad": 645, "\u117e\uab7c\ua060\ua292\ua4e6": 645, "\u1fb1\ufc37\ufcb6\ua5b2": 645, "\u0b20\u15ab\u17ab\uaa04\u18dc": 645, "\u0497\uaa15\uff5a": 645, "\u072c\u2c89": 645, "\u06a5": 645, "\ua5f2\u0a10\u0a9a": 645, "\u1fe5\ua1d5": 645, "\u2c8b": 645, "\ua5a0\u1c03\ua64f\u11db": 645, "\u07e9\u1488\u1651q\u1e98\u1991": 645, "\u080e\ua0f6\u06fb": 645, "\u029a\u10e8\ua223\ua2ac": 645, "\ua1e4": 645, "\u1fe7": 645, "\u1823\ufdad\u15a0\u08aa": 645, "\u102a\u16ad": 645, "\ufc24\u2c87\u1150\u132e\u11de": 645, "\ufda3\u049b": 645, "\u0b2b\ua1e8\u0231": 645, "\ua3ae": 645, "\uaa01\u0180\u1b0c\ufef9\ufe78\u3138": 645, "\ua76d": 645, "\u3160\ua3d2": 645, "\u2daa": 645, "\ua05a\u0b36\u11fa\u11e3\ua016\ua5fc\u077e\u099d\u176f\ufeaa": 645, "\u11c3": 645, "\u12c8\u1d26": 645, "\u1e07": 645, "\ua5e7\u03b9\u1969": 645, "\ua34a\u00fe\u09f0\u18b4\ua651\u1ce9\u04bf": 645, "\u2c35\u0788\u01b9": 645, "\u149a": 645, "\ua536\ufefc": 645, "\u1fa0": 645, "\u0717": 645, "\ufc2a": 645, "\ua281": 645, "\u14ce\ua730\u03d2\u024f": 645, "\u1103\u2d95\ufd7c\u1216": 645, "\u14ad": 645, "\ufd5b\ua813": 645, "\u111c\uaba9\u2c4a\u0759\ua991\u00ef": 645, "\u068f\ua7a5\ua849\ua111\u150d\u1ea5": 645, "\u148c\u1da7\u1243\u1e59\u13fb": 645, "\u2caf": 645, "\ua254\u17a7\ua776": 645, "\u178d\u1f41": 645, "\u18f5": 645, "\ua561\u2099\u1c10\ua911\u198d\u1137\u1f95\u2dac": 645, "\ua54d\u164e\ua9a7": 645, "\ufd79\u0e2c\u0449\u09dc\u1a0c": 645, "\ufec0": 645, "\ua1b9\uab29\u06c4": 645, "\ufb61\u2d05": 645, "\u2c4b\ufd89\u2d52": 645, "\ufb13\u00eb\u0aa4\u0d06\u2d15\ua609\u1d0a": 645, "\u0527\ufc62": 645, "\u1f91\u1d9b\u071f\u2c3a": 645, "\u2d09\ua1ec": 645, "\u0ba9": 645, "\u315f": 645, "\u1322\ua440": 645, "\u1c13\u0119\u0d8a\ua2a8": 645, "\ua6c4": 645, "\ufeb9\u1120\u0799": 645, "\u17dc\u1c7a": 645, "\u06ff\ua93a": 645, "\uab81\u0217": 645, "\ua290\u0e17": 645, "\u1585": 645, "\u03f3": 645, "\ua181\ufef3\u0a90\u0b95\u152d\u1866\u2d0c\u18c9\u0471": 645, "\u0f4a\ua917\u1899\uabdc\ua402\u14e3\ua6cb\ua240\u026c\u1102\u2d96": 645, "\u02b6\u0929\u029b": 645, "\u095b\u1f22": 645, "\u00ee\u2c7c\ua616\u01ff": 645, "\u1f66\u1fb0": 645, "\u0db5": 645, "\u1bd3\ua02f\u123d\u1309\ua139": 645, "\u184f\ua334\ua294\u0e40": 645, "\u315e\ua36a\u133b\u317f\u14d3": 645, "\ua25f\u3174": 645, "\u0e16": 645, "\ua3e0": 645, "\u0276\ua358": 645, "\ufd9a\u15c0\uffa5\u1e6b": 645, "\u195d": 645, "\u0777": 645, "\u1425\u14da\u3085\u1198": 645, "\u1667\u31b5\u1439\u099a\u1d6a\ua871": 645, "\ua5c3\ua2fd\u066e\u00fc": 645, "\u029d\u1416\u1382\u111b\u1589": 645, "\u095d\ua040": 645, "\u14fa": 645, "\u3120\u2d01\u18ec": 645, "\ua6a6\u185c\u1efd\ua0ca\ua6c1\ufd7d": 645, "\u30d4\uab28": 645, "\uaae7": 645, "\u0163": 645, "\u1e17\u0766\ufdc4\ua6ab\u1b2b\u186b\u07e7\ua2a6\u1454\u31b8\u1890": 645, "\u0561": 645, "\ufdc0": 645, "\ua471": 645, "\u1961\u3088\u30f1": 645, "\u19a7": 645, "\ua25a\u0b60": 645, "\u2c35": 645, "\u11bc\uaa07": 645, "\u0aad\u0da9": 645, "\ua527\u06a7": 645, "\uab5d\u0c2c\ud7d7\u03c0\u1318": 645, "\u1b09\ud7e3": 645, "\ua100\ua113": 645, "\ua729": 645, "\u0440\ua40d\uab99\ua263": 645, "\ufb67\u3140\u06ab\u017a": 645, "\u30d2\u1c6f\u1d34\ufc97": 645, "\u14e5\u05e8": 645, "\u147f\ufc95": 645, "\u170c\u119b\ufcfb": 645, "\u047b\u03af": 645, "\u1ed7\u1407\u165e": 645, "\u2d20\ua1b4\u1731": 645, "\u067e": 645, "\uff78\u028c\u1674": 645, "\u2d09\u121f\u1e67": 645, "\ua3a2\u213d\u2c66\u30e5": 645, "\ua96b\u2dc4\u03c2\u0452": 645, "\u3142\u1342\u0430": 645, "\u0373": 645, "\u0f5d\uff99\u18e3\ua41f\u2c81": 645, "\uaa81": 645, "\u095a": 645, "\u04cf": 645, "\uaba8\ua2d1\u14e9\u0c0c": 645, "\u2d04\ua28a\ua6b5\uff9c\u0582\u2c3d\u0137": 645, "\uff51\ua439\u19a6\u0915\ufd21": 645, "\u1b2c": 645, "\u045a": 645, "\u1f13\u1729\u1f66\u161a\ufd66\ua0ce": 645, "\ua0ad\u02bf\u12d0": 645, "\u0928\u12bb": 645, "\u14ca\u1d70\ua416\uaa28": 645, "\u14a7": 645, "\u170a\ufe95\u067d\ua74d\ufe8b": 645, "\ua259\u10da\ua570\u16b0\u1544\ua60c\ua989\ua5ef\u0cf1\u174c": 645, "\u1f25": 645, "\u2c40\u044e": 645, "\u1339": 645, "\u1438\u1848": 645, "\u16c0\u1730": 645, "\u072f": 645, "\ufbd4": 645, "\u1023": 645, "\ua094": 645, "\u15b9\u2c5a\ufb95\u198b\u2cc3\ua18c": 645, "\u0521\ua3c7\u1644": 645, "\ufe92\u0519": 645, "\ua38a": 645, "\u1663\u134d\u1bd9": 645, "\ua40f": 645, "\u0b61\ua365\u1010\uff7f": 645, "\u1d87": 645, "\u19a5\u2cc9": 645, "\u1162": 645, "\u1a08\u1f78": 645, "\u1104\ua2de\u046f\u2d44": 645, "\u04c8\u1d1f\ua79f": 645, "\u3149\u1d37\ua5cd": 645, "\u31ad\u11d4\u1fa7": 645, "\u0146": 645, "\u0c90\uaa24\u00f1": 645, "\u1997": 645, "\u133a\ua6d6": 645, "\u1ecd\ua017": 645, "\ua51d\ufe9e": 645, "\uabb1\ua194\ua2d2\u18a0": 645, "\u0d9e\ua697\uaa12\u02e4": 645, "\u0527\u0971": 645, "\u0ea1\ua976\u13fa\ufca5": 645, "\ufcef\ua765": 645, "\ua272\u0144\u0dba": 645, "\ufd54\u0f42\uff4a\u0c8b\u106e\ua43f\u1235": 645, "\ua853\ufd25\u14c7": 645, "\ua3fd\ufc5b\u1a2f": 645, "\u1ee7": 645, "\ua37e\ua303\ua3eb": 645, "\u3137\u11d8\u1dae\u2c97\u06a1": 645, "\u1409\u03c4\u0477": 645, "\uff4b\u308a\u1f22": 645, "\ua6b1\u1bd1\ua4d3\u16bb": 645, "\uaa98\u1845\ufbde": 645, "\u1e77": 645, "\u2dca\ufd29\u14ee\u0bb5": 645, "\u0674\u0f53\u01c0": 645, "\uff46\ua301r\u1f10": 645, "\u2dd5\u1207\u10ea\u316d\ua0b4": 645, "\u04a5": 645, "\u06b4\ua58d\u16e9": 645, "\u115b": 645, "\uff44\u00b5\u04db\u1e25\u0a5e\u011d": 645, "\u16df\u0e10\ua55a\u075e\u2d36\ufb3b\u0d87\ua26e": 645, "\u00f4\u2c6a": 645, "\u1647\u0f41\u199a": 645, "\ua228\u0623\ua18f": 645, "\ua418\u069d": 645, "\u1e89": 645, "\u12d6\u16db": 645, "\ufd1e\u15da\u179f\ua2db\u0b09\u0d25\u1bc6\uffa6": 645, "\u04d5\ufc66\u11b6\ua19a\ua452a\ua88f\ufc07": 645, "\ufd5e\u1d66": 645, "\u0e13\uaab1": 645, "\u2c45\u2149\u015f\ua35a\ufbe2": 645, "\u0680\ua594\ua507\u03be": 645, "\u2c9b\ua134\u1fd1\ua873\ud7b2": 645, "\u0570": 645, "\u1617": 645, "\u12df\u161b": 645, "\u1b12\ua1db\u1c64": 645, "\u2d1a": 645, "\u1fa2\u0268\u1410": 645, "\u2dd0": 645, "\ua120\u00f6\u140e\ua48b\u1e73\u1865\ua90d": 645, "\ua761\u0848": 645, "\u1c78": 645, "\ufce2": 645, "\ua184": 645, "\u1d8e": 645, "\uab5e\u0853": 645, "\ua0e7\u0691": 645, "\ua362": 645, "\u0e84\u1233": 645, "\u04e5\ua3fc": 645, "\u1919\ua25b\ufbdc": 645, "\u15f9\ufea8": 645, "\u16ba\ufe9a\u0155\u0d94\u143f": 645, "\u15f5\u1570\u1895\u1d4e": 645, "\u1b91\u0a94": 645, "\ua591\ua5be\u2c73\u0790\u17a5": 645, "\ua2b9": 645, "\u1bce": 645, "\u1784\ufb25\u02d1h": 645, "d\u1328": 645, "\ua3fa": 645, "\u1428": 645, "\u1c61": 645, "\u1a0e\uaaad\ufcf4\u0844": 645, "\ua41a\u1a12\u19b2": 645, "\ufc3d\u046f": 645, "\u1711": 645, "\u19a3\ua165\u159d\u0634": 645, "\u182a\ua3ff\u0aa6\uffb8\u1ead\u311f": 645, "\u30a6\ua16e\uab9b": 645, "\ua307\u0795": 645, "\u154d\ua75d": 645, "\u071e\u0f43\ufc32\ufcbf\u1721\ua338\u1d58\u1bbe": 645, "\ua583": 645, "\u0ce0": 645, "\ua2fb\ufc02": 645, "\u2138\ua419\ua087\uab37": 645, "\u2131\uab11\u2c76": 645, "\ua24b\u0c19\u318b": 645, "\ufe9f\u16e4\u0438": 645, "\ua093\u0371\ua175\u1ef1\ua280\ua399\u1bdb\ua98d\ufc27\u0523\u1d53\u0e0b": 645, "\u084d": 645, "\u1d64": 645, "\ua092": 645, "\u30ea\u2d0d\u0802\u0435": 645, "\ua02c\u0ba8\u15d3": 645, "\ua501\u144c\ufcda\ufb28": 645, "\u174e": 645, "\u2c77": 645, "\u2c8f\ua16d\u1d7a\ua759": 645, "\u02ca\ud7cd": 645, "r\ua7a5\u2c9b\u1e7f": 645, "\u10e7\u1e5b": 645, "\ufc70": 645, "\u03ba\u1662\u027d\u013c\u128c\u14a4\u1830": 645, "\u1f76\uaa6a\ufdab": 645, "\u045e": 645, "\u14d2\u1564\u315b": 645, "\ua108": 645, "\ua4f4\u0d0f": 645, "\u115c\u084f\u3183\u0a2e\u1c1b\uff5a": 645, "\u0da3\u09a7\u182c": 645, "\u1d79\u169a": 645, "\u15e0": 645, "\ufb52": 645, "\ua396": 645, "\ufd96\u0a08\ua035\ufc89\u182d\u1b45": 645, "\u1600": 645, "\u31ae\u1542\ua32d\ua783\uab84\u1603": 645, "\u1532\u0d7a": 645, "\u0811": 645, "\uaba5": 645, "\ufbfe": 645, "\ua3a6\u14cc\ua1bf\u0249\uffac\u1e21\u1e5d\u0c8c\uab8b": 645, "\ua524\u1bd4\u0b13\u0266\u170b": 645, "\u185f\u16cc\u1bc1\ua373": 645, "\ua12e\ua6bf\u043c\ufb35": 645, "\u12b8\ua41c\u0453\u145d\ua411\uaa44\u091d\ua0df\u1287\ua5c5": 645, "\u10e2\u2cb5\ua179\u12d9\ufeb3": 645, "\ua965\u1e39\ua4ec\u116e": 645, "\u2d61\ua123\u0d26\ud7d2\ua12f\u3168": 645, "\u0b8f\u1e65\u1787": 645, "\u1e21\ua4ef\u0d90": 645, "\u1d55\ua472\ufbf6": 645, "\u3150": 645, "\u16ca": 645, "\u045c": 645, "\u1584\u11ba\u12ad": 645, "\ua3a8": 645, "\u02a6": 645, "\u0234\u037c\u14c2\ua564": 645, "\ua891\u176b": 645, "\u14a5": 645, "\u12b0\ufe70\u0293\u118a": 645, "\u0678": 645, "\ua5d4\ua046\uaba6\u0c8a\u1b1f": 645, "\ua7a7": 645, "\u0271": 645, "\u0754\u1a47\u14e7\ua27d\ufbeb": 645, "\u01ce\u100c\u30f3\ua5a6\ua6a7": 645, "\u0b39\u1450\ufbf5\u1bae": 645, "\u0d1c\u3056": 645, "\u1a06\u1e3b": 645, "\u0ae1": 645, "\u0bb3\uab9d\u04ad": 645, "\ufd0e\u0b1c": 645, "\ua5a8\u069c\u3054": 645, "\ufbfa\u0c1f": 645, "\u1219\u091c\ua1a2": 645, "\ufd1a": 645, "\ufeb6\u1695\u1566": 645, "\ua5c0\ua3a5\ua377\u3067\ua612\u1109": 645, "\u0448": 645, "\u071b\u304a\u0ca5\ua55c": 645, "\u2c33\ua42f": 645, "\ufb38": 645, "\ua75b": 645, "\ud7c4": 645, "\ua0f0\uab58\u0431": 645, "\u18b3\u0441\u2098": 645, "\uff4e": 645, "\u1983": 645, "\u0580\u0f46\u048b": 645, "\u0bb2\u0682\u0d19\u2dab\ua88c\ufb74": 645, "\u117b\u0d35\u19b4\u1119": 645, "\ua9a8": 645, "\u16f3\uaa9a\u02a8": 645, "\u0f65": 645, "\ua581\ua0c6\ua9e6": 645, "\u0d92\u076a": 645, "\u2c3b": 645, "\ua0f5": 645, "\ufc3b\u1ed7": 645, "\ua30d": 645, "\ua43c": 645, "\ua2ef": 645, "\u121d\u3041\ufb81\u09b2\ufc12\u0772": 645, "\ufb16\ua73b\u16f8": 645, "\u0d86\u101c": 645, "\u0a8f\ua6ad": 645, "\u2d25": 645, "\ua741\u0d7d\u0479\u0a2a\u045b": 645, "\u1642": 645, "\u1a00": 645, "\u1608": 645, "\u1d8b": 645, "\ua233\u10fe\u199c\u1290\u0e21\u0e27\u1520\u1e51": 645, "\u30c1\u2c65": 645, "\ud7b4\u1c5e\ud7c2\ufd7b\u04e1\ua423": 645, "\u16bd\u0f4b\u30aa\u063b\ua31a\u11da": 645, "\ua031\u050f": 645, "\u2c97": 645, "\ufcd8\u16ce": 645, "\uffbb": 645, "\u30eb\u05e7\u0913": 645, "\u0f47\ua595\u0911\u1527\u168e\ua77a\u0752\u0a39": 645, "\u2d39": 645, "\ua6b4\uff7d": 645, "\ua18b\ua545\u0295\u141c\ua0c9\u03b3\u1132\ua2cc\u04f9": 645, "\u1604\ua37d": 645, "\uff79\u1d9e\u2d21": 645, "\uff54": 645, "\u141f\ua05f\u18c5": 645, "\ua467\u1d20\ua4ed": 645, "\u07a5\ufd95\u2d4a": 645, "\u1d10\u156b\u1962": 645, "\u1bc7\ua5e3": 645, "\u03e7\u1836": 645, "\u0288\u30b3\u1ec9": 645, "\u0b8e": 645, "\ua06e\ua3a3\ufcb7\uff53\u100d\u1e57\ua444\u2d3c\u1da1\u1465\u1221": 645, "\u1e79\ufd84\ua0d7\ua5e8\uabb0": 645, "\u14f6\ua244": 645, "\ua59b\u0b37\u140c": 645, "\u1e69\u0ca6\u1136": 645, "\u184d": 645, "\u028c\ua28b\ua048": 645, "\u11d2\u207f\ua352": 645, "\u0f8a\ufb66\uffb0": 645, "\u0390": 645, "\u0f5e\u0113": 645, "\u1edf": 645, "\ufe71\ua214": 645, "\ufc6b\u01a3\ufeb1": 645, "\u1536\u1f01\u1b0f": 645, "\ufc19\u191c\ua03f\u12ea": 645, "\u1ff3\uab4f\uaae1": 645, "\ua57f": 645, "\u1837": 645, "\u127b\u0467\ufe74\uaa8a\ua500": 645, "\u0a93": 645, "\ufed2": 645, "\u1e83": 645, "\u2d05\u1111": 645, "\u151d": 645, "\ua3f8": 645, "\ua86d\u2c5b\u1f87": 645, "\u0635\u0d32\u1791": 645, "\uabe1": 645, "\u148d\u0115": 645, "\u1daa\u0ba3\ufc2d\u1581": 645, "\u0f89": 645, "\u0153\u03af\u1b14": 645, "\ua735\u1d9a\u1f86\ufc6d": 645, "\ufdf0": 645, "\u01c3\u048b\u1598": 645, "\u0493\ua008\u1201\ua5ed\ufcfe\u0481\ufba5\ua61e": 645, "\uaa96": 645, "\ua239": 645, "\ua45b\ufedc\ua342": 645, "\ufc51": 645, "\u1875\u00fd\u16d3\u11fb\u1282\u125a\u09a0\u0ea3\u2dad\u2d13\ua398\u162a\ufb49\ua77c\uab98\u0b30": 645, "\u05d2\u0e0c": 645, "\u0279\u148f": 645, "\u2c33\u1280\ua0ef": 645, "\u0989": 645, "\u1353": 645, "\ua0b8": 645, "\u1141\u1320\ua771\u210a": 645, "\u0a99\ufc77\u0917\u170e\u06c7": 645, "\ud7dd": 645, "\u0283\u00e3\ua02e\u1123\u16f6": 645, "\u03eb\u2c74\u19c8\u1537": 645, "\u069f": 645, "\ua0b7\ufc0a": 645, "\uaae2\u0a27\ufca4\u0632\ua699": 645, "\u129b\ua84e": 645, "\ua968": 645, "\u12a8": 645, "\u2ca9\u2db6\ua45c\ua5ae": 645, "\u0237\u0727\u30c2\uab92\u00e6\uffa9": 645, "\u0975\u1514\u16a0\ua414": 645, "\u0253\ua2b5\u1e47\u3095": 645, "\u11f1\u0215\uab8c": 645, "\uaa7e\u1963\u31a8\u1bcc\u02cd\u2d42": 645, "\ua0ea": 645, "\u0582": 645, "\u0999\u310c\u0b94\ua8f6": 645, "\ua93d": 645, "\u11d3\u1c5c\u0135\u1116": 645, "\u00ef\ua400\u1a23\u1709\ufc83\ua170\ufce6": 645, "\ua436": 645, "\ua122\ufba2\ua759\ua8a7\ufd71\u06c1\ua6df\ufba9\u144a\u123f": 645, "\ua4ea\u1e93\u1682\u0d27\u1448": 645, "\uaa68": 645, "\u0642\u1cf1\u06a6": 645, "\u1951\u212f": 645, "\u0923": 645, "\u156f\ua207\u11f6\u1e81\ua40a\uab48": 645, "\uabbd\u0672\uab8a": 645, "\ua461\u1a20\u1b10\uffd7\u119a": 645, "\u0d29\u12a3\u3146": 645, "\u0daf\u1105\u0b87": 645, "\ud7d9\ufb9b\ufb8c": 645, "\u1156": 645, "\u1276": 645, "\u0907": 645, "\u2d33\u1477\uff4a": 645, "\u130e\u064a": 645, "\u1856\u1ea3\u0937\u1f75": 645, "\u04c2\u0b1b": 645, "\u0b32\u0298\u1002\u15e1\u1869\u12f1": 645, "\ua20a\u03c5\u0e0d": 645, "\ua150\u0da5\ud7f2": 645, "\ufd93": 645, "\ufcd0\u05df\u1020\u03b5\u09b9": 645, "\u0b1d\uabbf": 645, "\u0640\u0b06": 645, "\u1973": 645, "\u1275": 645, "\ua02a\u11e7\ua0db": 645, "\u0d1e\u1d92\u0d09": 645, "\u1d3d\ua9e4\u15b4\u15a2\uab3f": 645, "\ua58f": 645, "\u2d17\u11f4\u1b0d\u118f\u12a4\u1d2d\ufbf0\u063a\ufc0c": 645, "\u0d7b\ufd1d": 645, "\ua3b9\u03f2": 645, "\u129f\uaabd\ua667\u2d10": 645, "\u0f52": 645, "\u0a1a\u1e1f": 645, "\u1eb3\ua2c4\ua018\ufb92\uffca\u0121\u1453\u05e4": 645, "\u1f7c\ua174\u0c33": 645, "\u16e2\uaae4\ua663": 645, "\ua5fa\uff4f": 645, "\ua15c\uabbb": 645, "\u024f": 645, "\ua09d\ua4de\u1273\uaaa7": 645, "\u142a": 645, "\u1a36": 645, "\u31a3": 645, "\ua1a3": 645, "\u1449": 645, "\ua544\ufd16\u025d": 645, "\uab57\uab83\u1254\uff91": 645, "\u050d": 645, "\ua125\uab74\ua5d2\u1e6f\ua412": 645, "\u15d9\ua257\u04d9\u19bb": 645, "\uff42\u0768": 645, "\u1b48\u1e55\ua2bb\u1474": 645, "\u3118\ua306": 645, "\u0f40\ufd17": 645, "\uff6d\ua923": 645, "\u1e6d": 645, "\uabce": 645, "\u30fe": 645, "\u01ad\u14f7": 645, "\u15be\u166f\u0a16\u0473": 645, "\uaa8c\ua787\u153c\u1985": 645, "\u147c\ua20d": 645, "\ua07d": 645, "\u1698\u0726\u03fb\u0b8a\u30fa\ua11b": 645, "\uff4e\u1444\u090d\ua14c": 645, "\u2db2": 645, "\u0e0e\ua260\ua79d\u111a\u144d": 645, "\u1797\u1159": 645, "\u30d0\u0762\u15e9\u1580\u0583\u0919": 645, "\u179b": 645, "\ua588": 645, "\u15c5\u2cd3\ua1a8\ua5af\ufe9c": 645, "\ua55f\u04a9": 645, "\u1f34\u306e\uaa49": 645, "\u1ff3": 645, "\uff48\u13f8\ud7f6\u0d9d\u2d03\ufb73": 645, "\u063e\u306f\ua9ab\u090b\ufc0d": 645, "\u179e\u1745\u30e6\u0b10": 645, "\ua05b": 645, "\u2ddc\ua3b5": 645, "\uff90": 645, "\u0444\u11a4": 645, "\u0247\ufb32": 645, "\ua5f9\ua5c7": 645, "\uab7b\ua438": 645, "\u0765": 645, "\ufd8e\ufef8\ua6d2": 645, "\u18cd": 645, "\u0201\u00e1\u0639\u1684": 645, "\u31ab": 645, "\u1daf\ufe99": 645, "\u30ee\u2cad": 645, "\u0ab8": 645, "\ua043": 645, "\ua1d9\u0933\u1822\u125c\ufbaf\ufb85\ua7fd\u143c\ua6a2\u06a3\u01b6\u120d\ua232\u0565\u0577\u14d4\ua320\u2c3a\ua3b6": 645, "\u0997\u0a1b": 645, "\u03b2\u16ae": 645, "v\u02ba": 645, "\u026b\u1c68\ua669\ua28c\u2091\u2d4b": 645, "\u03d4\u02ae\ua190\u30ad\u050d\u1130": 645, "\uff6e": 645, "\u0828\u1827\ua9fd\u121a": 645, "\u145e": 645, "\ua0d0\u0465": 645, "\ua11d": 645, "\u1e75s": 645, "\u1688": 645, "\ua943\u09a2": 645, "\uab55": 645, "\u07d0": 645, "\u02bb\ua132": 645, "\u1e95": 645, "\ua998\u0792\u1c71\u2148\ua5f4": 645, "\u18e9": 645, "\ufb65\u0974": 645, "\u1220\ua822": 645, "\u0684": 645, "\u1e1f\u04e1\u189f\ufd59\u0ead\u0b22\u1186": 645, "\ua5f6\u1f62": 645, "\u00e0\u0985": 645, "\u16a9\u1f06\ufb54": 645, "\u31b0": 645, "\u1508\u0209\u1345\u183c": 645, "\u313a\ufc7b\u14af": 645, "\u0d12\u1912\u1840": 645, "\u021d\u0a97": 645, "\ua788\ua739\ua8a2\u31fb": 645, "\u1499\u01fb\ua649": 645, "\u071c\u1d8f\ua5b1": 645, "\u0764\u00ea\u14eb\u1c14\ua459\ua550\ua0fa\ua737\ud7e5": 645, "\u11d0": 645, "\u164f\ua725": 645, "\u122c\ua9e8\ua1bd\ua21e\u2107": 645, "\u1e13\u1fa3\u1434": 645, "\u130c\ufb8f": 645, "\u166b\u30c8": 645, "\u0c9b": 645, "\u1b20\ua841": 645, "\u31b4\u1026\u1892": 645, "\u0cb5\ua04d\u019a\ua921\u2dc5": 645, "\u1efb\ua219\u110f": 645, "\u182b": 645, "\uaa9c": 645, "\u311c\ud7f4\u11b5\u1270\ufb34": 645, "\u0c17\u112f\u3045": 645, "\ufcb1\uaba4\u11a5\ua10d\ua98e": 645, "\u1bbb": 645, "\ua283\u1b1b\u1e93\u0b1f\u18eb\ufb2b": 645, "\ua9ad": 645, "\uff75": 645, "\ua474": 645, "\ua5b7": 645, "\ud7cb\u12d8": 645, "\u163d": 645, "\u312b\ufeeb\uaa06\u04f9": 645, "\ua2b0\ua371\ufece\u05d9\ua1c9\ua224\ufb4c": 645, "\u1db9": 645, "\u1274\u1f92\ua1ae\u18df\u1f14": 645, "\uff42\u2c85\ua482": 645, "\ua2f1": 645, "\ua79b\ua592": 645, "\ufbd5": 645, "\u04f5\u1f56\u31f6\ud7dc\u1904": 645, "\ua485\ua340": 645, "\ua417\ua4fa\u122e": 645, "\u1850\u00f0": 645, "\ufd56": 645, "\u2c38": 645, "\u0712": 645, "\ua667\u2d19": 645, "\ua1f5\u31a4\ua9e9\ufb64\u1e95": 645, "\uaa4b\u1f79\u1d43\ua515\u1b2f": 645, "\u1b19\ua81e\u0dae": 645, "\uffd6": 645, "\u1b0b\u2d4c\uaa1c\u2d18\ua8a5\u195f": 645, "\ua510\u015b\ufdf5": 645, "\ua52d": 645, "\ufb3e": 645, "\ua9a3\uabc7\uab42\u3132\ufc21": 645, "\ua131": 645, "\u0449\ua012": 645, "\u049f\ua651": 645, "\u0256\u056e": 645, "\ua36d\u17a1\u1d8a\u2c4f\u0a89": 645, "\u16e1": 645, "\ua72f": 645, "\u1baf": 645, "\ua02b\ufb50\ua0d5\ufe77": 645, "\ua4ee\u090f": 645, "\ua3f5\u013a\ua528\u0809": 645, "\u050b\uff6f\u1dbf\u0edc\u12be\u1f93\u18d2\u1620": 645, "\ufcd5\u3044": 645, "\u130f": 645, "\u2dc6\u2184\u2d0f\u2dbb": 645, "\u2d0c": 645, "\u1575\u0916\ua2c8\ua25c\ua893\u0225\u12ef\u1a16\u1bdf\u2d92\ua7a3\uaab5\ua3d7\ufda4\uabe2": 645, "\u0aa5": 645, "\u0225\ua9ac": 645, "\uab7d": 645, "\u1f71\ua2ea\u12f8": 645, "\u1e35\u02ad\u1306": 645, "\u128a": 645, "\u1dbc\u0573": 645, "\u1ff7\ua39f\ua8af\ua2ad\ua99b": 645, "\ua15a": 645, "\ua53c\ufca3\ua96c": 645, "\u043d": 645, "\u2ca3\ufd2a": 645, "q\uaaae\ufdf3": 645, "\ua69b\u0445\uaa00\u1fe2\u04ce": 645, "\u1c0c": 645, "\ufd1b\uff52": 645, "\ua1e6": 645, "\u195a": 645, "\u2d0a\u1b21\ua0b9\u0a0f": 645, "\u0525\u11ca\uff49\ufd6b": 645, "\u0e87": 645, "\u2c8b\u0211": 645, "\ufc6e\ua2d3": 645, "\u11cd": 645, "\u2d1d\u12af\u1459\ua3bd\u1144\u2d57\ua37c": 645, "\ua0fd": 645, "\u31b7\u31fc": 645, "\uab39": 645, "\u12da": 645, "\ua842\u0ea5": 645, "\ufc57": 645, "\u1eff\u2c79": 645, "\u1b26": 645, "\ua212\ua808": 645, "\u1679": 645, "\u1d5b\u1d73": 645, "\u0625\ua14e": 645, "\u15a3\u16f1\u12a1": 645, "\u05d5\u0d8c": 645, "\u138e\u03e3": 645, "\uff84\u0c39\u03b6": 645, "\ua898\u1638\u1cec\u1a2e": 645, "\u0c23\u04ca\u1891\ua17d\ufce3": 645, "\u0cb9": 645, "\ua51f\u11ce": 645, "\ufc3c\ua886\u0e1b\u0ca4\ua315\ufbe3\u1f53\u1164\u0291\uab31\u3176\u213c\ua915\u1da6": 645, "\u0457\u0958\u2d27": 645, "\uab4d": 645, "\u1278": 645, "\u15ef\u0217\u16d2\u12a2": 645, "\ua249\u2c50\ua44a": 645, "\u1ed9\ua2a5\u07cf\u16be": 645, "\u1bd5": 645, "\u2cd3\u0846\u174f\u308f": 645, "\ua7a1": 645, "\u0f5f\u117f": 645, "\u1384\ud7d5\ua163\u0683": 645, "\uabc0\u11e9\u1445": 645, "\u1415": 645, "\u1e17\u0815\u3122": 645, "\u14f9\u19bf": 645, "\u0aa8\ufbe9": 645, "\u12f5\u04b9\u111d\u19c5": 645, "\uffba\u0b16\ua1bb\u0507\u0240\ufd81\u0430": 645, "\u0cb0": 645, "\ua5b9\u1484": 645, "\u2d12\ufbaa\u306c": 645, "\u1ceb": 645, "\uaa20": 645, "\u1386": 645, "\ua1ef\ua653\u0135\u184a": 645, "\u15d8": 645, "\u0e23\ua2bd\ua96d": 645, "\u0e82": 645, "\u0584": 645, "\u11f3": 645, "\u1355\u3082": 645, "\u1f62": 645, "\ua5dc": 645, "\u1616": 645, "\u0451\u08ac\u1565": 645, "\ua9fc\ua5c9\ufdc7\ufca9": 645, "\uff67\u0c9d\uaa90\u16e8\u1d79\u0e26\u30dc\ua152\ufc48": 645, "\ua15b\uab97\u15a6": 645, "\u1586": 645, "\ua1c2\ua1f7": 645, "\ua2c6\u210e\ua124\u04df\u2d87\uff7c": 645, "\u11b7\u12ee\u14b8\u1f51\u1c07\u3121": 645, "\ua1b7": 645, "\u03e1\u2d5e\ua526\u1a42": 645, "\u01df\u1341": 645, "\ua1f6": 645, "\ua9a5\u1f77\u1c0b": 645, "\ua5ca\u10d9\u0576\u1d69\ua335\ua3e2\ua6bc\ua6d5\ua8fb": 645, "\u0b05\u0b2d\u03ca\u1ebf": 645, "\ufc3f\u1650\u1e91\u30e9\ua6d1\uaa0d\uff9a": 645, "\u188c\u1f44": 645, "\ufec4\u1b8f\u1bd2": 645, "\ua445\u0b9f\ua0a4\u00f3\u010f\uaaea": 645, "\u3096": 645, "\u0aa7\u0d61\u1304": 645, "\ufc06\ua20b": 645, "\ua15f\ua21f\ufe8d\u1234": 645, "\ua5ce\ua21a\u1173": 645, "\u1e0f\u1f43": 645, "\ua225\u0481": 645, "\u0778\u084b\u15ba\u1055\u1557\u1645\ua5fd": 645, "\u0138": 645, "\ua00c\u0495\ua3d3\u01f0": 645, "\ua282\ua73f": 645, "\ua327\uabd6\u3135\u14ef\u0111": 645, "\u2d00\u1d0c\ua520": 645, "\uff45\u10f4\u12fe": 645, "\uffb3\u1c77\uabdb\u15ce\u04c2\u0153\u1f32\u310e": 645, "\ufccc\ua17c": 645, "\ua115\u091f": 645, "\u2c5d\ua033": 645, "\u0250\ufc64": 645, "\u2d82": 645, "\u0994": 645, "\ua920\ufd09": 645, "\uaa66\u0d38\u0644": 645, "\u313f": 645, "\uff50": 645, "\ufecc\ua401\u012d": 645, "\uab2c": 645, "\u15c1": 645, "\u1314\u1a13": 645, "\u2db3\u30b0": 645, "\u154e\u17b2\u0296\u1d15": 645, "\ufcf8\u211c": 645, "\u0936\u151a": 645, "\u14ba\u021f\u1529": 645, "\u02b4\u105a": 645, "\u1d91\u09bd": 645, "\u1f81\u2dd3": 645, "\ua3da\ua617\u0f5c\ufdf9": 645, "\ua0cb\u2d02\u1e11": 645, "\ua88a\uaa75\u303c\u0586\u3035": 645, "\ua3c4\u14bd": 645, "\u025f\u1ea9\u12e6": 645, "\u0a9b\u03c0": 645, "\u0258": 645, "\u14de\u2c68": 645, "\ua843\ufee0\ufcf7\u044e\u1b1c": 645, "\ua289\ua027\u1155": 645, "\u12b4\u1b1d": 645, "\uaa45\ua9ae": 645, "\ua36e\u0435": 645, "\u025c\ufb36": 645, "\u06d2\uffa0\u00e5\u0cb7": 645, "\ua542": 645, "\ua74b\u140b\u3158": 645, "\ua538\u03bb\u12d2\u07d4\ufda7": 645, "\ua9cf\u0ec6\uaa13\u023f\ufcb4\ua367\u0e96\ua470\u020d": 645, "\u1f43\u3185\ua743": 645, "\ua1f9\u10dc\ufd32": 645, "\u112c\ua2be\u0d91": 645, "\ua985\u1d9d\u11ac\u30a3i": 645, "\u2da1": 645, "\u0572\ufdf4": 645, "\u0cb8\ufc86": 645, "\u1495\u0d22": 645, "\u1d6e\u1980": 645, "\u1900\u2c8f\ufb8e": 645, "\ufcdd\u18e6": 645, "\u1669\u0b14\u134c\u0199\u1e73\ua425\u0563\uaa40\u31f1": 645, "\u113f\u03cb\u04f1\u051d\u0284": 645, "\u1ff2\u0461\ua07e\u0a1e\u1686\uaa8b\uabb8\ua133": 645, "\ua99d\ua753\u1da9\ua28d\ua30c\u1d23\ufb5a\uaae5": 645, "\u0b2c\ufda8\ufb91": 645, "\ua757\u1e05": 645, "\u1691": 645, "\u027a\u069e": 645, "\ua464": 645, "\ua037\u01bb": 645, "\u0260\u2dbc\u1f65\ua8a8\u0439\u2c4e\u09ac\ua264\u1e11": 645, "\uaa7f": 645, "\ua1f1\u00e7\u097f": 645, "\uffcd\u1786\ua98a": 645, "\ua33f\ufb02\u079b\u162d\ua01f": 645, "\u2db5\u0c61": 645, "\u0c8e\ua5c6\u1f12": 645, "\u04eb\ud7eb\u0c06\u11df\u037d\u0d2a\u2092\u1e1b": 645, "\u01dc": 645, "\ua489\u0501": 645, "\uab04": 645, "\ufb27\u075b": 645, "\ufd5a\ua323\u03f5\ua6af\u062f\ua585\u163f\ua29b\ufc60": 645, "\ua543": 645, "\ua104\u0572\u037b\u03c1\ua580": 645, "\u16f5\u311d": 645, "\u2c65\u1b0e": 645, "\u08a2\ua39c\ufbed": 645, "\ua4f0\u01e7": 645, "\ua4d7\uaba7": 645, "\u1145\u1db0\u0c0f": 645, "\u1614": 645, "\uab65\ua994\ua036": 645, "\u11c0\ufb2f": 645, "\u0a87\u056d": 645, "\u057d": 645, "\u05f1\u1489": 645, "\u2c7d": 645, "\ua015": 645, "\u1862\u1ee3\u308d\ufca6": 645, "\u00e8\u0587": 645, "\u15cc\u12f4": 645, "\u1432\u1d6b\u1e29\u0446\ufc14": 645, "\u0ae0": 645, "\ua403\u1bde\u1fa2": 645, "\ufccb": 645, "\u1a3f\u0620": 645, "\ua81f\u1741": 645, "\ufc7e\ua2fc": 645, "\u0ec4": 645, "\ufec3": 645, "\ua051\ufe8c": 645, "\ud7f8\u3148": 645, "\u142f\u0c1c": 645, "\u1196\uff56\u02be": 645, "\ua66e\ufcad": 645, "\u0578": 645, "\u191d\uab06\u080f\u308b\u02c6\ufe7a\u1133\ufd6d\ua021\ua807\ufb6a\u0646\u0e95\u0475\u31b6\ua79d\u15c6": 645, "\ua176\u2133\u025c\u1e81": 645, "\u182e\ufea9": 645, "\ua226": 645, "\u1517\u1eab": 645, "\u15a1\u01b4": 645, "\ufb4f\u19a8\ua2cd": 645, "\uaa76\u2d47\u0977\ua882": 645, "\u0647\u1701\u188d": 645, "\u1e19\u31a6": 645, "\u307e\u0175\u16a7\u11a8\u132c": 645, "\uab8f\u0458": 645, "\ua03b\u1d0b\u1279\ua047\u0497\uff86": 645, "\ua1bc": 645, "\u11be": 645, "i\u0307\ua197\u31fd": 645, "\u0773\u2dd1\u0213\ua3a1\u1edb\u092e\u0ab3\ufc35\u317e\ua71b": 645, "\u167c\u09a3": 645, "\u0a36\ua050": 645, "\ua41b": 645, "\u2c56\ufe84\uabc9": 645, "\u1fe3": 645, "\u052b\ua3c8\u0137\ua89e\ua0e5\ufb5c\u2d08\u1696": 645, "\u09a6\ua2d9\u026e\u31f7\uff8c": 645, "\u03c1\ua343\ufd06": 645, "\ua32e": 645, "\ua81d\uffc2": 645, "\u1572": 645, "\u1903": 645, "\u305c\ua98f\ua08d": 645, "\uaa1e\ufd2e\u1834\ufef7\ua567\u0cde\ua534\u0e22\u0256\ua2f4\u04bb\ua305\u30be\ua683\uff7b\u0993\u0d31": 645, "\u1226": 645, "\ua93f": 645, "\ua518\u077a\u30b7\u3128": 645, "e\uff59\u0a05\u1fa6\u2c5c": 645, "\u2d83\u15ae": 645, "\u313d": 645, "\u167f": 645, "\u1b8b": 645, "\u2c45\u1646\u2c95\ua64d\u2d8e": 645, "\u1efd\u108e\u1e35\ua344": 645, "\ua380\u1790\ua0a1\u1418\ufb31": 645, "\ua661\u316e\uab96\ua246\ua51e": 645, "\u1fc7": 645, "\ufee4\u1868\u1fe5\ua33b\u1720": 645, "\u0a98\u1f27\u1c1e\ud7bd": 645, "\u0133\ua1b6\ufd68\ufebd": 645, "\ua3dc\u198e\u0649": 645, "\ufb97\u15a8": 645, "\ufc0b\u1340": 645, "\u2c36\ua85e\u1538": 645, "\u0a35\ua256\ufb4e": 645, "\ufc93\ufd04\u0755\u1ff6\u0bb4\uaa6f\ua271": 645, "k\u130d": 645, "\u2d81\u125b\ua028": 645, "\u12a5\u2dc8\u12c2\ufb7d": 645, "\u100e\u012f\u04af\u155c\u06ba": 645, "\ua6aa": 645, "\u0434": 645, "\u1d2c": 645, "\u079c\u1590": 645, "\ua645\u01fd\u0581\ua761": 645, "\ufd58\uaa60\u16bf\u2d51": 645, "\u318d\ua30f\u04fb": 645, "\u03e5\u06ee\u1902": 645, "\uabb5": 645, "\u172b\uab01\u099c": 645, "\u0d8b\ud7b7\ufcd7\ua000\ufe88\u03c6\u1e9d": 645, "\u2c38\ua12d\u1e45": 645, "\u2d91\ua547\ua128\u2c47": 645, "\u1d3e": 645, "\ua97b\u2c5e\u1ea5": 645, "\u312c": 645, "\uab73": 645, "\ufd88\u02b8": 645, "\u080c\ufb43": 645, "\u0bb9\u1230\u1a2b": 645, "\ua5de\u07e6\u014b": 645, "\ua6b3": 645, "\ua6cd\u0571\u1ef3": 645, "\u0238\u03b2": 645, "\uff8e\u0e97\u16e7\u057f\u103f": 645, "\u314d\ua1dd\ua011\ua769": 645, "\ufd1f\u0188\u1d36\u318c\u1240\u07a1\u07d1\ua116": 645, "\ud7e0\ua5c4\u1760": 645, "\u0cac\u1889\u160a": 645, "\u1d84\u1767\u1237": 645, "\u306a\u314a\ua158\ua6db": 645, "\u0ec3\u011b\ua6b2": 645, "\u18e0\u30da\u11e6\u1a29\u1c4e\u1f04": 645, "\u1d24": 645, "\ua35e\u184e": 645, "\u1022\ua31b\ua1f4\uff48": 645, "\ua295\ua126\u14fb": 645, "\ufdbd\u01ed": 645, "\u0465\u31b9\ufbea\u15e4\u044b\u101b\ua25e\ua4e8": 645, "\u1065\u1143\u1728": 645, "\u1fc6\u06b7\ua103\u3152\ua3dd": 645, "\u0813\u18c6\ufbf8\ua763l\uaa61": 645, "\u1981\u2c71\uab46": 645, "\u172d": 645, "\ua4f8\u0511\ufd26": 645, "\u311b\u01d6": 645, "\u12e2": 645, "\u1469\ua479": 645, "\u01cc\u1356\u11b4\u1648": 645, "\u1d03\u0125e": 645, "\ufd38\u0686": 645, "\ua516": 645, "\u1665": 645, "\u1821\u2dcc\ua2ce\u1f85": 645, "\uff66": 645, "\u1135\u1402": 645, "\u1357": 645, "\ufd27\u149e": 645, "\u1b90\u1e2f": 645, "\ufb93": 645, "\ua27a\u1018\u2d46\u317d\u2c4e\ua1e0\u115a\u0685\u16b4\u00e5\ua72f\u1e7f": 645, "\u09a5\u1988\u0d9f": 645, "\ufc8c\ua785\ufb96\u02e2": 645, "\u14c5": 645, "\ufead": 645, "\ufee6\u07a2": 645, "\uaa91": 645, "\ua107": 645, "\ua1b5": 645, "\u1913\u075c\uab2d\u098c": 645, "\ua96f\u1872": 645, "\u1006\uab5a\u1f36\ua23c": 645, "\u154b\u1129\ua039": 645, "\ua794\ua078": 645, "\u311a": 645, "\u150a\u01a8\u1277\ua432\u0cbd\u1582": 645, "\u1634": 645, "\ufed8": 645, "\u1003\u15e3\u0469\ua04b\u075a": 645, "\u1d99": 645, "\ufcc0\ua0cd": 645, "\u2d24": 645, "\u143e\u10d7\ua487\u12f7\u1f02\ua777": 645, "\u1d1d\u0f5a\u1431\u3179\ua68d": 645, "\u07a0\u1160": 645, "\u1653\ufe72": 645, "\uaa80": 645, "\u105c\u0149": 645, "\u06cb\ua1df\u16ac\u141e\u14a8": 645, "\u1ec5\ua61a\ufc23\u131e\u30c6\ua0f1\u1f26": 645, "\ua38c\ufc4e\u1eaf\u155a": 645, "\u00f1\u1fe4\u14bf\ufc91": 645, "\u014f\ua641": 645, "\u10db": 645, "\ua6b0\ua939\uaaa2": 645, "\u1181\u2da0": 645, "\u1e6f\ufefb": 645, "\u02b0\uffb7\u1429\u2cdd": 645, "\ua0b1\ufd03\u16b1\ua6ce\ua86e\ua48a\u0a2d\ua337\u020d": 645, "\ua378\u0906": 645, "\u0f8b\u1051\u1298\u0e9c\u1c1f\ua89c\u0257": 645, "\ua685\ua600\u195e\u30f0": 645, "\ua1e2\ufed1": 645, "\uab88": 645, "\u0d1f\ufc50\u3133": 645, "\u168b": 645, "\ua45a\u1c6e\ua1e9\ua3ed\ua925": 645, "\u1cf6": 645, "\ua356\ua0d1\u1205\u1338\ua767": 645, "\ua549\ua112": 645, "\ua222\u2c58\u14ab\u162e\u1f33": 645, "\u1f27": 645, "\u0627\u06bf\u0442\ua44b\u214e\u04dd\u0e9d": 645, "\u0221\ufb51\u3077\uaa88": 645, "\u18ee": 645, "\u2119\uabde\u03d6": 645, "\ua753\uff89": 645, "\ua557\uaa48\ua09e": 645, "\u11ee": 645, "\u1b28\ua277": 645, "\uaa0b": 645, "\u2c4c": 645, "\u1f86\u0d13": 645, "\ua5c8\ua737\u0a2b": 645, "\u1346\u1025": 645, "\u0786\u18ba": 645, "\u1548": 645, "\u30db\u18d6": 645, "\u1cf5\u14ec": 645, "\u080a\u0450\u14b6": 645, "\ua745": 645, "\u2ccd\u2c51\u16dd": 645, "\ua2df\uaaa9\u19c7\u0521": 645, "\u0a1c\u17ac\u1c66\u308e": 645, "\u0eaf\ua934\u1050\u18f2\u0ab2\u1795": 645, "\ua20e\u1b93": 645, "\u02b2\u1140\ua719\u0568\u0770\u2c91\u1297": 645, "\ufd37": 645, "\ua24f\ufe94\u1c17": 645, "\ua781": 645, "\ua5df\ua84b\ua3cc\u16aa\ufbb1": 645, "\u0939\u1e8f\u2d1f\u15b0p\u0a24": 645, "\u1550\ua5b8\ufea2\u04e7\u1169\ufb63\ufc8f": 645, "\u2cb7\u01f3\u11a3\ufcb9": 645, "\ua285": 645, "\ua5ba\u1842": 645, "\ufd3d": 645, "\u11e4\u1467\u0f6b\ua3be\u1189\ua476\uaa27\u05d6\u16b9\u30b8": 645, "\ua187\u0db9\u0d37\u15dc\u1744": 645, "\ua332": 645, "\u0a9c\u1d88": 645, "\ufba0": 645, "\ua3ca\u0517": 645, "\u1fc3\ufeb7": 645, "\ud7ba\u195c\ua333\ufdb4\u1ed1": 645, "\ufbd8": 645, "\ua2e5\ua397": 645, "\u113e\u1893\u1d07\ua4dc\u2dd2\u0292": 645, "\u14a3\u1ef9": 645, "\ufd12\u1b18": 645, "\u1e03\ua691\uaa9d\ua3c0\uabd4": 645, "\u1d2b\u025a": 645, "\ufb5b": 645, "\u1705": 645, "\ufccd": 645, "\u1649\ufb3a\u1894\uff41": 645, "\ua944": 645, "\u0637\u1746": 645, "\u3006\ua061": 645, "\u3147": 645, "\u1f71\u1e7d\ua3cb\u08a0\u1ee9\ufec8\u18c7\ua3ce\u077b\ua8f4": 645, "\ua58b": 645, "\ufbf3\u1f61\u00ff\u1b07": 645, "\u06be\u1d86\u1897": 645, "\uab7a": 645, "\ua517": 645, "\ufc52": 645, "\ua001\ua6dc\u0188\u0763\u0b19": 645, "\u1f82\u184b\ufe89": 645, "\ua4fb\ufd0c\u1a4b": 645, "\u2d0b\u09b6": 645, "\u2d5f\u2c99\ua531\u1c11": 645, "\u1770": 645, "\u1fd1\ua9b2\ua1c1\ua9b1": 645, "\u09af\u17aa": 645, "\u0771\ua4d0\u07db\u314c": 645, "\u0441\u30e0": 645, "\ufdb2": 645, "\u16b8\ua763": 645, "\ua4da\u2d37\ufbf4": 645, "\u0bb7\u1c6b\ufd2b\ua274\ua996": 645, "\u1d98\ufc6c\ua353\u0aa0\u19b3": 645, "\u18e7\u0d8d\u198a\u14d9\u072a": 645, "\ufb6c": 645, "\ua1be\ua384": 645, "\u07cb\u2ddd\ua29e": 645, "\u1593": 645, "\u0633": 645, "\u2dc9\u1470\u1bbc\u1a0a": 645, "\u1f07\uaa70": 645, "\ua3a4": 645, "\ua6e2": 645, "\u12f6": 645, "\u010d\ufb2a\ua30b": 645, "\u15aa\u1f41\uff55": 645, "\ua6dd\u1a0f\u1e33\ua5b0\ua55d\ua370\ua84c": 645, "\u1321\u010f": 645, "\u04b5": 645, "\u14a6\u1a43": 645, "\u163a\ufc33": 645, "\ua574\ua3d5": 645, "\ufec2\ua457\u30ab\u0259\u044f\u03ef": 645, "\u1884\u1eaf\ufb88\u1224": 645, "\u317b\ufb4b": 645, "\u31f9": 645, "\u31aa\ua084\u0dc1\u1854": 645, "\u1a02\u05d8\ua34c": 645, "\u04ef\ua559": 645, "\u1838\ua866\ufc9c\u0463": 645, "\u0a33\u2d86\ufcc4\u1a49\u095f\u30c4\u1f94\u14c3": 645, "\u3032\ufb03": 645, "\ua426\ua478\ufeba": 645, "\uffad\u170f\ua0e6": 645, "\u04ab": 645, "\ua78c\u1473\u1b11\u1e87": 645, "\u11ab\uab93\ua10f": 645, "\ua755\u051b\ufc15": 645, "\u0b1e": 645, "\u1916": 645, "\u0c89\u30d5": 645, "\u1e85\u097a\u1d02": 645, "\u2d04\ufbfd": 645, "\u0d28": 645, "\ufbaey": 645, "\u10ee\ua5eb": 645, "\u2d1d": 645, "\u0eb2\u2d23\u1702\ua26b\u3072": 645, "\u027d\u15dd": 645, "\u06bb": 645, "\ud7c5": 645, "\ua5ee": 645, "\u1f63": 645, "\u0aab": 645, "\u113b\u0436\u1964": 645, "\ua7f7\u15f4": 645, "\u0a21\u0443\u1440\u0e1d": 645, "\ufef0\u11a0": 645, "\u11e8\u1e79": 645, "\ufb7f\u0227": 645, "\ua1da\ua79f\u1e75": 645, "\u1690": 645, "\u1e3f\u3172\u1479\u30c9\ua552\u12fc\u1081\ua42a": 645, "\ufcba": 645, "\ua309": 645, "\ua293\u150e": 645, "\u2cb9\u1229\u2d85": 645, "\u1637\u0223": 645, "\u2db1\u3116": 645, "\u0e46": 645, "\u020f\u1d51\u0471": 645, "\u0dc3\u158f\ua182": 645, "\u07b1": 645, "\ua24d\ua783": 645, "\ua218\u12ae\u14a9\u067f": 645, "\ua230\u0cb3": 645, "\u1685": 645, "\u1b96\ufea1": 645, "\u1252": 645, "\ua972\ufd64\u2cc1\u03c7\u2097": 645, "\u048d\u0d30\u03df": 645, "\ua971x": 645, "\u1d59\u06aa\u0d7c\uff85\u14db": 645, "\ufdba": 645, "\u1ef5": 645, "\u06af\ua447": 645, "\u1f00": 645, "\u1bd6\u150c\u11e5": 645, "\u2cdf\ua597": 645, "\u1998\u0ec1": 645, "\ua5cf": 645, "\u1f67": 645, "\u2c32\u013e\u2c37\uabe0\u0157": 645, "\u1f77\ua812\u16f2\u1960": 645, "\ufb82\ufc4d": 645, "\u2096": 645, "\uaba0\ua77f\uff56\u03d9": 645, "\u1497\u1825": 645, "\ua977\u1ea1\u1832\ufb40": 645, "\ua5d7\uaadb\ua946": 645, "\ufd18\u1820\u2d67\u0641": 645, "\u12c4": 645, "\u1228\ua088\ua6bb\u00f9\u0499\u1139": 645, "\u1ecb\u1e63": 645, "\u10ff": 645, "\u1f92": 645, "\u1c16\ufd23": 645, "w\u1635\u307f\u2d06\u1e2f": 645, "\uaa23": 645, "\uffa7": 645, "\u068a": 645, "\u0569\u0561": 645, "\u1da5\u0469": 645, "\u03e9\u16d7": 645, "\u100b\u3165": 645, "\u172e\ua76d": 645, "\ua81b\ua44d\ua44f": 645, "\u2cd9": 645, "\u0247": 645, "\u1fb2": 645, "\u15fc": 645, "\ua0ac": 645, "\u129c\u1785\ua2f6\u178b\u1eb9\u1d54\u2115\ufd8c\ua118\ufc84": 645, "\ua65b\ua17e": 645, "\ua512\u0584": 645, "\u1182\u04af\u07e8\u30c5\u01d4": 645, "\u044c\u1161\uabb7\u0e41\u0697": 645, "\u11f0\u19c4": 645, "\ua6a9\ufc61\u0242\u0dad": 645, "\u1c02": 645, "\u3065\ufd82\u160f\u1708\ua023": 645, "\u02ce\ua1cf": 645, "\uab4e\u1e83": 645, "\ua6c8": 645, "\u144f": 645, "\ufb6b\uffda\ua5e0\u160c": 645, "\u1142": 645, "\u0199\u0810\u1bc2": 645, "\u0779\u1110": 645, "\u1a3c": 645, "\ufc92\ua691\u1bbf": 645, "\uffc6": 645, "\u1d00": 645, "\u1f60\ua9eb": 645, "\ufc87\u1f11\u0774": 645, "\u12a6\u147b": 645, "\u0814\u098b\u30e4": 645, "\u1336": 645, "\ua420": 645, "\u31f3": 645, "\ua1ad": 645, "\u1535": 645, "\u0169": 645, "\ua613\ufeb2\u01ff\u0280": 645, "\u0da7\u1839\u0105\u04c8\u1d61\uaa16\u2130\u12c9\u18d1\ufd87\uffaa\u18a3\ua206\u1eed\ud7be": 645, "\u0201\ua195\u1d27\u1627": 645, "\u0767\ua961": 645, "\u101f": 645, "\u0842\u1107": 645, "\ua558": 645, "\u1829\u0580\u0289\u06e6\u3050": 645, "\ua924\u028b\ufbe7\u3123\ua6a0": 645, "\u01d2\u1172\u1f50\ua0e8\ua2b7\u0517\uffc5": 645, "\u0729\ufedd": 645, "\ua844": 645, "\u1e61\ufdc1\ua23f\ua160\u1e27": 645, "\ua66b\ua37f\u011f": 645, "\u0c13\u16d1": 645, "\ufbe4\ua5bd\u10e5\ua00a": 645, "\u1c21\ua247": 645, "\u1c7b\ua99c\ua13d\u1d62": 645, "\u0b0a": 645, "\ua90a\u105b\u18ef\u08a7\u1452": 645, "\u19c6\u16f7\ua7f9\ua01c\ua324\u31af\ua602": 645, "\u07d2": 645, "\u1480\u153f\u1859\ua05d\u1a3b\u1c20\ufef6\uaa19\u0bd0\u0d88\uab79\u00f4\u0b38": 645, "\u1fd7\ua210\ua12c": 645, "\u012f\u153d\ua6ca\uaa42": 645, "\u2c5b\u03c6\u1e9a\u165c": 645, "\u2dde": 645, "\u0113": 645, "\ufc7d": 645, "\ua687": 645, "\u1eef\u1d12\u1b2d": 645, "\u07ce\ua147": 645, "\u143d\u08a3": 645, "\u1291": 645, "\u0806\u11c4\u0509\ua89b\ufbd7": 645, "\u06fa": 645, "a\uabbc\u01ce\ua4f1": 645, "\ufb1f\ua2c1": 645, "\ua341\ua809\u03b8\u1a2a": 645, "\ua463\uabbe\u1d5e": 645, "\u18ea": 645, "\u0491\ua5b3": 645, "\u142d\ua022\u0268\u057a\u0c93\u11c2": 645, "\u0980": 645, "\u0513\ua936\u1f73": 645, "\u1887\u098f\u1381\u30ac\u1d29\ua1ce": 645, "\u0636\u0119\uff6a": 645, "\u162b": 645, "\u211b\u1fb4\u0275\u03f2\ua4e0": 645, "\ufce4\ufb2c": 645, "m\u141d": 645, "\ua8a9\ua747\u1115\ufdfb\u1349\u18b2\ufb86": 645, "\u00ed\u1957": 645, "\ua034": 645, "\u14dc": 645, "\u15b7\u09e1\uaa72": 645, "\uabc6": 645, "\ufc6a": 645, "\ua884\u014f\u023c": 645, "\ufb6d": 645, "\ufe9b\u028f": 645, "\ufc7a": 645, "\ua80c\ua0c0": 645, "\ua0c5\u0159\u026f\ua71a\u112a\u2dc0\u0294": 645, "\ua3ee\ua86a\u01dc\ua992": 645, "\ua582\ua049\uab75\ua506\u1f45\u2090\u1e8b\u1fa0": 645, "\u076e": 645, "\u119f\u045b\u14fd\u1e37\ua374\u01ed": 645, "\u0e2d\u11d9\ua019\uab45\u0c96\u15b5": 645, "\u1917": 645, "\ua974": 645, "\uab9a\ua3c2\u3055\u30f4\ua2d8\u1970\ua329": 645, "\ua0a5\u075d\ua962": 645, "\u0251\u163c": 645, "\u1203\ufb9e": 645, "\u080b\u1c19\ua173": 645, "\ua48c": 645, "\u0d0a\u1dbd": 645, "\u1334": 645, "\ua7fe": 645, "\u2d14": 645, "\u1343\u15df\u1c1c\u2da4": 645, "\uaa84": 645, "\u19ba\u0272\u1ecf\u1308": 645, "\u3125\ua7a9\u0bae\u1481": 645, "\u12d1\ua042\ufb84\u07da\u10fa": 645, "\u0718": 645, "\u14e0\u1288\u1f12": 645, "\ua7a7\ua68b": 645, "\u16a1\u1f44": 645, "\u06a9\ua157\u18bf\ua110\ua185": 645, "\uaa9e\ua07c\u06b0\uab70\u2d25\u2cc9": 645, "\u30d9\ua7fa\u1fa3\uaa0c": 645, "\ua443\u01c9\u1112\u2d4e\u0165": 645, "\ufc78\ufec9\u1d89\u0e01": 645, "\u101d": 645, "\u126d": 645, "\u1f65": 645, "\u157f\u0151\u1610": 645, "\ua851\u2d8b\u3169\u0574\u152f": 645, "\u1d77\u1c62": 645, "\ua2dc": 645, "\ua01b\u1ee1": 645, "\ua539\uabda": 645, "\ufc80\u0d4e": 645, "\u117d": 645, "\ufd24": 645, "\u18de\u1cf3\u184c\u01f5\u2c6a\u04e9\u1007\u1b87\u1b95\u1d2a\ua6e4": 645, "\u095c\u3066\ua17b\u11aa": 645, "\ua3cd\uaa1a": 645, "\u11b3": 645, "\u1079\u151f": 645, "\u149b\ufee9\u1f26": 645, "\ufbe8\u1015\ufcde": 645, "\ufc76": 645, "\ufe98": 645, "\ufd31\u01eb": 645, "\u0566\u19be": 645, "\u1b2e\u1fc2\u1b9e": 645, "\u2ccd\ua74d\ua62b": 645, "\uff72\ua91b\ufe7f\ua993": 645, "\u0479": 645, "\ua191": 645, "\u0c15": 645, "\u2d84\ua151\ud7ed": 645, "\ufea3\u1d6c\u1347\ufb94\ua643\u16b2": 645, "\uab33": 645, "\ufbe1\u0cf2\ua984\ua755": 645, "\u2cb3": 645, "\ua42b": 645, "\uab49\u0c98": 645, "\ua6d7\u05de": 645, "\ua07a\ua852\u014d": 645, "\u168c\u2c9f": 645, "\u2c3f\u1414": 645, "\ua47c\u1609\ua997": 645, "\u0a91": 645, "\ufb69": 645, "\u113c\u0c86\u1e39": 645, "\ua0cc\u30cf\u1d5c\ufe8f\u16d5\u04d5\ua382": 645, "\ufd92\u2d89\ua8ab\u017e\u186c": 645, "\u044d": 645, "\u0c92\u01c6": 645, "\ua62a\ufb9a\u1792": 645, "\ua3b7\u00f9\u0dbb": 645, "\u2095": 645, "\u0b9c\u178f\u1117\u158d\u185e\ufee3\ufbff\u01cc\u057e": 645, "\u1000\u152b": 645, "\u3161": 645, "\u0677\ua270": 645, "\u0140\u1d28": 645, "\u1151\u1e49": 645, "\ua081\ufc68\u09b8\ua063\u1591\u3092\ufd62": 645, "\ua082": 645, "\ua16b\ua18a": 645, "\ua4d2": 645, "\u1ebd\ua51b": 645, "\ua3d9\u04f7\u052f\u0d8f": 645, "\ua35d\ua326": 645, "\u0583\u1d4c\u212c": 645, "\u02b5\u16b7": 645, "\u06e5\u1768\u1967\uaaf2\ua372": 645, "\u10d4": 645, "\ua593": 645, "\ufb75": 645, "\u04e5\u0282": 645, "\u0507\u30ed\u0263": 645, "\u06b1\u18c4": 645, "\ua56a\u04bf": 645, "\ua11f\ua354\u190e": 645, "\u1335\u3051": 645, "\ua057\ua39e": 645, "\ua57e\u0671\u0161\ua8ad\u0c9e\u0436": 645, "\ua1ba": 645, "\u1122": 645, "\u12b2\ua67f\u133d": 645, "\u043b\u1e2d\ua198": 645, "\ua9a4\uffaf": 645, "\u30b5\u023f": 645, "\u0758\u1a30\u0713\u15b8\u1f70": 645, "\uab13": 645, "\u1871\u051d\u16e3": 645, "\ufb8d\u1d3f": 645, "\u1b99": 645, "\ufb8b\u03c3\ua0a8": 645, "\u0c2d": 645, "\u1f7b\ufecf": 645, "\u0f4e": 645, "\ua81c": 645, "\ua503\ua76b": 645, "\u1907\uffb4": 645, "\ua0da\u0180\ua72b\uab12\u1524\ua857\u1675\u1626\u2c8d\u2cb7\ua6c9\ua11e": 645, "\u2c8d\u30ec\u14d6": 645, "\ua32f\u31a5\ua15d": 645, "\u1184\ua91a\uff58": 645, "\u1193\u18d8": 645, "\u04bd\ua144": 645, "\ufc03\u0e07\u01ab\u1435": 645, "\ua250\u1d3b\u1f64\u0453\u1f80\u0cab": 645, "\u025e": 645, "\u0645\u1625\ufc31\u0847\u1fa4": 645, "\u2ca1": 645, "\u0750\u2c50": 645, "\ufef4\uabc1": 645, "\ufee5\u18d4\uab40": 645, "\ua007\u2d23": 645, "\u1d7d\u0f00\u1906": 645, "\u02bc\ufcf3\u1707\u08a8\u0f62\u18c8\ua0c8\u1a38\ufcca\u02d0\uffa3\u04dd": 645, "\ufc01": 645, "\ua13f": 645, "\u167e": 645, "\u1d5a\u127e": 645, "\u164b\u2c93": 645, "\u08ae": 645, "\u304e\u079e\ua407\u31ff": 645, "\u0173\ua2a2\u0914\ua454\u0e88\u00ec": 645, "\u011f\u1455\ua441": 645, "\u15e5": 645, "\ua4f6": 645, "\ufed9\ua153\ufc20\ua6c6\u03eb": 645, "\u0175": 645, "\ua78e\ua91e\u01c6": 645, "\ua619": 645, "\u07e3\u304b": 645, "\ua573": 645, "\ua940\u128b\u0c30": 645, "\ufb58\u19a4": 645, "\u09b7": 645, "\u1b06": 645, "\u0456": 645, "\ua643\u1722": 645, "\u06b2\ufc22": 645, "\ua868\uab56\u06fc\u0a8d": 645, "\u1914": 645, "\u09a4\u1769": 645, "\u1606": 645, "\ua319": 645, "\ufb72": 645, "\uaa8d\u0e20\u138d": 645, "\u1a21": 645, "\u15d2\u1632\uffd2": 645, "\u12de\u1d42": 645, "\ua06a\u1523\u2d1b\ua89d": 645, "\ua19d\ua54b": 645, "\uff57\u165f\u11cc": 645, "\u1427\u1525": 645, "\ua44c": 645, "\u0934\u0d95": 645, "\u078f": 645, "\ua1ff\u2c56\ufc4a\u107a\u1e97\u0e94": 645, "\u0ea2\u3151": 645, "\u0437\u056a\u09e0": 645, "\u1f74": 645, "\uaa63": 645, "\ufdae\u010b": 645, "\ua883\uff9fp": 645, "\u03ce\u05f0": 645, "\u1bda": 645, "\u1e41\u211d": 645, "\u1528": 645, "\ud7cc": 645, "\ua2f5\u18b6\uaa4a\ua5b5\u1e25": 645, "\u1483\u0b2e\u06ce\ua364\uffcb\u0998": 645, "\uabcb\u0edf\ud7e9\ufc7f": 645, "\uff77\u0a19\ua359\ua3ab\u062c": 645, "\u1d82\u10eb": 645, "\u00ba\ua733\u0252\ua2f3\ua428": 645, "\u1874\u2d22\u1e45\u1c01\u30f2\u2c5a\u1e29": 645, "\ufd19\u2d0a\ua473": 645, "\u178c": 645, "\u0d60\u1d0d": 645, "\u2cdf\u0db0\u1670\u1954": 645, "\ua68d\u18ca\u0797\ua69b\u188a": 645, "\ufe83\u1101\u0432\u159e": 645, "\u146a\u0267\ua279\u0c35\u0242\u016f": 645, "\ufc25\u1e6d": 645, "\u0c0e\u11ef\ufba7": 645, "\u0148\u19b9": 645, "\ua3ec\ua4eb": 645, "\u016d": 645, "\u2c34\ua169\ufd39\u31fa": 645, "\u168d\u3157\u04ef\u15cd": 645, "\uff9d\ua859\u0dab\ufd53": 645, "\u047f\u0205\u0751\u11f8\ua46a": 645, "\ufb48\u148a\u1910\u1e3b\u2c59\ua0a0\u1443": 645, "\ua26d": 645, "\u318a\ua245\u03d1": 645, "\u14cf\uaaa8\u097b\uff58\u07d5": 645, "\ua1e7": 645, "\u078d\u0f68\u1c0e\ua481": 645, "\ua64d\ua91d\ufbda\u1e61": 645, "\ufd7f\u076f\u0ab9": 645, "\ufb83\u1da2\u2da9\u2c37\u18bd\u0264\u1027\u1e5d": 645, "\u04c4\u1703\uaa62\u09ad\ua261\u1253\u1639": 645, "\u0db7\u0177": 645, "\u0167": 645, "\ua062": 645, "\u107d\u0926\uaadd\u1bc8\u2d65": 645, "\u03cc\ufdfa": 645, "\u15ac\ua1ac": 645, "\ua390": 645, "\u0a1f\ua429\ufc2e\u1e2d\u0144\u2d16\u14c4\u1e8d": 645, "\u047d\ua6cf\u0973": 645, "\u0d16\u1313\ua46c": 645, "\u06b9\uaa11\u08a1\u0d15": 645, "\ua0fe": 645, "\ufea7\u1202\u0278": 645, "\ua003\u11a2": 645, "\u0716\u03e5\u1a46\u213f": 645, "\ua5d8\uab21\ua8a4\uaae6": 645, "\ua608": 645, "\u0e44\u0938\u0432\u1300\ua76b": 645, "\u18d5\ufcc7\ua029": 645, "\u03b1\u0dc2": 645, "\ufd52\u1ee5\u12dc": 645, "\u1124": 645, "\u14df\u0f60\u11af": 645, "\u013c": 645, "\uab15": 645, "\u0c12": 645, "\ua075\u1333\u131f": 645, "\u1a0d\u111e": 645, "\uaaa5\ua969": 645, "\uab64\u120a": 645, "\u0988\u0209\ua10e\ua52f\u1551\u1ed1\u149f\u1126\u0e0a": 645, "\u1a4e\u110c": 645, "\u18bb\u116f\u199f": 645, "\uab80": 645, "\ua449\u0575\ua596\u121c": 645, "\uff53": 645, "\ua3f3": 645, "\u2c3e": 645, "\ufc65\u1999\u30f5": 645, "\ua35f\u0c27": 645, "\ua102": 645, "\u0789\ua10c\u0275": 645, "\u0a9f": 645, "\u0912": 645, "\u2ccb": 645, "\ua80e": 645, "\ufecb\ua9b0\u1b4b\ua988": 645, "\u12ba\u0192\u15af\u06c5\u1687\u078a\u1125": 645, "\uffc7": 645, "\ua6de\ua12a": 645, "\u1406\u1a45": 645, "\ua145\ufd8d\u310f\u15f3\ua3e1": 645, "\ua9a1\ua04c\u17ad": 645, "\ufb68\u10d6\u022b\u110b": 645, "\ua05c": 645, "\u1412\u120e\u1512": 645, "\ua458": 645, "\u1078": 645, "\ua9fb\u16c5": 645, "\u0439\u01e5\u0db6\uab78": 645, "\ufcaa\u01d4": 645, "\u1258\u0798\ua0bb": 645, "\u100f\u1ed9\u0e02": 645, "\ua37b": 645, "\u1f45": 645, "\u0a32": 645, "\u01c2\u1763\u19c2\u153a\ua18e": 645, "\u04f1\u1952": 645, "\u04b3\ua810\uffa8\ua433": 645, "\ufd60": 645, "\u1332": 645, "\u30a7\ufb87": 645, "\ua8a6\u1380\u0447": 645, "\u1486": 645, "\ud7b1": 645, "\u2c39": 645, "\u07e1": 645, "\u3143": 645, "\u1be3\u16a8\u076c\u1d04\u15f2\u10dd\u017a\ua005\u131a\u16c4\uabc2\u18f4": 645, "\ua53f\ufb26": 645, "\u1ed3": 645, "\u057a\ua586\u1e53\u3042": 645, "\u1578": 645, "\u3186\ua9ec\u0f64": 645, "\ufc13\ufd10": 645, "\u15e6\u1f72\u1607\u14b9": 645, "\u019a\u071d\u3063\ua683\u2c68\u18f1": 645, "\u1bba": 645, "\u2da6\u1b23": 645, "\u0856": 645, "\u11cb\u15c9": 645, "\ua00f\ufef1\u022b\u0576": 645, "\u00e9\u0570\u1f96": 645, "\u1433\uab9e\u1d94": 645, "\u2ccb\u2ca5": 645, "\u127f\u191e": 645, "\ufe73\u2ce1": 645, "\ua2fe\u2110": 645, "\u2c49\u14e2\u0b85": 645, "\u1f04": 645, "\u161f": 645, "\u013e": 645, "\u06ae": 645, "\ua5cc\ua69c\u0586": 645, "\u2137\u06d3": 645, "\u10d3": 645, "\u1f51\u029f\u0b24\u1251\u0269\u1d48\u2093\u305b\ua778\u0151": 645, "\ua1d1\u1d6f\ufe7d\u0448\uffbd\u072e\ua346": 645, "\ud7b3\ua772\u1db2\ua466\ua1fc\ufcc8\u028a\u1ea7": 645, "\u1b22\ua26c\u1888": 645, "\u12db": 645, "\ua505\uaabc\u1505\u143a\u1539": 645, "_\u160e\u2cd1\u3073": 645, "\ua58a\ufd9d": 645, "\u0d08\ufb24\u1b49": 645, "\ufd6c\ufd9c\uab26\u021d\ua026\u044c": 645, "\ua6d0\u1bbd\ua0ba\ua739\u16c8": 645, "\ufbdb\u3052": 645, "\u0909\u0bb0": 645, "\ufcc3": 645, "\u1179\u1530\u1f95": 645, "\ua381": 645, "\u0c1a": 645, "\ua978\ufcf2\u0d0e\u02b9": 645, "\u110a\uff83\u07d7": 645, "\ua8b3\ua569": 645, "\u1748\ua241": 645, "\ufcf6\u01d0\u15d4\u162c\u1ed5\ufe8a\u0142\ua0f4": 645, "\u068d\u1324\u1e07": 645, "\u0d17\u0f6c\ufc56\ua93c": 645, "\u30d6": 645, "\u1f94\ua143\u1f30\u03fc\u3173\ud7f1\u1640\u0d7f\u2c31b": 645, "\ua4f2\u0da2\u1579\u2dcd\u313e\u04fd\u06c6\u1950": 645, "\ua697": 645, "\ufeef\ua393": 645, "\ua065\ua148\uab94\ua40e\u1876\u1605\u0857": 645, "\ufe86\ufd6a": 645, "\u1283\u2c55\ua86c": 645, "\ua2da\u0960\u2c57\ufd11": 645, "\u2dae\u1fe6\ua42d\u046b": 645, "\ua6a4\u062e": 645, "\ufb80": 645, "\u10f7": 645, "\u06bc\u1965\ua06c\ua0c3\ua5fb\u05dc": 645, "\u1441\ud7d3\u0c24\u0761": 645, "\u131b\ua5ac": 645, "\ufdf6\u11bf\uff4c": 645, "\u043a": 645, "\u2c32": 645, "\u1782": 645, "\u0eae": 645, "\uab8d": 645, "\uff95": 645, "\uab87\ua2ed": 645, "\u0b9a": 645, "\ua2c3": 645, "\u0ca8\ua1af\uff4d": 645, "\ua845\u0e29\u1fc3\u3068\u1e8b\u2d01": 645, "\u316c\u062d": 645, "\u049f": 645, "\ua523": 645, "\ua2f8": 645, "\ua156\u00e4\u0223\ua255\ufdc5\u2dbe\u164a": 645, "\uabca\ufb44\ufda9": 645, "\ua801": 645, "\ua513\uab0d\u17a3\u30bd\u0254\u14b5": 645, "\u0a09\uab3b\ua3c1\u1fb7\u0262\u183a\u188b": 645, "\u2c3b\ua29d\ua451\u1ba0\u0c34": 645, "\u092b": 645, "\u056e\u025b\u1eb5\u14f0\u1245": 645, "\u0796\u1545\u2cbd\u179a\u2cb3": 645, "\ua1ab\ua86f\u0f67\ufca1": 645, "\ua899\u03b4\u16bc": 645, "\ua890\u1f80": 645, "\ufc5e\u0787\u0213": 645, "\u0565": 645, "\u15ed\uaa21": 645, "\u1420": 645, "\u2d8f\ua1fd": 645, "\ufe82": 645, "\u0b0b\u1c0a\ua2f0": 645, "\u1e57": 645, "\uab8e": 645, "\u0e30\ud7fa": 645, "\ufdbe\ufe90\u03b5\ua723\ua729": 645, "\u1601\u0b26\u0452\ufc1f\u0499\u12a7": 645, "\u1e23": 645, "\ua930\u167a": 645, "\u157e": 645, "\ua38d\u022d\u0c38": 645, "\u1864\u2d40\ua6c0\ufd98\u1c6d\u02af\u0251\u1672": 645, "\u2c91\u0aaa": 645, "\u0ad0": 645, "\ufbdd": 645, "\u1edd\ua435\ufc59": 645, "\u01a1\ua13a": 645, "\ud7d8": 645, "\u1114\u0995": 645, "\ua31f\ua4e3": 645, "\ufeee\u2d2d": 645, "\ufc17\u08a4\u1457\u1f35\u0525": 645, "\ufc54": 645, "\ua43b\u03db\u04fd": 645, "\ua6b6": 645, "\ua475": 645, "\ua0e2": 645, "\u020f": 645, "\ua1d6\u1a4a\uab3d": 645, "\ua3b3\u31ac\u0d34\u1543\u1971": 645, "\ua453\u01a5\u016b": 645, "\u04a3\u1d4a\ua3ef\ud7b8\uaa6b\ua793\ua038": 645, "\u30e8\u2cc3": 645, "\ua502\u1c73\ufc72": 645, "\uabb3\ufd22\ufb98\ua3db\ua749": 645, "\ua657\u190d\ufef5\ufb46": 645, "\u02a5\u1359": 645, "\ua0e9\u15a7\ua164\u1d8c": 645, "\ua5e9\u03e9\u1860": 645, "\ua0ab": 645, "\ua242f\ufb90": 645, "\u0d14": 645, "\u02a3": 645, "\u1521": 645, "\u196d\u1462\ua610\u024d\ua383\u3166\ua73b\u0dc4": 645, "\ua41d\uaae3\u122f": 645, "\ua735\u0e19": 645, "\u1281\u1658": 645, "\uffdc": 645, "\u0b17": 645, "\u31b1\ua58e\u04b3": 645, "\u069b\u1515\u2d07": 645, "\u12ed\u132d\ua775\u120f": 645, "\u17a2\u019e": 645, "\u1f76": 645, "\u30d8\ua804\u1eb9\u31f5\u1d32\u0250\uaa64\u1677": 645, "\u15a4\u11d6\u0f49\ufd57\u19aa\u1a05\ua0bf": 645, "\u0689\u155b\ud7db\u0111": 645, "\u0d1b\ua685\u19c3\u1509\u02c0\u028a\u028d\u0849": 645, "\ua5d3": 645, "\u0571\u0e2a\u06cc": 645, "\u1fb6\u317a": 645, "\u2d54\u126e": 645, "\u027c\ua01a": 645, "\u1358\u1c15": 645, "\ua3c3": 645, "\u0233\u1f70\u30fc": 645, "\ua208": 645, "\u1742\u2d21\u10d2": 645, "\u0b18\u0782\ua0ec\ufc8a\u0f54\u2d94\u0c20": 645, "\u2d1e\ua61f\u0972\ua56d\u2c53": 645, "\ua480\u18d9\ufefa": 645, "\ua42e\ufeed\u1e7b": 645, "\u1d1b\ua16c\ua96e": 645, "\u1676": 645, "\u15d0": 645, "\ufd0d\u1994\u1a25\u1e1d": 645, "\u1799": 645, "\u2c34": 645, "\ufb7a": 645, "\u1e0d": 645, "\u1502\ua0b6": 645, "\ua1b3\ud7ec\ua04e": 645, "\uaa22\u1c65": 645, "\u1401": 645, "\u18db": 645, "\ua314\uaa8e\u03ce": 645, "\u0a59\ua848\ua88e\uaa05": 645, "\ufc8e\u11e2": 645, "\ua9aa": 645, "\u309e\u1268\ufe97": 645, "\ufb47\ua3b0\u0146": 645, "\u10f8": 645, "\u1511\u1d1e\u1e43": 645, "\ufceb\u1191\u154f\ufeab": 645, "\ua79b": 645, "\u0567": 645, "\u130b\u1a11\ufea5\uff4b\u06bd\u157d": 645, "\u31f2\ua360": 645, "\u01c9\u0529\ua002": 645, "\ua6be\u1296\u119d": 645, "\uab47\u0239": 645, "\uff43\u2c3c\u1c00\u152c": 645, "\u30ef": 645, "\uff8f\u12cd": 645, "\ua6ae\u078c": 645, "\u2d1c\u01a8\ua681\u0d2d": 645, "\ufc5a": 645, "\ua302\ua5bc\ufc81": 645, "\u12eb\ua22c\u0ab0\u2d60\ua52a\ua1ed\u04a1": 645, "\ua369\ua64b": 645, "\u1b1e\ua718\ua1f8\u16e5\u1029\u12e5": 645, "\u2d45\u2ca9\u2c48": 645, "\ufca8": 645, "\u1a3d\u0a9d": 645, "\ua0e4\u1d5d\ua149": 645, "\u2cc5\ua055": 645, "\uaa87\u0ba4\u04d3\u0192\u1b2a\u2c30": 645, "\u2c81": 645, "\u174b\u2cab\u15e7": 645, "\ua66d\ua72d\ua57d\u057b": 645, "\u1522\u016b": 645, "\uaa9b\u0185\u14ed\u121b": 645, "\u0f58\u14a1\u1272": 645, "\uabac\u0673\u1b4a\u1d49": 645, "\ufbd9\ufd9e": 645, "\u1e05": 645, "\u04e3\u1561\u027f\u2c61\u1562": 645, "\u037d\ufd7a\u0185\u0240\ufb20\ua1c5": 645, "\u0f50": 645, "\ua645\u0681": 645, "\ua00e\u0505\u0e9e\ufb41\u12ca": 645, "\u12e4": 645, "\ufd35\u2c83\u03f0": 645, "\u0c2f": 645, "\ua07b\ua65f\uff41\u31a2": 645, "\ufc67": 645, "\uabaf\u1b15\ua090\u1558": 645, "\u01ad\u0b5f": 645, "\u116a": 645, "\u1599\u1ea3": 645, "\ua2b6": 645, "\ufd08": 645, "\u03ca\ua202\ufd76\u0d10\ufe7e\ufced\u11ed\u1f07": 645, "\ua9a9\u1e49\u1d40\u0961\u06b6\u0e24": 645, "\ua098\u1f61\u18b5": 645, "\uff46\u05f2": 645, "\ua60a\u0b89\ufc28": 645, "\u2db8": 645, "\ua995": 645, "\u0121": 645, "\u0505": 645, "\u2d24\u1a3a": 645, "\ua657\ua803\ufbd6\u1491": 645, "\u1540": 645, "\u1a34\u020b": 645, "\u2d34\u3070\ua89f\u1f91": 645, "\ua90b\u0c85\u01eb": 645, "\ud7e7\u1583\u01a3": 645, "\uffae": 645, "\ua35b\u1f64": 645, "\u1077\u16d8": 645, "\u0129\u1694": 645, "\uaa09": 645, "\ufd70\ufeea\u0aac": 645, "\ufd00\u1636\uff4d": 645, "\u0123\ua46b\ua3e7\u1857\u1cef\ua584\u2d93u\u1152": 645, "\u15a9": 645, "\ud7c0\ua421\ua5f8": 645, "\u1fa6\ua013\u0103\u03d3\u0281": 645, "\uff97\u026f": 645, "\u014b\ufd2c\u1f7a": 645, "\u2dbd\u017c\u1631": 645, "\u0219": 645, "\ua979\uab16\u1e51": 645, "\u1a26\ua286\u142c": 645, "\u056d\u1419\u188e\u0437": 645, "\u0db1\ua75d\u1602\u043a\u095e\u1655": 645, "\u0288": 645, "\ua540": 645, "\ufd0f": 645, "\u138f\u1880": 645, "\ua328\ufe87": 645, "\u189b\u0a86\u1ec5\u0eaa": 645, "\ufcd9\ufd94": 645, "\u052b\u307d": 645, "\u0159\u19a0": 645, "\u30d1\u0475\u1019\ua154\ua85f": 645, "\u0d96": 645, "\u10e6\u15fd\ufcee\u15c7\u3087": 645, "\ua1a4": 645, "\uff8d\ua213": 645, "\ua887\ud7f3\u14c8\u0801\ua3fb\ua13b": 645, "\u04b9\ua488\u186f": 645, "\u045f": 645, "\u210b\u1824": 645, "\u06d5\u04ed": 645, "\ua2e2\ua5a7\u3064": 645, "\u019b": 645, "\u0a25": 645, "\ufc94\ua73d": 645, "\ufce5\ufcce\ufc74": 645, "\u1168\ua548\u1d6dm\u1510\ua60b\u3079": 645, "\u1623\ufbec\u210d\ua140\u0c10\u11c9": 645, "\u3167\ua5f3\u1246\ua053\u1624\ufdb5\u2cbb\u0272\uaab9\ua519\ua533\ua577": 645, "\ua7fb": 645, "\u14a0\u165b": 645, "\u2d41": 645, "\ua34f\ua310\u1351\u1f11\u2ddb": 645, "\ua24e\ufb55": 645, "\uabc8n\u1176\uff98\u3181": 645, "\u14ac\u01ddz\ua23e\uff6b": 645, "\u00e3\ua159": 645, "\ua0ae\ua532\u0628\ufc1b\u01e5": 645, "\u1206\u15a5\ua03e\ua2a3": 645, "\u142b\ua0d3": 645, "\ufd72\u18cb\u0195": 645, "\ua897": 645, "\u017f\u1247\u0ab6\u0b92": 645, "\u0501": 645, "\u12b5\u2d10": 645, "\u1a10": 645, "\ua990\u0a8b\u1153\ua3bc\u165d\u04d7": 645, "\u0563\u18ce\u07e5\u30a9": 645, "\u03d0\ua262": 645, "\ua8f5\ua395\u06ad\ufb79\ua5d5": 645, "\ua964": 645, "\u010b\u0e04\ufc39": 645, "\u1641\u1b33": 645, "\u1337": 645, "\u176e": 645, "\ua5aa\u2d16\u1005\ua121": 645, "\u12cf\u14ae": 645, "\ua427\ufba3\ua345\ua469\u1a01\u1231": 645, "\u0710\u0c2b": 645, "\u1f35": 645, "\u112e\ua751\u1e69": 645, "\u10fc\uab2e\u1855\u02e1\u0ca1\u0da4": 645, "\u30bb\u0756\u0ce1": 645, "\u013a\ua75f": 645, "\u2cc5": 645, "\ua9af\u1c7c\u30b1\u1269": 645, "\u146c": 645, "\u2d6f\ua894": 645, "\ua3d4\ua211\u1f78\u105d": 645, "\u2c3c\u1262": 645, "\u1149": 645, "\u045f\u0229": 645, "\ua55e": 645, "\ua205": 645, "\u126b\u1d31": 645, "\u152e": 645, "\u199d": 645, "\u1749\u2c89\ufbf1": 645, "\ua5e2\uaba3": 645, "\u1eb1\u2ca1\uab2a\ufc1d\u1f05": 645, "\u084a\u16f4\ufcd6\u1d83\ua291": 645, "\uff80\ua54a\ua59a\ua47a\ufebe\u124a": 645, "\u1f32": 645, "\u051b\uffb1\uab52\u1080\ua251\u0377\ua03d\u176c\u066f\u10f0\u1118\u1bc9\ufbee": 645, "\ufc1e": 645, "\ua08b": 645, "\ua26f\u0845\ua546\u024b": 645, "\ua409\ufb4a\u0c95": 645, "\ua2f7\ua1cb\u1984\ua09c": 645, "\ufe96t\u063d\u183e\u1ef1\u1d9f\u1576\ua854\ua966\ufbe5\u3107\ua50e": 645, "\ua0fb\u1995\u0720": 645, "h\u1f55\u0f6a\u2d1b\u05da": 645, "\uab5c\ufb89\u1485": 645, "\u0b27\u02c8\u0c26\ud7e1\u110d": 645, "\u0c59\ua3a0\u2ce3\u18bc": 645, "\ua1e5": 645, "\ufc05\ua5ad": 645, "\u077d\u1c6c\u1e65": 645, "\u1788": 645, "\ua914\u03d7": 645, "\uaa69": 645, "\u0211\ufb62": 645, "punct_regex": 645, "pup_numb": 645, "pup_punct": 645, "pup_symbol": 645, "symbol_regex": 645, "western_lang": 645, "johann": 646, "bach": 646, "sent_detector": 646, "onward": [646, 799], "unsuit": 646, "hyper": [646, 803], "tibor": 646, "strunk": 646, "485": 646, "punktlanguagevar": [646, 796], "internal_punctu": 646, "period_context_r": 646, "re_boundary_realign": 646, "realign": 646, "sent_end_char": 646, "abbrev_typ": 646, "add_ortho_context": 646, "clear_abbrev": 646, "clear_colloc": 646, "clear_ortho_context": 646, "clear_sent_start": 646, "ortho_context": 646, "orthograph": 646, "sent_start": 646, "abbr": [646, 706, 715, 722], "ellipsi": [646, 680, 681], "first_cas": 646, "first_low": 646, "first_upp": 646, "is_alpha": 646, "is_ellipsi": 646, "is_initi": 646, "is_non_punct": 646, "is_numb": 646, "linestart": 646, "parastart": 646, "period_fin": 646, "sentbreak": 646, "type_no_period": 646, "type_no_sentperiod": 646, "abbrev_backoff": 646, "mikheev": 646, "ignore_abbrev_penalti": 646, "disadvantag": 646, "include_abbrev_colloc": 646, "Such": 646, "starter": 646, "include_all_colloc": 646, "ordin": 646, "min_colloc_freq": 646, "finalize_train": 646, "find_abbrev_typ": 646, "freq_threshold": 646, "ortho_thresh": 646, "type_thresh": 646, "colloc_thr": 646, "sentstart_thresh": 646, "get_param": 646, "delai": [646, 739], "train_token": 646, "tok_cl": 646, "train_cl": 646, "capword_token": 647, "regexp_token": [647, 796], "blankline_token": 647, "repptoken": 649, "sexprtoken": [651, 652], "sexpr_token": 651, "chartoken": 653, "spacetoken": 653, "line_token": 653, "jesperson": 654, "judg": [654, 796], "lip": 654, "trough": 654, "sonority_hiearchi": 654, "importantli": [654, 681], "stanfordtoken": 655, "ptbtoken": 655, "stanfordsegment": [656, 808], "texttilingtoken": 657, "tokensequ": 657, "wrdindex_list": 657, "original_length": 657, "tokentablefield": 657, "first_po": 657, "ts_occur": 657, "total_count": 657, "par_count": 657, "last_par": 657, "last_tok_seq": 657, "window_len": 657, "convolut": [657, 703], "transient": 657, "han": 657, "blackman": 657, "linspac": 657, "sin": 657, "randn": 657, "convolv": 657, "lfilter": 657, "persian": 658, "tajik": 658, "dehdari": 658, "neurophysiolog": 658, "columbu": 658, "oh": [658, 753], "ohio": 658, "toktoktoken": [658, 808], "sed": 659, "mcintyr": 659, "cjkchar": 660, "cjk": 660, "basic_multilingual_plan": 660, "l309": 660, "cjk_compatibility_form": 660, "65072": 660, "65103": 660, "cjk_compatibility_ideograph": 660, "63744": 660, "64255": 660, "cjk_radic": 660, "11904": 660, "42191": 660, "hangul_jamo": 660, "4352": 660, "4607": 660, "hangul_syl": 660, "44032": 660, "55215": 660, "katakana_hangul_halfwidth": 660, "65381": 660, "65500": 660, "phags_pa": 660, "43072": 660, "43135": 660, "supplementary_ideographic_plan": 660, "131072": 660, "196607": 660, "plane": [660, 796], "petersburg": [660, 796], "sinai": [660, 796], "desert": [660, 796], "sharm": [660, 796], "sheikh": [660, 796], "saturdai": [660, 759, 796], "21": [660, 669, 679, 686, 689, 753, 759, 774, 781, 784, 795, 796, 803], "83": [660, 759, 791, 796], "89": [660, 685, 759, 795, 796], "90": [660, 759, 786, 787, 791, 796], "98": [660, 784, 796], "119": [660, 757, 796], "123": [660, 766, 780, 796, 802], "131": [660, 796], "is_cjk": 660, "regexp_span_token": 660, "spans_to_rel": 660, "string_span_token": 660, "xml_escap": 660, "sax": 660, "saxutil": 660, "input_str": 660, "expected_output": 660, "xml_unescap": 660, "humanli": 660, "unescap": 660, "standardformat": [663, 665, 666], "sfm_file": [663, 664, 665, 666], "open_str": [663, 664, 665, 666], "raw_field": [663, 664, 665, 666], "linebreak": [663, 664, 665, 666], "toolboxdata": 663, "toolboxset": 663, "_elementinterfac": [663, 666, 742], "add_blank_lin": 663, "blanks_befor": 663, "blanks_between": 663, "subel": 663, "blank_befor": 663, "elem": [663, 742], "add_default_field": 663, "default_field": 663, "remove_blank": 663, "sort_field": 663, "field_ord": 663, "to_settings_str": 663, "to_sfm_str": 663, "prone": 667, "algnsent": [668, 679], "hau": [668, 671, 672, 673, 674, 675, 679, 690, 691, 692, 693, 694, 701, 798], "comtran": [668, 679, 798], "weshalb": [668, 679], "sollten": [668, 679], "eu": [668, 679, 759, 785, 803], "arm": [668, 679], "words_index": [668, 679], "mots_index": [668, 679], "invert": [668, 669, 679, 742, 798], "direction": [668, 679], "frozenset": [669, 679], "issubset": [669, 679], "giza": [669, 679, 694], "isdisjoint": 669, "symmetric_differ": 669, "min_prob": [670, 671, 672, 673, 674, 675, 695], "sentence_aligned_corpu": [670, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 695], "reset_prob": [670, 671, 672, 673, 674, 675, 692, 693, 694, 695], "set_uniform_prob": [670, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 695], "accordingli": [670, 671, 672, 673, 690, 691, 692, 695, 746, 786], "init_vocab": [670, 671, 672, 673, 674, 675, 695], "sentence_pair": [670, 671, 672, 673, 674, 675, 690, 691, 694, 695], "peg": [670, 671, 672, 673, 674, 675, 694, 695], "stuck": [670, 671, 672, 673, 674, 675, 694, 695], "maxima": [670, 671, 672, 673, 674, 695], "alignmentinfo": [670, 671, 672, 673, 674, 675, 694, 695], "best_model2_align": [670, 671, 672, 673, 674, 675, 695], "j_peg": [670, 671, 672, 673, 674, 675, 694, 695], "i_peg": [670, 671, 672, 673, 674, 675, 695], "hillclimb": [670, 671, 672, 673, 674, 675, 694, 695], "alignment_info": [670, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 695], "maximize_lexical_translation_prob": [670, 671, 672, 673, 674, 675, 695], "maximize_fertility_prob": [670, 671, 672, 673, 674, 675, 695], "maximize_null_generation_prob": [670, 671, 672, 673, 674, 675, 695], "prob_of_align": [670, 671, 672, 673, 674, 675, 695], "prob_t_a_given_": [670, 671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 695], "ibmmodel": [671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 695], "bitext": [671, 672, 673, 674, 675, 690, 691, 692, 693, 694], "ja": [671, 672, 673, 674, 675, 690, 691, 692, 693, 694], "gro\u00df": [671, 672, 673, 674, 675, 690, 691, 692, 693, 694], "buch": [671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 798], "ein": [671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 798], "translation_t": [671, 672, 673, 674, 675, 690, 691, 692, 693, 694, 798], "062": [671, 690], "073": [671, 690], "probability_t": [671, 672, 673, 674, 675, 690, 691, 692, 693, 694], "parallel_corpu": [671, 672, 673, 674, 675, 690, 691, 692, 693, 694], "prob_all_align": [671, 672, 690, 691], "src_sentenc": [671, 672, 677, 690, 691, 695, 704], "trg_sentenc": [671, 672, 690, 691, 695], "prob_alignment_point": [671, 672, 690, 691], "align_al": [671, 672, 690, 691], "counterpart": [671, 672, 690, 691, 695, 701], "alignment_t": [672, 673, 674, 675, 691, 692, 693, 694], "939": [672, 691], "maximize_alignment_prob": [672, 691], "ich": [673, 674, 675, 692, 693, 694, 773, 796], "fass": [673, 674, 675, 692, 693, 694], "zusammen": [673, 674, 675, 692, 693, 694], "distortion_t": [673, 692], "fertility_t": [673, 674, 675, 692, 693, 694], "p1": [673, 674, 675, 692, 693, 694, 702, 703, 774, 782, 784, 789], "054": [673, 692], "distort": [673, 674, 692, 693, 694], "fertil": [673, 674, 675, 692, 693, 694, 695], "maximize_distortion_prob": [673, 674, 692, 693], "reorder": [674, 677, 693, 704, 808], "src_class": [674, 675, 693, 694], "trg_class": [674, 675, 693, 694], "head_distortion_t": [674, 675, 693, 694], "non_head_distortion_t": [674, 675, 693, 694], "033": [674, 675, 693, 694], "source_word_class": [674, 675, 693, 694], "target_word_class": [674, 675, 693, 694], "uniformli": [674, 675, 680, 681, 692, 693, 694], "displac": [674, 693], "model4_prob_t_a_given_": [674, 693], "vacant": [675, 694], "head_vacancy_t": [675, 694], "non_head_vacancy_t": [675, 694], "min_score_factor": [675, 694], "prune": [675, 694, 704, 803], "vacanc": [675, 694], "ibmmodel4": [675, 693, 694, 695], "maximize_vacancy_prob": [675, 694], "translations_for": [676, 679], "src_phrase": [676, 679], "phrasetableentri": [676, 677, 679, 704], "trg_phrase": [676, 679], "phraset": [677, 679, 704], "phrase_t": [677, 704], "niemand": [677, 704], "nobodi": [677, 704], "erwartet": [677, 704], "die": [677, 704, 765, 773, 794], "spanisch": [677, 704], "inquisit": [677, 704], "language_prob": [677, 704], "999": [677, 704, 780], "language_model": [677, 704], "probability_chang": [677, 704], "word_penalti": [677, 704], "beam_threshold": [677, 704], "stack_siz": [677, 704], "distortion_factor": [677, 704], "favour": [677, 704], "monoton": [677, 703, 704], "find_all_src_phras": [677, 704], "compute_future_scor": [677, 704], "ahead": [677, 704, 808], "difficulti": [677, 704, 808], "referenc": [677, 685, 704, 705], "future_scor": [677, 704], "future_score_t": [677, 704], "sentence_length": [677, 704], "untransl": [677, 704], "expansion_scor": [677, 704], "translation_opt": [677, 704], "src_phrase_span": [677, 704], "_hypothesi": [677, 704], "distortion_scor": [677, 704], "next_src_phrase_span": [677, 704], "valid_phras": [677, 704], "all_phrases_from": [677, 704], "aer": [678, 698], "6666666666666667": [678, 698], "smoothing_funct": [680, 681, 748], "auto_reweigh": [680, 681], "bilingu": [680, 681, 685, 702, 703], "understudi": [680, 681], "papineni": [680, 681], "kishor": [680, 681], "salim": [680, 681], "rouko": [680, 681], "todd": [680, 681], "ward": [680, 681], "wei": [680, 681, 687, 688], "jing": [680, 681], "zhu": [680, 681], "hypothesis1": [680, 681, 696, 697, 699, 700], "militari": [680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 703], "obei": [680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 703], "parti": [680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 703, 731, 740, 774, 808], "hypothesis2": [680, 681, 696, 697, 699, 700], "insur": [680, 681, 682, 683, 687, 688, 696, 697, 699, 700], "troop": [680, 681, 682, 683, 687, 688, 696, 697, 699, 700], "forev": [680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 703, 803], "hear": [680, 681, 682, 683, 687, 688, 696, 697, 699, 700], "guidebook": [680, 681, 682, 683, 687, 688, 696, 697, 699, 700], "reference1": [680, 681, 696, 697, 699, 700], "heed": [680, 681, 682, 683, 687, 688, 696, 697, 699, 700, 703], "reference2": [680, 681, 696, 697, 699, 700], "reference3": [680, 681, 696, 697, 699, 700], "sentence_bleu": [680, 681, 687, 688, 748], "5045": [680, 681], "geometr": [680, 681, 699, 700], "harsh": [680, 681], "chencherri": [680, 681], "smoothingfunct": [680, 681, 748], "method1": [680, 681], "0370": [680, 681], "3920": [680, 681], "7453": [680, 681], "6240": [680, 681], "collin": [681, 748], "cherri": [681, 748], "systemat": [681, 748], "wmt14": [681, 748], "w14": [681, 748], "3346": [681, 748], "4118": 681, "method0": 681, "method2": 681, "4452": 681, "method3": 681, "method4": [681, 748], "method5": 681, "4905": 681, "method6": 681, "4135": 681, "method7": 681, "p_n": 681, "denomin": 681, "chin": 681, "yew": 681, "franz": 681, "josef": 681, "och": [681, 798], "orang": 681, "prec_count": 681, "fourgram": [681, 757, 780], "hyp_len": [681, 700], "inflat": 681, "proportion": 681, "ln": 681, "pi0": 681, "pn": 681, "mrf": 681, "gradient": 681, "ascent": 681, "brevity_penalti": 681, "closest_ref_len": 681, "breviti": [681, 699, 700, 702, 703], "concis": [681, 759], "aaaaaaaaaaaa": 681, "aaaaaaaaaaaaaaa": 681, "aaaaaaaaaaaaaaaaa": 681, "closest_ref_length": 681, "2635971381157267": 681, "9200": 681, "bp1": 681, "bp2": 681, "v13a": 681, "705": 681, "8668": 681, "corpus_bleu": 681, "list_of_refer": [681, 688, 700, 703], "divis": [681, 696, 697, 803], "hyp1": [681, 682, 683, 687, 688, 703], "ref1a": [681, 688, 703], "ref1b": [681, 688, 703], "ref1c": [681, 688, 703], "hyp2": [681, 682, 683, 687, 688, 703], "ref2a": [681, 688, 703], "5920": 681, "score1": [681, 688], "score2": [681, 688], "6223": 681, "5818": 681, "gave": 681, "333": 681, "334": 681, "8242": 681, "7067": 681, "4719": 681, "modified_precis": 681, "mat": [681, 682, 683, 687, 688, 754, 779], "2857": 681, "9444": [681, 795], "5882352941176471": 681, "07692": 681, "nth": 681, "ignore_whitespac": [682, 683], "maja": [682, 683], "popov": [682, 683], "mt": [682, 683, 686, 689, 696, 697, 699, 700, 808], "10th": [682, 683], "statmt": [682, 683], "wmt15": [682, 683], "wmt49": [682, 683], "wmt16": [682, 683], "w16": [682, 683], "2341": [682, 683], "ref1": [682, 683, 687, 688], "sentence_chrf": [682, 683], "6349": [682, 683], "3330": [682, 683], "infam": [682, 683, 687, 688], "1468": [682, 683], "6617": [682, 683], "chrf": [683, 808], "chrf_precision_recall_fscore_support": 683, "fscore": 683, "corpus_chrf": 683, "ref2": 683, "3910": 683, "f_start": [684, 701], "f_end": [684, 701], "e_start": [684, 701], "e_end": [684, 701], "f_align": [684, 701], "srctext": [684, 686, 689, 701], "trgtext": [684, 686, 689, 701], "srclen": [684, 686, 689, 701], "trglen": [684, 686, 689, 701], "max_phrase_length": [684, 701], "1993": [685, 690, 691, 692, 693, 694, 695, 757], "j93": 685, "1004": 685, "languageindepend": [685, 705], "average_charact": 685, "0099": 685, "089": 685, "variance_charact": 685, "align_block": 685, "source_sents_len": [685, 705], "target_sents_len": [685, 705], "align_log_prob": 685, "source_s": 685, "target_s": 685, "align_text": 685, "source_block": 685, "target_block": 685, "erfcc": 685, "norm_cdf": 685, "norm_logsf": 685, "parse_token_stream": 685, "soft_delimit": 685, "hard_delimit": 685, "split_at": 685, "split_valu": 685, "subiter": 685, "backlink": [685, 705], "grow_diag_final_and": 686, "e2f": [686, 689], "f2e": [686, 689], "symmetrisat": [686, 689], "koehn": [686, 689, 690, 691, 692, 693, 694, 695, 704, 798], "forw": [686, 689], "\u30cf\u30ed\u30fc": [686, 689], "\u767d\u8272": [686, 689], "\u661f": [686, 689], "\u95a2\u6570": [686, 689], "\u5171": [686, 689], "\u4e0d\u9023\u7d9a": [686, 689], "\u5897\u52a0": [686, 689], "\u671f\u5f85": [686, 689], "\u793a\u3057": [686, 689], "luminos": [686, 689], "halo": [686, 689], "dwarf": [686, 689], "discontinu": [686, 689, 703, 706, 715, 722, 727, 787, 800], "axelrod": [686, 689], "birch": [686, 689], "callison": [686, 689], "osborn": [686, 689], "talbot": [686, 689], "edinburgh": [686, 689, 810], "iwslt": [686, 689], "pharaoh": [686, 689], "yonghui": [687, 688], "mike": [687, 688, 788], "schuster": [687, 688], "zhifeng": [687, 688], "quoc": [687, 688], "mohammad": [687, 688], "norouzi": [687, 688], "wolfgang": [687, 688], "macherei": [687, 688], "krikun": [687, 688], "yuan": [687, 688], "cao": [687, 688], "qin": [687, 688], "klau": [687, 688], "jeff": [687, 688], "klingner": [687, 688], "apurva": [687, 688], "shah": [687, 688], "melvin": [687, 688], "xiaob": [687, 688], "lukasz": [687, 688], "kaiser": [687, 688], "gouw": [687, 688], "yoshikiyo": [687, 688], "kato": [687, 688], "taku": [687, 688], "kudo": [687, 688], "hideto": [687, 688], "kazawa": [687, 688], "georg": [687, 688, 699, 700, 759], "kurian": [687, 688], "nishant": [687, 688], "patil": [687, 688], "wang": [687, 688, 808], "cliff": [687, 688], "young": [687, 688], "jason": [687, 688, 808], "riesa": [687, 688], "alex": [687, 688, 765, 810], "rudnick": [687, 688, 810], "oriol": [687, 688], "vinyal": [687, 688], "greg": [687, 688, 808], "corrado": [687, 688], "macduff": [687, 688], "hugh": [687, 688], "jeffrei": [687, 688], "dean": [687, 688], "bridg": [687, 688], "eprint": [687, 688], "1609": [687, 688], "08144": [687, 688], "08144v2": [687, 688], "oct": [687, 688], "undesir": [687, 688], "rl": [687, 688], "drawback": [687, 688], "reward": [687, 688], "sentence_gleu": [687, 688], "0909": [687, 688], "4393": [687, 688], "1206": [687, 688], "gleu": [688, 808], "corpus_gleu": 688, "n_match": 688, "n_all_output": 688, "n_all_target": 688, "think": [688, 765, 785, 788, 796, 803], "5673": 688, "6144": 688, "je": 690, "mang": 690, "du": [690, 773], "jambon": 690, "word_index_in_target": 690, "word_index_in_sourc": 690, "philipp": [690, 691, 692, 693, 694, 695, 704], "peter": [690, 691, 692, 693, 694, 695, 808, 810], "stephen": [690, 691, 692, 693, 694, 695], "della": [690, 691, 692, 693, 694, 695], "pietra": [690, 691, 692, 693, 694, 695], "mercer": [690, 691, 692, 693, 694, 695], "mathemat": [690, 691, 692, 693, 694, 695, 786, 808], "263": [690, 691, 692, 693, 694, 695], "ibmmodel1": [690, 695, 798], "ibmmodel2": [691, 695], "model2count": 691, "update_align": 691, "update_lexical_transl": [691, 695], "phenomenon": 692, "accompani": [692, 693, 694, 741, 759], "p0": [692, 693, 694], "ibmmodel3": [692, 695], "model3count": 692, "update_distort": [692, 693], "tend": [693, 781, 804], "driven": [693, 806], "cept": [693, 694, 695], "tablet": [693, 694, 695], "d_head": 693, "word_class_": 693, "word_class_t": [693, 694], "d_non_head": 693, "dj": 693, "\u03b4j": 693, "model4count": 693, "slot": [694, 805], "gradual": 694, "occupi": [694, 788], "placement": [694, 706, 715, 722], "defici": 694, "v_head": 694, "dv": 694, "max_v": 694, "v_non_head": 694, "weed": 694, "\u03b4v": 694, "word_class": 694, "appendix": 694, "ibmmodel5": [694, 695], "model5count": 694, "update_vac": 694, "target_sentence_length": 694, "vacancies_at": 694, "sophist": [695, 774], "center_of_cept": 695, "fertility_of_i": 695, "is_head_word": 695, "previous_cept": 695, "previous_in_tablet": 695, "zero_indexed_align": 695, "update_fertil": 695, "update_null_gener": 695, "longest_target_sentence_length": 695, "highlevel": [696, 697], "judgment": [696, 697], "alon": [696, 697, 757], "lavi": [696, 697], "abhaya": [696, 697], "agarw": [696, 697], "alavi": [696, 697], "single_meteor_scor": [696, 697], "6944": [696, 697], "align_word": 697, "exact_match": 697, "meteor": [697, 747, 808], "stem_match": 697, "wordnetsyn_match": 697, "alignment_error_r": [698, 798], "doddington": [699, 700], "morgan": [699, 700], "kaufmann": [699, 700], "dl": [699, 700, 743, 744], "cfm": [699, 700, 743, 744], "1289189": [699, 700], "1289273": [699, 700], "darpa": [699, 700], "commiss": [699, 700], "facil": [699, 700], "arithmet": [699, 700], "sentence_nist": [699, 700], "3709": [699, 700], "4619": [699, 700], "corpus_nist": 700, "nist_length_penalti": 700, "ref_len": 700, "phrase_extract": 701, "geht": 701, "davon": 701, "au": 701, "dass": 701, "im": [701, 759], "bleibt": 701, "intuit": [702, 703], "hideki": [702, 703], "isozaki": [702, 703], "tsutomu": [702, 703], "hirao": [702, 703], "kevin": [702, 703], "duh": [702, 703], "katsuhito": [702, 703], "sudoh": [702, 703], "hajim": [702, 703], "tsukada": [702, 703], "distant": [702, 703], "emnlp": [702, 703], "d10": [702, 703], "1092": [702, 703], "asian": [702, 703], "kendall_tau": [702, 703], "bp": [702, 703, 796], "emul": [702, 703, 804], "encourag": [702, 703, 759], "kecl": [702, 703], "ntt": [702, 703], "icl": [702, 703], "lirg": [702, 703], "hyperparamet": [702, 703], "ribe": [703, 808], "corpus_rib": 703, "3597": 703, "find_increasing_sequ": 703, "worder": 703, "word_rank_align": 703, "kendal": 703, "num_increasing_pair": 703, "num_possible_pair": 703, "number_possible_pair": 703, "236": 703, "382": [703, 803], "position_of_ngram": 703, "forth": [703, 759], "char_po": 703, "word_po": 703, "conceiv": [703, 803], "sentence_rib": 703, "spearman_rho": 703, "h0": 703, "h5": 703, "r5": [703, 754], "591": 703, "205": 703, "character_bas": 703, "h1": 703, "0th": 703, "bob": [703, 766, 784, 789], "yesterdai": [703, 739], "h2": 703, "r2": [703, 754, 770], "tractabl": [704, 803], "histogram": 704, "stackdecod": 704, "immutablemultiparentedtre": [706, 719], "immutabletre": [706, 707, 708, 709, 719, 799], "multiparentedtre": [706, 707, 712, 719, 720], "immutableparentedtre": [706, 719], "immutableprobabilistictre": [706, 719, 799], "abstractparentedtre": [706, 711, 712, 720], "parent_indic": [706, 707, 711, 720, 799], "left_sibl": [706, 707, 708, 711, 712, 720, 799], "right_sibl": [706, 707, 708, 711, 712, 720, 799], "sibl": [706, 707, 708, 709, 710, 711, 712, 713, 714, 720, 725, 728, 799], "parent_index": [706, 707, 708, 711, 712, 720, 799], "ptree": [706, 707, 708, 711, 712, 720, 799], "probabilistictre": [706, 723], "iN": [706, 714], "horzmarkov": [706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 725, 801], "vertmarkov": [706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 725, 801], "childchar": [706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 725, 726], "parentchar": [706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 725, 726], "collapse_unari": [706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 801], "collapsepo": [706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 801], "collapseroot": [706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728, 801], "joinchar": [706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728], "loss": [706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 725, 728], "leaf_freez": [706, 707, 708, 709, 710, 711, 712, 713, 714], "fromlist": [706, 707, 708, 709, 710, 711, 712, 713, 714], "read_nod": [706, 707, 708, 709, 710, 711, 712, 713, 714, 799], "read_leaf": [706, 707, 708, 709, 710, 711, 712, 713, 714, 799, 800], "node_pattern": [706, 707, 708, 709, 710, 711, 712, 713, 714, 799], "leaf_pattern": [706, 707, 708, 709, 710, 711, 712, 713, 714, 799], "remove_empty_top_bracket": [706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 721, 799], "leaf_treeposit": [706, 707, 708, 709, 710, 711, 712, 713, 714], "tp": [706, 707, 708, 709, 710, 711, 712, 713, 714, 739, 789], "outdat": [706, 707, 708, 709, 710, 711, 712, 713, 714], "nodesep": [706, 707, 708, 709, 710, 711, 712, 713, 714], "pformat_latex_qtre": [706, 707, 708, 709, 710, 711, 712, 713, 714, 799], "latex": [706, 707, 708, 709, 710, 711, 712, 713, 714], "qtree": [706, 707, 708, 709, 710, 711, 712, 713, 714], "announc": [706, 707, 708, 709, 710, 711, 712, 713, 714, 806], "astound": [706, 707, 708, 709, 710, 711, 712, 713, 714, 791], "ling": [706, 707, 708, 709, 710, 711, 712, 713, 714], "advic": [706, 707, 708, 709, 710, 711, 712, 713, 714], "explan": [706, 707, 708, 709, 710, 711, 712, 713, 714], "treeposition_spanning_leav": [706, 707, 708, 709, 710, 711, 712, 713, 714], "preorder": [706, 708, 709, 710, 712, 713, 714], "eht": [706, 708, 709, 710, 712, 713, 714], "desahc": [706, 708, 709, 710, 712, 713, 714], "tac": [706, 708, 709, 710, 712, 713, 714], "postord": [706, 708, 709, 710, 712, 713, 714], "bothord": [706, 708, 709, 710, 712, 713, 714], "un_chomsky_normal_form": [706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 728, 801], "expandunari": [706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 726], "unarychar": [706, 707, 708, 709, 710, 711, 712, 713, 714, 725, 726], "collapseunari": [706, 707, 708, 709, 710, 711, 712, 713, 714], "nodecoord": [706, 715, 722], "coord": [706, 715, 722, 753, 783], "nodecolor": [706, 715, 722], "leafcolor": [706, 715, 722], "funccolor": [706, 715, 722], "nodedist": [706, 715, 722, 799, 800], "unicodelin": [706, 715, 722, 799, 800], "ansi": [706, 715, 722], "maxwidth": [706, 715, 722, 800], "sinica_pars": [706, 721], "nep": [706, 721, 724], "xx": [706, 721, 724], "theme": [706, 721, 724, 759, 791], "nhaa": [706, 721, 724], "dab": [706, 721, 724], "vl2": [706, 721, 724], "periodcategori": [706, 721, 724], "disco": [722, 727], "dop": [722, 727], "andrea": [722, 727], "cranenburgh": [722, 727], "andreasvc": [722, 727], "eschbach": [722, 727], "orth": [722, 727], "hypergraph": [722, 727], "157": [722, 727, 791], "149": [722, 727, 757, 791], "jgaa": [722, 727], "eschbachguentherbecker2006": [722, 727], "popular": [725, 728, 731, 807], "tradeoff": [725, 728], "sparciti": [725, 728], "combat": [725, 728], "__a__": [725, 728], "dan": [725, 728, 777, 803, 808, 810], "2003": [725, 728, 798, 810], "unlexic": [725, 728], "p03": [725, 728], "1054": [725, 728], "lose": [725, 728], "load_cr": [730, 741], "creds_fil": [730, 738, 741], "oauth": [730, 731, 732, 740, 741], "app_kei": [730, 731, 732, 740, 741], "your_app_kei": [730, 741], "app_secret": [730, 731, 732, 740, 741], "your_app_secret": [730, 741], "oauth_token": [730, 731, 732, 740, 741], "oauth_token_secret": [730, 731, 732, 740, 741], "access_token": [730, 741], "twython": [731, 737, 740], "secret": [731, 732, 740, 785], "authent": [731, 732, 738, 740, 741, 742, 746], "tweethandleri": [731, 732, 733, 734, 736, 740], "expand_tweetid": [731, 740], "ids_f": [731, 740], "fetch": [731, 733, 734, 736, 739, 740, 756], "status": [731, 732, 740], "search_tweet": [731, 740], "max_id": [731, 740], "retries_after_twython_except": [731, 740], "admiss": [731, 740, 765], "retri": [731, 740], "user_info_from_id": [731, 740], "userid": [731, 735, 739, 740], "user_tweet": [731, 740], "screen_nam": [731, 740], "include_rt": [731, 740], "add_list_memb": 731, "construct_api_url": 731, "api_url": 731, "constructed_url": 731, "result_typ": 731, "create_block": 731, "mute": 731, "create_favorit": 731, "engag": 731, "create_friendship": 731, "friendship": 731, "create_list": 731, "create_list_memb": 731, "create_al": 731, "create_metadata": 731, "impair": 731, "upload": 731, "create_mut": 731, "timelin": 731, "create_plac": 731, "latitud": 731, "longitud": 731, "geo": 731, "create_saved_search": 731, "return_pag": 731, "get_home_timelin": 731, "send": [731, 733, 739, 740, 759], "json_encod": 731, "delete_list": 731, "delete_list_memb": 731, "destroy_al": 731, "destroy_block": 731, "destroy_direct_messag": 731, "destroy_favorit": 731, "destroy_friendship": 731, "unfollow": 731, "destroy_mut": 731, "destroy_saved_search": 731, "saved_search": 731, "destroy_statu": 731, "get_account_set": 731, "trend": 731, "get_application_rate_limit_statu": 731, "rate_limit_statu": 731, "get_authentication_token": 731, "callback_url": 731, "force_login": 731, "auth_url": 731, "forced_login": 731, "prefil": 731, "login": 731, "get_authorized_token": 731, "oauth_verifi": 731, "phase": 731, "pin": 731, "querystr": 731, "get_available_trend": 731, "get_closest_trend": 731, "get_contribute": 731, "contribute": 731, "get_contributor": 731, "get_direct_messag": 731, "get_favorit": 731, "get_followers_id": 731, "get_followers_list": 731, "get_friends_id": 731, "get_friends_list": 731, "get_geo_info": 731, "place_id": 731, "home_timelin": 731, "get_incoming_friendship_id": 731, "pend": 731, "get_lastfunction_head": 731, "default_return_valu": 731, "get_list_memb": 731, "get_list_membership": 731, "get_list_status": 731, "get_list_subscrib": 731, "subscrib": 731, "get_list_subscript": 731, "get_mentions_timelin": 731, "mentions_timelin": 731, "get_oembed_tweet": 731, "oemb": 731, "get_outgoing_friendship_id": 731, "protect": 731, "whom": 731, "outgo": 731, "get_place_trend": 731, "woeid": 731, "get_privacy_polici": 731, "privaci": 731, "get_profile_banner_s": 731, "banner": [731, 788], "profile_bann": 731, "get_retweeters_id": 731, "get_retweet": 731, "get_saved_search": 731, "get_sent_messag": 731, "get_similar_plac": 731, "similar_plac": 731, "get_specific_list": 731, "get_supported_languag": 731, "get_to": 731, "tos": 731, "get_twitter_configur": 731, "get_user_ids_of_blocked_retweet": 731, "user_id": 731, "no_retweet": 731, "get_user_suggest": 731, "get_user_suggestions_by_slug": 731, "slug": 731, "get_user_suggestions_statuses_by_slug": 731, "get_user_timelin": 731, "user_timelin": 731, "html_for_tweet": 731, "use_display_url": 731, "use_expanded_url": 731, "expand_quoted_statu": 731, "xxxxx": 731, "invalidate_token": 731, "revok": 731, "bearer": 731, "is_list_memb": 731, "is_list_subscrib": 731, "list_block_id": 731, "list_block": 731, "list_mute_id": 731, "list_mut": 731, "lookup_friendship": 731, "lookup_statu": 731, "hydrat": 731, "lookup_us": 731, "obtain_access_token": 731, "remove_profile_bann": 731, "report_spam": 731, "spam": [731, 755, 762], "retweeted_of_m": 731, "retweets_of_m": 731, "reverse_geocod": 731, "search_gen": 731, "search_queri": 731, "search_geo": 731, "search_us": 731, "send_direct_messag": 731, "show_friendship": 731, "show_list": 731, "show_owned_list": 731, "ownership": 731, "show_saved_search": 731, "show_statu": 731, "show_us": 731, "subscribe_to_list": 731, "unicode2utf8": 731, "unsubscribe_from_list": 731, "unsubscrib": 731, "update_account_set": 731, "update_delivery_servic": 731, "devic": 731, "deliv": 731, "update_delivery_devic": 731, "update_friendship": 731, "notif": 731, "update_list": 731, "update_profil": 731, "update_profile_background_imag": 731, "behalf": 731, "update_profile_bann": 731, "update_profile_banner_imag": 731, "update_profile_color": 731, "hex": 731, "profile_link_color": 731, "update_profile_imag": 731, "update_statu": 731, "update_status_with_media": 731, "update_with_media": 731, "upload_media": 731, "media_id": 731, "upload_video": 731, "media_typ": 731, "media_categori": 731, "check_progress": 731, "video": [731, 759, 808], "init": 731, "15mb": 731, "204": [731, 803], "5mb": 731, "1mb": 731, "verify_credenti": 731, "401": 731, "twythonstream": [732, 740], "sec": [732, 740], "retry_count": [732, 740], "retry_in": [732, 740], "client_arg": [732, 740], "sessionapi": [732, 740], "ssl": [732, 740], "verif": [732, 740], "chunk_siz": [732, 740], "on_success": [732, 740], "on_error": [732, 740], "status_cod": [732, 740], "disconnect": 732, "on_timeout": 732, "sy": [733, 740, 742, 784], "ceas": [733, 734, 740], "on_finish": [733, 734, 736, 740], "upper_date_limit": [733, 734, 736, 740], "lower_date_limit": [733, 734, 736, 740], "datetim": [733, 734, 735, 736, 739, 740], "date_limit": [733, 735, 736, 740], "upper_data_limit": [733, 734, 736, 740], "check_date_limit": [733, 734, 736], "do_continu": [733, 734, 736, 740], "do_stop": [733, 734, 736], "pagin": [733, 734, 736], "fprefix": [734, 740], "timestamped_fil": [734, 740], "timestamp": [734, 740], "to_screen": [735, 740], "tweethandl": 736, "timezon": 736, "basictweethandl": 736, "localtimezoneoffsetwithutc": 736, "tzinfo": 736, "utc": 736, "dstoffset": 736, "timedelta": 736, "7200": 736, "stdoffset": 736, "utcoffset": 736, "extract_field": 737, "get_header_field_list": 737, "main_field": 737, "entity_typ": [737, 778], "entity_field": 737, "fp": 737, "tweetid": 737, "geoloc": 737, "id_str": 737, "favorite_count": 737, "retweet_count": 737, "followers_count": 737, "friends_count": 737, "tweets_fil": 737, "bounding_box": 737, "user_ment": 737, "howto": [739, 759, 785, 808], "network": 739, "420": [739, 740], "twitterclass_demo": 739, "sampletoscreen_demo": 739, "tracktoscreen_demo": 739, "search_demo": 739, "tweets_by_user_demo": 739, "lookup_by_userid_demo": 739, "followtoscreen_demo": 739, "streamtofile_demo": 739, "limit_by_time_demo": 739, "corpusreader_demo": 739, "expand_tweetids_demo": 739, "tokenis": 739, "volum": 739, "taylor": 739, "swift": 739, "nltk_org": 739, "offer": [740, 757], "streamer": 740, "tweetview": 740, "tweetwrit": 740, "add_access_token": 741, "credsfromfil": 741, "guess_path": 741, "pth": 741, "pathnam": 741, "acyclic_branches_depth_first": 742, "certifi": 742, "legitim": 742, "straight": [742, 759], "honest": 742, "acyclic_breadth_first": 742, "acyclic_dic2tre": 742, "acycl": [742, 803], "binary_search_fil": 742, "cachedepth": 742, "breadth_first": [742, 802], "binomi": 742, "binomial_coeffici": 742, "comb": 742, "1181": 742, "clean_html": 742, "clean_url": 742, "edge_closur": 742, "edges2dot": 742, "elementtree_ind": 742, "filestr": 742, "guess_encod": 742, "setlocal": 742, "lc_all": 742, "decoded_unicod": 742, "successful_encod": 742, "unsuccess": 742, "unicodeerror": 742, "in_idl": 742, "gate": 742, "invert_dict": [742, 802], "invert_graph": 742, "pairwis": 742, "parallelize_preprocess": 742, "progress_bar": 742, "print_str": [742, 802], "re_show": [742, 802], "set_proxi": [742, 746], "password": [742, 746], "3128": [742, 746], "skipgram": [742, 808], "ballison": 742, "lrec_skipgram": 742, "insurg": 742, "kill": 742, "fight": 742, "tokenwrap": 742, "transitive_closur": 742, "slight": 742, "ioannidi": 742, "ramakrishnan": 742, "unique_list": [742, 786], "unweighted_minimum_spanning_dict": 742, "umsd": 742, "unweighted_minimum_spanning_digraph": 742, "lesk": 743, "context_sent": [743, 744], "ambiguous_word": [743, 744], "lesk_sens": [743, 744], "1986": [743, 744, 753], "bank": [743, 744, 805], "deposit": [743, 744, 805], "savings_bank": [743, 744, 805], "pine": [743, 744], "cone": [743, 744], "cream": [743, 744], "5th": [743, 744], "annual": [743, 744], "318728": [743, 744], "effort": [745, 808], "dozen": [745, 808], "voluntari": 745, "bugfix": [745, 808], "began": 745, "mail": [745, 810], "central": [746, 788], "mac": [746, 785, 806], "unix": 746, "filespac": 746, "sudo": [746, 807], "vista": 746, "privileg": 746, "subfold": 746, "ccg_semant": 747, "featgram": 747, "gensim": 747, "gluesemant": 747, "gluesemantics_malt": 747, "grammartestsuit": 747, "portuguese_en": 747, "wordnet_lch": 747, "nltk": [748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 801, 802, 803, 804, 805, 808], "contempl": 748, "4267": 748, "151": 749, "interj": 749, "pun": 749, "itj": 749, "av0": 749, "pnp": 749, "vbb": 749, "fx8": 749, "abdomin": 749, "wound": 749, "wee": 749, "aj0": 749, "at0": 749, "vvn": 749, "lex": [750, 751, 759, 799], "modal": 750, "tv": [750, 765, 790], "dtv": 750, "dough": 750, "persuad": 750, "nosub_pars": 750, "applicationruleset": 750, "compositionruleset": 750, "typeraiseruleset": 750, "substitutionruleset": 750, "test1_lex": 750, "mushroom": 750, "parsnip": 750, "test2_lex": 750, "forget": 750, "_var0": [750, 751], "adji": 750, "adjd": 750, "advd": 750, "prepnpcompl": 750, "prepnadjn": 750, "prepnadjnp": 750, "vpnp": 750, "vppp": 750, "vpser": 750, "bebida": 750, "cine": 750, "lei": 750, "libro": 750, "ministro": [750, 785], "panader\u00eda": 750, "president": 750, "super": [750, 791], "ana": 750, "pablo": 750, "pero": 750, "anunci\u00f3": 750, "compr\u00f3": 750, "cree": 750, "desminti\u00f3": 750, "fueron": 750, "interesant": 750, "nueva": 750, "ayer": 750, "python2": 750, "1354": 750, "bacon": 751, "ccgbank": 751, "hockenmai": 751, "steedman": 751, "j07": 751, "3004": 751, "intransvsg": 751, "assertionerror": [751, 795], "read_expr": [751, 770, 774, 778, 782, 789], "country_of": 752, "bangkok": 752, "barcelona": 752, "berlin": [752, 769, 810], "thailand": 752, "east_germani": 752, "1178": 752, "1280": 752, "3481": 752, "a1": [752, 774], "a2": [752, 774], "a3": [752, 774], "c3": [752, 759, 774], "rdb": 752, "city_t": 752, "china": 752, "city_databas": 752, "4s": 752, "canton": 752, "1496": 752, "chungk": 752, "1100": 752, "mukden": 752, "1551": 752, "peke": 752, "2031": 752, "shanghai": 752, "5407": 752, "tientsin": 752, "1795": 752, "deliber": 752, "book_grammar": [752, 761, 763, 764, 765, 773, 784, 790], "sql0": 752, "iv": [752, 765, 770, 790], "cp": [752, 765, 770], "dairen": 752, "harbin": 752, "kowloon": 752, "sian": 752, "calcutta": 752, "town": 752, "delhi": 752, "madra": 752, "jakarta": 752, "533": [752, 786], "mor": 753, "valian": 753, "1991": 753, "01a": 753, "01b": 753, "02a": 753, "02b": 753, "corpus_data": 753, "xmlschema": 753, "schemaloc": 753, "xsd": 753, "inv": [753, 765], "corpus_particip": 753, "this_corpus_particip": 753, "dct": 753, "p2y1m3d": 753, "target_child": 753, "p2y1m12d": 753, "lastnam": 753, "fourth": [753, 797, 808], "believ": [753, 778, 789, 803], "sorri": [753, 795, 796], "okai": 753, "februari": [753, 808], "nineteen": 753, "tape": [753, 759], "player": 753, "macwhinnei": 753, "wh": [753, 765], "dem": [753, 773], "eighti": 753, "3p": 753, "3s": 753, "247": 753, "tikteat": 753, "trick": 753, "saga": 753, "adopt": [753, 759, 765, 788, 808], "pobj": 753, "jct": 753, "enum": 753, "perf": 753, "xcomp": 753, "p1y9m21d": 753, "p1y9m28d": 753, "p2y1m23d": 753, "broadli": 753, "1973": 753, "3574660633484": 753, "292682926829": 753, "492857142857": 753, "961783439490": 753, "0842696629213": 753, "169811320754": 753, "137404580152": 753, "0578034682080": 753, "090163934426": 753, "488372093023": 753, "8773584905660": 753, "4792899408284": 753, "0111940298507": 753, "456790123456": 753, "487603305785": 753, "007936507936": 753, "154696132596": 753, "35746606334": 753, "this_fil": 753, "3606": 753, "1027": 753, "4376": 753, "1274": 753, "2673": 753, "801": 753, "5020": 753, "1583": 753, "03a": 753, "2743": 753, "988": 753, "03b": 753, "4409": 753, "1397": 753, "tagged_text": 754, "sat": [754, 772, 779, 784], "chew": [754, 759], "gold_chunked_text": 754, "unchunked_text": 754, "regexp_pattern": 754, "chunk_rul": 754, "strip_rul": 754, "split_rul": 754, "chunk_pars": 754, "chunked_text": 754, "33333333": 754, "t1": 754, "t0": 754, "w0": 754, "t4": 754, "t5": 754, "t6": 754, "t7": 754, "t8": 754, "t9": 754, "_verifi": 754, "t10": 754, "r3": 754, "r4": 754, "r6": 754, "r7": 754, "r8": 754, "r9": 754, "complain": [754, 759], "problemat": [754, 784], "4f": [755, 757], "2500": 755, "5833": 755, "4167": 755, "3571": 755, "6429": [755, 795], "7000": 755, "3000": [755, 759, 795], "bernoullinb": 755, "svc": 755, "print_maxent_test_head": 755, "test_max": 755, "41": [755, 759, 780, 784, 791], "stopiter": 756, "lil": 756, "fourgram_measur": 757, "allon": 757, "bacuth": 757, "ashteroth": 757, "karnaim": 757, "ben": [757, 796], "ammi": 757, "mishpat": 757, "jegar": 757, "sahadutha": 757, "whoever": 757, "shed": 757, "appoint": [757, 759], "overs": 757, "aromat": 757, "resin": 757, "infrequ": 757, "beer": 757, "lahai": 757, "roi": 757, "grai": 757, "hair": 757, "ew": 757, "lamb": 757, "burnt": 757, "paddan": 757, "aram": 757, "creatur": 757, "ca01": [757, 759], "vote": 757, "1962": 757, "637": [757, 791], "alpharetta": 757, "ignored_word": 757, "becam": [757, 788], "father": [757, 759, 778], "hundr": [757, 788, 803], "king": [757, 769], "ngram_fd": 757, "finder_4gram": 757, "scored_4gram": 757, "candidatur": 757, "15828": [757, 780], "4675": [757, 780], "14307668": [757, 780], "9999": 757, "4721": 757, "0f": 757, "571007": 757, "456400": 757, "dun": 757, "2552": 757, "221": [757, 791, 803], "31777": 757, "270": [757, 808], "15019": 757, "15629": 757, "authorit": 757, "readili": 757, "cont_bigram_measur": 757, "31740": 757, "15820": 757, "4667": [757, 777], "14287173": 757, "trivial": [757, 759], "results_list": 757, "item1": 757, "item2": 757, "item3": 757, "item4": 757, "item5": 757, "results_scor": 757, "1f": 757, "results_list2": 757, "3f": [757, 783], "1163": 757, "325": [757, 791], "995": 757, "930": 757, "528": 757, "513": 757, "501": 757, "891": 757, "463": 757, "386": 757, "421": 757, "615": 757, "411": 757, "347": 757, "632": 757, "811": 757, "monstrou": 758, "dick": 758, "ong": 758, "OF": 758, "THE": 758, "psalm": 758, "touch": [758, 759, 796], "bulk": 758, "whale": 758, "ork": 758, "heathenish": 758, "spear": 758, "gaze": 758, "cannib": 758, "savag": 758, "hav": 758, "surviv": [758, 763], "flood": 758, "mountain": 758, "himmal": 758, "scout": 758, "fabl": 758, "radnei": 758, "shall": 758, "scene": 758, "connexion": 758, "fo": 758, "ght": 758, "rummag": [758, 759], "cabinet": 758, "bone": [758, 808], "oftentim": 758, "dead": [758, 808], "op": 758, "upo": 758, "con_list": 758, "clip": 758, "jane_eyr": 758, "nthere": 758, "wander": 758, "inde": [758, 766], "leafless": 758, "shrubberi": 758, "morn": [758, 806], "dinner": [758, 769], "reed": 758, "dine": [758, 759], "cold": 758, "winter": 758, "brought": [758, 759], "cloud": 758, "sombr": 758, "penetr": [758, 785], "outdoor": 758, "THERE": 758, "divers": 759, "wsj_0001": [759, 787, 806], "mrg": [759, 787, 806], "wsj_0002": 759, "wsj_0003": 759, "wsj_0004": [759, 787], "1789": 759, "1797": 759, "senat": 759, "vicissitud": 759, "1538": 759, "147": 759, "1685": 759, "152901": 759, "deni": [759, 761, 774, 794, 803], "awb": [759, 761], "austen": 759, "emma": 759, "jane": 759, "1816": 759, "state_union": 759, "harri": 759, "truman": 759, "milstein": 759, "certainli": 759, "orchestra": 759, "song": 759, "noblest": 759, "bez": 759, "bedz": [759, 796], "jjt": 759, "xe0": [759, 785], "xa6": 759, "xae": 759, "xb9": 759, "xbf": [759, 797], "xb8": 759, "xa8": 759, "xa7": 759, "x8d": 759, "pos_concord": 759, "chancellor": 759, "exchequ": 759, "sharp": 759, "dive": 759, "sao": [759, 785], "paulo": [759, 785, 808], "brasil": 759, "vmi": 759, "fpa": 759, "fpt": 759, "pertain": 759, "apw19980314": 759, "0391": 759, "kenyan": 759, "protest": 759, "hike": 759, "nairobi": 759, "kenya": 759, "thousand": 759, "labor": 759, "asbesto": [759, 795], "tpc": 759, "rrc": 759, "sbar": [759, 765, 787, 799], "symlink": 759, "cf": 759, "cf01": 759, "cf02": 759, "cf03": 759, "cf04": 759, "allcat": 759, "genr": [759, 808], "fiction": [759, 786], "humor": [759, 786, 791], "adventur": [759, 786], "belles_lettr": [759, 786], "lore": [759, 786], "mysteri": [759, 786], "science_fict": [759, 786], "thirti": 759, "scotti": 759, "propbank_ptb": [759, 787], "nombank_ptb": 759, "xe4": 759, "x80": 759, "xe5": 759, "x8f": 759, "x8b": 759, "xe6": 759, "x83": 759, "x85": 759, "nba": 759, "x98": 759, "x89": 759, "xe7": [759, 785, 803], "xe2": 759, "x9c": 759, "xb0": 759, "va11": 759, "x81": 759, "x9a": 759, "x84": 759, "va4": 759, "x93": 759, "xb3": 759, "xa3": 759, "conll2007": 759, "esp": [759, 785, 788], "aumento": 759, "del": [759, 761, 766, 788, 799], "\u00edndice": 759, "desempleo": 759, "fortaleci\u00f3": 759, "estadounidens": 759, "hoi": 759, "considerablement": 759, "cotizaba": 759, "gmt": 759, "mercado": 759, "divisa": 759, "fr\u00e1ncfort": 759, "9452_d\u00f3lare": 759, "frente_a": 759, "9349_d\u00f3lare": 759, "lo": [759, 785, 788], "ma\u00f1ana": 759, "esta": 759, "aal": 759, "aalii": 759, "aam": 759, "aani": 759, "aardvark": 759, "azerbaijani": 759, "bengali": 759, "aquela": [759, 785], "aquel": [759, 785], "aamir": 759, "aaron": 759, "abbei": 759, "abbi": 759, "abbot": 759, "abbott": 759, "abagael": 759, "abagail": 759, "abb": 759, "653": 759, "659": 759, "acet": 759, "ey2": 759, "eh1": 759, "ih0": 759, "iy1": 759, "aceto": 759, "aa0": 759, "ow0": 759, "acetochlor": 759, "ao2": 759, "aceton": 759, "ow2": 759, "transcr": 759, "kit": 759, "uw1": 759, "ih1": 759, "movie_review": 759, "reuter": [759, 777, 808], "editori": [759, 786, 808], "hobbi": [759, 786], "religion": [759, 786], "acq": 759, "alum": 759, "barlei": 759, "bop": 759, "carcass": 759, "castor": 759, "cocoa": 759, "coconut": 759, "coffe": 759, "copper": 759, "copra": 759, "corn": 759, "cpi": 759, "cpu": 759, "crude": 759, "dfl": 759, "dlr": 759, "cb01": 759, "9865": 759, "wheat": 759, "9880": 759, "fx": 759, "15618": 759, "15649": 759, "15676": 759, "15728": 759, "15871": 759, "adjourn": 759, "atmospher": 759, "crisi": 759, "struggl": 759, "conven": 759, "chairman": 759, "inst": [759, 787], "brown2": 759, "tagfil": 759, "br": [759, 808], "n12": 759, "hard1": 759, "clever": [759, 791], "declin": 759, "interest_6": 759, "interest_5": 759, "interest_4": 759, "princip": 759, "5331": 759, "a_and_c": 759, "hamlet": 759, "j_caesar": 759, "midsumm": 759, "night": [759, 803], "persona": 759, "theseu": 759, "duke": 759, "egeu": 759, "hermia": 759, "cobweb": 759, "demetriu": 759, "fairi": 759, "hernia": 759, "lysand": 759, "lion": 759, "moth": 759, "mustardse": 759, "moonshin": 759, "peaseblossom": 759, "prologu": 759, "pyramu": 759, "thisb": 759, "rotoka": [759, 797], "figur": [759, 769], "redupl": 759, "wave": 759, "si1466": 759, "si2096": 759, "si836": 759, "sx116": 759, "sx26": 759, "sx296": 759, "pcl": 759, "kcl": 759, "ux": 759, "ix": 759, "tcl": 759, "dcl": 759, "clasp": 759, "screw": 759, "2190": 759, "3430": 759, "4326": 759, "8804": [759, 795], "9734": 759, "32154": 759, "vmh0": 759, "microblog": 759, "20k": 759, "negative_tweet": 759, "positive_tweet": 759, "20150430": 759, "223406": 759, "rt": [759, 796], "kirkku": 759, "indirect": 759, "britain": 759, "xa3170": 759, "betteroffout": 759, "ukip": 759, "specialis": 759, "sturgeon": 759, "btjwrpbmoi": 759, "rte1_dev": 759, "rte1_test": 759, "rte2_dev": 759, "rte3_test": 759, "rte2_test": 759, "wife": 759, "strida": 759, "seat": 759, "parliament": 759, "forg": 759, "allianc": 759, "anti": 759, "syrian": 759, "coalit": 759, "xmltree": 759, "rte3_dev": 759, "findtext": 759, "bush": 759, "approv": 759, "husband": 759, "abandon": [759, 787], "admir": 759, "acceler": 759, "acclaim": 759, "accru": 759, "amalgam": 759, "animal_sound": 759, "assuming_posit": 759, "banish": 759, "battl": 759, "being_dress": 759, "bend": 759, "berri": 759, "body_internal_mot": 759, "body_internal_st": 759, "braid": 759, "breath": [759, 803], "bulg": 759, "bump": 759, "butter": 759, "calibratable_co": 759, "calv": 759, "captain": 759, "carv": 759, "change_bodily_st": 759, "cheat": 759, "chit_chat": 759, "cling": 759, "conceal": 759, "conjectur": 759, "conspir": 759, "contiguous_loc": 759, "cope": 759, "crane": 759, "curtsei": 759, "debon": 759, "dedic": 759, "defend": 759, "devour": 759, "disassembl": 759, "dress": 759, "dressing_wel": 759, "dub": 759, "engend": 759, "entity_specific_co": 759, "entity_specific_modes_b": 759, "equip": 759, "exchang": 759, "exhal": 759, "ferret": 759, "flinch": 759, "floss": 759, "forbid": 759, "funnel": 759, "future_hav": 759, "gobbl": 759, "gorg": 759, "groom": 759, "grow": 759, "herd": 759, "hiccup": 759, "hunt": 759, "image_impress": 759, "inquir": 759, "instr_commun": 759, "judgement": 759, "knead": 759, "lectur": 759, "light_emiss": 759, "linger": 759, "lodg": 759, "manner_speak": 759, "marri": [759, 761, 763, 805], "masquerad": 759, "meander": 759, "modes_of_being_with_mot": 759, "murder": 759, "neglect": 759, "nonvehicl": 759, "nonverbal_express": 759, "orphan": 759, "other_co": 759, "pain": 759, "peer": 759, "pelt": 759, "pit": 759, "pocket": 759, "poison": 759, "poke": 759, "price": [759, 762, 808], "push": 759, "put_direct": 759, "put_spati": 759, "reflexive_appear": 759, "refrain": 759, "risk": 759, "roll": 759, "rush": 759, "scribbl": 759, "settl": 759, "shake": 759, "sight": 759, "simple_dress": 759, "slide": [759, 780, 808], "smell_emiss": 759, "snooz": 759, "sound_emiss": 759, "sound_exist": 759, "spank": 759, "spatial_configur": 759, "sprai": 759, "stalk": 759, "steal": 759, "stimulus_subject": 759, "substance_emiss": 759, "suffoc": 759, "suspect": [759, 767], "swarm": 759, "swat": 759, "tingl": 759, "transcrib": 759, "transfer_mesg": 759, "vehicl": 759, "waltz": 759, "weather": 759, "weekend": 759, "wink": [759, 803], "wipe_instr": 759, "wipe_mann": 759, "withdraw": 759, "vn_31_2": 759, "selrestr": 759, "experienc": [759, 767], "blow": 759, "drizzl": 759, "fog": 759, "gust": 759, "hail": 759, "howl": 759, "lightn": 759, "mist": 759, "mizzl": 759, "precipit": 759, "roar": 759, "shower": 759, "sleet": 759, "snow": 759, "spit": 759, "spot": 759, "sprinkl": 759, "storm": 759, "swelter": 759, "teem": 759, "thaw": 759, "thunder": 759, "intransit": [759, 765], "explet": 759, "weather_typ": 759, "synrestr": 759, "predicate_valu": 759, "verbspecif": 759, "superclass": 759, "room": [759, 801], "anonym": 759, "gai": 759, "bye": 759, "clarifi": 759, "emot": 759, "emphasi": [759, 791], "greet": 759, "nanswer": 759, "whquestion": 759, "yanswer": 759, "ynquestion": 759, "navig": 759, "orwel": 759, "macedonian": 759, "serbian": 759, "estonian": 759, "farsi": 759, "bulgarian": 759, "bright": 759, "pp3n": 759, "vmis3": 759, "di": [759, 785, 787, 794], "somecorpusread": 759, "genesis_dir": 759, "my_sent_token": 759, "my_genesi": 759, "kjv": 759, "heaven": 759, "earth": [759, 803], "my_corpu": 759, "wherev": 759, "coher": [759, 796], "blur": 759, "some_corpus_file_id": 759, "normpath": 759, "14826": 759, "ce01": 759, "ce02": 759, "ce03": 759, "ce04": 759, "ce05": 759, "ce06": 759, "ce07": 759, "corpus_read": 759, "some_data": 759, "attributeerror": [759, 797, 803], "oili": 759, "rag": 759, "tostr": [759, 787, 797], "vncl": 759, "eater": 759, "overwhelm": 759, "tweak": 759, "customiz": 759, "ca02": 759, "_read_word_block": 759, "wordlistcorpusview": 759, "make_testcorpu": 759, "ext": [759, 761], "mkdtemp": [759, 761], "dedent": 759, "del_testcorpu": 759, "listdir": [759, 761], "rmdir": [759, 761], "fairli": 759, "ano": [759, 785], "inaugura": 759, "state_unio": 759, "1945": 759, "1946": 759, "webtex": 759, "firefox": 759, "grail": 759, "overheard": 759, "ca03": 759, "ca04": 759, "ca05": 759, "ca06": 759, "ca07": 759, "3621": 759, "4953": 759, "429": [759, 803], "badidentifi": 759, "791": [759, 791], "32k": 759, "f3": 759, "c123": 759, "l123": 759, "5430": 759, "12000": 759, "6000": 759, "5431": 759, "5429": 759, "interleav": 759, "duti": 759, "offic": 759, "oblig": 759, "oath": 759, "suffer": 759, "expos": [759, 787], "io": [759, 761, 769], "stringio": [759, 761], "bytesio": 759, "nit": 759, "mistaken": 759, "svn": [759, 766, 799], "5276": 759, "parse_sexpr_block": 759, "5277": 759, "mid": 759, "5279": 759, "5624": 759, "5265": 759, "cholesterol": 759, "thyroid": 759, "5728": 759, "13085": 759, "snyder": 759, "soi": 759, "5082": 759, "sheppard": 759, "7227": 759, "qc": 759, "redo": [759, 808], "vulner": [759, 808], "40000": 759, "exec_tim": 759, "size_nam": 759, "start_t": 759, "perf_count": 759, "payload": 759, "median": 759, "abk": 760, "abn": 760, "zpa": 760, "zul": 760, "crawler": 760, "fra": [760, 803], "aaa": 760, "english_fd": 760, "728135": 760, "sometest": 760, "elvish": 760, "runtimeerror": [760, 768], "unsupport": 760, "webpag": 761, "sample_grammar": [761, 765, 770, 774, 790], "7s": 761, "simul": [761, 784], "inp": 761, "dp": [761, 762, 765, 774, 799], "_bytes_written": 761, "mytoi": 761, "isfil": 761, "overwrit": 761, "kickback": 761, "minist": [761, 785], "weakref": 761, "feat0": [761, 765, 784], "weak": 761, "expung": 761, "mia": [761, 763, 778, 790], "tempdir": 761, "old_dir": 761, "chdir": 761, "testbuf": 761, "wb": 761, "unlink": [761, 797], "jsonserializ": 761, "projectivedependencypars": 762, "custom_extractor": 762, "dependency_treebank": 762, "zpar_data": 762, "zdg": 762, "fell": 762, "stock": [762, 805], "dg_str": 762, "dobj": 762, "nom": [763, 765, 784, 790], "z2": [763, 764, 765, 770, 771, 774, 782, 789, 790], "z3": [763, 764, 765, 778, 782, 789, 790], "sem4": 763, "d3": [763, 790], "vacuous": 763, "coupl": 763, "d4": [763, 770, 790], "d5": [763, 790], "d6": [763, 790], "d7": [763, 790], "remind": 763, "danc": 763, "gone": 763, "mybg": 763, "ex_quant": [763, 770, 771], "univ_qu": [763, 771], "rc": 763, "z5": [763, 764, 782], "angu": [763, 778], "dexpr": 764, "man_x": 764, "walk_x": 764, "woman": [764, 769, 774, 778, 790, 804], "drs3": 764, "emb": 764, "load_earlei": 764, "mous": [764, 765], "e02": [764, 778], "e01": [764, 778], "z4": [764, 774, 778, 782, 789, 790], "z6": [764, 774, 782, 789], "z7": [764, 782, 789], "____________________________________": 764, "____________": 764, "cee": 764, "z8": [764, 782, 789], "z9": [764, 782], "z10": [764, 789], "parse_error": 764, "drtstring": 764, "_____________________________": 764, "_______________________________": [764, 800], "gnd": [765, 793], "feat0cfg": 765, "kim": [765, 789], "jodi": [765, 790], "chil": 765, "scanner": 765, "fs1": [765, 766, 793], "fem": [765, 793], "fs2": [765, 766, 793], "inher": 765, "person01": 765, "telno": 765, "96": 765, "rue": 765, "pascal": 765, "spous": 765, "fs3": [765, 766], "commut": [765, 803], "_0": 765, "_1": 765, "fs0": 765, "address1": 765, "address2": 765, "feat1": 765, "subcat": 765, "tran": 765, "perhap": 765, "cp2": 765, "trees2": 765, "intran": 765, "katz": 765, "sieht": [765, 773], "den": [765, 773], "hund": [765, 773, 803], "objcas": 765, "masc": 765, "z101": 765, "joh": 765, "z102": 765, "z103": 765, "twice": 765, "z104": 765, "z105": 765, "z106": 765, "z107": 765, "lambdalog": 766, "fs4": 766, "sing": 766, "reentran": 766, "featurevaluetupl": 766, "featurevalueset": 766, "refus": 766, "customfeaturevalu": 766, "total_ord": 766, "__eq__": [766, 778], "__lt__": 766, "__iter__": 766, "__contains__": 766, "__delitem__": [766, 799], "abcabcabcabcabcabcabcabcabcabca": 766, "fpath1": 766, "fpath2": 766, "abcabz": 766, "struct": 766, "x6f": 766, "fin": [766, 784, 785, 803], "coerc": 766, "fs5": 766, "cvar": 766, "dvar": 766, "elif": [766, 784], "speak": 766, "fs1_name": 766, "abcd": 766, "fs2_name": 766, "discourag": 766, "8s": 766, "rev": 766, "5167": 766, "5172": 766, "x3": 766, "charl": 767, "fillmor": 767, "colleagu": 767, "straightforward": 767, "job": [767, 804], "202": 767, "charg": [767, 796], "suspicion": 767, "commit": [767, 808], "crime": 767, "offens": [767, 791], "source_of_legal_author": 767, "intentionally_affect": 767, "bellring": 767, "ringer": 767, "cause_t": 767, "fuller": 767, "compl": 767, "cause_mot": 767, "6605": 767, "366": [767, 796], "supp": 767, "slept": 768, "park": 768, "114": 768, "recursionerror": 768, "train_set": 769, "word2vec": 769, "new_model": 769, "wv": 769, "gb": 769, "word2vec_sampl": 769, "keyedvector": 769, "load_word2vec_format": 769, "44k": 769, "43981": 769, "most_similar": 769, "topn": 769, "70039": 769, "faculti": 769, "67809": 769, "undergradu": 769, "65870": 769, "yourself": 769, "doesnt_match": 769, "breakfast": 769, "cereal": 769, "lunch": 769, "mikolov": 769, "queen": 769, "71181": 769, "78840": 769, "sne": 769, "lvdmaaten": 769, "tsne": 769, "max_count": 769, "index_to_kei": 769, "pca": 769, "n_compon": 769, "x_50": 769, "fit_transform": 769, "manifold": 769, "model_tsn": 769, "random_st": 769, "scatter": 769, "pyplot": 769, "plt": 769, "xytext": 769, "textcoord": 769, "googlenew": 769, "negative300": 769, "out_fil": 769, "word_pres": 769, "d12": 770, "all12": 770, "gv": 770, "gr": 770, "a_man": 770, "a_man_walk": 770, "hv": 770, "hr": 770, "quantif": 770, "every_girl": 770, "a_dog": 770, "x1": [770, 778, 790, 799], "xprime": 770, "xprime_chas": 770, "xprime_chases_a_dog": 770, "chases_a_dog": 770, "every_girl_chases_a_dog": 770, "yprime": 770, "xprime_chases_yprim": 770, "chases_yprim": 770, "every_girl_chases_yprim": 770, "every_girl_chas": 770, "ahc": 770, "g5": 770, "g14": 770, "g134": 770, "g25": 770, "g12345": 770, "ir": [770, 785], "i3": 770, "fv": 770, "f4": 770, "i4": 770, "superflu": 771, "toy_pcfg1": [772, 784], "telescop": [772, 784], "474": 772, "germantest1": 773, "komm": 773, "sehe": 773, "mich": 773, "kommst": 773, "siehst": 773, "sie": 773, "kommt": 773, "ihr": 773, "wir": 773, "kommen": 773, "magst": 773, "mag": 773, "folgst": 773, "mir": 773, "hilft": 773, "katzen": 773, "folgt": 773, "hilfst": 773, "germantest2": 773, "folg": 773, "sehen": 773, "folgen": 773, "germantest3": 773, "subcategor": 773, "helf": 773, "germantestsuit": 773, "tester": 773, "autom": [774, 785, 791], "attent": [774, 795], "p2": [774, 782, 784, 789], "mortal": [774, 782, 789], "1212": 774, "__run": 774, "compileflag": 774, "glob": 774, "wast": 774, "unavail": 774, "unm": 774, "mccune": 774, "prover9_search": 774, "prover9hom": 774, "end_of_list": 774, "exit": 774, "6317": 774, "max_proof": 774, "mon": 774, "spass": 774, "nameerror": 774, "unrecogn": 774, "background0": 774, "prooftran": 774, "adjunct": 774, "sn": 774, "counterexampl": 774, "conclud": 774, "provabl": 774, "unsuccessfulli": 774, "ev": 774, "a4": 774, "a5": 774, "a6": 774, "quicker": 774, "a7": 774, "a8": 774, "mb": 774, "tabular": 774, "goodeater1": 775, "yum": 775, "steak": 775, "pea": 775, "goodeater2": 775, "badeater1": 775, "intermedi": 775, "abstracteat": 775, "goodeater3": 775, "goodeater4": 775, "badeater2": 775, "classic": [775, 805], "ngram_ord": 777, "vocab_data": 777, "ultim": 777, "crucial": 777, "aaddvark": 777, "23701322869105": 777, "blanchard": 777, "14646110": 777, "word_seq": 777, "aaaababaaccbacb": 777, "v_kei": 777, "0222": 777, "2444": 777, "afournei": 777, "15686289": 777, "090909": 777, "akin": 777, "12879030": 777, "inventori": 778, "inequ": 778, "existenti": 778, "succ": 778, "v4": 778, "v5": 778, "overload": 778, "run_var": 778, "improb": 778, "jule": [778, 790], "tall": 778, "lpq": 778, "quote_char": 778, "bb": 778, "e083": 778, "z472": 778, "e092": 778, "z938": 778, "tlp": 778, "sig": 778, "ind": [778, 803], "truth_typ": 778, "any_typ": 778, "eet": 778, "ea": 778, "same_r": 779, "9977": 779, "9654": 779, "2751": 779, "vm": 779, "virtual": [779, 807], "7806": 779, "importorskip": 780, "reference_set": [780, 793], "88888888888": [780, 793], "pdist1": 780, "aldjfalskfjaldsf": 780, "pdist2": 780, "aldjfalssjjlldss": 780, "7075187496": 780, "braini": 780, "868": [780, 791], "s4": [780, 790, 796], "000000000000": 780, "s5": [780, 796], "111111111111": 780, "aoaeoeoe": 780, "tho": 780, "iz_th": 780, "rifir": 780, "testeng": 780, "666666": 780, "857142": 780, "749999": 780, "coocurr": 780, "snlp": 780, "n_new_compani": 780, "n_new": 780, "n_compani": 780, "bam": 780, "150": [780, 796], "12593": 780, "932": 780, "1291": 780, "n_w1_w2_w3": 780, "n_w1_w2": 780, "n_w1_w3": 780, "n_w2_w3": 780, "pair_count": 780, "n_w1": 780, "n_w2": 780, "n_w3": 780, "uni_count": 780, "tam": 780, "uni_counts2": 780, "n_w1_w2_w3_w4": 780, "n_w2_w3_w4": 780, "triplet_count": 780, "n_w4": 780, "qam": 780, "unsort": 781, "720": 781, "desctruct": 781, "sorted_data": 781, "issue9025": 781, "12345": 781, "interchang": 781, "tearless": 781, "desensit": 781, "interment": 781, "trichocyst": 781, "extramur": 781, "vegetoalkali": 781, "palmellacea": 781, "aesthetic": 781, "petrograph": 781, "visitatori": 781, "oleomargar": 781, "wrinkleproof": 781, "pricktimb": 781, "presidi": 781, "scitaminea": 781, "enteroscop": 781, "appal": 781, "turveydrop": 781, "thinghood": 781, "biserr": 781, "greenland": 781, "brutedom": 781, "polonian": 781, "acolhuan": 781, "laportea": 781, "teredo": 781, "mesol": 781, "unlimp": 781, "ostara": 781, "pili": 781, "dunt": 781, "onyx": 781, "kath": 781, "cdp": 782, "p3": [782, 789], "rover": 782, "p4": [782, 789], "unp": 782, "cwp": 782, "dove": 782, "flying_ostrich": 782, "ab1": 782, "ab2": 782, "ab3": 782, "flight": [782, 784, 805], "kneel": 783, "knelt": 783, "ring": 783, "rung": 783, "gumt": 783, "gdmt": 783, "gwmt": 783, "gdnt": 783, "15625": 783, "800": 783, "nt1": 784, "nt2": 784, "prod1": 784, "prod2": 784, "proc": 784, "unambigu": 784, "sentence1": 784, "sentence2": 784, "dolist": 784, "ati": 784, "large_grammar": 784, "5517": 784, "atis_sent": 784, "testsent": 784, "northwest": [784, 808], "detroit": 784, "7661": 784, "4986": 784, "1342": 784, "28352": 784, "itertool": [784, 786, 803], "islic": [784, 803], "toy_pcfg2": 784, "ran": [784, 799], "jack": 784, "agnew": 784, "0714286": 784, "consolid": 784, "142857": 784, "133333": 784, "0666667": 784, "queu": 784, "31607e": 784, "03744e": 784, "07": [784, 803, 805], "nr_tree": 784, "isawjohn": 784, "whatwasthat": 784, "thislovesthat": 784, "fcp1": 784, "fcp2": 784, "elementari": 785, "vamo": 785, "introductori": 785, "ptext1": 785, "psent1": 785, "mem\u00f3ria": 785, "p\u00f3stuma": 785, "br\u00e1": 785, "cuba": 785, "1881": 785, "ptext2": 785, "casmurro": 785, "1899": 785, "ptext3": 785, "g\u00eanesi": 785, "ptext4": 785, "folha": 785, "olho": 785, "138": [785, 791], "p\u00e9": 785, "cabeceira": 785, "cama": 785, "est\u00fapido": 785, "boca": 785, "entreaberta": 785, "orelha": 785, "pela": 785, "minha": 785, "fechei": 785, "deixei": 785, "ventura": 785, "j\u00e1": 785, "agor": 785, "x\u00f5e": 785, "c\u00e9rebro": 785, "enfermo": 785, "como": 785, "ia": 785, "fechado": 785, "n\u00e3o": 785, "caminho": 785, "lembr": 785, "gelo": 785, "eterno": 785, "efeito": 785, "abri": 785, "meu": 785, "galopava": 785, "numa": 785, "apareceu": 785, "ent\u00e3o": 785, "fitando": 785, "rutilant": 785, "sol": 785, "tudo": 785, "nessa": 785, "mim": 785, "mesmo": 785, "encarei": 785, "s\u00faplice": 785, "pedi": 785, "algun": 785, "chegar": 785, "acabada": 785, "acudir": 785, "aludir": 785, "avistar": 785, "bramanismo": 785, "casamento": 785, "cheguei": 785, "contar": 785, "contr\u00e1rio": 785, "corpo": 785, "dali": 785, "desferirem": 785, "dizer": 785, "fazer": 785, "filho": 785, "leitor": 785, "lhe": 785, "achar": 785, "alumiar": 785, "arrombar": 785, "destruir": 785, "governar": 785, "guardar": 785, "lavrar": 785, "passar": 785, "toda": 785, "tomar": 785, "ver": 785, "vir": 785, "quinca": 785, "borba": 785, "lobo": 785, "neve": 785, "alguma": 785, "coisa": 785, "dia": 785, "seguint": 785, "sei": 785, "outra": 785, "vez": 785, "por": [785, 796, 803], "exemplo": 785, "nenhuma": 785, "mesma": 785, "era": 785, "depoi": 785, "passeio": 785, "p\u00fablico": 785, "olhar": 785, "babavam": 785, "mole": 785, "espraiavam": 785, "chamejant": 785, "espetado": 785, "princ\u00edpio": 785, "criou": 785, "deu": 785, "aben\u00e7o": 785, "dizendo": 785, "ond": 785, "est\u00e3o": 785, "at\u00e9": 785, "av": 785, "c\u00e9u": 785, "ser\u00e1": 785, "abr\u00e3o": 785, "d\u00e1": 785, "mulher": 785, "tomast": 785, "porqu": 785, "daquel": 785, "po\u00e7o": 785, "esequ": 785, "tinha": 785, "poderemo": 785, "descer": 785, "campo": 785, "ainda": 785, "estava": 785, "casa": 785, "teu": 785, "pesco\u00e7o": 785, "viveu": 785, "serugu": 785, "sime\u00e3o": 785, "levi": 785, "s\u00e3o": [785, 808], "var\u00e3o": 785, "habitava": 785, "terra": 785, "m\u00e3o": 785, "esa\u00fa": 785, "je\u00fa": 785, "jal\u00e3o": 785, "cor\u00e1": 785, "amor": 785, "xf3ria": 785, "verdadeirament": 785, "humana": 785, "xe1": 785, "homem": 785, "conseq": 785, "xfcentement": 785, "sua": 785, "genu": [785, 803], "xedna": 785, "fei": 785, "xe3o": [785, 803], "xf3": 785, "conseq\u00fcentement": 785, "fei\u00e7\u00e3o": 785, "genu\u00edna": 785, "gl\u00f3ria": 785, "h\u00e1": 785, "psent2": 785, "dicion\u00e1rio": 785, "comprehens": [785, 806, 808], "xc3o": 785, "dicion": 785, "xc1rio": 785, "endswith": 785, "nort": 785, "irlandes": 785, "nacionalismo": 785, "predominatement": 785, "primeiro": 785, "irlandesa": 785, "americana": 785, "responsabilidad": 785, "significativament": 785, "fd1": [785, 786], "10848": 785, "77098": 785, "x97": 785, "xe9": 785, "virg": 785, "xedlia": 785, "xcdtulo": 785, "muito": 785, "foi": 785, "ela": 785, "nos": 785, "nem": 785, "outro": 785, "vida": 785, "nada": 785, "tempo": 785, "meno": 785, "quando": 785, "pouco": 785, "ess": 785, "assim": 785, "ent": 785, "dizia": 785, "assi": 785, "conto": 785, "macn001": 785, "macn002": 785, "macn003": 785, "posthum": 785, "raw_text": 785, "marm05": 785, "10200": 785, "primou": 785, "nestado": 785, "amigo": 785, "rei": 785, "cunha": 785, "ncomo": 785, "apelido": 785, "ncheirass": 785, "excessivament": 785, "tanoaria": 785, "alegava": 785, "bisneto": 785, "dami": 785, "ndito": 785, "mem": 785, "xf3stuma": 785, "target_word": 785, "fd": [785, 786, 797], "ch\u00e3o": 785, "estar": 785, "costura": 785, "fito": 785, "naquel": 785, "morpho": 785, "brazilian": [785, 808], "journalist": 785, "daili": 785, "newspap": 785, "jersei": 785, "ating": 785, "xe9dia": 785, "cr": 785, "milh": 785, "venda": 785, "pinhal": 785, "viagem": 785, "exposi": 785, "nacion": 785, "zeb": 785, "xe7a": 785, "cur": [785, 803], "nprop": 785, "proadj": 785, "ks": 785, "sinta": 785, "tica": 785, "linguateca": 785, "revivalismo": 785, "refrescant": 785, "7_e_meio": 785, "tword": 785, "libri": 785, "211852": 785, "29421": 785, "pcp": 785, "indp": 785, "xab": [785, 796], "xbb": [785, 796, 797], "noit": 785, "algarvia": 785, "utt": 785, "sta": 785, "fcl": 785, "sc": 785, "psent": 785, "testdir": 785, "meio": 785, "xc9": 785, "dar": 785, "anduru": 785, "suficient": 785, "volta": 785, "resultado": 785, "blico": 785, "veio": 785, "imprensa": 785, "ria": 785, "portuguesa": 785, "fartura": 785, "pensamento": 785, "pode": 785, "mau": 785, "quer": 785, "pol": [785, 803], "ial": 785, "incorporar": 785, "forma": 785, "tem": 785, "constantino": 785, "tamb": 785, "pap": 785, "assinado": 785, "va": 785, "brincar": 785, "poi": 785, "procura": 785, "enquanto": 785, "rica": 785, "ant": 785, "doto": 785, "capaz": 785, "sentido": 785, "seu": 785, "poder": 785, "vender": 785, "recebido": 785, "encomenda": 785, "blindado": 785, "iraqu": 785, "rico_amorim": 785, "caso": 785, "conseguiss": 785, "lote": 785, "empr": 785, "mpre": 785, "ter": 785, "joven": 785, "simp": 785, "tico": 785, "chega": 785, "governo": 785, "vai": 785, "desd": 785, "vel": 785, "ndiciou": 785, "ontem": 785, "dua": 785, "pessoa": 785, "carro": [785, 803], "gio": 785, "inten": 785, "fleuri": 785, "equilibrar": 785, "tsent": 785, "tagger0": 785, "17697228144989338": 785, "87029140014214645": 785, "89019189765458417": 785, "1005": 785, "verdad": 785, "parecia": 785, "seria": 785, "crian\u00e7a": 785, "folgar": 785, "mo\u00e7a": 785, "quieta": 785, "impass\u00edvel": 785, "compostura": 785, "casada": 785, "talvez": 785, "essa": 785, "circunst\u00e2ncia": 785, "diminu\u00eda": 785, "gra\u00e7a": 785, "virgin": 785, "depressa": 785, "familiarizamo": 785, "m\u00e3e": 785, "fazia": 785, "elogio": 785, "escutava": 785, "boa": 785, "sombra": 785, "sorria": 785, "f\u00falgido": 785, "l\u00e1": 785, "dentro": 785, "estivess": 785, "voar": 785, "borboletinha": 785, "asa": 785, "ouro": 785, "diamant": 785, "digo": 785, "c\u00e1": 785, "fora": 785, "esvoa\u00e7": 785, "borboleta": 785, "preta": 785, "subitament": 785, "varanda": 785, "come\u00e7": 785, "bater": 785, "derredor": 785, "eus\u00e9bia": 785, "grito": 785, "levant": 785, "praguej": 785, "palavra": 785, "solta": 785, "esconjuro": 785, "stok": 785, "antiga": 785, "discoteca": 785, "algarv": 785, "situada": 785, "albufeira": 785, "continua": 785, "manter": 785, "tra": 785, "xe7o": 785, "decorativo": 785, "clientela": 785, "sempr": 785, "xe9ci": 785, "xaboutro": 785, "lado": 785, "entr": 785, "devaneio": 785, "fauna": 785, "perif": 785, "xe9rica": 785, "seja": 785, "lisboa": 785, "londr": [785, 803], "dublin": 785, "ou": 785, "faro": 785, "portim": 785, "postura": 785, "circunspecta": 785, "xe9i": 785, "dela": 785, "esperam": 785, "xfasica": 785, "xabgeracionista": 785, "deixa": 785, "correm": 785, "certo": 785, "xabveri": 785, "algarvio": 785, "cabe": 785, "cartaz": 785, "querem": 785, "fugir": 785, "movimenta": 785, "xf5e": 785, "nocturna": 785, "ritualiza": 785, "massa": 785, "xe9nero": 785, "xabvamo": 785, "calypso": 785, "encontramo": 785, "locomia": 785, "xe9rio": 785, "planeamento": 785, "administra": 785, "territ": 785, "xf3rio": 785, "gasta": 785, "pagamento": 785, "pessoal": 785, "afecto": 785, "organismo": 785, "xeam": 785, "juntar": 785, "montant": 785, "obra": 785, "propriament": 785, "dita": 785, "munic": 785, "xedpio": 785, "projecto": 785, "reivindicar": 785, "junto": 785, "executivo": 785, "salienta": 785, "membro": 785, "dinheiro": 785, "xabn": 785, "falta": 785, "xe2mara": 785, "lembra": 785, "xe1rio": 785, "estado": 785, "considera": 785, "solu": 785, "autarquia": 785, "xabespecializarem": 785, "fundo": 785, "comunit": 785, "muita": 785, "disp": 785, "xf5em": 785, "xe9cnico": 785, "necess": 785, "xabencomendem": 785, "projectista": 785, "vierem": 785, "financiada": 785, "saem": 785, "gra": 785, "xabo": 785, "pagam": 785, "acontecendo": 785, "feito": 785, "pelo": 785, "gat": 785, "dado": 785, "serem": 785, "hip": 785, "xf3tese": 785, "terreno": 785, "capacidad": 785, "cada": 785, "enfraquecida": 785, "desapareceram": 785, "castro": 785, "verd": 785, "vindo": 785, "perder": 785, "retrain": 785, "aquilo": 785, "13444": 785, "7725": 785, "2369": 785, "2310": 785, "1305": 785, "1086": 785, "1047": 785, "1044": 785, "897": 785, "633": 785, "516": 785, "466": 785, "sobr": 785, "349": 785, "313": 785, "301": [785, 791], "292": 785, "279": 785, "segundo": 785, "249": 785, "doi": 785, "231": 785, "fish": 786, "porpois": 786, "indetermin": 786, "both_most_common": 786, "ys": 786, "groupbi": 786, "fd2": 786, "abbb": 786, "bcc": 786, "abbbc": 786, "bccd": 786, "cfd1": 786, "abbbb": 786, "xxxxyi": 786, "cfd2": 786, "bbccc": 786, "xxxyyyzz": 786, "tag_set": 786, "1464": 786, "train_corpu": 786, "test_corpu": 786, "450": 786, "train_and_test": 786, "r7209": 786, "zerodivisionerror": 786, "1e5": 786, "906": 786, "1341": 786, "511": 786, "aab": 786, "_cumulative_frequ": 786, "579": [786, 791], "351": 786, "inadvert": 786, "errant": 786, "blah": 786, "175": [786, 803], "017649766667026317": 786, "08433050215340411": 786, "022727272727272728": 786, "pd": 786, "dpd": 786, "unpickl": 786, "011363636": 786, "cfd": 786, "cpd": 786, "cpd2": 786, "pb_instanc": 787, "infl": 787, "arg1": 787, "arg4": 787, "arg3": 787, "rose": 787, "worker": 787, "expose_01": 787, "turn_01": 787, "turner": 787, "agent": 787, "9353": 787, "9352": 787, "wsj_0199": 787, "triniti": 787, "wsj_0200": 787, "abat": 787, "abdic": 787, "abet": 787, "abid": 787, "standardli": 788, "subtask": 788, "064": 788, "cohn": [788, 810], "partner": 788, "mcglashan": 788, "sarrail": 788, "firm": 788, "san": 788, "mateo": 788, "calif": 788, "ned": [788, 796], "het": 788, "hof": 788, "cassati": 788, "verbrak": 788, "zodat": 788, "moest": 788, "worden": 788, "overgedaan": 788, "door": 788, "beroep": 788, "antwerpen": 788, "string1": 788, "tree1": 788, "string2": 788, "tree2": [788, 799], "string3": 788, "tree3": 788, "cyberia": 788, "transact": [788, 805], "white_hous": 788, "untagged_fil": 788, "christian": 788, "democrat": 788, "polit": 788, "itali": 788, "lebanes": 788, "guerrilla": 788, "attack": 788, "isra": 788, "lebanon": 788, "secur": [788, 808], "council": 788, "425": 788, "yellow": 788, "hung": 788, "beirut": 788, "peacekeep": 788, "somalia": 788, "explod": 788, "mosqu": 788, "krasnoy": 788, "sormovo": 788, "shipyard": 788, "soviet": 788, "gorki": 788, "kelab": 788, "darul": 788, "ridzuan": 788, "perak": 788, "whyi": 788, "philadelphia": 788, "freedom": 788, "arlington": 788, "idealab": 788, "incub": 788, "angel": [788, 796], "waterloo": 788, "analyst": 788, "chair": 788, "wo": 788, "commission": 788, "counsel": 788, "economist": 788, "foreman": 788, "lawyer": 788, "leader": 788, "librarian": 788, "professor": 788, "spoke": 788, "sof": 788, "sthe": 788, "kivutha": 788, "kibwana": 788, "boban": 788, "boskov": 788, "plastika": 788, "annan": 788, "saharan": 788, "african": 788, "kiriyenko": 788, "godwin": 788, "sp": 788, "tribunal_supremo": 788, "victoria": 788, "museo_de_art": 788, "alcorc": 788, "xf3n": 788, "museo_de_bellas_art": 788, "a_coru": 788, "xf1a": 788, "siria": 788, "xedbano": 788, "xf3n_europea": 788, "pek": 788, "xedn": 788, "ej": 788, "xe9rcito": 788, "rogberi": 788, "juzgado_de_instrucci": 788, "xf3n_n": 788, "xfamero_1": 788, "san_sebasti": 788, "xe1n": 788, "psoe": 788, "villanueva_de_la_serena": 788, "juzgado_de_lo_penal_n": 788, "xfamero_2": 788, "ceuta": 788, "vnv": 788, "werd": 788, "wordt": 788, "cornet_d": 788, "elziu": 788, "buitenlandse_handel": 788, "johan_rotti": 788, "kardinaal_van_roey_instituut": 788, "annie_lennox": 788, "eurythm": 788, "e0": 789, "father_of": 789, "parent_of": 789, "mother_of": 789, "caught": 790, "sem2": 790, "synrep": 790, "semrep": 790, "tn": 790, "null_binary_rel": 790, "suzi": 790, "tess": 790, "noosa": 790, "val0": 790, "dom0": 790, "m0": 790, "g0": 790, "val1": 790, "testvalu": 790, "semvalu": 790, "parsed_expr": 790, "sorted_set": 790, "sue": 790, "z22": 790, "fmla": 790, "pumpkin": 790, "honey_bunni": 790, "yolanda": 790, "robber": 790, "dom1": 790, "m1": 790, "val2": 790, "dom2": 790, "m2": 790, "g21": 790, "joke": 790, "episod": 790, "d8": 790, "val3": 790, "dom3": 790, "m3": 790, "tasti": 790, "burger": 790, "valuation1": 790, "semrel": 790, "cs_semrep": 790, "subj_doc": 791, "obj_doc": 791, "train_subj_doc": 791, "test_subj_doc": 791, "train_obj_doc": 791, "test_obj_doc": 791, "training_doc": 791, "testing_doc": 791, "sentim_analyz": 791, "all_words_neg": 791, "unigram_feat": 791, "handsom": 791, "booster": 791, "allcap": 791, "uncompel": 791, "horribl": 791, "sux": 791, "slang": [791, 803], "lol": 791, "constrast": 791, "lines_list": 791, "tricky_sent": 791, "beatti": 791, "entertain": [791, 808], "banal": 791, "hate": 791, "bai": [791, 808], "fault": 791, "BUT": 791, "boll": 791, "witti": 791, "wit": 791, "ugli": 791, "charm": 791, "spice": 791, "fantast": 791, "decent": 791, "cinematographi": 791, "excel": 791, "roger": 791, "dodger": 791, "compel": 791, "warranti": 791, "expir": 791, "twin": 791, "carter": 791, "solemnli": 791, "kidnap": 791, "8316": 791, "neu": 791, "254": 791, "746": 791, "8439": 791, "248": 791, "752": 791, "8545": 791, "299": 791, "701": 791, "9227": 791, "246": 791, "754": 791, "9342": 791, "767": 791, "9469": 791, "294": 791, "706": 791, "4404": 791, "508": 791, "492": 791, "3832": 791, "657": 791, "7042": 791, "327": 791, "094": 791, "8211": 791, "209": 791, "431": 791, "363": 791, "7925": 791, "876": 791, "3612": 791, "714": 791, "286": 791, "4199": 791, "736": 791, "264": 791, "5461": 791, "779": 791, "5249": 791, "517": 791, "344": 791, "7584": 791, "394": 791, "606": 791, "6572": 791, "686": 791, "314": 791, "4767": 791, "756": 791, "244": 791, "6281": 791, "674": 791, "326": 791, "5423": 791, "538": 791, "462": 791, "5849": 791, "655": 791, "345": 791, "6732": 791, "694": 791, "7398": 791, "724": 791, "276": 791, "7616": 791, "265": 791, "5574": 791, "625": 791, "6124": 791, "556": 791, "3412": 791, "675": 791, "5228": 791, "703": 791, "297": 791, "5777": 791, "616": 791, "384": 791, "4215": 791, "851": 791, "3153": 791, "534": 791, "309": 791, "1531": 791, "277": 791, "477": 791, "2541": 791, "6759": 791, "1338": 791, "497": 791, "239": 791, "3553": 791, "493": 791, "192": 791, "4678": 791, "079": 791, "186": 791, "7565": 791, "092": 791, "607": 791, "2944": 791, "834": 791, "166": 791, "1695": 791, "2263": 791, "6369": 791, "588": 791, "412": 791, "2732": 791, "656": 791, "5859": 791, "697": 791, "074": 791, "rd": 793, "pluralis": 794, "caress": 794, "fli": 794, "mule": 794, "humbl": 794, "siez": 794, "sensat": 794, "tradit": 794, "stemmer2": 794, "885931": 795, "7647": 795, "8667": 795, "5882": 795, "6897": 795, "9630": 795, "8525": 795, "9231": 795, "5556": 795, "245014": 795, "581196": 795, "lacklust": 795, "7537647": 795, "9674": 795, "2738": 795, "4269": 795, "4111": 795, "9136": 795, "5670": 795, "9383": 795, "9580": 795, "9480": 795, "9819": 795, "9314": 795, "8167": 795, "2970": 795, "4356": 795, "7393": 795, "8365": 795, "8345": 795, "9098": 795, "7431": 795, "9872": 795, "9935": 795, "9355": 795, "9667": 795, "7778": 795, "3684": 795, "9375": 795, "4545": 795, "7447": 795, "7609": 795, "9643": 795, "7714": 795, "6415": 795, "7640": 795, "6471": 795, "5789": 795, "6111": 795, "8182": 795, "2667": 795, "truli": 795, "115": 795, "163": 795, "228": 795, "296": 795, "199": 795, "156": 795, "618": 795, "7704": 795, "496": 795, "7948": 795, "915": 795, "085": 795, "769230": 795, "8298": 795, "5021": 795, "4435": 795, "8364": 795, "5797": 795, "8476": 795, "8994": 795, "7464": 795, "8410": 795, "8414": 795, "9139": 795, "6723": 795, "8696": 795, "7583": 795, "8103": 795, "8246": 795, "8174": 795, "9130": 795, "4200": 795, "5753": 795, "6905": 795, "8056": 795, "6316": 795, "271": 795, "117": 795, "mortgag": 796, "monthli": 796, "payment": 796, "beat": 796, "slocum": 796, "clich": 796, "ridden": 796, "creator": [796, 806], "masiu": 796, "wanna": 796, "spent": 796, "s6": 796, "s7": 796, "arriv": 796, "s8": 796, "pencil": 796, "pen": 796, "s9": 796, "s10": 796, "s11": 796, "sx1": 796, "xabnow": 796, "sx2": 796, "201c": 796, "201d": 796, "u201cleft": 796, "quotat": 796, "u201d": 796, "u201c": 796, "otherwai": 796, "s12": 796, "muss": 796, "unbedingt": 796, "daran": 796, "denken": 796, "mehl": 796, "usw": 796, "fur": 796, "einen": 796, "kuchen": 796, "einzukaufen": 796, "ala": 796, "relax": 796, "vigil": 796, "n0": 796, "rai": 796, "aabbbcccc": 796, "joyster2012": 796, "cathstaincliff": 796, "3point": 796, "dreamteam": 796, "gooo": 796, "bailei": 796, "pbb737gold": 796, "pbbabscbn": 796, "insanomania": 796, "Their": 796, "mental": 796, "facugamband": 796, "arrancar": 796, "grabar": 796, "tirentirentiren": 796, "vamoo": 796, "crushingh": 796, "summer": [796, 808], "holidai": 796, "_willy65": 796, "chuck": 796, "mar_tin": 796, "jrmy": 796, "happyyi": 796, "niceee": 796, "hang": 796, "photo": 796, "aujourd": 796, "hui": 796, "sur": 796, "0gebofduzn": 796, "projet": 796, "bkfiubydz2": 796, "fb": 796, "3b6uxpz0l": 796, "splitter": 796, "pst2": 796, "_param": 796, "2067": 796, "pbc": 796, "_lang_var": 796, "abcdef": 796, "efg": 796, "unpickel": 796, "tthe": 796, "committe": 796, "hvd": 796, "deserv": 796, "prais": 796, "septemb": [796, 808], "octob": [796, 808], "superior": 796, "durwood": 796, "pye": 796, "fought": 796, "mayor": 796, "ivan": 796, "allen": 796, "jr": 796, "mkstemp": 797, "fdopen": 797, "nline": 797, "IT": 797, "nmore": 797, "nand": 797, "bom": 797, "xef": 797, "mk": 797, "this_is_an_extremely_long_mark": 797, "0123456789": 797, "tanoth": 797, "rthird": 797, "ffourth": 797, "fa": 797, "td": 797, "_sh": 797, "_datestamphasfourdigityear": 797, "kaa": 797, "gag": 797, "gp": 797, "nek": 797, "pa": 797, "strangl": 797, "pasim": 797, "toolbox_data": 797, "resumpt": 798, "repris": 798, "boat": 798, "em_ibm1": 798, "com_ibm1": 798, "bitt": 798, "sitzungsperiod": 798, "expert": [798, 810], "my_al": 798, "proport": 798, "och2000": 798, "66666": 798, "mihalcea2003": 798, "koehn2010": 798, "errata": 798, "333333": 798, "222222": 798, "eamt": 798, "mihalcea": 798, "dp1": 799, "dp2": 799, "fanci": 799, "enjoi": 799, "milk": 799, "mil": 799, "coo": 799, "_________________": 799, "__________________": [799, 800], "placenta": 799, "vertebra": 799, "te": 799, "domest": [799, 803], "_anim": 799, "living_t": 799, "hing": 799, "physic": 799, "_entiti": 799, "broken_tre": 799, "on_and_on": 799, "conjp": 799, "cojn": 799, "second_on": 799, "all_ptre": 799, "make_ptre": 799, "pcheck": 799, "print_ptre": 799, "tricki": 799, "shallowli": 799, "whnp": 799, "copy_tre": 799, "forbidden": 799, "copy_ptre": 799, "mptree": 799, "copy_mptre": 799, "iptre": 799, "newnod": 799, "all_mptre": 799, "make_mptre": 799, "mpcheck": 799, "print_mptre": 799, "ight": 799, "unexplain": 799, "imptre": 799, "prtree": 799, "imprtre": 799, "6270": 799, "2478": 799, "tree_load": 799, "1324": 799, "2170": 800, "adjp": [800, 801], "prd": 800, "clr": 800, "tpp": 800, "_____________________": 800, "____________________": 800, "superconductor": 800, "electr": 800, "phr": 800, "supercon": 800, "ductor": 800, "iti": 800, "smain": 800, "haar": 800, "moeder": 800, "kunnen": 800, "gaan": 800, "winkelen": 800, "zwemmen": 800, "terrassen": 800, "______________________________________________": 800, "deprecationwarn": 800, "advp": 801, "shane": 801, "longman": 801, "yuppi": 801, "dealer": [801, 805], "collapsedtre": 801, "collapsedtree2": 801, "cnftree": 801, "emploi": 801, "markovtre": 801, "sdf123": 802, "sdf": 802, "compact": 803, "frump": 803, "cad": 803, "frank": 803, "pawl": 803, "andiron": 803, "cani": 803, "prehistor": 803, "breed": 803, "domestic_dog": 803, "canis_familiari": 803, "x8a": 803, "xac": 803, "jpn": 803, "spy": 803, "\u307e\u308f\u3057\u8005": 803, "\u30b9\u30d1\u30a4": 803, "\u56de\u3057\u8005": 803, "\u56de\u8005": 803, "\u5bc6\u5075": 803, "\u5de5\u4f5c\u54e1": 803, "\u5efb\u3057\u8005": 803, "\u5efb\u8005": 803, "\u63a2": 803, "\u63a2\u308a": 803, "\u72ac": 803, "\u79d8\u5bc6\u635c\u67fb\u54e1": 803, "\u8adc\u5831\u54e1": 803, "\u8adc\u8005": 803, "\u9593\u8005": 803, "\u9593\u8adc": 803, "\u96a0\u5bc6": 803, "arb": 803, "bul": 803, "cmn": 803, "glg": 803, "heb": 803, "hrv": 803, "isl": 803, "ita": 803, "ita_iwn": 803, "lit": 803, "nld": 803, "nno": 803, "nob": 803, "ron": 803, "slk": 803, "slv": 803, "spa": 803, "swe": 803, "tha": 803, "zsm": 803, "cane": 803, "cramp": 803, "hammer": 803, "bad_person": 803, "incompet": 803, "xf8ter": 803, "vovhund": 803, "vovs": 803, "cachorra": 803, "cachorro": 803, "cadela": 803, "dog_lemma": 803, "xc3": 803, "xa3o": 803, "66031": 803, "automobil": 803, "motorcar": 803, "railcar": 803, "railroad_car": 803, "railway_car": 803, "gondola": 803, "elevator_car": 803, "cable_car": 803, "coch": 803, "autom\u00f3vil": 803, "m\u00e1quina": 803, "turismo": 803, "veh\u00edculo": 803, "automotor": 803, "vag\u00f3n": 803, "vag\u00f3n_de_pasajero": 803, "basenji": 803, "corgi": 803, "dalmatian": 803, "4543158": 803, "wagon": 803, "likewis": 803, "feeblemind": 803, "retard": 803, "corrod": 803, "somebodi": 803, "stretch": 803, "slap": 803, "028": 803, "312": 803, "857": 803, "brown_ic": 803, "semcor_": 803, "genesis_": 803, "449": 803, "285": 803, "886": 803, "congen": 803, "bentho": 803, "hypo": 803, "great_pyrene": 803, "griffon": 803, "hunting_dog": 803, "lapdog": 803, "leonberg": 803, "mexican_hairless": 803, "newfoundland": 803, "pooch": 803, "poodl": 803, "ledger": 803, "koran": 803, "bibl": 803, "picasso": 803, "631": 803, "2278": 803, "2650": 803, "titan": 803, "scriptur": 803, "623": 803, "161": 803, "jefferson": 803, "jcn": [803, 808], "tow": 803, "shlep": 803, "428": 803, "lincoln": 803, "430": 803, "470": 803, "484": 803, "427": 803, "pant": 803, "bloomer": 803, "trouser": 803, "gasp": 803, "482": 803, "lemmatis": 803, "leg": 803, "284": 803, "335": 803, "571": 803, "224": 803, "075": 803, "252": 803, "541": 803, "pukka": 803, "freaki": 803, "629": 803, "brunch": 803, "395": 803, "policeman": [803, 804], "1641": 803, "united_kingdom": 803, "2065": 803, "in_topic_domain": 803, "access_tim": 803, "in_region_domain": 803, "in_usage_domain": 803, "2721": 803, "fakecorpu": 803, "fake_": 803, "3077": 803, "emerg": [803, 805], "ideolog": 803, "_scc_": 803, "758": 803, "scc": 803, "realist": 803, "genuin": 803, "sincer": 803, "tangibl": 803, "subgraph": 803, "bf": 803, "wordnet31": 803, "wn31": 803, "restrain": 803, "inhibit": 803, "enchain": 803, "fetter": 803, "impound": 803, "pen_up": 803, "pinion": 803, "tie_down": 803, "baffl": 803, "_unload": 803, "kin": 804, "lch": 804, "09": [804, 805], "sidereal_dai": 804, "girlfriend": 804, "0a2": [804, 808], "land": 805, "besid": 805, "water": 805, "depository_financial_institut": 805, "lend": 805, "ridg": 805, "pile": 805, "tier": 805, "fund": [805, 808], "gambl": 805, "road": 805, "centrifug": 805, "aircraft": 805, "longitudin": 805, "axi": 805, "banker": 805, "ash": 805, "burn": 805, "trust": 805, "industri": 806, "alongsid": 806, "alik": 806, "linux": 806, "amaz": 806, "book_1": 806, "clock": 806, "thursdai": [806, 808], "arthur": 806, "install3": 807, "win": 807, "virtualenv": 807, "anaconda": 807, "pip": 807, "easy_instal": 807, "python38": 807, "unsur": 807, "januari": 808, "rce": 808, "xss": 808, "tackl": 808, "__add__": 808, "tile": 808, "acion": 808, "critic": 808, "nonexist": 808, "2860": 808, "newer": 808, "levenstein": 808, "zjw": 808, "lint": 808, "hint": 808, "refactor": 808, "cistem": 808, "pyupgrad": 808, "cleanup": 808, "travi": 808, "compromis": 808, "cve": 808, "mitr": 808, "cgi": 808, "cvenam": 808, "14751": 808, "novemb": 808, "incl": 808, "krippendorf": 808, "rater": 808, "reliabl": 808, "jenkin": 808, "pep8": 808, "lgtm": 808, "tnt": 808, "rewrit": 808, "0b2": 808, "0b1": 808, "0a4": 808, "changelog": 808, "20141018104200": 808, "0a1": 808, "0a0": 808, "grant": 808, "sponsor": 808, "mikhail": [808, 810], "korobov": [808, 810], "pyfound": 808, "blogspot": 808, "assist": 808, "kivi": 808, "1rc4": 808, "1rc3": 808, "1rc2": 808, "googlecod": 808, "1rc1": 808, "jacob": 808, "perkin": 808, "250": 808, "packt": 808, "royalti": 808, "donat": 808, "masato": 808, "hagiwara": 808, "oreilli": 808, "9784873114705": 808, "0b9": 808, "ubuntu": 808, "lucid": 808, "lynx": 808, "robin": 808, "munn": 808, "0b": 808, "opportun": 808, "hardcopi": 808, "ebook": 808, "catalog": 808, "9780596516499": 808, "seller": 808, "isbndb": 808, "natural_language_processing_with_python": 808, "corefer": 808, "joseph": 808, "fraze": 808, "hosam": 808, "algasai": 808, "undergon": 808, "lippincott": 808, "joel": [808, 810], "nothman": [808, 810], "bethard": 808, "jordan": 808, "boyd": 808, "graber": 808, "paul": 808, "garrett": [808, 810], "pe08": 808, "basqu": 808, "feedback": 808, "narad": 808, "tigersearch": 808, "torsten": 808, "marek": 808, "grate": 808, "incept": 808, "newcom": 808, "mallet": 808, "undergo": 808, "nlg": 808, "petro": 808, "verkhogliad": 808, "graem": 808, "gang": 808, "multidisciplinari": 808, "linuxfest": 808, "boisen": 808, "bellingham": 808, "semanticb": 808, "mentor": 808, "sebastian": 808, "riedel": 808, "baldridg": 808, "dale": 808, "sponsorship": 808, "moin": 808, "summerofcod": 808, "checker": 808, "jussi": 808, "salmela": 808, "kexw_5": 808, "lld0": 808, "1h15m": 808, "roth": 808, "21578": 808, "recognis": 808, "thoma": 808, "jakobsen": 808, "skardal": 808, "aumann": 808, "programm": 808, "redesign": 808, "macintosh": 808, "9b2": 808, "floresta": 808, "9b1": 808, "macmorphi": 808, "telephon": 808, "patient": 808, "leaflet": 808, "fieldwork": 808, "stuart": 808, "robinson": 808, "crossroad": 808, "madnani": 808, "tomcavag": 808, "huston": 808, "340": 808, "kimmo": 808, "lambek": 808, "ormiston": 808, "yoav": 808, "goldberg": 808, "codebas": 808, "280": 808, "7b1": 808, "prototyp": 808, "shoebox": 808, "10k": 808, "mileston": 808, "nine": 808, "induct": 808, "bodenstab": 808, "paradigm": 808, "spiller": 808, "hardi": 808, "jean": 808, "gawron": 808, "tiago": 808, "tresoldi": 808, "streamlin": 808, "herm": 808, "aarsen": 810, "tomaarsen": 810, "nijmegen": 810, "rewrot": 810, "triag": 810, "2020": 810, "jnothman": 810, "sydnei": 810, "australia": 810, "stevenbird": 810, "darwin": 810, "alexi": 810, "dimitradi": 810, "alexisdimi": 810, "utrecht": 810, "danni": 810, "sepler": 810, "dannysepl": 810, "assur": 810, "dmitrij": 810, "milajev": 810, "dimazest": 810, "oakland": 810, "franci": 810, "bond": 810, "fcbond": 810, "ilia": 810, "kurenkov": 810, "iliakur": 810, "purific": 810, "2018": 810, "lile": 810, "tan": 810, "alvat": 810, "saarbrucken": 810, "dhgarrett": 810, "austin": 810, "ljungl\u00f6f": 810, "heatherleaf": 810, "gothenburg": 810, "sweden": 810, "kmike": 810, "ekaterinburg": 810, "russia": 810, "alexrudnick": 810, "edlop": 810, "baltimor": 810, "trevor": 810, "trevorcohn": 810, "melbourn": 810, "pierpaolo": 810, "panton": 810, "fievelk": 810, "georgetown": 810, "\u00e1lvaro": 810, "justen": 810, "turica": 810, "morten": 810, "neergaard": 810, "xim": 810}, "objects": {"": [[0, 0, 0, "-", "nltk"]], "nltk": [[1, 0, 0, "-", "app"], [19, 0, 0, "-", "book"], [20, 0, 0, "-", "ccg"], [48, 0, 0, "-", "chat"], [60, 0, 0, "-", "chunk"], [77, 0, 0, "-", "classify"], [92, 0, 0, "-", "cli"], [93, 0, 0, "-", "cluster"], [99, 0, 0, "-", "collections"], [100, 0, 0, "-", "collocations"], [104, 0, 0, "-", "compat"], [105, 0, 0, "-", "corpus"], [225, 0, 0, "-", "data"], [226, 0, 0, "-", "decorators"], [0, 1, 1, "", "demo"], [227, 0, 0, "-", "downloader"], [231, 0, 0, "-", "draw"], [243, 0, 0, "-", "featstruct"], [256, 0, 0, "-", "grammar"], [268, 0, 0, "-", "help"], [269, 0, 0, "-", "inference"], [289, 0, 0, "-", "internals"], [290, 0, 0, "-", "jsontags"], [291, 0, 0, "-", "langnames"], [292, 0, 0, "-", "lazyimport"], [293, 0, 0, "-", "lm"], [309, 0, 0, "-", "metrics"], [345, 0, 0, "-", "misc"], [351, 0, 0, "-", "parse"], [408, 0, 0, "-", "probability"], [429, 0, 0, "-", "sem"], [470, 0, 0, "-", "sentiment"], [476, 0, 0, "-", "stem"], [496, 0, 0, "-", "tag"], [531, 0, 0, "-", "tbl"], [538, 0, 0, "-", "test"], [602, 0, 0, "-", "text"], [608, 0, 0, "-", "tgrep"], [616, 0, 0, "-", "tokenize"], [663, 0, 0, "-", "toolbox"], [667, 0, 0, "-", "translate"], [706, 0, 0, "-", "tree"], [727, 0, 0, "-", "treeprettyprinter"], [728, 0, 0, "-", "treetransforms"], [729, 0, 0, "-", "twitter"], [742, 0, 0, "-", "util"], [743, 0, 0, "-", "wsd"]], "nltk.app": [[2, 1, 1, "", "chartparser"], [3, 0, 0, "-", "chartparser_app"], [4, 1, 1, "", "chunkparser"], [5, 0, 0, "-", "chunkparser_app"], [6, 1, 1, "", "collocations"], [7, 0, 0, "-", "collocations_app"], [8, 1, 1, "", "concordance"], [9, 0, 0, "-", "concordance_app"], [10, 1, 1, "", "nemo"], [11, 0, 0, "-", "nemo_app"], [12, 1, 1, "", "rdparser"], [13, 0, 0, "-", "rdparser_app"], [14, 1, 1, "", "srparser"], [15, 0, 0, "-", "srparser_app"], [16, 0, 0, "-", "wordfreq_app"], [17, 1, 1, "", "wordnet"], [18, 0, 0, "-", "wordnet_app"]], "nltk.app.chartparser_app": [[3, 1, 1, "", "app"]], "nltk.app.chunkparser_app": [[5, 1, 1, "", "app"]], "nltk.app.collocations_app": [[7, 1, 1, "", "app"]], "nltk.app.concordance_app": [[9, 1, 1, "", "app"]], "nltk.app.nemo_app": [[11, 1, 1, "", "app"]], "nltk.app.rdparser_app": [[13, 1, 1, "", "app"]], "nltk.app.srparser_app": [[15, 1, 1, "", "app"]], "nltk.app.wordfreq_app": [[16, 1, 1, "", "app"]], "nltk.app.wordnet_app": [[18, 1, 1, "", "app"]], "nltk.book": [[19, 1, 1, "", "sents"], [19, 1, 1, "", "texts"]], "nltk.ccg": [[21, 2, 1, "", "BackwardApplication"], [22, 2, 1, "", "BackwardBx"], [23, 3, 1, "", "BackwardCombinator"], [24, 2, 1, "", "BackwardComposition"], [25, 2, 1, "", "BackwardSx"], [26, 2, 1, "", "BackwardT"], [27, 3, 1, "", "CCGChart"], [28, 3, 1, "", "CCGChartParser"], [29, 3, 1, "", "CCGEdge"], [30, 3, 1, "", "CCGLeafEdge"], [31, 3, 1, "", "CCGLexicon"], [32, 3, 1, "", "DirectedBinaryCombinator"], [33, 2, 1, "", "ForwardApplication"], [34, 3, 1, "", "ForwardCombinator"], [35, 2, 1, "", "ForwardComposition"], [36, 2, 1, "", "ForwardSubstitution"], [37, 2, 1, "", "ForwardT"], [38, 3, 1, "", "UndirectedBinaryCombinator"], [39, 3, 1, "", "UndirectedComposition"], [40, 3, 1, "", "UndirectedFunctionApplication"], [41, 3, 1, "", "UndirectedSubstitution"], [42, 3, 1, "", "UndirectedTypeRaise"], [43, 0, 0, "-", "api"], [44, 0, 0, "-", "chart"], [45, 0, 0, "-", "combinator"], [46, 0, 0, "-", "lexicon"], [47, 0, 0, "-", "logic"]], "nltk.ccg.BackwardCombinator": [[23, 4, 1, "", "__init__"], [23, 4, 1, "", "can_combine"], [23, 4, 1, "", "combine"]], "nltk.ccg.CCGChart": [[27, 4, 1, "", "__init__"], [27, 4, 1, "", "child_pointer_lists"], [27, 4, 1, "", "dot_digraph"], [27, 4, 1, "", "edges"], [27, 4, 1, "", "initialize"], [27, 4, 1, "", "insert"], [27, 4, 1, "", "insert_with_backpointer"], [27, 4, 1, "", "iteredges"], [27, 4, 1, "", "leaf"], [27, 4, 1, "", "leaves"], [27, 4, 1, "", "num_edges"], [27, 4, 1, "", "num_leaves"], [27, 4, 1, "", "parses"], [27, 4, 1, "", "pretty_format"], [27, 4, 1, "", "pretty_format_edge"], [27, 4, 1, "", "pretty_format_leaves"], [27, 4, 1, "", "select"], [27, 4, 1, "", "trees"]], "nltk.ccg.CCGChartParser": [[28, 4, 1, "", "__init__"], [28, 4, 1, "", "grammar"], [28, 4, 1, "", "lexicon"], [28, 4, 1, "", "parse"], [28, 4, 1, "", "parse_all"], [28, 4, 1, "", "parse_one"], [28, 4, 1, "", "parse_sents"]], "nltk.ccg.CCGEdge": [[29, 4, 1, "", "__init__"], [29, 4, 1, "", "categ"], [29, 4, 1, "", "dot"], [29, 4, 1, "", "end"], [29, 4, 1, "", "is_complete"], [29, 4, 1, "", "is_incomplete"], [29, 4, 1, "", "length"], [29, 4, 1, "", "lhs"], [29, 4, 1, "", "nextsym"], [29, 4, 1, "", "rhs"], [29, 4, 1, "", "rule"], [29, 4, 1, "", "span"], [29, 4, 1, "", "start"]], "nltk.ccg.CCGLeafEdge": [[30, 4, 1, "", "__init__"], [30, 4, 1, "", "categ"], [30, 4, 1, "", "dot"], [30, 4, 1, "", "end"], [30, 4, 1, "", "is_complete"], [30, 4, 1, "", "is_incomplete"], [30, 4, 1, "", "leaf"], [30, 4, 1, "", "length"], [30, 4, 1, "", "lhs"], [30, 4, 1, "", "nextsym"], [30, 4, 1, "", "rhs"], [30, 4, 1, "", "span"], [30, 4, 1, "", "start"], [30, 4, 1, "", "token"]], "nltk.ccg.CCGLexicon": [[31, 4, 1, "", "__init__"], [31, 4, 1, "", "categories"], [31, 4, 1, "", "start"]], "nltk.ccg.DirectedBinaryCombinator": [[32, 4, 1, "", "can_combine"], [32, 4, 1, "", "combine"]], "nltk.ccg.ForwardCombinator": [[34, 4, 1, "", "__init__"], [34, 4, 1, "", "can_combine"], [34, 4, 1, "", "combine"]], "nltk.ccg.UndirectedBinaryCombinator": [[38, 4, 1, "", "can_combine"], [38, 4, 1, "", "combine"]], "nltk.ccg.UndirectedComposition": [[39, 4, 1, "", "can_combine"], [39, 4, 1, "", "combine"]], "nltk.ccg.UndirectedFunctionApplication": [[40, 4, 1, "", "can_combine"], [40, 4, 1, "", "combine"]], "nltk.ccg.UndirectedSubstitution": [[41, 4, 1, "", "can_combine"], [41, 4, 1, "", "combine"]], "nltk.ccg.UndirectedTypeRaise": [[42, 4, 1, "", "can_combine"], [42, 4, 1, "", "combine"]], "nltk.ccg.api": [[43, 3, 1, "", "AbstractCCGCategory"], [43, 3, 1, "", "CCGVar"], [43, 3, 1, "", "Direction"], [43, 3, 1, "", "FunctionalCategory"], [43, 3, 1, "", "PrimitiveCategory"]], "nltk.ccg.api.AbstractCCGCategory": [[43, 4, 1, "", "can_unify"], [43, 4, 1, "", "is_function"], [43, 4, 1, "", "is_primitive"], [43, 4, 1, "", "is_var"], [43, 4, 1, "", "substitute"]], "nltk.ccg.api.CCGVar": [[43, 4, 1, "", "__init__"], [43, 4, 1, "", "can_unify"], [43, 4, 1, "", "id"], [43, 4, 1, "", "is_function"], [43, 4, 1, "", "is_primitive"], [43, 4, 1, "", "is_var"], [43, 4, 1, "", "new_id"], [43, 4, 1, "", "reset_id"], [43, 4, 1, "", "substitute"]], "nltk.ccg.api.Direction": [[43, 4, 1, "", "__init__"], [43, 4, 1, "", "can_compose"], [43, 4, 1, "", "can_cross"], [43, 4, 1, "", "can_unify"], [43, 4, 1, "", "dir"], [43, 4, 1, "", "is_backward"], [43, 4, 1, "", "is_forward"], [43, 4, 1, "", "is_variable"], [43, 4, 1, "", "restrs"], [43, 4, 1, "", "substitute"]], "nltk.ccg.api.FunctionalCategory": [[43, 4, 1, "", "__init__"], [43, 4, 1, "", "arg"], [43, 4, 1, "", "can_unify"], [43, 4, 1, "", "dir"], [43, 4, 1, "", "is_function"], [43, 4, 1, "", "is_primitive"], [43, 4, 1, "", "is_var"], [43, 4, 1, "", "res"], [43, 4, 1, "", "substitute"]], "nltk.ccg.api.PrimitiveCategory": [[43, 4, 1, "", "__init__"], [43, 4, 1, "", "can_unify"], [43, 4, 1, "", "categ"], [43, 4, 1, "", "is_function"], [43, 4, 1, "", "is_primitive"], [43, 4, 1, "", "is_var"], [43, 4, 1, "", "restrs"], [43, 4, 1, "", "substitute"]], "nltk.ccg.chart": [[44, 3, 1, "", "BackwardTypeRaiseRule"], [44, 3, 1, "", "BinaryCombinatorRule"], [44, 3, 1, "", "CCGChart"], [44, 3, 1, "", "CCGChartParser"], [44, 3, 1, "", "CCGEdge"], [44, 3, 1, "", "CCGLeafEdge"], [44, 3, 1, "", "ForwardTypeRaiseRule"], [44, 1, 1, "", "compute_semantics"], [44, 1, 1, "", "demo"], [44, 1, 1, "", "printCCGDerivation"], [44, 1, 1, "", "printCCGTree"]], "nltk.ccg.chart.BackwardTypeRaiseRule": [[44, 5, 1, "", "NUMEDGES"], [44, 4, 1, "", "__init__"], [44, 4, 1, "", "apply"]], "nltk.ccg.chart.BinaryCombinatorRule": [[44, 5, 1, "", "NUMEDGES"], [44, 4, 1, "", "__init__"], [44, 4, 1, "", "apply"]], "nltk.ccg.chart.CCGChart": [[44, 4, 1, "", "__init__"]], "nltk.ccg.chart.CCGChartParser": [[44, 4, 1, "", "__init__"], [44, 4, 1, "", "lexicon"], [44, 4, 1, "", "parse"]], "nltk.ccg.chart.CCGEdge": [[44, 4, 1, "", "__init__"], [44, 4, 1, "", "categ"], [44, 4, 1, "", "dot"], [44, 4, 1, "", "end"], [44, 4, 1, "", "is_complete"], [44, 4, 1, "", "is_incomplete"], [44, 4, 1, "", "length"], [44, 4, 1, "", "lhs"], [44, 4, 1, "", "nextsym"], [44, 4, 1, "", "rhs"], [44, 4, 1, "", "rule"], [44, 4, 1, "", "span"], [44, 4, 1, "", "start"]], "nltk.ccg.chart.CCGLeafEdge": [[44, 4, 1, "", "__init__"], [44, 4, 1, "", "categ"], [44, 4, 1, "", "dot"], [44, 4, 1, "", "end"], [44, 4, 1, "", "is_complete"], [44, 4, 1, "", "is_incomplete"], [44, 4, 1, "", "leaf"], [44, 4, 1, "", "length"], [44, 4, 1, "", "lhs"], [44, 4, 1, "", "nextsym"], [44, 4, 1, "", "rhs"], [44, 4, 1, "", "span"], [44, 4, 1, "", "start"], [44, 4, 1, "", "token"]], "nltk.ccg.chart.ForwardTypeRaiseRule": [[44, 5, 1, "", "NUMEDGES"], [44, 4, 1, "", "__init__"], [44, 4, 1, "", "apply"]], "nltk.ccg.combinator": [[45, 3, 1, "", "BackwardCombinator"], [45, 3, 1, "", "DirectedBinaryCombinator"], [45, 3, 1, "", "ForwardCombinator"], [45, 3, 1, "", "UndirectedBinaryCombinator"], [45, 3, 1, "", "UndirectedComposition"], [45, 3, 1, "", "UndirectedFunctionApplication"], [45, 3, 1, "", "UndirectedSubstitution"], [45, 3, 1, "", "UndirectedTypeRaise"], [45, 1, 1, "", "backwardBxConstraint"], [45, 1, 1, "", "backwardOnly"], [45, 1, 1, "", "backwardSxConstraint"], [45, 1, 1, "", "backwardTConstraint"], [45, 1, 1, "", "bothBackward"], [45, 1, 1, "", "bothForward"], [45, 1, 1, "", "crossedDirs"], [45, 1, 1, "", "forwardOnly"], [45, 1, 1, "", "forwardSConstraint"], [45, 1, 1, "", "forwardTConstraint"], [45, 1, 1, "", "innermostFunction"]], "nltk.ccg.combinator.BackwardCombinator": [[45, 4, 1, "", "__init__"], [45, 4, 1, "", "can_combine"], [45, 4, 1, "", "combine"]], "nltk.ccg.combinator.DirectedBinaryCombinator": [[45, 4, 1, "", "can_combine"], [45, 4, 1, "", "combine"]], "nltk.ccg.combinator.ForwardCombinator": [[45, 4, 1, "", "__init__"], [45, 4, 1, "", "can_combine"], [45, 4, 1, "", "combine"]], "nltk.ccg.combinator.UndirectedBinaryCombinator": [[45, 4, 1, "", "can_combine"], [45, 4, 1, "", "combine"]], "nltk.ccg.combinator.UndirectedComposition": [[45, 4, 1, "", "can_combine"], [45, 4, 1, "", "combine"]], "nltk.ccg.combinator.UndirectedFunctionApplication": [[45, 4, 1, "", "can_combine"], [45, 4, 1, "", "combine"]], "nltk.ccg.combinator.UndirectedSubstitution": [[45, 4, 1, "", "can_combine"], [45, 4, 1, "", "combine"]], "nltk.ccg.combinator.UndirectedTypeRaise": [[45, 4, 1, "", "can_combine"], [45, 4, 1, "", "combine"]], "nltk.ccg.lexicon": [[46, 3, 1, "", "CCGLexicon"], [46, 3, 1, "", "Token"], [46, 1, 1, "", "augParseCategory"], [46, 1, 1, "", "fromstring"], [46, 1, 1, "", "matchBrackets"], [46, 1, 1, "", "nextCategory"], [46, 1, 1, "", "parseApplication"], [46, 1, 1, "", "parsePrimitiveCategory"], [46, 1, 1, "", "parseSubscripts"]], "nltk.ccg.lexicon.CCGLexicon": [[46, 4, 1, "", "__init__"], [46, 4, 1, "", "categories"], [46, 4, 1, "", "start"]], "nltk.ccg.lexicon.Token": [[46, 4, 1, "", "__init__"], [46, 4, 1, "", "categ"], [46, 4, 1, "", "semantics"]], "nltk.ccg.logic": [[47, 1, 1, "", "compute_composition_semantics"], [47, 1, 1, "", "compute_function_semantics"], [47, 1, 1, "", "compute_substitution_semantics"], [47, 1, 1, "", "compute_type_raised_semantics"]], "nltk.chat": [[48, 1, 1, "", "chatbots"], [49, 0, 0, "-", "eliza"], [50, 1, 1, "", "eliza_chat"], [51, 0, 0, "-", "iesha"], [52, 1, 1, "", "iesha_chat"], [53, 0, 0, "-", "rude"], [54, 1, 1, "", "rude_chat"], [55, 0, 0, "-", "suntsu"], [56, 1, 1, "", "suntsu_chat"], [57, 0, 0, "-", "util"], [58, 0, 0, "-", "zen"], [59, 1, 1, "", "zen_chat"]], "nltk.chat.eliza": [[49, 1, 1, "", "demo"], [49, 1, 1, "", "eliza_chat"]], "nltk.chat.iesha": [[51, 1, 1, "", "demo"], [51, 1, 1, "", "iesha_chat"]], "nltk.chat.rude": [[53, 1, 1, "", "demo"], [53, 1, 1, "", "rude_chat"]], "nltk.chat.suntsu": [[55, 1, 1, "", "demo"], [55, 1, 1, "", "suntsu_chat"]], "nltk.chat.util": [[57, 3, 1, "", "Chat"]], "nltk.chat.util.Chat": [[57, 4, 1, "", "__init__"], [57, 4, 1, "", "converse"], [57, 4, 1, "", "respond"]], "nltk.chat.zen": [[58, 1, 1, "", "demo"], [58, 1, 1, "", "zen_chat"]], "nltk.chunk": [[61, 3, 1, "", "ChunkScore"], [62, 3, 1, "", "RegexpChunkParser"], [63, 3, 1, "", "RegexpParser"], [64, 1, 1, "", "accuracy"], [65, 0, 0, "-", "api"], [66, 1, 1, "", "conllstr2tree"], [67, 1, 1, "", "conlltags2tree"], [68, 1, 1, "", "ieerstr2tree"], [69, 0, 0, "-", "named_entity"], [70, 1, 1, "", "ne_chunk"], [71, 1, 1, "", "ne_chunk_sents"], [72, 0, 0, "-", "regexp"], [73, 1, 1, "", "tagstr2tree"], [74, 1, 1, "", "tree2conllstr"], [75, 1, 1, "", "tree2conlltags"], [76, 0, 0, "-", "util"]], "nltk.chunk.ChunkScore": [[61, 4, 1, "", "__init__"], [61, 4, 1, "", "accuracy"], [61, 4, 1, "", "correct"], [61, 4, 1, "", "f_measure"], [61, 4, 1, "", "guessed"], [61, 4, 1, "", "incorrect"], [61, 4, 1, "", "missed"], [61, 4, 1, "", "precision"], [61, 4, 1, "", "recall"], [61, 4, 1, "", "score"]], "nltk.chunk.RegexpChunkParser": [[62, 4, 1, "", "__init__"], [62, 4, 1, "", "accuracy"], [62, 4, 1, "", "evaluate"], [62, 4, 1, "", "grammar"], [62, 4, 1, "", "parse"], [62, 4, 1, "", "parse_all"], [62, 4, 1, "", "parse_one"], [62, 4, 1, "", "parse_sents"], [62, 4, 1, "", "rules"]], "nltk.chunk.RegexpParser": [[63, 4, 1, "", "__init__"], [63, 4, 1, "", "accuracy"], [63, 4, 1, "", "evaluate"], [63, 4, 1, "", "grammar"], [63, 4, 1, "", "parse"], [63, 4, 1, "", "parse_all"], [63, 4, 1, "", "parse_one"], [63, 4, 1, "", "parse_sents"]], "nltk.chunk.api": [[65, 3, 1, "", "ChunkParserI"]], "nltk.chunk.api.ChunkParserI": [[65, 4, 1, "", "accuracy"], [65, 4, 1, "", "evaluate"], [65, 4, 1, "", "parse"]], "nltk.chunk.named_entity": [[69, 3, 1, "", "NEChunkParser"], [69, 3, 1, "", "NEChunkParserTagger"], [69, 1, 1, "", "build_model"], [69, 1, 1, "", "cmp_chunks"], [69, 1, 1, "", "load_ace_data"], [69, 1, 1, "", "load_ace_file"], [69, 1, 1, "", "postag_tree"], [69, 1, 1, "", "shape"], [69, 1, 1, "", "simplify_pos"]], "nltk.chunk.named_entity.NEChunkParser": [[69, 4, 1, "", "__init__"], [69, 4, 1, "", "parse"]], "nltk.chunk.named_entity.NEChunkParserTagger": [[69, 4, 1, "", "__init__"]], "nltk.chunk.regexp": [[72, 3, 1, "", "ChunkRule"], [72, 3, 1, "", "ChunkRuleWithContext"], [72, 3, 1, "", "ChunkString"], [72, 3, 1, "", "ExpandLeftRule"], [72, 3, 1, "", "ExpandRightRule"], [72, 3, 1, "", "MergeRule"], [72, 3, 1, "", "RegexpChunkParser"], [72, 3, 1, "", "RegexpChunkRule"], [72, 3, 1, "", "RegexpParser"], [72, 3, 1, "", "SplitRule"], [72, 3, 1, "", "StripRule"], [72, 3, 1, "", "UnChunkRule"], [72, 1, 1, "", "demo"], [72, 1, 1, "", "demo_eval"], [72, 1, 1, "", "tag_pattern2re_pattern"]], "nltk.chunk.regexp.ChunkRule": [[72, 4, 1, "", "__init__"]], "nltk.chunk.regexp.ChunkRuleWithContext": [[72, 4, 1, "", "__init__"]], "nltk.chunk.regexp.ChunkString": [[72, 5, 1, "", "CHUNK_TAG"], [72, 5, 1, "", "CHUNK_TAG_CHAR"], [72, 5, 1, "", "IN_CHUNK_PATTERN"], [72, 5, 1, "", "IN_STRIP_PATTERN"], [72, 4, 1, "", "__init__"], [72, 4, 1, "", "to_chunkstruct"], [72, 4, 1, "", "xform"]], "nltk.chunk.regexp.ExpandLeftRule": [[72, 4, 1, "", "__init__"]], "nltk.chunk.regexp.ExpandRightRule": [[72, 4, 1, "", "__init__"]], "nltk.chunk.regexp.MergeRule": [[72, 4, 1, "", "__init__"]], "nltk.chunk.regexp.RegexpChunkParser": [[72, 4, 1, "", "__init__"], [72, 4, 1, "", "parse"], [72, 4, 1, "", "rules"]], "nltk.chunk.regexp.RegexpChunkRule": [[72, 4, 1, "", "__init__"], [72, 4, 1, "", "apply"], [72, 4, 1, "", "descr"], [72, 4, 1, "", "fromstring"]], "nltk.chunk.regexp.RegexpParser": [[72, 4, 1, "", "__init__"], [72, 4, 1, "", "parse"]], "nltk.chunk.regexp.SplitRule": [[72, 4, 1, "", "__init__"]], "nltk.chunk.regexp.StripRule": [[72, 4, 1, "", "__init__"]], "nltk.chunk.regexp.UnChunkRule": [[72, 4, 1, "", "__init__"]], "nltk.chunk.util": [[76, 3, 1, "", "ChunkScore"], [76, 1, 1, "", "accuracy"], [76, 1, 1, "", "conllstr2tree"], [76, 1, 1, "", "conlltags2tree"], [76, 1, 1, "", "demo"], [76, 1, 1, "", "ieerstr2tree"], [76, 1, 1, "", "tagstr2tree"], [76, 1, 1, "", "tree2conllstr"], [76, 1, 1, "", "tree2conlltags"]], "nltk.chunk.util.ChunkScore": [[76, 4, 1, "", "__init__"], [76, 4, 1, "", "accuracy"], [76, 4, 1, "", "correct"], [76, 4, 1, "", "f_measure"], [76, 4, 1, "", "guessed"], [76, 4, 1, "", "incorrect"], [76, 4, 1, "", "missed"], [76, 4, 1, "", "precision"], [76, 4, 1, "", "recall"], [76, 4, 1, "", "score"]], "nltk.classify": [[78, 0, 0, "-", "api"], [79, 0, 0, "-", "decisiontree"], [80, 0, 0, "-", "maxent"], [81, 0, 0, "-", "megam"], [82, 0, 0, "-", "naivebayes"], [83, 0, 0, "-", "positivenaivebayes"], [84, 0, 0, "-", "rte_classify"], [85, 0, 0, "-", "scikitlearn"], [86, 0, 0, "-", "senna"], [87, 0, 0, "-", "svm"], [88, 0, 0, "-", "tadm"], [89, 0, 0, "-", "textcat"], [90, 0, 0, "-", "util"], [91, 0, 0, "-", "weka"]], "nltk.classify.api": [[78, 3, 1, "", "ClassifierI"], [78, 3, 1, "", "MultiClassifierI"]], "nltk.classify.api.ClassifierI": [[78, 4, 1, "", "classify"], [78, 4, 1, "", "classify_many"], [78, 4, 1, "", "labels"], [78, 4, 1, "", "prob_classify"], [78, 4, 1, "", "prob_classify_many"]], "nltk.classify.api.MultiClassifierI": [[78, 4, 1, "", "classify"], [78, 4, 1, "", "classify_many"], [78, 4, 1, "", "labels"], [78, 4, 1, "", "prob_classify"], [78, 4, 1, "", "prob_classify_many"]], "nltk.classify.decisiontree": [[79, 3, 1, "", "DecisionTreeClassifier"], [79, 1, 1, "", "demo"], [79, 1, 1, "", "f"]], "nltk.classify.decisiontree.DecisionTreeClassifier": [[79, 4, 1, "", "__init__"], [79, 4, 1, "", "best_binary_stump"], [79, 4, 1, "", "best_stump"], [79, 4, 1, "", "binary_stump"], [79, 4, 1, "", "classify"], [79, 4, 1, "", "error"], [79, 4, 1, "", "labels"], [79, 4, 1, "", "leaf"], [79, 4, 1, "", "pretty_format"], [79, 4, 1, "", "pseudocode"], [79, 4, 1, "", "refine"], [79, 4, 1, "", "stump"], [79, 4, 1, "", "train"]], "nltk.classify.maxent": [[80, 3, 1, "", "BinaryMaxentFeatureEncoding"], [80, 5, 1, "", "ConditionalExponentialClassifier"], [80, 3, 1, "", "FunctionBackedMaxentFeatureEncoding"], [80, 3, 1, "", "GISEncoding"], [80, 3, 1, "", "MaxentClassifier"], [80, 3, 1, "", "MaxentFeatureEncodingI"], [80, 3, 1, "", "TadmEventMaxentFeatureEncoding"], [80, 3, 1, "", "TadmMaxentClassifier"], [80, 3, 1, "", "TypedMaxentFeatureEncoding"], [80, 1, 1, "", "calculate_deltas"], [80, 1, 1, "", "calculate_empirical_fcount"], [80, 1, 1, "", "calculate_estimated_fcount"], [80, 1, 1, "", "calculate_nfmap"], [80, 1, 1, "", "demo"], [80, 1, 1, "", "train_maxent_classifier_with_gis"], [80, 1, 1, "", "train_maxent_classifier_with_iis"], [80, 1, 1, "", "train_maxent_classifier_with_megam"]], "nltk.classify.maxent.BinaryMaxentFeatureEncoding": [[80, 4, 1, "", "__init__"], [80, 4, 1, "", "describe"], [80, 4, 1, "", "encode"], [80, 4, 1, "", "labels"], [80, 4, 1, "", "length"], [80, 4, 1, "", "train"]], "nltk.classify.maxent.FunctionBackedMaxentFeatureEncoding": [[80, 4, 1, "", "__init__"], [80, 4, 1, "", "describe"], [80, 4, 1, "", "encode"], [80, 4, 1, "", "labels"], [80, 4, 1, "", "length"]], "nltk.classify.maxent.GISEncoding": [[80, 6, 1, "", "C"], [80, 4, 1, "", "__init__"], [80, 4, 1, "", "describe"], [80, 4, 1, "", "encode"], [80, 4, 1, "", "length"]], "nltk.classify.maxent.MaxentClassifier": [[80, 5, 1, "", "ALGORITHMS"], [80, 4, 1, "", "__init__"], [80, 4, 1, "", "classify"], [80, 4, 1, "", "explain"], [80, 4, 1, "", "labels"], [80, 4, 1, "", "most_informative_features"], [80, 4, 1, "", "prob_classify"], [80, 4, 1, "", "set_weights"], [80, 4, 1, "", "show_most_informative_features"], [80, 4, 1, "", "train"], [80, 4, 1, "", "weights"]], "nltk.classify.maxent.MaxentFeatureEncodingI": [[80, 4, 1, "", "describe"], [80, 4, 1, "", "encode"], [80, 4, 1, "", "labels"], [80, 4, 1, "", "length"], [80, 4, 1, "", "train"]], "nltk.classify.maxent.TadmEventMaxentFeatureEncoding": [[80, 4, 1, "", "__init__"], [80, 4, 1, "", "describe"], [80, 4, 1, "", "encode"], [80, 4, 1, "", "labels"], [80, 4, 1, "", "length"], [80, 4, 1, "", "train"]], "nltk.classify.maxent.TadmMaxentClassifier": [[80, 4, 1, "", "train"]], "nltk.classify.maxent.TypedMaxentFeatureEncoding": [[80, 4, 1, "", "__init__"], [80, 4, 1, "", "describe"], [80, 4, 1, "", "encode"], [80, 4, 1, "", "labels"], [80, 4, 1, "", "length"], [80, 4, 1, "", "train"]], "nltk.classify.megam": [[81, 1, 1, "", "call_megam"], [81, 1, 1, "", "config_megam"], [81, 1, 1, "", "parse_megam_weights"], [81, 1, 1, "", "write_megam_file"]], "nltk.classify.naivebayes": [[82, 3, 1, "", "NaiveBayesClassifier"], [82, 1, 1, "", "demo"]], "nltk.classify.naivebayes.NaiveBayesClassifier": [[82, 4, 1, "", "__init__"], [82, 4, 1, "", "classify"], [82, 4, 1, "", "labels"], [82, 4, 1, "", "most_informative_features"], [82, 4, 1, "", "prob_classify"], [82, 4, 1, "", "show_most_informative_features"], [82, 4, 1, "", "train"]], "nltk.classify.positivenaivebayes": [[83, 3, 1, "", "PositiveNaiveBayesClassifier"], [83, 1, 1, "", "demo"]], "nltk.classify.positivenaivebayes.PositiveNaiveBayesClassifier": [[83, 4, 1, "", "train"]], "nltk.classify.rte_classify": [[84, 3, 1, "", "RTEFeatureExtractor"], [84, 1, 1, "", "rte_classifier"], [84, 1, 1, "", "rte_features"], [84, 1, 1, "", "rte_featurize"]], "nltk.classify.rte_classify.RTEFeatureExtractor": [[84, 4, 1, "", "__init__"], [84, 4, 1, "", "hyp_extra"], [84, 4, 1, "", "overlap"]], "nltk.classify.scikitlearn": [[85, 3, 1, "", "SklearnClassifier"]], "nltk.classify.scikitlearn.SklearnClassifier": [[85, 4, 1, "", "__init__"], [85, 4, 1, "", "classify_many"], [85, 4, 1, "", "labels"], [85, 4, 1, "", "prob_classify_many"], [85, 4, 1, "", "train"]], "nltk.classify.senna": [[86, 3, 1, "", "Senna"]], "nltk.classify.senna.Senna": [[86, 5, 1, "", "SUPPORTED_OPERATIONS"], [86, 4, 1, "", "__init__"], [86, 4, 1, "", "executable"], [86, 4, 1, "", "tag"], [86, 4, 1, "", "tag_sents"]], "nltk.classify.svm": [[87, 3, 1, "", "SvmClassifier"]], "nltk.classify.svm.SvmClassifier": [[87, 4, 1, "", "__init__"]], "nltk.classify.tadm": [[88, 1, 1, "", "call_tadm"], [88, 1, 1, "", "config_tadm"], [88, 1, 1, "", "encoding_demo"], [88, 1, 1, "", "names_demo"], [88, 1, 1, "", "parse_tadm_weights"], [88, 1, 1, "", "write_tadm_file"]], "nltk.classify.textcat": [[89, 3, 1, "", "TextCat"], [89, 1, 1, "", "demo"]], "nltk.classify.textcat.TextCat": [[89, 4, 1, "", "__init__"], [89, 4, 1, "", "calc_dist"], [89, 5, 1, "", "fingerprints"], [89, 4, 1, "", "guess_language"], [89, 4, 1, "", "lang_dists"], [89, 5, 1, "", "last_distances"], [89, 4, 1, "", "profile"], [89, 4, 1, "", "remove_punctuation"]], "nltk.classify.util": [[90, 3, 1, "", "CutoffChecker"], [90, 1, 1, "", "accuracy"], [90, 1, 1, "", "apply_features"], [90, 1, 1, "", "attested_labels"], [90, 1, 1, "", "binary_names_demo_features"], [90, 1, 1, "", "check_megam_config"], [90, 1, 1, "", "log_likelihood"], [90, 1, 1, "", "names_demo"], [90, 1, 1, "", "names_demo_features"], [90, 1, 1, "", "partial_names_demo"], [90, 1, 1, "", "wsd_demo"]], "nltk.classify.util.CutoffChecker": [[90, 4, 1, "", "__init__"], [90, 4, 1, "", "check"]], "nltk.classify.weka": [[91, 3, 1, "", "ARFF_Formatter"], [91, 3, 1, "", "WekaClassifier"], [91, 1, 1, "", "config_weka"]], "nltk.classify.weka.ARFF_Formatter": [[91, 4, 1, "", "__init__"], [91, 4, 1, "", "data_section"], [91, 4, 1, "", "format"], [91, 4, 1, "", "from_train"], [91, 4, 1, "", "header_section"], [91, 4, 1, "", "labels"], [91, 4, 1, "", "write"]], "nltk.classify.weka.WekaClassifier": [[91, 4, 1, "", "__init__"], [91, 4, 1, "", "classify_many"], [91, 4, 1, "", "parse_weka_distribution"], [91, 4, 1, "", "parse_weka_output"], [91, 4, 1, "", "prob_classify_many"], [91, 4, 1, "", "train"]], "nltk.cluster": [[94, 0, 0, "-", "api"], [95, 0, 0, "-", "em"], [96, 0, 0, "-", "gaac"], [97, 0, 0, "-", "kmeans"], [98, 0, 0, "-", "util"]], "nltk.cluster.api": [[94, 3, 1, "", "ClusterI"]], "nltk.cluster.api.ClusterI": [[94, 4, 1, "", "classification_probdist"], [94, 4, 1, "", "classify"], [94, 4, 1, "", "cluster"], [94, 4, 1, "", "cluster_name"], [94, 4, 1, "", "cluster_names"], [94, 4, 1, "", "likelihood"], [94, 4, 1, "", "num_clusters"]], "nltk.cluster.em": [[95, 3, 1, "", "EMClusterer"], [95, 1, 1, "", "demo"]], "nltk.cluster.em.EMClusterer": [[95, 4, 1, "", "__init__"], [95, 4, 1, "", "classify_vectorspace"], [95, 4, 1, "", "cluster_vectorspace"], [95, 4, 1, "", "likelihood_vectorspace"], [95, 4, 1, "", "num_clusters"]], "nltk.cluster.gaac": [[96, 3, 1, "", "GAAClusterer"], [96, 1, 1, "", "demo"]], "nltk.cluster.gaac.GAAClusterer": [[96, 4, 1, "", "__init__"], [96, 4, 1, "", "classify_vectorspace"], [96, 4, 1, "", "cluster"], [96, 4, 1, "", "cluster_vectorspace"], [96, 4, 1, "", "dendrogram"], [96, 4, 1, "", "num_clusters"], [96, 4, 1, "", "update_clusters"]], "nltk.cluster.kmeans": [[97, 3, 1, "", "KMeansClusterer"], [97, 1, 1, "", "demo"]], "nltk.cluster.kmeans.KMeansClusterer": [[97, 4, 1, "", "__init__"], [97, 4, 1, "", "classify_vectorspace"], [97, 4, 1, "", "cluster_vectorspace"], [97, 4, 1, "", "means"], [97, 4, 1, "", "num_clusters"]], "nltk.cluster.util": [[98, 3, 1, "", "Dendrogram"], [98, 3, 1, "", "VectorSpaceClusterer"], [98, 1, 1, "", "cosine_distance"], [98, 1, 1, "", "euclidean_distance"]], "nltk.cluster.util.Dendrogram": [[98, 4, 1, "", "__init__"], [98, 4, 1, "", "groups"], [98, 4, 1, "", "merge"], [98, 4, 1, "", "show"]], "nltk.cluster.util.VectorSpaceClusterer": [[98, 4, 1, "", "__init__"], [98, 4, 1, "", "classify"], [98, 4, 1, "", "classify_vectorspace"], [98, 4, 1, "", "cluster"], [98, 4, 1, "", "cluster_vectorspace"], [98, 4, 1, "", "likelihood"], [98, 4, 1, "", "likelihood_vectorspace"], [98, 4, 1, "", "vector"]], "nltk.collections": [[99, 3, 1, "", "AbstractLazySequence"], [99, 3, 1, "", "LazyConcatenation"], [99, 3, 1, "", "LazyEnumerate"], [99, 3, 1, "", "LazyIteratorList"], [99, 3, 1, "", "LazyMap"], [99, 3, 1, "", "LazySubsequence"], [99, 3, 1, "", "LazyZip"], [99, 3, 1, "", "OrderedDict"], [99, 3, 1, "", "Trie"]], "nltk.collections.AbstractLazySequence": [[99, 4, 1, "", "count"], [99, 4, 1, "", "index"], [99, 4, 1, "", "iterate_from"]], "nltk.collections.LazyConcatenation": [[99, 4, 1, "", "__init__"], [99, 4, 1, "", "iterate_from"]], "nltk.collections.LazyEnumerate": [[99, 4, 1, "", "__init__"]], "nltk.collections.LazyIteratorList": [[99, 4, 1, "", "__init__"], [99, 4, 1, "", "iterate_from"]], "nltk.collections.LazyMap": [[99, 4, 1, "", "__init__"], [99, 4, 1, "", "iterate_from"]], "nltk.collections.LazySubsequence": [[99, 5, 1, "", "MIN_SIZE"], [99, 4, 1, "", "__init__"], [99, 4, 1, "", "__new__"], [99, 4, 1, "", "iterate_from"]], "nltk.collections.LazyZip": [[99, 4, 1, "", "__init__"], [99, 4, 1, "", "iterate_from"]], "nltk.collections.OrderedDict": [[99, 4, 1, "", "__init__"], [99, 4, 1, "", "clear"], [99, 4, 1, "", "copy"], [99, 4, 1, "", "items"], [99, 4, 1, "", "keys"], [99, 4, 1, "", "popitem"], [99, 4, 1, "", "setdefault"], [99, 4, 1, "", "update"], [99, 4, 1, "", "values"]], "nltk.collections.Trie": [[99, 5, 1, "", "LEAF"], [99, 4, 1, "", "__init__"], [99, 4, 1, "", "insert"]], "nltk.collocations": [[101, 3, 1, "", "BigramCollocationFinder"], [102, 3, 1, "", "QuadgramCollocationFinder"], [103, 3, 1, "", "TrigramCollocationFinder"]], "nltk.collocations.BigramCollocationFinder": [[101, 4, 1, "", "__init__"], [101, 4, 1, "", "above_score"], [101, 4, 1, "", "apply_freq_filter"], [101, 4, 1, "", "apply_ngram_filter"], [101, 4, 1, "", "apply_word_filter"], [101, 5, 1, "", "default_ws"], [101, 4, 1, "", "from_documents"], [101, 4, 1, "", "from_words"], [101, 4, 1, "", "nbest"], [101, 4, 1, "", "score_ngram"], [101, 4, 1, "", "score_ngrams"]], "nltk.collocations.QuadgramCollocationFinder": [[102, 4, 1, "", "__init__"], [102, 4, 1, "", "above_score"], [102, 4, 1, "", "apply_freq_filter"], [102, 4, 1, "", "apply_ngram_filter"], [102, 4, 1, "", "apply_word_filter"], [102, 5, 1, "", "default_ws"], [102, 4, 1, "", "from_documents"], [102, 4, 1, "", "from_words"], [102, 4, 1, "", "nbest"], [102, 4, 1, "", "score_ngram"], [102, 4, 1, "", "score_ngrams"]], "nltk.collocations.TrigramCollocationFinder": [[103, 4, 1, "", "__init__"], [103, 4, 1, "", "above_score"], [103, 4, 1, "", "apply_freq_filter"], [103, 4, 1, "", "apply_ngram_filter"], [103, 4, 1, "", "apply_word_filter"], [103, 4, 1, "", "bigram_finder"], [103, 5, 1, "", "default_ws"], [103, 4, 1, "", "from_documents"], [103, 4, 1, "", "from_words"], [103, 4, 1, "", "nbest"], [103, 4, 1, "", "score_ngram"], [103, 4, 1, "", "score_ngrams"]], "nltk.compat": [[104, 1, 1, "", "add_py3_data"], [104, 1, 1, "", "py3_data"]], "nltk.corpus": [[105, 1, 1, "", "demo"], [106, 0, 0, "-", "europarl_raw"], [107, 0, 0, "-", "reader"], [224, 0, 0, "-", "util"]], "nltk.corpus.reader": [[108, 3, 1, "", "AlignedCorpusReader"], [109, 3, 1, "", "AlpinoCorpusReader"], [107, 3, 1, "", "BCP47CorpusReader"], [110, 3, 1, "", "BNCCorpusReader"], [111, 3, 1, "", "BracketParseCorpusReader"], [112, 3, 1, "", "CHILDESCorpusReader"], [113, 3, 1, "", "CMUDictCorpusReader"], [114, 3, 1, "", "CategorizedBracketParseCorpusReader"], [107, 3, 1, "", "CategorizedCorpusReader"], [115, 3, 1, "", "CategorizedPlaintextCorpusReader"], [116, 3, 1, "", "CategorizedSentencesCorpusReader"], [117, 3, 1, "", "CategorizedTaggedCorpusReader"], [118, 3, 1, "", "ChasenCorpusReader"], [119, 3, 1, "", "ChunkedCorpusReader"], [120, 3, 1, "", "ComparativeSentencesCorpusReader"], [121, 3, 1, "", "ConllChunkCorpusReader"], [122, 3, 1, "", "ConllCorpusReader"], [107, 3, 1, "", "CorpusReader"], [123, 3, 1, "", "CrubadanCorpusReader"], [124, 3, 1, "", "DependencyCorpusReader"], [125, 3, 1, "", "EuroparlCorpusReader"], [126, 3, 1, "", "FramenetCorpusReader"], [127, 3, 1, "", "IEERCorpusReader"], [128, 3, 1, "", "IPIPANCorpusReader"], [129, 3, 1, "", "IndianCorpusReader"], [130, 3, 1, "", "KNBCorpusReader"], [131, 3, 1, "", "LinThesaurusCorpusReader"], [132, 3, 1, "", "MTECorpusReader"], [133, 3, 1, "", "MWAPPDBCorpusReader"], [134, 3, 1, "", "MacMorphoCorpusReader"], [135, 3, 1, "", "NKJPCorpusReader"], [136, 3, 1, "", "NPSChatCorpusReader"], [137, 3, 1, "", "NombankCorpusReader"], [138, 3, 1, "", "NonbreakingPrefixesCorpusReader"], [139, 3, 1, "", "OpinionLexiconCorpusReader"], [140, 3, 1, "", "PPAttachmentCorpusReader"], [141, 3, 1, "", "PanLexLiteCorpusReader"], [142, 3, 1, "", "PanlexSwadeshCorpusReader"], [143, 3, 1, "", "Pl196xCorpusReader"], [144, 3, 1, "", "PlaintextCorpusReader"], [145, 3, 1, "", "PortugueseCategorizedPlaintextCorpusReader"], [146, 3, 1, "", "PropbankCorpusReader"], [147, 3, 1, "", "ProsConsCorpusReader"], [148, 3, 1, "", "RTECorpusReader"], [149, 3, 1, "", "ReviewsCorpusReader"], [150, 3, 1, "", "SemcorCorpusReader"], [151, 3, 1, "", "SensevalCorpusReader"], [152, 3, 1, "", "SentiSynset"], [153, 3, 1, "", "SentiWordNetCorpusReader"], [154, 3, 1, "", "SinicaTreebankCorpusReader"], [155, 3, 1, "", "StringCategoryCorpusReader"], [156, 3, 1, "", "SwadeshCorpusReader"], [157, 3, 1, "", "SwitchboardCorpusReader"], [107, 3, 1, "", "SyntaxCorpusReader"], [158, 3, 1, "", "TEICorpusView"], [159, 3, 1, "", "TaggedCorpusReader"], [160, 3, 1, "", "TimitCorpusReader"], [161, 3, 1, "", "TimitTaggedCorpusReader"], [162, 3, 1, "", "ToolboxCorpusReader"], [163, 3, 1, "", "TwitterCorpusReader"], [164, 3, 1, "", "UdhrCorpusReader"], [165, 3, 1, "", "UnicharsCorpusReader"], [166, 3, 1, "", "VerbnetCorpusReader"], [167, 3, 1, "", "WordListCorpusReader"], [168, 3, 1, "", "WordNetCorpusReader"], [169, 3, 1, "", "WordNetICCorpusReader"], [170, 3, 1, "", "XMLCorpusReader"], [171, 3, 1, "", "YCOECorpusReader"], [172, 0, 0, "-", "aligned"], [173, 0, 0, "-", "api"], [174, 0, 0, "-", "bcp47"], [175, 0, 0, "-", "bnc"], [176, 0, 0, "-", "bracket_parse"], [177, 0, 0, "-", "categorized_sents"], [178, 0, 0, "-", "chasen"], [179, 0, 0, "-", "childes"], [180, 0, 0, "-", "chunked"], [181, 0, 0, "-", "cmudict"], [182, 0, 0, "-", "comparative_sents"], [183, 0, 0, "-", "conll"], [184, 0, 0, "-", "crubadan"], [185, 0, 0, "-", "dependency"], [107, 1, 1, "", "find_corpus_fileids"], [186, 0, 0, "-", "framenet"], [187, 0, 0, "-", "ieer"], [188, 0, 0, "-", "indian"], [189, 0, 0, "-", "ipipan"], [190, 0, 0, "-", "knbc"], [191, 0, 0, "-", "lin"], [192, 0, 0, "-", "markdown"], [193, 0, 0, "-", "mte"], [194, 0, 0, "-", "nkjp"], [195, 0, 0, "-", "nombank"], [196, 0, 0, "-", "nps_chat"], [197, 0, 0, "-", "opinion_lexicon"], [198, 0, 0, "-", "panlex_lite"], [199, 0, 0, "-", "panlex_swadesh"], [200, 0, 0, "-", "pl196x"], [201, 0, 0, "-", "plaintext"], [202, 0, 0, "-", "ppattach"], [203, 0, 0, "-", "propbank"], [204, 0, 0, "-", "pros_cons"], [205, 0, 0, "-", "reviews"], [206, 0, 0, "-", "rte"], [207, 0, 0, "-", "semcor"], [208, 0, 0, "-", "senseval"], [209, 0, 0, "-", "sentiwordnet"], [210, 0, 0, "-", "sinica_treebank"], [211, 0, 0, "-", "string_category"], [212, 0, 0, "-", "switchboard"], [213, 0, 0, "-", "tagged"], [107, 1, 1, "", "tagged_treebank_para_block_reader"], [214, 0, 0, "-", "timit"], [215, 0, 0, "-", "toolbox"], [216, 0, 0, "-", "twitter"], [217, 0, 0, "-", "udhr"], [218, 0, 0, "-", "util"], [219, 0, 0, "-", "verbnet"], [220, 0, 0, "-", "wordlist"], [221, 0, 0, "-", "wordnet"], [222, 0, 0, "-", "xmldocs"], [223, 0, 0, "-", "ycoe"]], "nltk.corpus.reader.AlignedCorpusReader": [[108, 4, 1, "", "__init__"], [108, 4, 1, "", "abspath"], [108, 4, 1, "", "abspaths"], [108, 4, 1, "", "aligned_sents"], [108, 4, 1, "", "citation"], [108, 4, 1, "", "encoding"], [108, 4, 1, "", "ensure_loaded"], [108, 4, 1, "", "fileids"], [108, 4, 1, "", "license"], [108, 4, 1, "", "open"], [108, 4, 1, "", "raw"], [108, 4, 1, "", "readme"], [108, 6, 1, "", "root"], [108, 4, 1, "", "sents"], [108, 4, 1, "", "words"]], "nltk.corpus.reader.AlpinoCorpusReader": [[109, 4, 1, "", "__init__"], [109, 4, 1, "", "abspath"], [109, 4, 1, "", "abspaths"], [109, 4, 1, "", "citation"], [109, 4, 1, "", "encoding"], [109, 4, 1, "", "ensure_loaded"], [109, 4, 1, "", "fileids"], [109, 4, 1, "", "license"], [109, 4, 1, "", "open"], [109, 4, 1, "", "parsed_sents"], [109, 4, 1, "", "raw"], [109, 4, 1, "", "readme"], [109, 6, 1, "", "root"], [109, 4, 1, "", "sents"], [109, 4, 1, "", "tagged_sents"], [109, 4, 1, "", "tagged_words"], [109, 4, 1, "", "words"]], "nltk.corpus.reader.BCP47CorpusReader": [[107, 4, 1, "", "__init__"], [107, 4, 1, "", "data_dict"], [107, 4, 1, "", "lang2str"], [107, 4, 1, "", "load_wiki_q"], [107, 4, 1, "", "morphology"], [107, 4, 1, "", "name"], [107, 4, 1, "", "parse_tag"], [107, 4, 1, "", "subdiv_dict"], [107, 4, 1, "", "val2str"], [107, 4, 1, "", "wiki_dict"]], "nltk.corpus.reader.BNCCorpusReader": [[110, 4, 1, "", "__init__"], [110, 4, 1, "", "abspath"], [110, 4, 1, "", "abspaths"], [110, 4, 1, "", "citation"], [110, 4, 1, "", "encoding"], [110, 4, 1, "", "ensure_loaded"], [110, 4, 1, "", "fileids"], [110, 4, 1, "", "license"], [110, 4, 1, "", "open"], [110, 4, 1, "", "raw"], [110, 4, 1, "", "readme"], [110, 6, 1, "", "root"], [110, 4, 1, "", "sents"], [110, 4, 1, "", "tagged_sents"], [110, 4, 1, "", "tagged_words"], [110, 4, 1, "", "words"], [110, 4, 1, "", "xml"]], "nltk.corpus.reader.BracketParseCorpusReader": [[111, 4, 1, "", "__init__"], [111, 4, 1, "", "abspath"], [111, 4, 1, "", "abspaths"], [111, 4, 1, "", "citation"], [111, 4, 1, "", "encoding"], [111, 4, 1, "", "ensure_loaded"], [111, 4, 1, "", "fileids"], [111, 4, 1, "", "license"], [111, 4, 1, "", "open"], [111, 4, 1, "", "parsed_sents"], [111, 4, 1, "", "raw"], [111, 4, 1, "", "readme"], [111, 6, 1, "", "root"], [111, 4, 1, "", "sents"], [111, 4, 1, "", "tagged_sents"], [111, 4, 1, "", "tagged_words"], [111, 4, 1, "", "words"]], "nltk.corpus.reader.CHILDESCorpusReader": [[112, 4, 1, "", "MLU"], [112, 4, 1, "", "__init__"], [112, 4, 1, "", "abspath"], [112, 4, 1, "", "abspaths"], [112, 4, 1, "", "age"], [112, 5, 1, "", "childes_url_base"], [112, 4, 1, "", "citation"], [112, 4, 1, "", "convert_age"], [112, 4, 1, "", "corpus"], [112, 4, 1, "", "encoding"], [112, 4, 1, "", "ensure_loaded"], [112, 4, 1, "", "fileids"], [112, 4, 1, "", "license"], [112, 4, 1, "", "open"], [112, 4, 1, "", "participants"], [112, 4, 1, "", "raw"], [112, 4, 1, "", "readme"], [112, 6, 1, "", "root"], [112, 4, 1, "", "sents"], [112, 4, 1, "", "tagged_sents"], [112, 4, 1, "", "tagged_words"], [112, 4, 1, "", "webview_file"], [112, 4, 1, "", "words"], [112, 4, 1, "", "xml"]], "nltk.corpus.reader.CMUDictCorpusReader": [[113, 4, 1, "", "__init__"], [113, 4, 1, "", "abspath"], [113, 4, 1, "", "abspaths"], [113, 4, 1, "", "citation"], [113, 4, 1, "", "dict"], [113, 4, 1, "", "encoding"], [113, 4, 1, "", "ensure_loaded"], [113, 4, 1, "", "entries"], [113, 4, 1, "", "fileids"], [113, 4, 1, "", "license"], [113, 4, 1, "", "open"], [113, 4, 1, "", "raw"], [113, 4, 1, "", "readme"], [113, 6, 1, "", "root"], [113, 4, 1, "", "words"]], "nltk.corpus.reader.CategorizedBracketParseCorpusReader": [[114, 4, 1, "", "__init__"], [114, 4, 1, "", "abspath"], [114, 4, 1, "", "abspaths"], [114, 4, 1, "", "categories"], [114, 4, 1, "", "citation"], [114, 4, 1, "", "encoding"], [114, 4, 1, "", "ensure_loaded"], [114, 4, 1, "", "fileids"], [114, 4, 1, "", "license"], [114, 4, 1, "", "open"], [114, 4, 1, "", "paras"], [114, 4, 1, "", "parsed_paras"], [114, 4, 1, "", "parsed_sents"], [114, 4, 1, "", "parsed_words"], [114, 4, 1, "", "raw"], [114, 4, 1, "", "readme"], [114, 6, 1, "", "root"], [114, 4, 1, "", "sents"], [114, 4, 1, "", "tagged_paras"], [114, 4, 1, "", "tagged_sents"], [114, 4, 1, "", "tagged_words"], [114, 4, 1, "", "words"]], "nltk.corpus.reader.CategorizedCorpusReader": [[107, 4, 1, "", "__init__"], [107, 4, 1, "", "categories"], [107, 4, 1, "", "fileids"], [107, 4, 1, "", "paras"], [107, 4, 1, "", "raw"], [107, 4, 1, "", "sents"], [107, 4, 1, "", "words"]], "nltk.corpus.reader.CategorizedPlaintextCorpusReader": [[115, 5, 1, "", "CorpusView"], [115, 4, 1, "", "__init__"], [115, 4, 1, "", "abspath"], [115, 4, 1, "", "abspaths"], [115, 4, 1, "", "categories"], [115, 4, 1, "", "citation"], [115, 4, 1, "", "encoding"], [115, 4, 1, "", "ensure_loaded"], [115, 4, 1, "", "fileids"], [115, 4, 1, "", "license"], [115, 4, 1, "", "open"], [115, 4, 1, "", "paras"], [115, 4, 1, "", "raw"], [115, 4, 1, "", "readme"], [115, 6, 1, "", "root"], [115, 4, 1, "", "sents"], [115, 4, 1, "", "words"]], "nltk.corpus.reader.CategorizedSentencesCorpusReader": [[116, 5, 1, "", "CorpusView"], [116, 4, 1, "", "__init__"], [116, 4, 1, "", "abspath"], [116, 4, 1, "", "abspaths"], [116, 4, 1, "", "categories"], [116, 4, 1, "", "citation"], [116, 4, 1, "", "encoding"], [116, 4, 1, "", "ensure_loaded"], [116, 4, 1, "", "fileids"], [116, 4, 1, "", "license"], [116, 4, 1, "", "open"], [116, 4, 1, "", "paras"], [116, 4, 1, "", "raw"], [116, 4, 1, "", "readme"], [116, 6, 1, "", "root"], [116, 4, 1, "", "sents"], [116, 4, 1, "", "words"]], "nltk.corpus.reader.CategorizedTaggedCorpusReader": [[117, 4, 1, "", "__init__"], [117, 4, 1, "", "abspath"], [117, 4, 1, "", "abspaths"], [117, 4, 1, "", "categories"], [117, 4, 1, "", "citation"], [117, 4, 1, "", "encoding"], [117, 4, 1, "", "ensure_loaded"], [117, 4, 1, "", "fileids"], [117, 4, 1, "", "license"], [117, 4, 1, "", "open"], [117, 4, 1, "", "paras"], [117, 4, 1, "", "raw"], [117, 4, 1, "", "readme"], [117, 6, 1, "", "root"], [117, 4, 1, "", "sents"], [117, 4, 1, "", "tagged_paras"], [117, 4, 1, "", "tagged_sents"], [117, 4, 1, "", "tagged_words"], [117, 4, 1, "", "words"]], "nltk.corpus.reader.ChasenCorpusReader": [[118, 4, 1, "", "__init__"], [118, 4, 1, "", "abspath"], [118, 4, 1, "", "abspaths"], [118, 4, 1, "", "citation"], [118, 4, 1, "", "encoding"], [118, 4, 1, "", "ensure_loaded"], [118, 4, 1, "", "fileids"], [118, 4, 1, "", "license"], [118, 4, 1, "", "open"], [118, 4, 1, "", "paras"], [118, 4, 1, "", "raw"], [118, 4, 1, "", "readme"], [118, 6, 1, "", "root"], [118, 4, 1, "", "sents"], [118, 4, 1, "", "tagged_paras"], [118, 4, 1, "", "tagged_sents"], [118, 4, 1, "", "tagged_words"], [118, 4, 1, "", "words"]], "nltk.corpus.reader.ChunkedCorpusReader": [[119, 4, 1, "", "__init__"], [119, 4, 1, "", "abspath"], [119, 4, 1, "", "abspaths"], [119, 4, 1, "", "chunked_paras"], [119, 4, 1, "", "chunked_sents"], [119, 4, 1, "", "chunked_words"], [119, 4, 1, "", "citation"], [119, 4, 1, "", "encoding"], [119, 4, 1, "", "ensure_loaded"], [119, 4, 1, "", "fileids"], [119, 4, 1, "", "license"], [119, 4, 1, "", "open"], [119, 4, 1, "", "paras"], [119, 4, 1, "", "raw"], [119, 4, 1, "", "readme"], [119, 6, 1, "", "root"], [119, 4, 1, "", "sents"], [119, 4, 1, "", "tagged_paras"], [119, 4, 1, "", "tagged_sents"], [119, 4, 1, "", "tagged_words"], [119, 4, 1, "", "words"]], "nltk.corpus.reader.ComparativeSentencesCorpusReader": [[120, 5, 1, "", "CorpusView"], [120, 4, 1, "", "__init__"], [120, 4, 1, "", "abspath"], [120, 4, 1, "", "abspaths"], [120, 4, 1, "", "citation"], [120, 4, 1, "", "comparisons"], [120, 4, 1, "", "encoding"], [120, 4, 1, "", "ensure_loaded"], [120, 4, 1, "", "fileids"], [120, 4, 1, "", "keywords"], [120, 4, 1, "", "keywords_readme"], [120, 4, 1, "", "license"], [120, 4, 1, "", "open"], [120, 4, 1, "", "raw"], [120, 4, 1, "", "readme"], [120, 6, 1, "", "root"], [120, 4, 1, "", "sents"], [120, 4, 1, "", "words"]], "nltk.corpus.reader.ConllChunkCorpusReader": [[121, 5, 1, "", "CHUNK"], [121, 5, 1, "", "COLUMN_TYPES"], [121, 5, 1, "", "IGNORE"], [121, 5, 1, "", "NE"], [121, 5, 1, "", "POS"], [121, 5, 1, "", "SRL"], [121, 5, 1, "", "TREE"], [121, 5, 1, "", "WORDS"], [121, 4, 1, "", "__init__"], [121, 4, 1, "", "abspath"], [121, 4, 1, "", "abspaths"], [121, 4, 1, "", "chunked_sents"], [121, 4, 1, "", "chunked_words"], [121, 4, 1, "", "citation"], [121, 4, 1, "", "encoding"], [121, 4, 1, "", "ensure_loaded"], [121, 4, 1, "", "fileids"], [121, 4, 1, "", "iob_sents"], [121, 4, 1, "", "iob_words"], [121, 4, 1, "", "license"], [121, 4, 1, "", "open"], [121, 4, 1, "", "parsed_sents"], [121, 4, 1, "", "raw"], [121, 4, 1, "", "readme"], [121, 6, 1, "", "root"], [121, 4, 1, "", "sents"], [121, 4, 1, "", "srl_instances"], [121, 4, 1, "", "srl_spans"], [121, 4, 1, "", "tagged_sents"], [121, 4, 1, "", "tagged_words"], [121, 4, 1, "", "words"]], "nltk.corpus.reader.ConllCorpusReader": [[122, 5, 1, "", "CHUNK"], [122, 5, 1, "", "COLUMN_TYPES"], [122, 5, 1, "", "IGNORE"], [122, 5, 1, "", "NE"], [122, 5, 1, "", "POS"], [122, 5, 1, "", "SRL"], [122, 5, 1, "", "TREE"], [122, 5, 1, "", "WORDS"], [122, 4, 1, "", "__init__"], [122, 4, 1, "", "abspath"], [122, 4, 1, "", "abspaths"], [122, 4, 1, "", "chunked_sents"], [122, 4, 1, "", "chunked_words"], [122, 4, 1, "", "citation"], [122, 4, 1, "", "encoding"], [122, 4, 1, "", "ensure_loaded"], [122, 4, 1, "", "fileids"], [122, 4, 1, "", "iob_sents"], [122, 4, 1, "", "iob_words"], [122, 4, 1, "", "license"], [122, 4, 1, "", "open"], [122, 4, 1, "", "parsed_sents"], [122, 4, 1, "", "raw"], [122, 4, 1, "", "readme"], [122, 6, 1, "", "root"], [122, 4, 1, "", "sents"], [122, 4, 1, "", "srl_instances"], [122, 4, 1, "", "srl_spans"], [122, 4, 1, "", "tagged_sents"], [122, 4, 1, "", "tagged_words"], [122, 4, 1, "", "words"]], "nltk.corpus.reader.CorpusReader": [[107, 4, 1, "", "__init__"], [107, 4, 1, "", "abspath"], [107, 4, 1, "", "abspaths"], [107, 4, 1, "", "citation"], [107, 4, 1, "", "encoding"], [107, 4, 1, "", "ensure_loaded"], [107, 4, 1, "", "fileids"], [107, 4, 1, "", "license"], [107, 4, 1, "", "open"], [107, 4, 1, "", "raw"], [107, 4, 1, "", "readme"], [107, 6, 1, "", "root"]], "nltk.corpus.reader.CrubadanCorpusReader": [[123, 4, 1, "", "__init__"], [123, 4, 1, "", "abspath"], [123, 4, 1, "", "abspaths"], [123, 4, 1, "", "citation"], [123, 4, 1, "", "crubadan_to_iso"], [123, 4, 1, "", "encoding"], [123, 4, 1, "", "ensure_loaded"], [123, 4, 1, "", "fileids"], [123, 4, 1, "", "iso_to_crubadan"], [123, 4, 1, "", "lang_freq"], [123, 4, 1, "", "langs"], [123, 4, 1, "", "license"], [123, 4, 1, "", "open"], [123, 4, 1, "", "raw"], [123, 4, 1, "", "readme"], [123, 6, 1, "", "root"]], "nltk.corpus.reader.DependencyCorpusReader": [[124, 4, 1, "", "__init__"], [124, 4, 1, "", "abspath"], [124, 4, 1, "", "abspaths"], [124, 4, 1, "", "citation"], [124, 4, 1, "", "encoding"], [124, 4, 1, "", "ensure_loaded"], [124, 4, 1, "", "fileids"], [124, 4, 1, "", "license"], [124, 4, 1, "", "open"], [124, 4, 1, "", "parsed_sents"], [124, 4, 1, "", "raw"], [124, 4, 1, "", "readme"], [124, 6, 1, "", "root"], [124, 4, 1, "", "sents"], [124, 4, 1, "", "tagged_sents"], [124, 4, 1, "", "tagged_words"], [124, 4, 1, "", "words"]], "nltk.corpus.reader.EuroparlCorpusReader": [[125, 5, 1, "", "CorpusView"], [125, 4, 1, "", "__init__"], [125, 4, 1, "", "abspath"], [125, 4, 1, "", "abspaths"], [125, 4, 1, "", "chapters"], [125, 4, 1, "", "citation"], [125, 4, 1, "", "encoding"], [125, 4, 1, "", "ensure_loaded"], [125, 4, 1, "", "fileids"], [125, 4, 1, "", "license"], [125, 4, 1, "", "open"], [125, 4, 1, "", "paras"], [125, 4, 1, "", "raw"], [125, 4, 1, "", "readme"], [125, 6, 1, "", "root"], [125, 4, 1, "", "sents"], [125, 4, 1, "", "words"]], "nltk.corpus.reader.FramenetCorpusReader": [[126, 4, 1, "", "__init__"], [126, 4, 1, "", "abspath"], [126, 4, 1, "", "abspaths"], [126, 4, 1, "", "annotations"], [126, 4, 1, "", "buildindexes"], [126, 4, 1, "", "citation"], [126, 4, 1, "", "doc"], [126, 4, 1, "", "docs"], [126, 4, 1, "", "docs_metadata"], [126, 4, 1, "", "encoding"], [126, 4, 1, "", "ensure_loaded"], [126, 4, 1, "", "exemplars"], [126, 4, 1, "", "fe_relations"], [126, 4, 1, "", "fes"], [126, 4, 1, "", "fileids"], [126, 4, 1, "", "frame"], [126, 4, 1, "", "frame_by_id"], [126, 4, 1, "", "frame_by_name"], [126, 4, 1, "", "frame_ids_and_names"], [126, 4, 1, "", "frame_relation_types"], [126, 4, 1, "", "frame_relations"], [126, 4, 1, "", "frames"], [126, 4, 1, "", "frames_by_lemma"], [126, 4, 1, "", "ft_sents"], [126, 4, 1, "", "help"], [126, 4, 1, "", "license"], [126, 4, 1, "", "lu"], [126, 4, 1, "", "lu_basic"], [126, 4, 1, "", "lu_ids_and_names"], [126, 4, 1, "", "lus"], [126, 4, 1, "", "open"], [126, 4, 1, "", "propagate_semtypes"], [126, 4, 1, "", "raw"], [126, 4, 1, "", "readme"], [126, 6, 1, "", "root"], [126, 4, 1, "", "semtype"], [126, 4, 1, "", "semtype_inherits"], [126, 4, 1, "", "semtypes"], [126, 4, 1, "", "sents"], [126, 4, 1, "", "warnings"], [126, 4, 1, "", "words"], [126, 4, 1, "", "xml"]], "nltk.corpus.reader.IEERCorpusReader": [[127, 4, 1, "", "__init__"], [127, 4, 1, "", "abspath"], [127, 4, 1, "", "abspaths"], [127, 4, 1, "", "citation"], [127, 4, 1, "", "docs"], [127, 4, 1, "", "encoding"], [127, 4, 1, "", "ensure_loaded"], [127, 4, 1, "", "fileids"], [127, 4, 1, "", "license"], [127, 4, 1, "", "open"], [127, 4, 1, "", "parsed_docs"], [127, 4, 1, "", "raw"], [127, 4, 1, "", "readme"], [127, 6, 1, "", "root"]], "nltk.corpus.reader.IPIPANCorpusReader": [[128, 4, 1, "", "__init__"], [128, 4, 1, "", "abspath"], [128, 4, 1, "", "abspaths"], [128, 4, 1, "", "categories"], [128, 4, 1, "", "channels"], [128, 4, 1, "", "citation"], [128, 4, 1, "", "domains"], [128, 4, 1, "", "encoding"], [128, 4, 1, "", "ensure_loaded"], [128, 4, 1, "", "fileids"], [128, 4, 1, "", "license"], [128, 4, 1, "", "open"], [128, 4, 1, "", "paras"], [128, 4, 1, "", "raw"], [128, 4, 1, "", "readme"], [128, 6, 1, "", "root"], [128, 4, 1, "", "sents"], [128, 4, 1, "", "tagged_paras"], [128, 4, 1, "", "tagged_sents"], [128, 4, 1, "", "tagged_words"], [128, 4, 1, "", "words"]], "nltk.corpus.reader.IndianCorpusReader": [[129, 4, 1, "", "__init__"], [129, 4, 1, "", "abspath"], [129, 4, 1, "", "abspaths"], [129, 4, 1, "", "citation"], [129, 4, 1, "", "encoding"], [129, 4, 1, "", "ensure_loaded"], [129, 4, 1, "", "fileids"], [129, 4, 1, "", "license"], [129, 4, 1, "", "open"], [129, 4, 1, "", "raw"], [129, 4, 1, "", "readme"], [129, 6, 1, "", "root"], [129, 4, 1, "", "sents"], [129, 4, 1, "", "tagged_sents"], [129, 4, 1, "", "tagged_words"], [129, 4, 1, "", "words"]], "nltk.corpus.reader.KNBCorpusReader": [[130, 4, 1, "", "__init__"], [130, 4, 1, "", "abspath"], [130, 4, 1, "", "abspaths"], [130, 4, 1, "", "citation"], [130, 4, 1, "", "encoding"], [130, 4, 1, "", "ensure_loaded"], [130, 4, 1, "", "fileids"], [130, 4, 1, "", "license"], [130, 4, 1, "", "open"], [130, 4, 1, "", "parsed_sents"], [130, 4, 1, "", "raw"], [130, 4, 1, "", "readme"], [130, 6, 1, "", "root"], [130, 4, 1, "", "sents"], [130, 4, 1, "", "tagged_sents"], [130, 4, 1, "", "tagged_words"], [130, 4, 1, "", "words"]], "nltk.corpus.reader.LinThesaurusCorpusReader": [[131, 4, 1, "", "__init__"], [131, 4, 1, "", "abspath"], [131, 4, 1, "", "abspaths"], [131, 4, 1, "", "citation"], [131, 4, 1, "", "encoding"], [131, 4, 1, "", "ensure_loaded"], [131, 4, 1, "", "fileids"], [131, 4, 1, "", "license"], [131, 4, 1, "", "open"], [131, 4, 1, "", "raw"], [131, 4, 1, "", "readme"], [131, 6, 1, "", "root"], [131, 4, 1, "", "scored_synonyms"], [131, 4, 1, "", "similarity"], [131, 4, 1, "", "synonyms"]], "nltk.corpus.reader.MTECorpusReader": [[132, 4, 1, "", "__init__"], [132, 4, 1, "", "abspath"], [132, 4, 1, "", "abspaths"], [132, 4, 1, "", "citation"], [132, 4, 1, "", "encoding"], [132, 4, 1, "", "ensure_loaded"], [132, 4, 1, "", "fileids"], [132, 4, 1, "", "lemma_paras"], [132, 4, 1, "", "lemma_sents"], [132, 4, 1, "", "lemma_words"], [132, 4, 1, "", "license"], [132, 4, 1, "", "open"], [132, 4, 1, "", "paras"], [132, 4, 1, "", "raw"], [132, 4, 1, "", "readme"], [132, 6, 1, "", "root"], [132, 4, 1, "", "sents"], [132, 4, 1, "", "tagged_paras"], [132, 4, 1, "", "tagged_sents"], [132, 4, 1, "", "tagged_words"], [132, 4, 1, "", "words"]], "nltk.corpus.reader.MWAPPDBCorpusReader": [[133, 4, 1, "", "__init__"], [133, 4, 1, "", "abspath"], [133, 4, 1, "", "abspaths"], [133, 4, 1, "", "citation"], [133, 4, 1, "", "encoding"], [133, 4, 1, "", "ensure_loaded"], [133, 4, 1, "", "entries"], [133, 4, 1, "", "fileids"], [133, 4, 1, "", "license"], [133, 5, 1, "", "mwa_ppdb_xxxl_file"], [133, 4, 1, "", "open"], [133, 4, 1, "", "raw"], [133, 4, 1, "", "readme"], [133, 6, 1, "", "root"], [133, 4, 1, "", "words"]], "nltk.corpus.reader.MacMorphoCorpusReader": [[134, 4, 1, "", "__init__"], [134, 4, 1, "", "abspath"], [134, 4, 1, "", "abspaths"], [134, 4, 1, "", "citation"], [134, 4, 1, "", "encoding"], [134, 4, 1, "", "ensure_loaded"], [134, 4, 1, "", "fileids"], [134, 4, 1, "", "license"], [134, 4, 1, "", "open"], [134, 4, 1, "", "paras"], [134, 4, 1, "", "raw"], [134, 4, 1, "", "readme"], [134, 6, 1, "", "root"], [134, 4, 1, "", "sents"], [134, 4, 1, "", "tagged_paras"], [134, 4, 1, "", "tagged_sents"], [134, 4, 1, "", "tagged_words"], [134, 4, 1, "", "words"]], "nltk.corpus.reader.NKJPCorpusReader": [[135, 5, 1, "", "HEADER_MODE"], [135, 5, 1, "", "RAW_MODE"], [135, 5, 1, "", "SENTS_MODE"], [135, 5, 1, "", "WORDS_MODE"], [135, 4, 1, "", "__init__"], [135, 4, 1, "", "abspath"], [135, 4, 1, "", "abspaths"], [135, 4, 1, "", "add_root"], [135, 4, 1, "", "citation"], [135, 4, 1, "", "encoding"], [135, 4, 1, "", "ensure_loaded"], [135, 4, 1, "", "fileids"], [135, 4, 1, "", "get_paths"], [135, 4, 1, "", "header"], [135, 4, 1, "", "license"], [135, 4, 1, "", "open"], [135, 4, 1, "", "raw"], [135, 4, 1, "", "readme"], [135, 6, 1, "", "root"], [135, 4, 1, "", "sents"], [135, 4, 1, "", "tagged_words"], [135, 4, 1, "", "words"], [135, 4, 1, "", "xml"]], "nltk.corpus.reader.NPSChatCorpusReader": [[136, 4, 1, "", "__init__"], [136, 4, 1, "", "abspath"], [136, 4, 1, "", "abspaths"], [136, 4, 1, "", "citation"], [136, 4, 1, "", "encoding"], [136, 4, 1, "", "ensure_loaded"], [136, 4, 1, "", "fileids"], [136, 4, 1, "", "license"], [136, 4, 1, "", "open"], [136, 4, 1, "", "posts"], [136, 4, 1, "", "raw"], [136, 4, 1, "", "readme"], [136, 6, 1, "", "root"], [136, 4, 1, "", "tagged_posts"], [136, 4, 1, "", "tagged_words"], [136, 4, 1, "", "words"], [136, 4, 1, "", "xml"], [136, 4, 1, "", "xml_posts"]], "nltk.corpus.reader.NombankCorpusReader": [[137, 4, 1, "", "__init__"], [137, 4, 1, "", "abspath"], [137, 4, 1, "", "abspaths"], [137, 4, 1, "", "citation"], [137, 4, 1, "", "encoding"], [137, 4, 1, "", "ensure_loaded"], [137, 4, 1, "", "fileids"], [137, 4, 1, "", "instances"], [137, 4, 1, "", "license"], [137, 4, 1, "", "lines"], [137, 4, 1, "", "nouns"], [137, 4, 1, "", "open"], [137, 4, 1, "", "raw"], [137, 4, 1, "", "readme"], [137, 4, 1, "", "roleset"], [137, 4, 1, "", "rolesets"], [137, 6, 1, "", "root"]], "nltk.corpus.reader.NonbreakingPrefixesCorpusReader": [[138, 4, 1, "", "__init__"], [138, 4, 1, "", "abspath"], [138, 4, 1, "", "abspaths"], [138, 5, 1, "", "available_langs"], [138, 4, 1, "", "citation"], [138, 4, 1, "", "encoding"], [138, 4, 1, "", "ensure_loaded"], [138, 4, 1, "", "fileids"], [138, 4, 1, "", "license"], [138, 4, 1, "", "open"], [138, 4, 1, "", "raw"], [138, 4, 1, "", "readme"], [138, 6, 1, "", "root"], [138, 4, 1, "", "words"]], "nltk.corpus.reader.OpinionLexiconCorpusReader": [[139, 5, 1, "", "CorpusView"], [139, 4, 1, "", "__init__"], [139, 4, 1, "", "abspath"], [139, 4, 1, "", "abspaths"], [139, 4, 1, "", "citation"], [139, 4, 1, "", "encoding"], [139, 4, 1, "", "ensure_loaded"], [139, 4, 1, "", "fileids"], [139, 4, 1, "", "license"], [139, 4, 1, "", "negative"], [139, 4, 1, "", "open"], [139, 4, 1, "", "positive"], [139, 4, 1, "", "raw"], [139, 4, 1, "", "readme"], [139, 6, 1, "", "root"], [139, 4, 1, "", "words"]], "nltk.corpus.reader.PPAttachmentCorpusReader": [[140, 4, 1, "", "__init__"], [140, 4, 1, "", "abspath"], [140, 4, 1, "", "abspaths"], [140, 4, 1, "", "attachments"], [140, 4, 1, "", "citation"], [140, 4, 1, "", "encoding"], [140, 4, 1, "", "ensure_loaded"], [140, 4, 1, "", "fileids"], [140, 4, 1, "", "license"], [140, 4, 1, "", "open"], [140, 4, 1, "", "raw"], [140, 4, 1, "", "readme"], [140, 6, 1, "", "root"], [140, 4, 1, "", "tuples"]], "nltk.corpus.reader.PanLexLiteCorpusReader": [[141, 5, 1, "", "MEANING_Q"], [141, 5, 1, "", "TRANSLATION_Q"], [141, 4, 1, "", "__init__"], [141, 4, 1, "", "abspath"], [141, 4, 1, "", "abspaths"], [141, 4, 1, "", "citation"], [141, 4, 1, "", "encoding"], [141, 4, 1, "", "ensure_loaded"], [141, 4, 1, "", "fileids"], [141, 4, 1, "", "language_varieties"], [141, 4, 1, "", "license"], [141, 4, 1, "", "meanings"], [141, 4, 1, "", "open"], [141, 4, 1, "", "raw"], [141, 4, 1, "", "readme"], [141, 6, 1, "", "root"], [141, 4, 1, "", "translations"]], "nltk.corpus.reader.PanlexSwadeshCorpusReader": [[142, 4, 1, "", "__init__"], [142, 4, 1, "", "abspath"], [142, 4, 1, "", "abspaths"], [142, 4, 1, "", "citation"], [142, 4, 1, "", "encoding"], [142, 4, 1, "", "ensure_loaded"], [142, 4, 1, "", "entries"], [142, 4, 1, "", "fileids"], [142, 4, 1, "", "get_languages"], [142, 4, 1, "", "get_macrolanguages"], [142, 4, 1, "", "language_codes"], [142, 4, 1, "", "license"], [142, 4, 1, "", "open"], [142, 4, 1, "", "raw"], [142, 4, 1, "", "readme"], [142, 6, 1, "", "root"], [142, 4, 1, "", "words"], [142, 4, 1, "", "words_by_iso639"], [142, 4, 1, "", "words_by_lang"]], "nltk.corpus.reader.Pl196xCorpusReader": [[143, 4, 1, "", "__init__"], [143, 4, 1, "", "abspath"], [143, 4, 1, "", "abspaths"], [143, 4, 1, "", "categories"], [143, 4, 1, "", "citation"], [143, 4, 1, "", "decode_tag"], [143, 4, 1, "", "encoding"], [143, 4, 1, "", "ensure_loaded"], [143, 4, 1, "", "fileids"], [143, 5, 1, "", "head_len"], [143, 4, 1, "", "license"], [143, 4, 1, "", "open"], [143, 4, 1, "", "paras"], [143, 4, 1, "", "raw"], [143, 4, 1, "", "readme"], [143, 6, 1, "", "root"], [143, 4, 1, "", "sents"], [143, 4, 1, "", "tagged_paras"], [143, 4, 1, "", "tagged_sents"], [143, 4, 1, "", "tagged_words"], [143, 4, 1, "", "textids"], [143, 4, 1, "", "words"], [143, 4, 1, "", "xml"]], "nltk.corpus.reader.PlaintextCorpusReader": [[144, 5, 1, "", "CorpusView"], [144, 4, 1, "", "__init__"], [144, 4, 1, "", "abspath"], [144, 4, 1, "", "abspaths"], [144, 4, 1, "", "citation"], [144, 4, 1, "", "encoding"], [144, 4, 1, "", "ensure_loaded"], [144, 4, 1, "", "fileids"], [144, 4, 1, "", "license"], [144, 4, 1, "", "open"], [144, 4, 1, "", "paras"], [144, 4, 1, "", "raw"], [144, 4, 1, "", "readme"], [144, 6, 1, "", "root"], [144, 4, 1, "", "sents"], [144, 4, 1, "", "words"]], "nltk.corpus.reader.PortugueseCategorizedPlaintextCorpusReader": [[145, 5, 1, "", "CorpusView"], [145, 4, 1, "", "__init__"], [145, 4, 1, "", "abspath"], [145, 4, 1, "", "abspaths"], [145, 4, 1, "", "categories"], [145, 4, 1, "", "citation"], [145, 4, 1, "", "encoding"], [145, 4, 1, "", "ensure_loaded"], [145, 4, 1, "", "fileids"], [145, 4, 1, "", "license"], [145, 4, 1, "", "open"], [145, 4, 1, "", "paras"], [145, 4, 1, "", "raw"], [145, 4, 1, "", "readme"], [145, 6, 1, "", "root"], [145, 4, 1, "", "sents"], [145, 4, 1, "", "words"]], "nltk.corpus.reader.PropbankCorpusReader": [[146, 4, 1, "", "__init__"], [146, 4, 1, "", "abspath"], [146, 4, 1, "", "abspaths"], [146, 4, 1, "", "citation"], [146, 4, 1, "", "encoding"], [146, 4, 1, "", "ensure_loaded"], [146, 4, 1, "", "fileids"], [146, 4, 1, "", "instances"], [146, 4, 1, "", "license"], [146, 4, 1, "", "lines"], [146, 4, 1, "", "open"], [146, 4, 1, "", "raw"], [146, 4, 1, "", "readme"], [146, 4, 1, "", "roleset"], [146, 4, 1, "", "rolesets"], [146, 6, 1, "", "root"], [146, 4, 1, "", "verbs"]], "nltk.corpus.reader.ProsConsCorpusReader": [[147, 5, 1, "", "CorpusView"], [147, 4, 1, "", "__init__"], [147, 4, 1, "", "abspath"], [147, 4, 1, "", "abspaths"], [147, 4, 1, "", "categories"], [147, 4, 1, "", "citation"], [147, 4, 1, "", "encoding"], [147, 4, 1, "", "ensure_loaded"], [147, 4, 1, "", "fileids"], [147, 4, 1, "", "license"], [147, 4, 1, "", "open"], [147, 4, 1, "", "paras"], [147, 4, 1, "", "raw"], [147, 4, 1, "", "readme"], [147, 6, 1, "", "root"], [147, 4, 1, "", "sents"], [147, 4, 1, "", "words"]], "nltk.corpus.reader.RTECorpusReader": [[148, 4, 1, "", "__init__"], [148, 4, 1, "", "abspath"], [148, 4, 1, "", "abspaths"], [148, 4, 1, "", "citation"], [148, 4, 1, "", "encoding"], [148, 4, 1, "", "ensure_loaded"], [148, 4, 1, "", "fileids"], [148, 4, 1, "", "license"], [148, 4, 1, "", "open"], [148, 4, 1, "", "pairs"], [148, 4, 1, "", "raw"], [148, 4, 1, "", "readme"], [148, 6, 1, "", "root"], [148, 4, 1, "", "words"], [148, 4, 1, "", "xml"]], "nltk.corpus.reader.ReviewsCorpusReader": [[149, 5, 1, "", "CorpusView"], [149, 4, 1, "", "__init__"], [149, 4, 1, "", "abspath"], [149, 4, 1, "", "abspaths"], [149, 4, 1, "", "citation"], [149, 4, 1, "", "encoding"], [149, 4, 1, "", "ensure_loaded"], [149, 4, 1, "", "features"], [149, 4, 1, "", "fileids"], [149, 4, 1, "", "license"], [149, 4, 1, "", "open"], [149, 4, 1, "", "raw"], [149, 4, 1, "", "readme"], [149, 4, 1, "", "reviews"], [149, 6, 1, "", "root"], [149, 4, 1, "", "sents"], [149, 4, 1, "", "words"]], "nltk.corpus.reader.SemcorCorpusReader": [[150, 4, 1, "", "__init__"], [150, 4, 1, "", "abspath"], [150, 4, 1, "", "abspaths"], [150, 4, 1, "", "chunk_sents"], [150, 4, 1, "", "chunks"], [150, 4, 1, "", "citation"], [150, 4, 1, "", "encoding"], [150, 4, 1, "", "ensure_loaded"], [150, 4, 1, "", "fileids"], [150, 4, 1, "", "license"], [150, 4, 1, "", "open"], [150, 4, 1, "", "raw"], [150, 4, 1, "", "readme"], [150, 6, 1, "", "root"], [150, 4, 1, "", "sents"], [150, 4, 1, "", "tagged_chunks"], [150, 4, 1, "", "tagged_sents"], [150, 4, 1, "", "words"], [150, 4, 1, "", "xml"]], "nltk.corpus.reader.SensevalCorpusReader": [[151, 4, 1, "", "__init__"], [151, 4, 1, "", "abspath"], [151, 4, 1, "", "abspaths"], [151, 4, 1, "", "citation"], [151, 4, 1, "", "encoding"], [151, 4, 1, "", "ensure_loaded"], [151, 4, 1, "", "fileids"], [151, 4, 1, "", "instances"], [151, 4, 1, "", "license"], [151, 4, 1, "", "open"], [151, 4, 1, "", "raw"], [151, 4, 1, "", "readme"], [151, 6, 1, "", "root"]], "nltk.corpus.reader.SentiSynset": [[152, 4, 1, "", "__init__"], [152, 4, 1, "", "neg_score"], [152, 4, 1, "", "obj_score"], [152, 4, 1, "", "pos_score"]], "nltk.corpus.reader.SentiWordNetCorpusReader": [[153, 4, 1, "", "__init__"], [153, 4, 1, "", "abspath"], [153, 4, 1, "", "abspaths"], [153, 4, 1, "", "all_senti_synsets"], [153, 4, 1, "", "citation"], [153, 4, 1, "", "encoding"], [153, 4, 1, "", "ensure_loaded"], [153, 4, 1, "", "fileids"], [153, 4, 1, "", "license"], [153, 4, 1, "", "open"], [153, 4, 1, "", "raw"], [153, 4, 1, "", "readme"], [153, 6, 1, "", "root"], [153, 4, 1, "", "senti_synset"], [153, 4, 1, "", "senti_synsets"]], "nltk.corpus.reader.SinicaTreebankCorpusReader": [[154, 4, 1, "", "__init__"], [154, 4, 1, "", "abspath"], [154, 4, 1, "", "abspaths"], [154, 4, 1, "", "citation"], [154, 4, 1, "", "encoding"], [154, 4, 1, "", "ensure_loaded"], [154, 4, 1, "", "fileids"], [154, 4, 1, "", "license"], [154, 4, 1, "", "open"], [154, 4, 1, "", "parsed_sents"], [154, 4, 1, "", "raw"], [154, 4, 1, "", "readme"], [154, 6, 1, "", "root"], [154, 4, 1, "", "sents"], [154, 4, 1, "", "tagged_sents"], [154, 4, 1, "", "tagged_words"], [154, 4, 1, "", "words"]], "nltk.corpus.reader.StringCategoryCorpusReader": [[155, 4, 1, "", "__init__"], [155, 4, 1, "", "abspath"], [155, 4, 1, "", "abspaths"], [155, 4, 1, "", "citation"], [155, 4, 1, "", "encoding"], [155, 4, 1, "", "ensure_loaded"], [155, 4, 1, "", "fileids"], [155, 4, 1, "", "license"], [155, 4, 1, "", "open"], [155, 4, 1, "", "raw"], [155, 4, 1, "", "readme"], [155, 6, 1, "", "root"], [155, 4, 1, "", "tuples"]], "nltk.corpus.reader.SwadeshCorpusReader": [[156, 4, 1, "", "__init__"], [156, 4, 1, "", "abspath"], [156, 4, 1, "", "abspaths"], [156, 4, 1, "", "citation"], [156, 4, 1, "", "encoding"], [156, 4, 1, "", "ensure_loaded"], [156, 4, 1, "", "entries"], [156, 4, 1, "", "fileids"], [156, 4, 1, "", "license"], [156, 4, 1, "", "open"], [156, 4, 1, "", "raw"], [156, 4, 1, "", "readme"], [156, 6, 1, "", "root"], [156, 4, 1, "", "words"]], "nltk.corpus.reader.SwitchboardCorpusReader": [[157, 4, 1, "", "__init__"], [157, 4, 1, "", "abspath"], [157, 4, 1, "", "abspaths"], [157, 4, 1, "", "citation"], [157, 4, 1, "", "discourses"], [157, 4, 1, "", "encoding"], [157, 4, 1, "", "ensure_loaded"], [157, 4, 1, "", "fileids"], [157, 4, 1, "", "license"], [157, 4, 1, "", "open"], [157, 4, 1, "", "raw"], [157, 4, 1, "", "readme"], [157, 6, 1, "", "root"], [157, 4, 1, "", "tagged_discourses"], [157, 4, 1, "", "tagged_turns"], [157, 4, 1, "", "tagged_words"], [157, 4, 1, "", "turns"], [157, 4, 1, "", "words"]], "nltk.corpus.reader.SyntaxCorpusReader": [[107, 4, 1, "", "parsed_sents"], [107, 4, 1, "", "sents"], [107, 4, 1, "", "tagged_sents"], [107, 4, 1, "", "tagged_words"], [107, 4, 1, "", "words"]], "nltk.corpus.reader.TEICorpusView": [[158, 4, 1, "", "__init__"], [158, 4, 1, "", "close"], [158, 4, 1, "", "count"], [158, 6, 1, "", "fileid"], [158, 4, 1, "", "index"], [158, 4, 1, "", "iterate_from"], [158, 4, 1, "", "read_block"]], "nltk.corpus.reader.TaggedCorpusReader": [[159, 4, 1, "", "__init__"], [159, 4, 1, "", "abspath"], [159, 4, 1, "", "abspaths"], [159, 4, 1, "", "citation"], [159, 4, 1, "", "encoding"], [159, 4, 1, "", "ensure_loaded"], [159, 4, 1, "", "fileids"], [159, 4, 1, "", "license"], [159, 4, 1, "", "open"], [159, 4, 1, "", "paras"], [159, 4, 1, "", "raw"], [159, 4, 1, "", "readme"], [159, 6, 1, "", "root"], [159, 4, 1, "", "sents"], [159, 4, 1, "", "tagged_paras"], [159, 4, 1, "", "tagged_sents"], [159, 4, 1, "", "tagged_words"], [159, 4, 1, "", "words"]], "nltk.corpus.reader.TimitCorpusReader": [[160, 4, 1, "", "__init__"], [160, 4, 1, "", "abspath"], [160, 4, 1, "", "abspaths"], [160, 4, 1, "", "audiodata"], [160, 4, 1, "", "citation"], [160, 4, 1, "", "encoding"], [160, 4, 1, "", "ensure_loaded"], [160, 4, 1, "", "fileids"], [160, 4, 1, "", "license"], [160, 4, 1, "", "open"], [160, 4, 1, "", "phone_times"], [160, 4, 1, "", "phone_trees"], [160, 4, 1, "", "phones"], [160, 4, 1, "", "play"], [160, 4, 1, "", "raw"], [160, 4, 1, "", "readme"], [160, 6, 1, "", "root"], [160, 4, 1, "", "sent_times"], [160, 4, 1, "", "sentid"], [160, 4, 1, "", "sents"], [160, 4, 1, "", "spkrid"], [160, 4, 1, "", "spkrinfo"], [160, 4, 1, "", "spkrutteranceids"], [160, 4, 1, "", "transcription_dict"], [160, 4, 1, "", "utterance"], [160, 4, 1, "", "utteranceids"], [160, 4, 1, "", "wav"], [160, 4, 1, "", "word_times"], [160, 4, 1, "", "words"]], "nltk.corpus.reader.TimitTaggedCorpusReader": [[161, 4, 1, "", "__init__"], [161, 4, 1, "", "abspath"], [161, 4, 1, "", "abspaths"], [161, 4, 1, "", "citation"], [161, 4, 1, "", "encoding"], [161, 4, 1, "", "ensure_loaded"], [161, 4, 1, "", "fileids"], [161, 4, 1, "", "license"], [161, 4, 1, "", "open"], [161, 4, 1, "", "paras"], [161, 4, 1, "", "raw"], [161, 4, 1, "", "readme"], [161, 6, 1, "", "root"], [161, 4, 1, "", "sents"], [161, 4, 1, "", "tagged_paras"], [161, 4, 1, "", "tagged_sents"], [161, 4, 1, "", "tagged_words"], [161, 4, 1, "", "words"]], "nltk.corpus.reader.ToolboxCorpusReader": [[162, 4, 1, "", "__init__"], [162, 4, 1, "", "abspath"], [162, 4, 1, "", "abspaths"], [162, 4, 1, "", "citation"], [162, 4, 1, "", "encoding"], [162, 4, 1, "", "ensure_loaded"], [162, 4, 1, "", "entries"], [162, 4, 1, "", "fields"], [162, 4, 1, "", "fileids"], [162, 4, 1, "", "license"], [162, 4, 1, "", "open"], [162, 4, 1, "", "raw"], [162, 4, 1, "", "readme"], [162, 6, 1, "", "root"], [162, 4, 1, "", "words"], [162, 4, 1, "", "xml"]], "nltk.corpus.reader.TwitterCorpusReader": [[163, 5, 1, "", "CorpusView"], [163, 4, 1, "", "__init__"], [163, 4, 1, "", "abspath"], [163, 4, 1, "", "abspaths"], [163, 4, 1, "", "citation"], [163, 4, 1, "", "docs"], [163, 4, 1, "", "encoding"], [163, 4, 1, "", "ensure_loaded"], [163, 4, 1, "", "fileids"], [163, 4, 1, "", "license"], [163, 4, 1, "", "open"], [163, 4, 1, "", "raw"], [163, 4, 1, "", "readme"], [163, 6, 1, "", "root"], [163, 4, 1, "", "strings"], [163, 4, 1, "", "tokenized"]], "nltk.corpus.reader.UdhrCorpusReader": [[164, 5, 1, "", "CorpusView"], [164, 5, 1, "", "ENCODINGS"], [164, 5, 1, "", "SKIP"], [164, 4, 1, "", "__init__"], [164, 4, 1, "", "abspath"], [164, 4, 1, "", "abspaths"], [164, 4, 1, "", "citation"], [164, 4, 1, "", "encoding"], [164, 4, 1, "", "ensure_loaded"], [164, 4, 1, "", "fileids"], [164, 4, 1, "", "license"], [164, 4, 1, "", "open"], [164, 4, 1, "", "paras"], [164, 4, 1, "", "raw"], [164, 4, 1, "", "readme"], [164, 6, 1, "", "root"], [164, 4, 1, "", "sents"], [164, 4, 1, "", "words"]], "nltk.corpus.reader.UnicharsCorpusReader": [[165, 4, 1, "", "__init__"], [165, 4, 1, "", "abspath"], [165, 4, 1, "", "abspaths"], [165, 5, 1, "", "available_categories"], [165, 4, 1, "", "chars"], [165, 4, 1, "", "citation"], [165, 4, 1, "", "encoding"], [165, 4, 1, "", "ensure_loaded"], [165, 4, 1, "", "fileids"], [165, 4, 1, "", "license"], [165, 4, 1, "", "open"], [165, 4, 1, "", "raw"], [165, 4, 1, "", "readme"], [165, 6, 1, "", "root"], [165, 4, 1, "", "words"]], "nltk.corpus.reader.VerbnetCorpusReader": [[166, 4, 1, "", "__init__"], [166, 4, 1, "", "abspath"], [166, 4, 1, "", "abspaths"], [166, 4, 1, "", "citation"], [166, 4, 1, "", "classids"], [166, 4, 1, "", "encoding"], [166, 4, 1, "", "ensure_loaded"], [166, 4, 1, "", "fileids"], [166, 4, 1, "", "frames"], [166, 4, 1, "", "lemmas"], [166, 4, 1, "", "license"], [166, 4, 1, "", "longid"], [166, 4, 1, "", "open"], [166, 4, 1, "", "pprint"], [166, 4, 1, "", "pprint_frames"], [166, 4, 1, "", "pprint_members"], [166, 4, 1, "", "pprint_subclasses"], [166, 4, 1, "", "pprint_themroles"], [166, 4, 1, "", "raw"], [166, 4, 1, "", "readme"], [166, 6, 1, "", "root"], [166, 4, 1, "", "shortid"], [166, 4, 1, "", "subclasses"], [166, 4, 1, "", "themroles"], [166, 4, 1, "", "vnclass"], [166, 4, 1, "", "wordnetids"], [166, 4, 1, "", "words"], [166, 4, 1, "", "xml"]], "nltk.corpus.reader.WordListCorpusReader": [[167, 4, 1, "", "__init__"], [167, 4, 1, "", "abspath"], [167, 4, 1, "", "abspaths"], [167, 4, 1, "", "citation"], [167, 4, 1, "", "encoding"], [167, 4, 1, "", "ensure_loaded"], [167, 4, 1, "", "fileids"], [167, 4, 1, "", "license"], [167, 4, 1, "", "open"], [167, 4, 1, "", "raw"], [167, 4, 1, "", "readme"], [167, 6, 1, "", "root"], [167, 4, 1, "", "words"]], "nltk.corpus.reader.WordNetCorpusReader": [[168, 5, 1, "", "ADJ"], [168, 5, 1, "", "ADJ_SAT"], [168, 5, 1, "", "ADV"], [168, 5, 1, "", "MORPHOLOGICAL_SUBSTITUTIONS"], [168, 5, 1, "", "NOUN"], [168, 5, 1, "", "VERB"], [168, 4, 1, "", "__init__"], [168, 4, 1, "", "abspath"], [168, 4, 1, "", "abspaths"], [168, 4, 1, "", "add_exomw"], [168, 4, 1, "", "add_omw"], [168, 4, 1, "", "add_provs"], [168, 4, 1, "", "all_eng_synsets"], [168, 4, 1, "", "all_lemma_names"], [168, 4, 1, "", "all_omw_synsets"], [168, 4, 1, "", "all_synsets"], [168, 4, 1, "", "citation"], [168, 4, 1, "", "custom_lemmas"], [168, 4, 1, "", "digraph"], [168, 4, 1, "", "disable_custom_lemmas"], [168, 4, 1, "", "doc"], [168, 4, 1, "", "encoding"], [168, 4, 1, "", "ensure_loaded"], [168, 4, 1, "", "fileids"], [168, 4, 1, "", "get_version"], [168, 4, 1, "", "ic"], [168, 4, 1, "", "index_sense"], [168, 4, 1, "", "jcn_similarity"], [168, 4, 1, "", "langs"], [168, 4, 1, "", "lch_similarity"], [168, 4, 1, "", "lemma"], [168, 4, 1, "", "lemma_count"], [168, 4, 1, "", "lemma_from_key"], [168, 4, 1, "", "lemmas"], [168, 4, 1, "", "license"], [168, 4, 1, "", "lin_similarity"], [168, 4, 1, "", "map_to_many"], [168, 4, 1, "", "map_to_one"], [168, 4, 1, "", "map_wn30"], [168, 4, 1, "", "morphy"], [168, 4, 1, "", "of2ss"], [168, 4, 1, "", "open"], [168, 4, 1, "", "path_similarity"], [168, 4, 1, "", "raw"], [168, 4, 1, "", "readme"], [168, 4, 1, "", "res_similarity"], [168, 6, 1, "", "root"], [168, 4, 1, "", "ss2of"], [168, 4, 1, "", "synonyms"], [168, 4, 1, "", "synset"], [168, 4, 1, "", "synset_from_pos_and_offset"], [168, 4, 1, "", "synset_from_sense_key"], [168, 4, 1, "", "synsets"], [168, 4, 1, "", "words"], [168, 4, 1, "", "wup_similarity"]], "nltk.corpus.reader.WordNetICCorpusReader": [[169, 4, 1, "", "__init__"], [169, 4, 1, "", "abspath"], [169, 4, 1, "", "abspaths"], [169, 4, 1, "", "citation"], [169, 4, 1, "", "encoding"], [169, 4, 1, "", "ensure_loaded"], [169, 4, 1, "", "fileids"], [169, 4, 1, "", "ic"], [169, 4, 1, "", "license"], [169, 4, 1, "", "open"], [169, 4, 1, "", "raw"], [169, 4, 1, "", "readme"], [169, 6, 1, "", "root"]], "nltk.corpus.reader.XMLCorpusReader": [[170, 4, 1, "", "__init__"], [170, 4, 1, "", "abspath"], [170, 4, 1, "", "abspaths"], [170, 4, 1, "", "citation"], [170, 4, 1, "", "encoding"], [170, 4, 1, "", "ensure_loaded"], [170, 4, 1, "", "fileids"], [170, 4, 1, "", "license"], [170, 4, 1, "", "open"], [170, 4, 1, "", "raw"], [170, 4, 1, "", "readme"], [170, 6, 1, "", "root"], [170, 4, 1, "", "words"], [170, 4, 1, "", "xml"]], "nltk.corpus.reader.YCOECorpusReader": [[171, 4, 1, "", "__init__"], [171, 4, 1, "", "abspath"], [171, 4, 1, "", "abspaths"], [171, 4, 1, "", "citation"], [171, 4, 1, "", "documents"], [171, 4, 1, "", "encoding"], [171, 4, 1, "", "ensure_loaded"], [171, 4, 1, "", "fileids"], [171, 4, 1, "", "license"], [171, 4, 1, "", "open"], [171, 4, 1, "", "paras"], [171, 4, 1, "", "parsed_sents"], [171, 4, 1, "", "raw"], [171, 4, 1, "", "readme"], [171, 6, 1, "", "root"], [171, 4, 1, "", "sents"], [171, 4, 1, "", "tagged_paras"], [171, 4, 1, "", "tagged_sents"], [171, 4, 1, "", "tagged_words"], [171, 4, 1, "", "words"]], "nltk.corpus.reader.aligned": [[172, 3, 1, "", "AlignedCorpusReader"], [172, 3, 1, "", "AlignedSentCorpusView"]], "nltk.corpus.reader.aligned.AlignedCorpusReader": [[172, 4, 1, "", "__init__"], [172, 4, 1, "", "aligned_sents"], [172, 4, 1, "", "sents"], [172, 4, 1, "", "words"]], "nltk.corpus.reader.aligned.AlignedSentCorpusView": [[172, 4, 1, "", "__init__"], [172, 4, 1, "", "read_block"]], "nltk.corpus.reader.api": [[173, 3, 1, "", "CategorizedCorpusReader"], [173, 3, 1, "", "CorpusReader"], [173, 3, 1, "", "SyntaxCorpusReader"]], "nltk.corpus.reader.api.CategorizedCorpusReader": [[173, 4, 1, "", "__init__"], [173, 4, 1, "", "categories"], [173, 4, 1, "", "fileids"], [173, 4, 1, "", "paras"], [173, 4, 1, "", "raw"], [173, 4, 1, "", "sents"], [173, 4, 1, "", "words"]], "nltk.corpus.reader.api.CorpusReader": [[173, 4, 1, "", "__init__"], [173, 4, 1, "", "abspath"], [173, 4, 1, "", "abspaths"], [173, 4, 1, "", "citation"], [173, 4, 1, "", "encoding"], [173, 4, 1, "", "ensure_loaded"], [173, 4, 1, "", "fileids"], [173, 4, 1, "", "license"], [173, 4, 1, "", "open"], [173, 4, 1, "", "raw"], [173, 4, 1, "", "readme"], [173, 6, 1, "", "root"]], "nltk.corpus.reader.api.SyntaxCorpusReader": [[173, 4, 1, "", "parsed_sents"], [173, 4, 1, "", "sents"], [173, 4, 1, "", "tagged_sents"], [173, 4, 1, "", "tagged_words"], [173, 4, 1, "", "words"]], "nltk.corpus.reader.bcp47": [[174, 3, 1, "", "BCP47CorpusReader"]], "nltk.corpus.reader.bcp47.BCP47CorpusReader": [[174, 4, 1, "", "__init__"], [174, 4, 1, "", "data_dict"], [174, 4, 1, "", "lang2str"], [174, 4, 1, "", "load_wiki_q"], [174, 4, 1, "", "morphology"], [174, 4, 1, "", "name"], [174, 4, 1, "", "parse_tag"], [174, 4, 1, "", "subdiv_dict"], [174, 4, 1, "", "val2str"], [174, 4, 1, "", "wiki_dict"]], "nltk.corpus.reader.bnc": [[175, 3, 1, "", "BNCCorpusReader"], [175, 3, 1, "", "BNCSentence"], [175, 3, 1, "", "BNCWordView"]], "nltk.corpus.reader.bnc.BNCCorpusReader": [[175, 4, 1, "", "__init__"], [175, 4, 1, "", "sents"], [175, 4, 1, "", "tagged_sents"], [175, 4, 1, "", "tagged_words"], [175, 4, 1, "", "words"]], "nltk.corpus.reader.bnc.BNCSentence": [[175, 4, 1, "", "__init__"]], "nltk.corpus.reader.bnc.BNCWordView": [[175, 4, 1, "", "__init__"], [175, 5, 1, "", "author"], [175, 5, 1, "", "editor"], [175, 4, 1, "", "handle_elt"], [175, 4, 1, "", "handle_header"], [175, 4, 1, "", "handle_sent"], [175, 4, 1, "", "handle_word"], [175, 5, 1, "", "resps"], [175, 5, 1, "", "tags_to_ignore"], [175, 5, 1, "", "title"]], "nltk.corpus.reader.bracket_parse": [[176, 3, 1, "", "AlpinoCorpusReader"], [176, 3, 1, "", "BracketParseCorpusReader"], [176, 3, 1, "", "CategorizedBracketParseCorpusReader"]], "nltk.corpus.reader.bracket_parse.AlpinoCorpusReader": [[176, 4, 1, "", "__init__"]], "nltk.corpus.reader.bracket_parse.BracketParseCorpusReader": [[176, 4, 1, "", "__init__"]], "nltk.corpus.reader.bracket_parse.CategorizedBracketParseCorpusReader": [[176, 4, 1, "", "__init__"], [176, 4, 1, "", "parsed_paras"], [176, 4, 1, "", "parsed_sents"], [176, 4, 1, "", "parsed_words"], [176, 4, 1, "", "tagged_paras"], [176, 4, 1, "", "tagged_sents"], [176, 4, 1, "", "tagged_words"]], "nltk.corpus.reader.categorized_sents": [[177, 3, 1, "", "CategorizedSentencesCorpusReader"]], "nltk.corpus.reader.categorized_sents.CategorizedSentencesCorpusReader": [[177, 5, 1, "", "CorpusView"], [177, 4, 1, "", "__init__"], [177, 4, 1, "", "sents"], [177, 4, 1, "", "words"]], "nltk.corpus.reader.chasen": [[178, 3, 1, "", "ChasenCorpusReader"], [178, 3, 1, "", "ChasenCorpusView"], [178, 1, 1, "", "demo"], [178, 1, 1, "", "test"]], "nltk.corpus.reader.chasen.ChasenCorpusReader": [[178, 4, 1, "", "__init__"], [178, 4, 1, "", "paras"], [178, 4, 1, "", "sents"], [178, 4, 1, "", "tagged_paras"], [178, 4, 1, "", "tagged_sents"], [178, 4, 1, "", "tagged_words"], [178, 4, 1, "", "words"]], "nltk.corpus.reader.chasen.ChasenCorpusView": [[178, 4, 1, "", "__init__"], [178, 4, 1, "", "read_block"]], "nltk.corpus.reader.childes": [[179, 3, 1, "", "CHILDESCorpusReader"], [179, 1, 1, "", "demo"]], "nltk.corpus.reader.childes.CHILDESCorpusReader": [[179, 4, 1, "", "MLU"], [179, 4, 1, "", "__init__"], [179, 4, 1, "", "age"], [179, 5, 1, "", "childes_url_base"], [179, 4, 1, "", "convert_age"], [179, 4, 1, "", "corpus"], [179, 4, 1, "", "participants"], [179, 4, 1, "", "sents"], [179, 4, 1, "", "tagged_sents"], [179, 4, 1, "", "tagged_words"], [179, 4, 1, "", "webview_file"], [179, 4, 1, "", "words"]], "nltk.corpus.reader.chunked": [[180, 3, 1, "", "ChunkedCorpusReader"], [180, 3, 1, "", "ChunkedCorpusView"]], "nltk.corpus.reader.chunked.ChunkedCorpusReader": [[180, 4, 1, "", "__init__"], [180, 4, 1, "", "chunked_paras"], [180, 4, 1, "", "chunked_sents"], [180, 4, 1, "", "chunked_words"], [180, 4, 1, "", "paras"], [180, 4, 1, "", "sents"], [180, 4, 1, "", "tagged_paras"], [180, 4, 1, "", "tagged_sents"], [180, 4, 1, "", "tagged_words"], [180, 4, 1, "", "words"]], "nltk.corpus.reader.chunked.ChunkedCorpusView": [[180, 4, 1, "", "__init__"], [180, 4, 1, "", "read_block"]], "nltk.corpus.reader.cmudict": [[181, 3, 1, "", "CMUDictCorpusReader"], [181, 1, 1, "", "read_cmudict_block"]], "nltk.corpus.reader.cmudict.CMUDictCorpusReader": [[181, 4, 1, "", "dict"], [181, 4, 1, "", "entries"], [181, 4, 1, "", "words"]], "nltk.corpus.reader.comparative_sents": [[182, 3, 1, "", "ComparativeSentencesCorpusReader"], [182, 3, 1, "", "Comparison"]], "nltk.corpus.reader.comparative_sents.ComparativeSentencesCorpusReader": [[182, 5, 1, "", "CorpusView"], [182, 4, 1, "", "__init__"], [182, 4, 1, "", "comparisons"], [182, 4, 1, "", "keywords"], [182, 4, 1, "", "keywords_readme"], [182, 4, 1, "", "sents"], [182, 4, 1, "", "words"]], "nltk.corpus.reader.comparative_sents.Comparison": [[182, 4, 1, "", "__init__"]], "nltk.corpus.reader.conll": [[183, 3, 1, "", "ConllChunkCorpusReader"], [183, 3, 1, "", "ConllCorpusReader"], [183, 3, 1, "", "ConllSRLInstance"], [183, 3, 1, "", "ConllSRLInstanceList"]], "nltk.corpus.reader.conll.ConllChunkCorpusReader": [[183, 4, 1, "", "__init__"]], "nltk.corpus.reader.conll.ConllCorpusReader": [[183, 5, 1, "", "CHUNK"], [183, 5, 1, "", "COLUMN_TYPES"], [183, 5, 1, "", "IGNORE"], [183, 5, 1, "", "NE"], [183, 5, 1, "", "POS"], [183, 5, 1, "", "SRL"], [183, 5, 1, "", "TREE"], [183, 5, 1, "", "WORDS"], [183, 4, 1, "", "__init__"], [183, 4, 1, "", "chunked_sents"], [183, 4, 1, "", "chunked_words"], [183, 4, 1, "", "iob_sents"], [183, 4, 1, "", "iob_words"], [183, 4, 1, "", "parsed_sents"], [183, 4, 1, "", "sents"], [183, 4, 1, "", "srl_instances"], [183, 4, 1, "", "srl_spans"], [183, 4, 1, "", "tagged_sents"], [183, 4, 1, "", "tagged_words"], [183, 4, 1, "", "words"]], "nltk.corpus.reader.conll.ConllSRLInstance": [[183, 4, 1, "", "__init__"], [183, 5, 1, "", "arguments"], [183, 4, 1, "", "pprint"], [183, 5, 1, "", "tagged_spans"], [183, 5, 1, "", "tree"], [183, 5, 1, "", "verb"], [183, 5, 1, "", "verb_head"], [183, 5, 1, "", "words"]], "nltk.corpus.reader.conll.ConllSRLInstanceList": [[183, 4, 1, "", "__init__"], [183, 4, 1, "", "pprint"]], "nltk.corpus.reader.crubadan": [[184, 3, 1, "", "CrubadanCorpusReader"]], "nltk.corpus.reader.crubadan.CrubadanCorpusReader": [[184, 4, 1, "", "__init__"], [184, 4, 1, "", "crubadan_to_iso"], [184, 4, 1, "", "iso_to_crubadan"], [184, 4, 1, "", "lang_freq"], [184, 4, 1, "", "langs"]], "nltk.corpus.reader.dependency": [[185, 3, 1, "", "DependencyCorpusReader"], [185, 3, 1, "", "DependencyCorpusView"]], "nltk.corpus.reader.dependency.DependencyCorpusReader": [[185, 4, 1, "", "__init__"], [185, 4, 1, "", "parsed_sents"], [185, 4, 1, "", "sents"], [185, 4, 1, "", "tagged_sents"], [185, 4, 1, "", "tagged_words"], [185, 4, 1, "", "words"]], "nltk.corpus.reader.dependency.DependencyCorpusView": [[185, 4, 1, "", "__init__"], [185, 4, 1, "", "read_block"]], "nltk.corpus.reader.framenet": [[186, 3, 1, "", "AttrDict"], [186, 3, 1, "", "FramenetCorpusReader"], [186, 7, 1, "", "FramenetError"], [186, 3, 1, "", "Future"], [186, 3, 1, "", "PrettyDict"], [186, 3, 1, "", "PrettyLazyConcatenation"], [186, 3, 1, "", "PrettyLazyIteratorList"], [186, 3, 1, "", "PrettyLazyMap"], [186, 3, 1, "", "PrettyList"], [186, 3, 1, "", "SpecialList"], [186, 1, 1, "", "demo"], [186, 1, 1, "", "mimic_wrap"]], "nltk.corpus.reader.framenet.AttrDict": [[186, 4, 1, "", "__init__"]], "nltk.corpus.reader.framenet.FramenetCorpusReader": [[186, 4, 1, "", "__init__"], [186, 4, 1, "", "annotations"], [186, 4, 1, "", "buildindexes"], [186, 4, 1, "", "doc"], [186, 4, 1, "", "docs"], [186, 4, 1, "", "docs_metadata"], [186, 4, 1, "", "exemplars"], [186, 4, 1, "", "fe_relations"], [186, 4, 1, "", "fes"], [186, 4, 1, "", "frame"], [186, 4, 1, "", "frame_by_id"], [186, 4, 1, "", "frame_by_name"], [186, 4, 1, "", "frame_ids_and_names"], [186, 4, 1, "", "frame_relation_types"], [186, 4, 1, "", "frame_relations"], [186, 4, 1, "", "frames"], [186, 4, 1, "", "frames_by_lemma"], [186, 4, 1, "", "ft_sents"], [186, 4, 1, "", "help"], [186, 4, 1, "", "lu"], [186, 4, 1, "", "lu_basic"], [186, 4, 1, "", "lu_ids_and_names"], [186, 4, 1, "", "lus"], [186, 4, 1, "", "propagate_semtypes"], [186, 4, 1, "", "semtype"], [186, 4, 1, "", "semtype_inherits"], [186, 4, 1, "", "semtypes"], [186, 4, 1, "", "sents"], [186, 4, 1, "", "warnings"]], "nltk.corpus.reader.framenet.Future": [[186, 4, 1, "", "__init__"]], "nltk.corpus.reader.framenet.PrettyDict": [[186, 4, 1, "", "__init__"]], "nltk.corpus.reader.framenet.PrettyList": [[186, 4, 1, "", "__init__"]], "nltk.corpus.reader.framenet.SpecialList": [[186, 4, 1, "", "__init__"]], "nltk.corpus.reader.ieer": [[187, 3, 1, "", "IEERCorpusReader"], [187, 3, 1, "", "IEERDocument"], [187, 2, 1, "", "documents"], [187, 2, 1, "", "titles"]], "nltk.corpus.reader.ieer.IEERCorpusReader": [[187, 4, 1, "", "docs"], [187, 4, 1, "", "parsed_docs"]], "nltk.corpus.reader.ieer.IEERDocument": [[187, 4, 1, "", "__init__"]], "nltk.corpus.reader.indian": [[188, 3, 1, "", "IndianCorpusReader"], [188, 3, 1, "", "IndianCorpusView"]], "nltk.corpus.reader.indian.IndianCorpusReader": [[188, 4, 1, "", "sents"], [188, 4, 1, "", "tagged_sents"], [188, 4, 1, "", "tagged_words"], [188, 4, 1, "", "words"]], "nltk.corpus.reader.indian.IndianCorpusView": [[188, 4, 1, "", "__init__"], [188, 4, 1, "", "read_block"]], "nltk.corpus.reader.ipipan": [[189, 3, 1, "", "IPIPANCorpusReader"], [189, 3, 1, "", "IPIPANCorpusView"]], "nltk.corpus.reader.ipipan.IPIPANCorpusReader": [[189, 4, 1, "", "__init__"], [189, 4, 1, "", "categories"], [189, 4, 1, "", "channels"], [189, 4, 1, "", "domains"], [189, 4, 1, "", "fileids"], [189, 4, 1, "", "paras"], [189, 4, 1, "", "sents"], [189, 4, 1, "", "tagged_paras"], [189, 4, 1, "", "tagged_sents"], [189, 4, 1, "", "tagged_words"], [189, 4, 1, "", "words"]], "nltk.corpus.reader.ipipan.IPIPANCorpusView": [[189, 5, 1, "", "PARAS_MODE"], [189, 5, 1, "", "SENTS_MODE"], [189, 5, 1, "", "WORDS_MODE"], [189, 4, 1, "", "__init__"], [189, 4, 1, "", "read_block"]], "nltk.corpus.reader.knbc": [[190, 3, 1, "", "KNBCorpusReader"], [190, 1, 1, "", "demo"], [190, 1, 1, "", "test"]], "nltk.corpus.reader.knbc.KNBCorpusReader": [[190, 4, 1, "", "__init__"]], "nltk.corpus.reader.lin": [[191, 3, 1, "", "LinThesaurusCorpusReader"], [191, 1, 1, "", "demo"]], "nltk.corpus.reader.lin.LinThesaurusCorpusReader": [[191, 4, 1, "", "__init__"], [191, 4, 1, "", "scored_synonyms"], [191, 4, 1, "", "similarity"], [191, 4, 1, "", "synonyms"]], "nltk.corpus.reader.markdown": [[192, 3, 1, "", "CategorizedMarkdownCorpusReader"], [192, 3, 1, "", "CodeBlock"], [192, 3, 1, "", "Image"], [192, 3, 1, "", "Link"], [192, 3, 1, "", "List"], [192, 3, 1, "", "MarkdownBlock"], [192, 3, 1, "", "MarkdownCorpusReader"], [192, 3, 1, "", "MarkdownSection"], [192, 1, 1, "", "comma_separated_string_args"], [192, 1, 1, "", "read_parse_blankline_block"]], "nltk.corpus.reader.markdown.CategorizedMarkdownCorpusReader": [[192, 4, 1, "", "__init__"], [192, 4, 1, "", "blockquote_reader"], [192, 4, 1, "", "blockquotes"], [192, 4, 1, "", "categories"], [192, 4, 1, "", "code_block_reader"], [192, 4, 1, "", "code_blocks"], [192, 4, 1, "", "concatenated_view"], [192, 4, 1, "", "fileids"], [192, 4, 1, "", "image_reader"], [192, 4, 1, "", "images"], [192, 4, 1, "", "link_reader"], [192, 4, 1, "", "links"], [192, 4, 1, "", "list_reader"], [192, 4, 1, "", "lists"], [192, 4, 1, "", "metadata"], [192, 4, 1, "", "metadata_reader"], [192, 4, 1, "", "paras"], [192, 4, 1, "", "raw"], [192, 4, 1, "", "section_reader"], [192, 4, 1, "", "sections"], [192, 4, 1, "", "sents"], [192, 4, 1, "", "words"]], "nltk.corpus.reader.markdown.CodeBlock": [[192, 4, 1, "", "__init__"], [192, 6, 1, "", "lines"], [192, 6, 1, "", "paras"], [192, 6, 1, "", "sents"]], "nltk.corpus.reader.markdown.Image": [[192, 4, 1, "", "__new__"], [192, 5, 1, "", "label"], [192, 5, 1, "", "src"], [192, 5, 1, "", "title"]], "nltk.corpus.reader.markdown.Link": [[192, 4, 1, "", "__new__"], [192, 5, 1, "", "href"], [192, 5, 1, "", "label"], [192, 5, 1, "", "title"]], "nltk.corpus.reader.markdown.List": [[192, 4, 1, "", "__new__"], [192, 5, 1, "", "is_ordered"], [192, 5, 1, "", "items"]], "nltk.corpus.reader.markdown.MarkdownBlock": [[192, 4, 1, "", "__init__"], [192, 6, 1, "", "paras"], [192, 6, 1, "", "raw"], [192, 6, 1, "", "sents"], [192, 6, 1, "", "words"]], "nltk.corpus.reader.markdown.MarkdownCorpusReader": [[192, 4, 1, "", "__init__"]], "nltk.corpus.reader.markdown.MarkdownSection": [[192, 4, 1, "", "__init__"]], "nltk.corpus.reader.mte": [[193, 3, 1, "", "MTECorpusReader"], [193, 3, 1, "", "MTECorpusView"], [193, 3, 1, "", "MTEFileReader"], [193, 3, 1, "", "MTETagConverter"], [193, 1, 1, "", "xpath"]], "nltk.corpus.reader.mte.MTECorpusReader": [[193, 4, 1, "", "__init__"], [193, 4, 1, "", "lemma_paras"], [193, 4, 1, "", "lemma_sents"], [193, 4, 1, "", "lemma_words"], [193, 4, 1, "", "paras"], [193, 4, 1, "", "sents"], [193, 4, 1, "", "tagged_paras"], [193, 4, 1, "", "tagged_sents"], [193, 4, 1, "", "tagged_words"], [193, 4, 1, "", "words"]], "nltk.corpus.reader.mte.MTECorpusView": [[193, 4, 1, "", "__init__"], [193, 4, 1, "", "read_block"]], "nltk.corpus.reader.mte.MTEFileReader": [[193, 4, 1, "", "__init__"], [193, 4, 1, "", "lemma_paras"], [193, 4, 1, "", "lemma_sents"], [193, 4, 1, "", "lemma_words"], [193, 5, 1, "", "ns"], [193, 5, 1, "", "para_path"], [193, 4, 1, "", "paras"], [193, 5, 1, "", "sent_path"], [193, 4, 1, "", "sents"], [193, 5, 1, "", "tag_ns"], [193, 4, 1, "", "tagged_paras"], [193, 4, 1, "", "tagged_sents"], [193, 4, 1, "", "tagged_words"], [193, 5, 1, "", "word_path"], [193, 4, 1, "", "words"], [193, 5, 1, "", "xml_ns"]], "nltk.corpus.reader.mte.MTETagConverter": [[193, 5, 1, "", "mapping_msd_universal"], [193, 4, 1, "", "msd_to_universal"]], "nltk.corpus.reader.nkjp": [[194, 3, 1, "", "NKJPCorpusReader"], [194, 3, 1, "", "NKJPCorpus_Header_View"], [194, 3, 1, "", "NKJPCorpus_Morph_View"], [194, 3, 1, "", "NKJPCorpus_Segmentation_View"], [194, 3, 1, "", "NKJPCorpus_Text_View"], [194, 3, 1, "", "XML_Tool"]], "nltk.corpus.reader.nkjp.NKJPCorpusReader": [[194, 5, 1, "", "HEADER_MODE"], [194, 5, 1, "", "RAW_MODE"], [194, 5, 1, "", "SENTS_MODE"], [194, 5, 1, "", "WORDS_MODE"], [194, 4, 1, "", "__init__"], [194, 4, 1, "", "add_root"], [194, 4, 1, "", "fileids"], [194, 4, 1, "", "get_paths"], [194, 4, 1, "", "header"], [194, 4, 1, "", "raw"], [194, 4, 1, "", "sents"], [194, 4, 1, "", "tagged_words"], [194, 4, 1, "", "words"]], "nltk.corpus.reader.nkjp.NKJPCorpus_Header_View": [[194, 4, 1, "", "__init__"], [194, 4, 1, "", "handle_elt"], [194, 4, 1, "", "handle_query"]], "nltk.corpus.reader.nkjp.NKJPCorpus_Morph_View": [[194, 4, 1, "", "__init__"], [194, 4, 1, "", "handle_elt"], [194, 4, 1, "", "handle_query"]], "nltk.corpus.reader.nkjp.NKJPCorpus_Segmentation_View": [[194, 4, 1, "", "__init__"], [194, 4, 1, "", "get_segm_id"], [194, 4, 1, "", "get_sent_beg"], [194, 4, 1, "", "get_sent_end"], [194, 4, 1, "", "get_sentences"], [194, 4, 1, "", "handle_elt"], [194, 4, 1, "", "handle_query"], [194, 4, 1, "", "remove_choice"]], "nltk.corpus.reader.nkjp.NKJPCorpus_Text_View": [[194, 5, 1, "", "RAW_MODE"], [194, 5, 1, "", "SENTS_MODE"], [194, 4, 1, "", "__init__"], [194, 4, 1, "", "get_segm_id"], [194, 4, 1, "", "handle_elt"], [194, 4, 1, "", "handle_query"], [194, 4, 1, "", "read_block"]], "nltk.corpus.reader.nkjp.XML_Tool": [[194, 4, 1, "", "__init__"], [194, 4, 1, "", "build_preprocessed_file"], [194, 4, 1, "", "remove_preprocessed_file"]], "nltk.corpus.reader.nombank": [[195, 3, 1, "", "NombankChainTreePointer"], [195, 3, 1, "", "NombankCorpusReader"], [195, 3, 1, "", "NombankInstance"], [195, 3, 1, "", "NombankPointer"], [195, 3, 1, "", "NombankSplitTreePointer"], [195, 3, 1, "", "NombankTreePointer"]], "nltk.corpus.reader.nombank.NombankChainTreePointer": [[195, 4, 1, "", "__init__"], [195, 5, 1, "", "pieces"], [195, 4, 1, "", "select"]], "nltk.corpus.reader.nombank.NombankCorpusReader": [[195, 4, 1, "", "__init__"], [195, 4, 1, "", "instances"], [195, 4, 1, "", "lines"], [195, 4, 1, "", "nouns"], [195, 4, 1, "", "roleset"], [195, 4, 1, "", "rolesets"]], "nltk.corpus.reader.nombank.NombankInstance": [[195, 4, 1, "", "__init__"], [195, 5, 1, "", "arguments"], [195, 5, 1, "", "baseform"], [195, 5, 1, "", "fileid"], [195, 4, 1, "", "parse"], [195, 5, 1, "", "parse_corpus"], [195, 5, 1, "", "predicate"], [195, 5, 1, "", "predid"], [195, 6, 1, "", "roleset"], [195, 5, 1, "", "sensenumber"], [195, 5, 1, "", "sentnum"], [195, 6, 1, "", "tree"], [195, 5, 1, "", "wordnum"]], "nltk.corpus.reader.nombank.NombankPointer": [[195, 4, 1, "", "__init__"]], "nltk.corpus.reader.nombank.NombankSplitTreePointer": [[195, 4, 1, "", "__init__"], [195, 5, 1, "", "pieces"], [195, 4, 1, "", "select"]], "nltk.corpus.reader.nombank.NombankTreePointer": [[195, 4, 1, "", "__init__"], [195, 4, 1, "", "parse"], [195, 4, 1, "", "select"], [195, 4, 1, "", "treepos"]], "nltk.corpus.reader.nps_chat": [[196, 3, 1, "", "NPSChatCorpusReader"]], "nltk.corpus.reader.nps_chat.NPSChatCorpusReader": [[196, 4, 1, "", "__init__"], [196, 4, 1, "", "posts"], [196, 4, 1, "", "tagged_posts"], [196, 4, 1, "", "tagged_words"], [196, 4, 1, "", "words"], [196, 4, 1, "", "xml_posts"]], "nltk.corpus.reader.opinion_lexicon": [[197, 3, 1, "", "IgnoreReadmeCorpusView"], [197, 3, 1, "", "OpinionLexiconCorpusReader"]], "nltk.corpus.reader.opinion_lexicon.IgnoreReadmeCorpusView": [[197, 4, 1, "", "__init__"]], "nltk.corpus.reader.opinion_lexicon.OpinionLexiconCorpusReader": [[197, 5, 1, "", "CorpusView"], [197, 4, 1, "", "negative"], [197, 4, 1, "", "positive"], [197, 4, 1, "", "words"]], "nltk.corpus.reader.panlex_lite": [[198, 3, 1, "", "Meaning"], [198, 3, 1, "", "PanLexLiteCorpusReader"]], "nltk.corpus.reader.panlex_lite.Meaning": [[198, 4, 1, "", "__init__"], [198, 4, 1, "", "expressions"], [198, 4, 1, "", "id"], [198, 4, 1, "", "quality"], [198, 4, 1, "", "source"], [198, 4, 1, "", "source_group"]], "nltk.corpus.reader.panlex_lite.PanLexLiteCorpusReader": [[198, 5, 1, "", "MEANING_Q"], [198, 5, 1, "", "TRANSLATION_Q"], [198, 4, 1, "", "__init__"], [198, 4, 1, "", "language_varieties"], [198, 4, 1, "", "meanings"], [198, 4, 1, "", "translations"]], "nltk.corpus.reader.panlex_swadesh": [[199, 3, 1, "", "PanlexLanguage"], [199, 3, 1, "", "PanlexSwadeshCorpusReader"]], "nltk.corpus.reader.panlex_swadesh.PanlexLanguage": [[199, 4, 1, "", "__new__"], [199, 5, 1, "", "iso639"], [199, 5, 1, "", "iso639_type"], [199, 5, 1, "", "langvar_uid"], [199, 5, 1, "", "name"], [199, 5, 1, "", "panlex_uid"], [199, 5, 1, "", "script"]], "nltk.corpus.reader.panlex_swadesh.PanlexSwadeshCorpusReader": [[199, 4, 1, "", "__init__"], [199, 4, 1, "", "entries"], [199, 4, 1, "", "get_languages"], [199, 4, 1, "", "get_macrolanguages"], [199, 4, 1, "", "language_codes"], [199, 4, 1, "", "license"], [199, 4, 1, "", "words_by_iso639"], [199, 4, 1, "", "words_by_lang"]], "nltk.corpus.reader.pl196x": [[200, 3, 1, "", "Pl196xCorpusReader"], [200, 3, 1, "", "TEICorpusView"]], "nltk.corpus.reader.pl196x.Pl196xCorpusReader": [[200, 4, 1, "", "__init__"], [200, 4, 1, "", "decode_tag"], [200, 5, 1, "", "head_len"], [200, 4, 1, "", "paras"], [200, 4, 1, "", "sents"], [200, 4, 1, "", "tagged_paras"], [200, 4, 1, "", "tagged_sents"], [200, 4, 1, "", "tagged_words"], [200, 4, 1, "", "textids"], [200, 4, 1, "", "words"], [200, 4, 1, "", "xml"]], "nltk.corpus.reader.pl196x.TEICorpusView": [[200, 4, 1, "", "__init__"], [200, 4, 1, "", "read_block"]], "nltk.corpus.reader.plaintext": [[201, 3, 1, "", "CategorizedPlaintextCorpusReader"], [201, 3, 1, "", "EuroparlCorpusReader"], [201, 3, 1, "", "PlaintextCorpusReader"], [201, 3, 1, "", "PortugueseCategorizedPlaintextCorpusReader"]], "nltk.corpus.reader.plaintext.CategorizedPlaintextCorpusReader": [[201, 4, 1, "", "__init__"]], "nltk.corpus.reader.plaintext.EuroparlCorpusReader": [[201, 4, 1, "", "chapters"], [201, 4, 1, "", "paras"]], "nltk.corpus.reader.plaintext.PlaintextCorpusReader": [[201, 5, 1, "", "CorpusView"], [201, 4, 1, "", "__init__"], [201, 4, 1, "", "paras"], [201, 4, 1, "", "sents"], [201, 4, 1, "", "words"]], "nltk.corpus.reader.plaintext.PortugueseCategorizedPlaintextCorpusReader": [[201, 4, 1, "", "__init__"]], "nltk.corpus.reader.ppattach": [[202, 3, 1, "", "PPAttachment"], [202, 3, 1, "", "PPAttachmentCorpusReader"]], "nltk.corpus.reader.ppattach.PPAttachment": [[202, 4, 1, "", "__init__"]], "nltk.corpus.reader.ppattach.PPAttachmentCorpusReader": [[202, 4, 1, "", "attachments"], [202, 4, 1, "", "tuples"]], "nltk.corpus.reader.propbank": [[203, 3, 1, "", "PropbankChainTreePointer"], [203, 3, 1, "", "PropbankCorpusReader"], [203, 3, 1, "", "PropbankInflection"], [203, 3, 1, "", "PropbankInstance"], [203, 3, 1, "", "PropbankPointer"], [203, 3, 1, "", "PropbankSplitTreePointer"], [203, 3, 1, "", "PropbankTreePointer"]], "nltk.corpus.reader.propbank.PropbankChainTreePointer": [[203, 4, 1, "", "__init__"], [203, 5, 1, "", "pieces"], [203, 4, 1, "", "select"]], "nltk.corpus.reader.propbank.PropbankCorpusReader": [[203, 4, 1, "", "__init__"], [203, 4, 1, "", "instances"], [203, 4, 1, "", "lines"], [203, 4, 1, "", "roleset"], [203, 4, 1, "", "rolesets"], [203, 4, 1, "", "verbs"]], "nltk.corpus.reader.propbank.PropbankInflection": [[203, 5, 1, "", "ACTIVE"], [203, 5, 1, "", "FINITE"], [203, 5, 1, "", "FUTURE"], [203, 5, 1, "", "GERUND"], [203, 5, 1, "", "INFINITIVE"], [203, 5, 1, "", "NONE"], [203, 5, 1, "", "PARTICIPLE"], [203, 5, 1, "", "PASSIVE"], [203, 5, 1, "", "PAST"], [203, 5, 1, "", "PERFECT"], [203, 5, 1, "", "PERFECT_AND_PROGRESSIVE"], [203, 5, 1, "", "PRESENT"], [203, 5, 1, "", "PROGRESSIVE"], [203, 5, 1, "", "THIRD_PERSON"], [203, 4, 1, "", "__init__"], [203, 4, 1, "", "parse"]], "nltk.corpus.reader.propbank.PropbankInstance": [[203, 4, 1, "", "__init__"], [203, 5, 1, "", "arguments"], [203, 6, 1, "", "baseform"], [203, 5, 1, "", "fileid"], [203, 5, 1, "", "inflection"], [203, 4, 1, "", "parse"], [203, 5, 1, "", "parse_corpus"], [203, 5, 1, "", "predicate"], [203, 6, 1, "", "predid"], [203, 5, 1, "", "roleset"], [203, 6, 1, "", "sensenumber"], [203, 5, 1, "", "sentnum"], [203, 5, 1, "", "tagger"], [203, 6, 1, "", "tree"], [203, 5, 1, "", "wordnum"]], "nltk.corpus.reader.propbank.PropbankPointer": [[203, 4, 1, "", "__init__"]], "nltk.corpus.reader.propbank.PropbankSplitTreePointer": [[203, 4, 1, "", "__init__"], [203, 5, 1, "", "pieces"], [203, 4, 1, "", "select"]], "nltk.corpus.reader.propbank.PropbankTreePointer": [[203, 4, 1, "", "__init__"], [203, 4, 1, "", "parse"], [203, 4, 1, "", "select"], [203, 4, 1, "", "treepos"]], "nltk.corpus.reader.pros_cons": [[204, 3, 1, "", "ProsConsCorpusReader"]], "nltk.corpus.reader.pros_cons.ProsConsCorpusReader": [[204, 5, 1, "", "CorpusView"], [204, 4, 1, "", "__init__"], [204, 4, 1, "", "sents"], [204, 4, 1, "", "words"]], "nltk.corpus.reader.reviews": [[205, 3, 1, "", "Review"], [205, 3, 1, "", "ReviewLine"], [205, 3, 1, "", "ReviewsCorpusReader"]], "nltk.corpus.reader.reviews.Review": [[205, 4, 1, "", "__init__"], [205, 4, 1, "", "add_line"], [205, 4, 1, "", "features"], [205, 4, 1, "", "sents"]], "nltk.corpus.reader.reviews.ReviewLine": [[205, 4, 1, "", "__init__"]], "nltk.corpus.reader.reviews.ReviewsCorpusReader": [[205, 5, 1, "", "CorpusView"], [205, 4, 1, "", "__init__"], [205, 4, 1, "", "features"], [205, 4, 1, "", "reviews"], [205, 4, 1, "", "sents"], [205, 4, 1, "", "words"]], "nltk.corpus.reader.rte": [[206, 3, 1, "", "RTECorpusReader"], [206, 3, 1, "", "RTEPair"], [206, 1, 1, "", "norm"]], "nltk.corpus.reader.rte.RTECorpusReader": [[206, 4, 1, "", "pairs"]], "nltk.corpus.reader.rte.RTEPair": [[206, 4, 1, "", "__init__"]], "nltk.corpus.reader.semcor": [[207, 3, 1, "", "SemcorCorpusReader"], [207, 3, 1, "", "SemcorSentence"], [207, 3, 1, "", "SemcorWordView"]], "nltk.corpus.reader.semcor.SemcorCorpusReader": [[207, 4, 1, "", "__init__"], [207, 4, 1, "", "chunk_sents"], [207, 4, 1, "", "chunks"], [207, 4, 1, "", "sents"], [207, 4, 1, "", "tagged_chunks"], [207, 4, 1, "", "tagged_sents"], [207, 4, 1, "", "words"]], "nltk.corpus.reader.semcor.SemcorSentence": [[207, 4, 1, "", "__init__"]], "nltk.corpus.reader.semcor.SemcorWordView": [[207, 4, 1, "", "__init__"], [207, 4, 1, "", "handle_elt"], [207, 4, 1, "", "handle_sent"], [207, 4, 1, "", "handle_word"]], "nltk.corpus.reader.senseval": [[208, 3, 1, "", "SensevalCorpusReader"], [208, 3, 1, "", "SensevalCorpusView"], [208, 3, 1, "", "SensevalInstance"]], "nltk.corpus.reader.senseval.SensevalCorpusReader": [[208, 4, 1, "", "instances"]], "nltk.corpus.reader.senseval.SensevalCorpusView": [[208, 4, 1, "", "__init__"], [208, 4, 1, "", "read_block"]], "nltk.corpus.reader.senseval.SensevalInstance": [[208, 4, 1, "", "__init__"]], "nltk.corpus.reader.sentiwordnet": [[209, 3, 1, "", "SentiSynset"], [209, 3, 1, "", "SentiWordNetCorpusReader"]], "nltk.corpus.reader.sentiwordnet.SentiSynset": [[209, 4, 1, "", "__init__"], [209, 4, 1, "", "neg_score"], [209, 4, 1, "", "obj_score"], [209, 4, 1, "", "pos_score"]], "nltk.corpus.reader.sentiwordnet.SentiWordNetCorpusReader": [[209, 4, 1, "", "__init__"], [209, 4, 1, "", "all_senti_synsets"], [209, 4, 1, "", "senti_synset"], [209, 4, 1, "", "senti_synsets"]], "nltk.corpus.reader.sinica_treebank": [[210, 3, 1, "", "SinicaTreebankCorpusReader"]], "nltk.corpus.reader.string_category": [[211, 3, 1, "", "StringCategoryCorpusReader"]], "nltk.corpus.reader.string_category.StringCategoryCorpusReader": [[211, 4, 1, "", "__init__"], [211, 4, 1, "", "tuples"]], "nltk.corpus.reader.switchboard": [[212, 3, 1, "", "SwitchboardCorpusReader"], [212, 3, 1, "", "SwitchboardTurn"]], "nltk.corpus.reader.switchboard.SwitchboardCorpusReader": [[212, 4, 1, "", "__init__"], [212, 4, 1, "", "discourses"], [212, 4, 1, "", "tagged_discourses"], [212, 4, 1, "", "tagged_turns"], [212, 4, 1, "", "tagged_words"], [212, 4, 1, "", "turns"], [212, 4, 1, "", "words"]], "nltk.corpus.reader.switchboard.SwitchboardTurn": [[212, 4, 1, "", "__init__"]], "nltk.corpus.reader.tagged": [[213, 3, 1, "", "CategorizedTaggedCorpusReader"], [213, 3, 1, "", "MacMorphoCorpusReader"], [213, 3, 1, "", "TaggedCorpusReader"], [213, 3, 1, "", "TaggedCorpusView"], [213, 3, 1, "", "TimitTaggedCorpusReader"]], "nltk.corpus.reader.tagged.CategorizedTaggedCorpusReader": [[213, 4, 1, "", "__init__"], [213, 4, 1, "", "tagged_paras"], [213, 4, 1, "", "tagged_sents"], [213, 4, 1, "", "tagged_words"]], "nltk.corpus.reader.tagged.MacMorphoCorpusReader": [[213, 4, 1, "", "__init__"]], "nltk.corpus.reader.tagged.TaggedCorpusReader": [[213, 4, 1, "", "__init__"], [213, 4, 1, "", "paras"], [213, 4, 1, "", "sents"], [213, 4, 1, "", "tagged_paras"], [213, 4, 1, "", "tagged_sents"], [213, 4, 1, "", "tagged_words"], [213, 4, 1, "", "words"]], "nltk.corpus.reader.tagged.TaggedCorpusView": [[213, 4, 1, "", "__init__"], [213, 4, 1, "", "read_block"]], "nltk.corpus.reader.tagged.TimitTaggedCorpusReader": [[213, 4, 1, "", "__init__"], [213, 4, 1, "", "paras"], [213, 4, 1, "", "tagged_paras"]], "nltk.corpus.reader.timit": [[214, 3, 1, "", "SpeakerInfo"], [214, 3, 1, "", "TimitCorpusReader"], [214, 1, 1, "", "read_timit_block"]], "nltk.corpus.reader.timit.SpeakerInfo": [[214, 4, 1, "", "__init__"]], "nltk.corpus.reader.timit.TimitCorpusReader": [[214, 4, 1, "", "__init__"], [214, 4, 1, "", "audiodata"], [214, 4, 1, "", "fileids"], [214, 4, 1, "", "phone_times"], [214, 4, 1, "", "phone_trees"], [214, 4, 1, "", "phones"], [214, 4, 1, "", "play"], [214, 4, 1, "", "sent_times"], [214, 4, 1, "", "sentid"], [214, 4, 1, "", "sents"], [214, 4, 1, "", "spkrid"], [214, 4, 1, "", "spkrinfo"], [214, 4, 1, "", "spkrutteranceids"], [214, 4, 1, "", "transcription_dict"], [214, 4, 1, "", "utterance"], [214, 4, 1, "", "utteranceids"], [214, 4, 1, "", "wav"], [214, 4, 1, "", "word_times"], [214, 4, 1, "", "words"]], "nltk.corpus.reader.toolbox": [[215, 3, 1, "", "ToolboxCorpusReader"], [215, 1, 1, "", "demo"]], "nltk.corpus.reader.toolbox.ToolboxCorpusReader": [[215, 4, 1, "", "entries"], [215, 4, 1, "", "fields"], [215, 4, 1, "", "words"], [215, 4, 1, "", "xml"]], "nltk.corpus.reader.twitter": [[216, 3, 1, "", "TwitterCorpusReader"]], "nltk.corpus.reader.twitter.TwitterCorpusReader": [[216, 5, 1, "", "CorpusView"], [216, 4, 1, "", "__init__"], [216, 4, 1, "", "docs"], [216, 4, 1, "", "strings"], [216, 4, 1, "", "tokenized"]], "nltk.corpus.reader.udhr": [[217, 3, 1, "", "UdhrCorpusReader"]], "nltk.corpus.reader.udhr.UdhrCorpusReader": [[217, 5, 1, "", "ENCODINGS"], [217, 5, 1, "", "SKIP"], [217, 4, 1, "", "__init__"]], "nltk.corpus.reader.util": [[218, 3, 1, "", "ConcatenatedCorpusView"], [218, 3, 1, "", "PickleCorpusView"], [218, 3, 1, "", "StreamBackedCorpusView"], [218, 1, 1, "", "concat"], [218, 1, 1, "", "find_corpus_fileids"], [218, 1, 1, "", "read_alignedsent_block"], [218, 1, 1, "", "read_blankline_block"], [218, 1, 1, "", "read_line_block"], [218, 1, 1, "", "read_regexp_block"], [218, 1, 1, "", "read_sexpr_block"], [218, 1, 1, "", "read_whitespace_block"], [218, 1, 1, "", "read_wordpunct_block"], [218, 1, 1, "", "tagged_treebank_para_block_reader"]], "nltk.corpus.reader.util.ConcatenatedCorpusView": [[218, 4, 1, "", "__init__"], [218, 4, 1, "", "close"], [218, 4, 1, "", "iterate_from"]], "nltk.corpus.reader.util.PickleCorpusView": [[218, 5, 1, "", "BLOCK_SIZE"], [218, 5, 1, "", "PROTOCOL"], [218, 4, 1, "", "__init__"], [218, 4, 1, "", "cache_to_tempfile"], [218, 4, 1, "", "read_block"], [218, 4, 1, "", "write"]], "nltk.corpus.reader.util.StreamBackedCorpusView": [[218, 4, 1, "", "__init__"], [218, 4, 1, "", "close"], [218, 6, 1, "", "fileid"], [218, 4, 1, "", "iterate_from"], [218, 4, 1, "", "read_block"]], "nltk.corpus.reader.verbnet": [[219, 3, 1, "", "VerbnetCorpusReader"]], "nltk.corpus.reader.verbnet.VerbnetCorpusReader": [[219, 4, 1, "", "__init__"], [219, 4, 1, "", "classids"], [219, 4, 1, "", "fileids"], [219, 4, 1, "", "frames"], [219, 4, 1, "", "lemmas"], [219, 4, 1, "", "longid"], [219, 4, 1, "", "pprint"], [219, 4, 1, "", "pprint_frames"], [219, 4, 1, "", "pprint_members"], [219, 4, 1, "", "pprint_subclasses"], [219, 4, 1, "", "pprint_themroles"], [219, 4, 1, "", "shortid"], [219, 4, 1, "", "subclasses"], [219, 4, 1, "", "themroles"], [219, 4, 1, "", "vnclass"], [219, 4, 1, "", "wordnetids"]], "nltk.corpus.reader.wordlist": [[220, 3, 1, "", "MWAPPDBCorpusReader"], [220, 3, 1, "", "NonbreakingPrefixesCorpusReader"], [220, 3, 1, "", "SwadeshCorpusReader"], [220, 3, 1, "", "UnicharsCorpusReader"], [220, 3, 1, "", "WordListCorpusReader"]], "nltk.corpus.reader.wordlist.MWAPPDBCorpusReader": [[220, 4, 1, "", "entries"], [220, 5, 1, "", "mwa_ppdb_xxxl_file"]], "nltk.corpus.reader.wordlist.NonbreakingPrefixesCorpusReader": [[220, 5, 1, "", "available_langs"], [220, 4, 1, "", "words"]], "nltk.corpus.reader.wordlist.SwadeshCorpusReader": [[220, 4, 1, "", "entries"]], "nltk.corpus.reader.wordlist.UnicharsCorpusReader": [[220, 5, 1, "", "available_categories"], [220, 4, 1, "", "chars"]], "nltk.corpus.reader.wordlist.WordListCorpusReader": [[220, 4, 1, "", "words"]], "nltk.corpus.reader.wordnet": [[221, 3, 1, "", "Lemma"], [221, 3, 1, "", "Synset"], [221, 3, 1, "", "WordNetCorpusReader"], [221, 7, 1, "", "WordNetError"], [221, 3, 1, "", "WordNetICCorpusReader"], [221, 1, 1, "", "information_content"], [221, 1, 1, "", "jcn_similarity"], [221, 1, 1, "", "lch_similarity"], [221, 1, 1, "", "lin_similarity"], [221, 1, 1, "", "path_similarity"], [221, 1, 1, "", "res_similarity"], [221, 1, 1, "", "wup_similarity"]], "nltk.corpus.reader.wordnet.Lemma": [[221, 4, 1, "", "__init__"], [221, 4, 1, "", "antonyms"], [221, 4, 1, "", "count"], [221, 4, 1, "", "derivationally_related_forms"], [221, 4, 1, "", "frame_ids"], [221, 4, 1, "", "frame_strings"], [221, 4, 1, "", "key"], [221, 4, 1, "", "lang"], [221, 4, 1, "", "name"], [221, 4, 1, "", "pertainyms"], [221, 4, 1, "", "synset"], [221, 4, 1, "", "syntactic_marker"]], "nltk.corpus.reader.wordnet.Synset": [[221, 4, 1, "", "__init__"], [221, 4, 1, "", "acyclic_tree"], [221, 4, 1, "", "closure"], [221, 4, 1, "", "common_hypernyms"], [221, 4, 1, "", "definition"], [221, 4, 1, "", "examples"], [221, 4, 1, "", "frame_ids"], [221, 4, 1, "", "hypernym_distances"], [221, 4, 1, "", "hypernym_paths"], [221, 4, 1, "", "jcn_similarity"], [221, 4, 1, "", "lch_similarity"], [221, 4, 1, "", "lemma_names"], [221, 4, 1, "", "lemmas"], [221, 4, 1, "", "lexname"], [221, 4, 1, "", "lin_similarity"], [221, 4, 1, "", "lowest_common_hypernyms"], [221, 4, 1, "", "max_depth"], [221, 4, 1, "", "min_depth"], [221, 4, 1, "", "mst"], [221, 4, 1, "", "name"], [221, 4, 1, "", "offset"], [221, 4, 1, "", "path_similarity"], [221, 4, 1, "", "pos"], [221, 4, 1, "", "res_similarity"], [221, 4, 1, "", "root_hypernyms"], [221, 4, 1, "", "shortest_path_distance"], [221, 4, 1, "", "tree"], [221, 4, 1, "", "wup_similarity"]], "nltk.corpus.reader.wordnet.WordNetCorpusReader": [[221, 5, 1, "", "ADJ"], [221, 5, 1, "", "ADJ_SAT"], [221, 5, 1, "", "ADV"], [221, 5, 1, "", "MORPHOLOGICAL_SUBSTITUTIONS"], [221, 5, 1, "", "NOUN"], [221, 5, 1, "", "VERB"], [221, 4, 1, "", "__init__"], [221, 4, 1, "", "add_exomw"], [221, 4, 1, "", "add_omw"], [221, 4, 1, "", "add_provs"], [221, 4, 1, "", "all_eng_synsets"], [221, 4, 1, "", "all_lemma_names"], [221, 4, 1, "", "all_omw_synsets"], [221, 4, 1, "", "all_synsets"], [221, 4, 1, "", "citation"], [221, 4, 1, "", "custom_lemmas"], [221, 4, 1, "", "digraph"], [221, 4, 1, "", "disable_custom_lemmas"], [221, 4, 1, "", "doc"], [221, 4, 1, "", "get_version"], [221, 4, 1, "", "ic"], [221, 4, 1, "", "index_sense"], [221, 4, 1, "", "jcn_similarity"], [221, 4, 1, "", "langs"], [221, 4, 1, "", "lch_similarity"], [221, 4, 1, "", "lemma"], [221, 4, 1, "", "lemma_count"], [221, 4, 1, "", "lemma_from_key"], [221, 4, 1, "", "lemmas"], [221, 4, 1, "", "license"], [221, 4, 1, "", "lin_similarity"], [221, 4, 1, "", "map_to_many"], [221, 4, 1, "", "map_to_one"], [221, 4, 1, "", "map_wn30"], [221, 4, 1, "", "morphy"], [221, 4, 1, "", "of2ss"], [221, 4, 1, "", "path_similarity"], [221, 4, 1, "", "readme"], [221, 4, 1, "", "res_similarity"], [221, 4, 1, "", "ss2of"], [221, 4, 1, "", "synonyms"], [221, 4, 1, "", "synset"], [221, 4, 1, "", "synset_from_pos_and_offset"], [221, 4, 1, "", "synset_from_sense_key"], [221, 4, 1, "", "synsets"], [221, 4, 1, "", "words"], [221, 4, 1, "", "wup_similarity"]], "nltk.corpus.reader.wordnet.WordNetICCorpusReader": [[221, 4, 1, "", "__init__"], [221, 4, 1, "", "ic"]], "nltk.corpus.reader.xmldocs": [[222, 3, 1, "", "XMLCorpusReader"], [222, 3, 1, "", "XMLCorpusView"]], "nltk.corpus.reader.xmldocs.XMLCorpusReader": [[222, 4, 1, "", "__init__"], [222, 4, 1, "", "words"], [222, 4, 1, "", "xml"]], "nltk.corpus.reader.xmldocs.XMLCorpusView": [[222, 4, 1, "", "__init__"], [222, 4, 1, "", "handle_elt"], [222, 4, 1, "", "read_block"]], "nltk.corpus.reader.ycoe": [[223, 3, 1, "", "YCOECorpusReader"], [223, 3, 1, "", "YCOEParseCorpusReader"], [223, 3, 1, "", "YCOETaggedCorpusReader"], [223, 2, 1, "", "documents"]], "nltk.corpus.reader.ycoe.YCOECorpusReader": [[223, 4, 1, "", "__init__"], [223, 4, 1, "", "documents"], [223, 4, 1, "", "fileids"], [223, 4, 1, "", "paras"], [223, 4, 1, "", "parsed_sents"], [223, 4, 1, "", "sents"], [223, 4, 1, "", "tagged_paras"], [223, 4, 1, "", "tagged_sents"], [223, 4, 1, "", "tagged_words"], [223, 4, 1, "", "words"]], "nltk.corpus.reader.ycoe.YCOETaggedCorpusReader": [[223, 4, 1, "", "__init__"]], "nltk.corpus.util": [[224, 3, 1, "", "LazyCorpusLoader"]], "nltk.corpus.util.LazyCorpusLoader": [[224, 4, 1, "", "__init__"]], "nltk.data": [[225, 2, 1, "", "AUTO_FORMATS"], [225, 1, 1, "", "BufferedGzipFile"], [225, 2, 1, "", "FORMATS"], [225, 3, 1, "", "FileSystemPathPointer"], [225, 3, 1, "", "GzipFileSystemPathPointer"], [225, 3, 1, "", "LazyLoader"], [225, 3, 1, "", "OpenOnDemandZipFile"], [225, 3, 1, "", "PathPointer"], [225, 3, 1, "", "SeekableUnicodeStreamReader"], [225, 1, 1, "", "clear_cache"], [225, 1, 1, "", "find"], [225, 1, 1, "", "load"], [225, 2, 1, "", "path"], [225, 1, 1, "", "retrieve"], [225, 1, 1, "", "show_cfg"]], "nltk.data.FileSystemPathPointer": [[225, 4, 1, "", "__init__"], [225, 4, 1, "", "file_size"], [225, 4, 1, "", "join"], [225, 4, 1, "", "open"], [225, 6, 1, "", "path"]], "nltk.data.GzipFileSystemPathPointer": [[225, 4, 1, "", "open"]], "nltk.data.LazyLoader": [[225, 4, 1, "", "__init__"]], "nltk.data.OpenOnDemandZipFile": [[225, 4, 1, "", "__init__"], [225, 4, 1, "", "read"], [225, 4, 1, "", "write"], [225, 4, 1, "", "writestr"]], "nltk.data.PathPointer": [[225, 4, 1, "", "file_size"], [225, 4, 1, "", "join"], [225, 4, 1, "", "open"]], "nltk.data.SeekableUnicodeStreamReader": [[225, 5, 1, "", "DEBUG"], [225, 4, 1, "", "__init__"], [225, 5, 1, "", "bytebuffer"], [225, 4, 1, "", "char_seek_forward"], [225, 4, 1, "", "close"], [225, 6, 1, "", "closed"], [225, 5, 1, "", "decode"], [225, 4, 1, "", "discard_line"], [225, 5, 1, "", "encoding"], [225, 5, 1, "", "errors"], [225, 5, 1, "", "linebuffer"], [225, 6, 1, "", "mode"], [225, 6, 1, "", "name"], [225, 4, 1, "", "next"], [225, 4, 1, "", "read"], [225, 4, 1, "", "readline"], [225, 4, 1, "", "readlines"], [225, 4, 1, "", "seek"], [225, 5, 1, "", "stream"], [225, 4, 1, "", "tell"], [225, 4, 1, "", "xreadlines"]], "nltk.decorators": [[226, 1, 1, "", "decorator"], [226, 1, 1, "", "getinfo"], [226, 1, 1, "", "new_wrapper"]], "nltk.downloader": [[227, 3, 1, "", "Collection"], [227, 3, 1, "", "Downloader"], [227, 3, 1, "", "DownloaderGUI"], [227, 3, 1, "", "DownloaderMessage"], [227, 3, 1, "", "DownloaderShell"], [227, 3, 1, "", "ErrorMessage"], [227, 3, 1, "", "FinishCollectionMessage"], [227, 3, 1, "", "FinishDownloadMessage"], [227, 3, 1, "", "FinishPackageMessage"], [227, 3, 1, "", "FinishUnzipMessage"], [227, 3, 1, "", "Package"], [227, 3, 1, "", "ProgressMessage"], [227, 3, 1, "", "SelectDownloadDirMessage"], [227, 3, 1, "", "StaleMessage"], [227, 3, 1, "", "StartCollectionMessage"], [227, 3, 1, "", "StartDownloadMessage"], [227, 3, 1, "", "StartPackageMessage"], [227, 3, 1, "", "StartUnzipMessage"], [227, 3, 1, "", "UpToDateMessage"], [227, 1, 1, "", "build_index"], [228, 1, 1, "", "download"], [229, 1, 1, "", "download_gui"], [230, 1, 1, "", "download_shell"], [227, 1, 1, "", "md5_hexdigest"], [227, 1, 1, "", "unzip"], [227, 1, 1, "", "update"]], "nltk.downloader.Collection": [[227, 4, 1, "", "__init__"], [227, 5, 1, "", "children"], [227, 4, 1, "", "fromxml"], [227, 5, 1, "", "id"], [227, 5, 1, "", "name"], [227, 5, 1, "", "packages"]], "nltk.downloader.Downloader": [[227, 5, 1, "", "DEFAULT_URL"], [227, 5, 1, "", "INDEX_TIMEOUT"], [227, 5, 1, "", "INSTALLED"], [227, 5, 1, "", "NOT_INSTALLED"], [227, 5, 1, "", "PARTIAL"], [227, 5, 1, "", "STALE"], [227, 4, 1, "", "__init__"], [227, 4, 1, "", "clear_status_cache"], [227, 4, 1, "", "collections"], [227, 4, 1, "", "corpora"], [227, 4, 1, "", "default_download_dir"], [227, 4, 1, "", "download"], [227, 6, 1, "", "download_dir"], [227, 4, 1, "", "incr_download"], [227, 4, 1, "", "index"], [227, 4, 1, "", "info"], [227, 4, 1, "", "is_installed"], [227, 4, 1, "", "is_stale"], [227, 4, 1, "", "list"], [227, 4, 1, "", "models"], [227, 4, 1, "", "packages"], [227, 4, 1, "", "status"], [227, 4, 1, "", "update"], [227, 6, 1, "", "url"], [227, 4, 1, "", "xmlinfo"]], "nltk.downloader.DownloaderGUI": [[227, 5, 1, "", "COLUMNS"], [227, 5, 1, "", "COLUMN_WEIGHTS"], [227, 5, 1, "", "COLUMN_WIDTHS"], [227, 5, 1, "", "DEFAULT_COLUMN_WIDTH"], [227, 5, 1, "", "HELP"], [227, 5, 1, "", "INITIAL_COLUMNS"], [227, 4, 1, "", "__init__"], [227, 4, 1, "", "about"], [227, 5, 1, "", "c"], [227, 4, 1, "", "destroy"], [227, 4, 1, "", "help"], [227, 4, 1, "", "mainloop"]], "nltk.downloader.DownloaderShell": [[227, 4, 1, "", "__init__"], [227, 4, 1, "", "run"]], "nltk.downloader.ErrorMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.FinishCollectionMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.FinishDownloadMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.FinishPackageMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.FinishUnzipMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.Package": [[227, 4, 1, "", "__init__"], [227, 5, 1, "", "author"], [227, 5, 1, "", "checksum"], [227, 5, 1, "", "contact"], [227, 5, 1, "", "copyright"], [227, 5, 1, "", "filename"], [227, 4, 1, "", "fromxml"], [227, 5, 1, "", "id"], [227, 5, 1, "", "license"], [227, 5, 1, "", "name"], [227, 5, 1, "", "size"], [227, 5, 1, "", "subdir"], [227, 5, 1, "", "svn_revision"], [227, 5, 1, "", "unzip"], [227, 5, 1, "", "unzipped_size"], [227, 5, 1, "", "url"]], "nltk.downloader.ProgressMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.SelectDownloadDirMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.StaleMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.StartCollectionMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.StartDownloadMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.StartPackageMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.StartUnzipMessage": [[227, 4, 1, "", "__init__"]], "nltk.downloader.UpToDateMessage": [[227, 4, 1, "", "__init__"]], "nltk.draw": [[232, 3, 1, "", "CFGDemo"], [233, 3, 1, "", "CFGEditor"], [234, 3, 1, "", "ProductionList"], [235, 3, 1, "", "TreeView"], [236, 0, 0, "-", "cfg"], [237, 0, 0, "-", "dispersion"], [238, 1, 1, "", "dispersion_plot"], [239, 1, 1, "", "draw_trees"], [240, 0, 0, "-", "table"], [241, 0, 0, "-", "tree"], [242, 0, 0, "-", "util"]], "nltk.draw.CFGDemo": [[232, 4, 1, "", "__init__"], [232, 4, 1, "", "destroy"], [232, 4, 1, "", "mainloop"], [232, 4, 1, "", "reset_workspace"], [232, 4, 1, "", "workspace_markprod"]], "nltk.draw.CFGEditor": [[233, 5, 1, "", "ARROW"], [233, 4, 1, "", "__init__"]], "nltk.draw.ProductionList": [[234, 5, 1, "", "ARROW"], [234, 4, 1, "", "__init__"], [234, 4, 1, "", "add_callback"], [234, 4, 1, "", "focus"], [234, 4, 1, "", "get"], [234, 4, 1, "", "grid"], [234, 4, 1, "", "mark"], [234, 4, 1, "", "markonly"], [234, 4, 1, "", "pack"], [234, 4, 1, "", "remove_callback"], [234, 4, 1, "", "set"], [234, 4, 1, "", "unmark"], [234, 4, 1, "", "view"]], "nltk.draw.TreeView": [[235, 4, 1, "", "__init__"], [235, 4, 1, "", "destroy"], [235, 4, 1, "", "mainloop"], [235, 4, 1, "", "resize"]], "nltk.draw.cfg": [[236, 3, 1, "", "CFGDemo"], [236, 3, 1, "", "CFGEditor"], [236, 3, 1, "", "ProductionList"], [236, 1, 1, "", "demo"], [236, 1, 1, "", "demo2"], [236, 1, 1, "", "demo3"]], "nltk.draw.cfg.CFGDemo": [[236, 4, 1, "", "__init__"], [236, 4, 1, "", "destroy"], [236, 4, 1, "", "mainloop"], [236, 4, 1, "", "reset_workspace"], [236, 4, 1, "", "workspace_markprod"]], "nltk.draw.cfg.CFGEditor": [[236, 5, 1, "", "ARROW"], [236, 4, 1, "", "__init__"]], "nltk.draw.cfg.ProductionList": [[236, 5, 1, "", "ARROW"]], "nltk.draw.dispersion": [[237, 1, 1, "", "dispersion_plot"]], "nltk.draw.table": [[240, 3, 1, "", "MultiListbox"], [240, 3, 1, "", "Table"], [240, 1, 1, "", "demo"]], "nltk.draw.table.MultiListbox": [[240, 5, 1, "", "FRAME_CONFIG"], [240, 5, 1, "", "LABEL_CONFIG"], [240, 5, 1, "", "LISTBOX_CONFIG"], [240, 4, 1, "", "__init__"], [240, 4, 1, "", "activate"], [240, 4, 1, "", "bbox"], [240, 4, 1, "", "bind_to_columns"], [240, 4, 1, "", "bind_to_labels"], [240, 4, 1, "", "bind_to_listboxes"], [240, 6, 1, "", "column_labels"], [240, 6, 1, "", "column_names"], [240, 4, 1, "", "columnconfig"], [240, 4, 1, "", "columnconfigure"], [240, 4, 1, "", "configure"], [240, 4, 1, "", "curselection"], [240, 4, 1, "", "delete"], [240, 4, 1, "", "get"], [240, 4, 1, "", "hide_column"], [240, 4, 1, "", "index"], [240, 4, 1, "", "insert"], [240, 4, 1, "", "itemcget"], [240, 4, 1, "", "itemconfig"], [240, 4, 1, "", "itemconfigure"], [240, 6, 1, "", "listboxes"], [240, 4, 1, "", "nearest"], [240, 4, 1, "", "rowconfig"], [240, 4, 1, "", "rowconfigure"], [240, 4, 1, "", "scan_dragto"], [240, 4, 1, "", "scan_mark"], [240, 4, 1, "", "see"], [240, 4, 1, "", "select"], [240, 4, 1, "", "select_anchor"], [240, 4, 1, "", "select_clear"], [240, 4, 1, "", "select_includes"], [240, 4, 1, "", "select_set"], [240, 4, 1, "", "selection_anchor"], [240, 4, 1, "", "selection_clear"], [240, 4, 1, "", "selection_includes"], [240, 4, 1, "", "selection_set"], [240, 4, 1, "", "show_column"], [240, 4, 1, "", "size"], [240, 4, 1, "", "yview"], [240, 4, 1, "", "yview_moveto"], [240, 4, 1, "", "yview_scroll"]], "nltk.draw.table.Table": [[240, 4, 1, "", "__init__"], [240, 4, 1, "", "append"], [240, 4, 1, "", "bind"], [240, 4, 1, "", "bind_to_columns"], [240, 4, 1, "", "bind_to_labels"], [240, 4, 1, "", "bind_to_listboxes"], [240, 4, 1, "", "clear"], [240, 4, 1, "", "column_index"], [240, 6, 1, "", "column_names"], [240, 4, 1, "", "columnconfig"], [240, 4, 1, "", "columnconfigure"], [240, 4, 1, "", "extend"], [240, 4, 1, "", "focus"], [240, 4, 1, "", "grid"], [240, 4, 1, "", "hide_column"], [240, 4, 1, "", "insert"], [240, 4, 1, "", "itemconfig"], [240, 4, 1, "", "itemconfigure"], [240, 4, 1, "", "pack"], [240, 4, 1, "", "rowconfig"], [240, 4, 1, "", "rowconfigure"], [240, 4, 1, "", "select"], [240, 4, 1, "", "selected_row"], [240, 4, 1, "", "show_column"], [240, 4, 1, "", "sort_by"]], "nltk.draw.tree": [[241, 3, 1, "", "TreeSegmentWidget"], [241, 3, 1, "", "TreeView"], [241, 3, 1, "", "TreeWidget"], [241, 1, 1, "", "demo"], [241, 1, 1, "", "draw_trees"], [241, 1, 1, "", "tree_to_treesegment"]], "nltk.draw.tree.TreeSegmentWidget": [[241, 4, 1, "", "__init__"], [241, 4, 1, "", "insert_child"], [241, 4, 1, "", "label"], [241, 4, 1, "", "remove_child"], [241, 4, 1, "", "replace_child"], [241, 4, 1, "", "set_label"], [241, 4, 1, "", "subtrees"]], "nltk.draw.tree.TreeView": [[241, 4, 1, "", "__init__"], [241, 4, 1, "", "destroy"], [241, 4, 1, "", "mainloop"], [241, 4, 1, "", "resize"]], "nltk.draw.tree.TreeWidget": [[241, 4, 1, "", "__init__"], [241, 4, 1, "", "bind_click_leaves"], [241, 4, 1, "", "bind_click_nodes"], [241, 4, 1, "", "bind_click_trees"], [241, 4, 1, "", "bind_drag_leaves"], [241, 4, 1, "", "bind_drag_nodes"], [241, 4, 1, "", "bind_drag_trees"], [241, 4, 1, "", "collapsed_tree"], [241, 4, 1, "", "expanded_tree"], [241, 4, 1, "", "toggle_collapsed"]], "nltk.draw.util": [[242, 3, 1, "", "AbstractContainerWidget"], [242, 3, 1, "", "BoxWidget"], [242, 3, 1, "", "BracketWidget"], [242, 3, 1, "", "CanvasFrame"], [242, 3, 1, "", "CanvasWidget"], [242, 3, 1, "", "ColorizedList"], [242, 3, 1, "", "EntryDialog"], [242, 3, 1, "", "MutableOptionMenu"], [242, 3, 1, "", "OvalWidget"], [242, 3, 1, "", "ParenWidget"], [242, 3, 1, "", "ScrollWatcherWidget"], [242, 3, 1, "", "SequenceWidget"], [242, 3, 1, "", "ShowText"], [242, 3, 1, "", "SpaceWidget"], [242, 3, 1, "", "StackWidget"], [242, 3, 1, "", "SymbolWidget"], [242, 3, 1, "", "TextWidget"], [242, 1, 1, "", "demo"]], "nltk.draw.util.AbstractContainerWidget": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "child"], [242, 4, 1, "", "set_child"]], "nltk.draw.util.BoxWidget": [[242, 4, 1, "", "__init__"]], "nltk.draw.util.BracketWidget": [[242, 4, 1, "", "__init__"]], "nltk.draw.util.CanvasFrame": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "add_widget"], [242, 4, 1, "", "canvas"], [242, 4, 1, "", "destroy"], [242, 4, 1, "", "destroy_widget"], [242, 4, 1, "", "mainloop"], [242, 4, 1, "", "pack"], [242, 4, 1, "", "print_to_file"], [242, 4, 1, "", "remove_widget"], [242, 4, 1, "", "scrollregion"]], "nltk.draw.util.CanvasWidget": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "bbox"], [242, 4, 1, "", "bind_click"], [242, 4, 1, "", "bind_drag"], [242, 4, 1, "", "canvas"], [242, 4, 1, "", "child_widgets"], [242, 4, 1, "", "destroy"], [242, 4, 1, "", "height"], [242, 4, 1, "", "hidden"], [242, 4, 1, "", "hide"], [242, 4, 1, "", "manage"], [242, 4, 1, "", "move"], [242, 4, 1, "", "moveto"], [242, 4, 1, "", "parent"], [242, 4, 1, "", "show"], [242, 4, 1, "", "tags"], [242, 4, 1, "", "unbind_click"], [242, 4, 1, "", "unbind_drag"], [242, 4, 1, "", "update"], [242, 4, 1, "", "width"]], "nltk.draw.util.ColorizedList": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "add_callback"], [242, 4, 1, "", "focus"], [242, 4, 1, "", "get"], [242, 4, 1, "", "grid"], [242, 4, 1, "", "mark"], [242, 4, 1, "", "markonly"], [242, 4, 1, "", "pack"], [242, 4, 1, "", "remove_callback"], [242, 4, 1, "", "set"], [242, 4, 1, "", "unmark"], [242, 4, 1, "", "view"]], "nltk.draw.util.EntryDialog": [[242, 4, 1, "", "__init__"]], "nltk.draw.util.MutableOptionMenu": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "add"], [242, 4, 1, "", "destroy"], [242, 4, 1, "", "remove"], [242, 4, 1, "", "set"]], "nltk.draw.util.OvalWidget": [[242, 5, 1, "", "RATIO"], [242, 4, 1, "", "__init__"]], "nltk.draw.util.ParenWidget": [[242, 4, 1, "", "__init__"]], "nltk.draw.util.ScrollWatcherWidget": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "add_child"], [242, 4, 1, "", "remove_child"]], "nltk.draw.util.SequenceWidget": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "children"], [242, 4, 1, "", "insert_child"], [242, 4, 1, "", "remove_child"], [242, 4, 1, "", "replace_child"]], "nltk.draw.util.ShowText": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "destroy"], [242, 4, 1, "", "find_dimentions"], [242, 4, 1, "", "mainloop"]], "nltk.draw.util.SpaceWidget": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "set_height"], [242, 4, 1, "", "set_width"]], "nltk.draw.util.StackWidget": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "children"], [242, 4, 1, "", "insert_child"], [242, 4, 1, "", "remove_child"], [242, 4, 1, "", "replace_child"]], "nltk.draw.util.SymbolWidget": [[242, 5, 1, "", "SYMBOLS"], [242, 4, 1, "", "__init__"], [242, 4, 1, "", "set_symbol"], [242, 4, 1, "", "symbol"], [242, 4, 1, "", "symbolsheet"]], "nltk.draw.util.TextWidget": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "set_text"], [242, 4, 1, "", "text"]], "nltk.featstruct": [[244, 3, 1, "", "FeatDict"], [245, 3, 1, "", "FeatList"], [246, 3, 1, "", "FeatStruct"], [247, 3, 1, "", "FeatStructReader"], [248, 3, 1, "", "Feature"], [249, 3, 1, "", "RangeFeature"], [250, 2, 1, "", "SLASH"], [251, 3, 1, "", "SlashFeature"], [252, 2, 1, "", "TYPE"], [253, 1, 1, "", "conflicts"], [254, 1, 1, "", "subsumes"], [255, 1, 1, "", "unify"]], "nltk.featstruct.FeatDict": [[244, 4, 1, "", "__init__"], [244, 4, 1, "", "__new__"], [244, 4, 1, "", "clear"], [244, 4, 1, "", "copy"], [244, 4, 1, "", "cyclic"], [244, 4, 1, "", "equal_values"], [244, 4, 1, "", "freeze"], [244, 4, 1, "", "fromkeys"], [244, 4, 1, "", "frozen"], [244, 4, 1, "", "get"], [244, 4, 1, "", "has_key"], [244, 4, 1, "", "items"], [244, 4, 1, "", "keys"], [244, 4, 1, "", "pop"], [244, 4, 1, "", "popitem"], [244, 4, 1, "", "remove_variables"], [244, 4, 1, "", "rename_variables"], [244, 4, 1, "", "retract_bindings"], [244, 4, 1, "", "setdefault"], [244, 4, 1, "", "substitute_bindings"], [244, 4, 1, "", "subsumes"], [244, 4, 1, "", "unify"], [244, 4, 1, "", "update"], [244, 4, 1, "", "values"], [244, 4, 1, "", "variables"], [244, 4, 1, "", "walk"]], "nltk.featstruct.FeatList": [[245, 4, 1, "", "__init__"], [245, 4, 1, "", "__new__"], [245, 4, 1, "", "append"], [245, 4, 1, "", "clear"], [245, 4, 1, "", "copy"], [245, 4, 1, "", "count"], [245, 4, 1, "", "cyclic"], [245, 4, 1, "", "equal_values"], [245, 4, 1, "", "extend"], [245, 4, 1, "", "freeze"], [245, 4, 1, "", "frozen"], [245, 4, 1, "", "index"], [245, 4, 1, "", "insert"], [245, 4, 1, "", "pop"], [245, 4, 1, "", "remove"], [245, 4, 1, "", "remove_variables"], [245, 4, 1, "", "rename_variables"], [245, 4, 1, "", "retract_bindings"], [245, 4, 1, "", "reverse"], [245, 4, 1, "", "sort"], [245, 4, 1, "", "substitute_bindings"], [245, 4, 1, "", "subsumes"], [245, 4, 1, "", "unify"], [245, 4, 1, "", "variables"], [245, 4, 1, "", "walk"]], "nltk.featstruct.FeatStruct": [[246, 4, 1, "", "__new__"], [246, 4, 1, "", "copy"], [246, 4, 1, "", "cyclic"], [246, 4, 1, "", "equal_values"], [246, 4, 1, "", "freeze"], [246, 4, 1, "", "frozen"], [246, 4, 1, "", "remove_variables"], [246, 4, 1, "", "rename_variables"], [246, 4, 1, "", "retract_bindings"], [246, 4, 1, "", "substitute_bindings"], [246, 4, 1, "", "subsumes"], [246, 4, 1, "", "unify"], [246, 4, 1, "", "variables"], [246, 4, 1, "", "walk"]], "nltk.featstruct.FeatStructReader": [[247, 5, 1, "", "VALUE_HANDLERS"], [247, 4, 1, "", "__init__"], [247, 4, 1, "", "fromstring"], [247, 4, 1, "", "read_app_value"], [247, 4, 1, "", "read_fstruct_value"], [247, 4, 1, "", "read_int_value"], [247, 4, 1, "", "read_logic_value"], [247, 4, 1, "", "read_partial"], [247, 4, 1, "", "read_set_value"], [247, 4, 1, "", "read_str_value"], [247, 4, 1, "", "read_sym_value"], [247, 4, 1, "", "read_tuple_value"], [247, 4, 1, "", "read_value"], [247, 4, 1, "", "read_var_value"]], "nltk.featstruct.Feature": [[248, 4, 1, "", "__init__"], [248, 6, 1, "", "default"], [248, 6, 1, "", "display"], [248, 6, 1, "", "name"], [248, 4, 1, "", "read_value"], [248, 4, 1, "", "unify_base_values"]], "nltk.featstruct.RangeFeature": [[249, 5, 1, "", "RANGE_RE"], [249, 4, 1, "", "__init__"], [249, 6, 1, "", "default"], [249, 6, 1, "", "display"], [249, 6, 1, "", "name"], [249, 4, 1, "", "read_value"], [249, 4, 1, "", "unify_base_values"]], "nltk.featstruct.SlashFeature": [[251, 4, 1, "", "__init__"], [251, 6, 1, "", "default"], [251, 6, 1, "", "display"], [251, 6, 1, "", "name"], [251, 4, 1, "", "read_value"], [251, 4, 1, "", "unify_base_values"]], "nltk.grammar": [[257, 3, 1, "", "CFG"], [258, 3, 1, "", "DependencyGrammar"], [259, 3, 1, "", "DependencyProduction"], [260, 3, 1, "", "Nonterminal"], [261, 3, 1, "", "PCFG"], [262, 3, 1, "", "ProbabilisticDependencyGrammar"], [263, 3, 1, "", "ProbabilisticProduction"], [264, 3, 1, "", "Production"], [265, 1, 1, "", "induce_pcfg"], [266, 1, 1, "", "nonterminals"], [267, 1, 1, "", "read_grammar"]], "nltk.grammar.CFG": [[257, 4, 1, "", "__init__"], [257, 4, 1, "", "binarize"], [257, 4, 1, "", "check_coverage"], [257, 4, 1, "", "chomsky_normal_form"], [257, 4, 1, "", "eliminate_start"], [257, 4, 1, "", "fromstring"], [257, 4, 1, "", "is_binarised"], [257, 4, 1, "", "is_chomsky_normal_form"], [257, 4, 1, "", "is_flexible_chomsky_normal_form"], [257, 4, 1, "", "is_leftcorner"], [257, 4, 1, "", "is_lexical"], [257, 4, 1, "", "is_nonempty"], [257, 4, 1, "", "is_nonlexical"], [257, 4, 1, "", "leftcorner_parents"], [257, 4, 1, "", "leftcorners"], [257, 4, 1, "", "max_len"], [257, 4, 1, "", "min_len"], [257, 4, 1, "", "productions"], [257, 4, 1, "", "remove_unitary_rules"], [257, 4, 1, "", "start"]], "nltk.grammar.DependencyGrammar": [[258, 4, 1, "", "__init__"], [258, 4, 1, "", "contains"], [258, 4, 1, "", "fromstring"]], "nltk.grammar.DependencyProduction": [[259, 4, 1, "", "__init__"], [259, 4, 1, "", "is_lexical"], [259, 4, 1, "", "is_nonlexical"], [259, 4, 1, "", "lhs"], [259, 4, 1, "", "rhs"]], "nltk.grammar.Nonterminal": [[260, 4, 1, "", "__init__"], [260, 4, 1, "", "symbol"]], "nltk.grammar.PCFG": [[261, 5, 1, "", "EPSILON"], [261, 4, 1, "", "__init__"], [261, 4, 1, "", "binarize"], [261, 4, 1, "", "check_coverage"], [261, 4, 1, "", "chomsky_normal_form"], [261, 4, 1, "", "eliminate_start"], [261, 4, 1, "", "fromstring"], [261, 4, 1, "", "is_binarised"], [261, 4, 1, "", "is_chomsky_normal_form"], [261, 4, 1, "", "is_flexible_chomsky_normal_form"], [261, 4, 1, "", "is_leftcorner"], [261, 4, 1, "", "is_lexical"], [261, 4, 1, "", "is_nonempty"], [261, 4, 1, "", "is_nonlexical"], [261, 4, 1, "", "leftcorner_parents"], [261, 4, 1, "", "leftcorners"], [261, 4, 1, "", "max_len"], [261, 4, 1, "", "min_len"], [261, 4, 1, "", "productions"], [261, 4, 1, "", "remove_unitary_rules"], [261, 4, 1, "", "start"]], "nltk.grammar.ProbabilisticDependencyGrammar": [[262, 4, 1, "", "__init__"], [262, 4, 1, "", "contains"]], "nltk.grammar.ProbabilisticProduction": [[263, 4, 1, "", "__init__"], [263, 4, 1, "", "is_lexical"], [263, 4, 1, "", "is_nonlexical"], [263, 4, 1, "", "lhs"], [263, 4, 1, "", "logprob"], [263, 4, 1, "", "prob"], [263, 4, 1, "", "rhs"], [263, 4, 1, "", "set_logprob"], [263, 4, 1, "", "set_prob"]], "nltk.grammar.Production": [[264, 4, 1, "", "__init__"], [264, 4, 1, "", "is_lexical"], [264, 4, 1, "", "is_nonlexical"], [264, 4, 1, "", "lhs"], [264, 4, 1, "", "rhs"]], "nltk.help": [[268, 1, 1, "", "brown_tagset"], [268, 1, 1, "", "claws5_tagset"], [268, 1, 1, "", "upenn_tagset"]], "nltk.inference": [[270, 3, 1, "", "CfgReadingCommand"], [271, 3, 1, "", "DiscourseTester"], [272, 3, 1, "", "DrtGlueReadingCommand"], [274, 3, 1, "", "MaceCommand"], [275, 3, 1, "", "ParallelProverBuilder"], [276, 3, 1, "", "ParallelProverBuilderCommand"], [278, 3, 1, "", "Prover9Command"], [279, 3, 1, "", "ReadingCommand"], [280, 3, 1, "", "ResolutionProver"], [281, 3, 1, "", "ResolutionProverCommand"], [282, 3, 1, "", "TableauProver"], [283, 3, 1, "", "TableauProverCommand"], [284, 0, 0, "-", "api"], [285, 0, 0, "-", "discourse"], [273, 0, 0, "-", "mace"], [286, 0, 0, "-", "nonmonotonic"], [277, 0, 0, "-", "prover9"], [287, 0, 0, "-", "resolution"], [288, 0, 0, "-", "tableau"]], "nltk.inference.CfgReadingCommand": [[270, 4, 1, "", "__init__"], [270, 4, 1, "", "combine_readings"], [270, 4, 1, "", "parse_to_readings"], [270, 4, 1, "", "process_thread"], [270, 4, 1, "", "to_fol"]], "nltk.inference.DiscourseTester": [[271, 4, 1, "", "__init__"], [271, 4, 1, "", "add_background"], [271, 4, 1, "", "add_sentence"], [271, 4, 1, "", "background"], [271, 4, 1, "", "expand_threads"], [271, 4, 1, "", "grammar"], [271, 4, 1, "", "models"], [271, 4, 1, "", "multiply"], [271, 4, 1, "", "readings"], [271, 4, 1, "", "retract_sentence"], [271, 4, 1, "", "sentences"]], "nltk.inference.DrtGlueReadingCommand": [[272, 4, 1, "", "__init__"], [272, 4, 1, "", "combine_readings"], [272, 4, 1, "", "parse_to_readings"], [272, 4, 1, "", "process_thread"], [272, 4, 1, "", "to_fol"]], "nltk.inference.MaceCommand": [[274, 4, 1, "", "__init__"], [274, 4, 1, "", "add_assumptions"], [274, 4, 1, "", "assumptions"], [274, 4, 1, "", "build_model"], [274, 4, 1, "", "get_model_builder"], [274, 4, 1, "", "goal"], [274, 4, 1, "", "model"], [274, 4, 1, "", "print_assumptions"], [274, 4, 1, "", "retract_assumptions"], [274, 6, 1, "", "valuation"]], "nltk.inference.ParallelProverBuilder": [[275, 4, 1, "", "__init__"], [275, 4, 1, "", "build_model"], [275, 4, 1, "", "prove"]], "nltk.inference.ParallelProverBuilderCommand": [[276, 4, 1, "", "__init__"], [276, 4, 1, "", "add_assumptions"], [276, 4, 1, "", "assumptions"], [276, 4, 1, "", "build_model"], [276, 4, 1, "", "decorate_proof"], [276, 4, 1, "", "get_model_builder"], [276, 4, 1, "", "get_prover"], [276, 4, 1, "", "goal"], [276, 4, 1, "", "model"], [276, 4, 1, "", "print_assumptions"], [276, 4, 1, "", "proof"], [276, 4, 1, "", "prove"], [276, 4, 1, "", "retract_assumptions"]], "nltk.inference.Prover9Command": [[278, 4, 1, "", "__init__"], [278, 4, 1, "", "add_assumptions"], [278, 4, 1, "", "assumptions"], [278, 4, 1, "", "decorate_proof"], [278, 4, 1, "", "get_prover"], [278, 4, 1, "", "goal"], [278, 4, 1, "", "print_assumptions"], [278, 4, 1, "", "proof"], [278, 4, 1, "", "prove"], [278, 4, 1, "", "retract_assumptions"]], "nltk.inference.ReadingCommand": [[279, 4, 1, "", "combine_readings"], [279, 4, 1, "", "parse_to_readings"], [279, 4, 1, "", "process_thread"], [279, 4, 1, "", "to_fol"]], "nltk.inference.ResolutionProver": [[280, 5, 1, "", "ANSWER_KEY"], [280, 4, 1, "", "prove"]], "nltk.inference.ResolutionProverCommand": [[281, 4, 1, "", "__init__"], [281, 4, 1, "", "add_assumptions"], [281, 4, 1, "", "assumptions"], [281, 4, 1, "", "decorate_proof"], [281, 4, 1, "", "find_answers"], [281, 4, 1, "", "get_prover"], [281, 4, 1, "", "goal"], [281, 4, 1, "", "print_assumptions"], [281, 4, 1, "", "proof"], [281, 4, 1, "", "prove"], [281, 4, 1, "", "retract_assumptions"]], "nltk.inference.TableauProver": [[282, 4, 1, "", "is_atom"], [282, 4, 1, "", "prove"]], "nltk.inference.TableauProverCommand": [[283, 4, 1, "", "__init__"], [283, 4, 1, "", "add_assumptions"], [283, 4, 1, "", "assumptions"], [283, 4, 1, "", "decorate_proof"], [283, 4, 1, "", "get_prover"], [283, 4, 1, "", "goal"], [283, 4, 1, "", "print_assumptions"], [283, 4, 1, "", "proof"], [283, 4, 1, "", "prove"], [283, 4, 1, "", "retract_assumptions"]], "nltk.inference.api": [[284, 3, 1, "", "BaseModelBuilderCommand"], [284, 3, 1, "", "BaseProverCommand"], [284, 3, 1, "", "BaseTheoremToolCommand"], [284, 3, 1, "", "ModelBuilder"], [284, 3, 1, "", "ModelBuilderCommand"], [284, 3, 1, "", "ModelBuilderCommandDecorator"], [284, 3, 1, "", "ParallelProverBuilder"], [284, 3, 1, "", "ParallelProverBuilderCommand"], [284, 3, 1, "", "Prover"], [284, 3, 1, "", "ProverCommand"], [284, 3, 1, "", "ProverCommandDecorator"], [284, 3, 1, "", "TheoremToolCommand"], [284, 3, 1, "", "TheoremToolCommandDecorator"], [284, 3, 1, "", "TheoremToolThread"]], "nltk.inference.api.BaseModelBuilderCommand": [[284, 4, 1, "", "__init__"], [284, 4, 1, "", "build_model"], [284, 4, 1, "", "get_model_builder"], [284, 4, 1, "", "model"]], "nltk.inference.api.BaseProverCommand": [[284, 4, 1, "", "__init__"], [284, 4, 1, "", "decorate_proof"], [284, 4, 1, "", "get_prover"], [284, 4, 1, "", "proof"], [284, 4, 1, "", "prove"]], "nltk.inference.api.BaseTheoremToolCommand": [[284, 4, 1, "", "__init__"], [284, 4, 1, "", "add_assumptions"], [284, 4, 1, "", "assumptions"], [284, 4, 1, "", "goal"], [284, 4, 1, "", "print_assumptions"], [284, 4, 1, "", "retract_assumptions"]], "nltk.inference.api.ModelBuilder": [[284, 4, 1, "", "build_model"]], "nltk.inference.api.ModelBuilderCommand": [[284, 4, 1, "", "build_model"], [284, 4, 1, "", "get_model_builder"], [284, 4, 1, "", "model"]], "nltk.inference.api.ModelBuilderCommandDecorator": [[284, 4, 1, "", "__init__"], [284, 4, 1, "", "build_model"], [284, 4, 1, "", "get_model_builder"], [284, 4, 1, "", "model"]], "nltk.inference.api.ParallelProverBuilder": [[284, 4, 1, "", "__init__"]], "nltk.inference.api.ParallelProverBuilderCommand": [[284, 4, 1, "", "__init__"], [284, 4, 1, "", "build_model"], [284, 4, 1, "", "prove"]], "nltk.inference.api.Prover": [[284, 4, 1, "", "prove"]], "nltk.inference.api.ProverCommand": [[284, 4, 1, "", "get_prover"], [284, 4, 1, "", "proof"], [284, 4, 1, "", "prove"]], "nltk.inference.api.ProverCommandDecorator": [[284, 4, 1, "", "__init__"], [284, 4, 1, "", "decorate_proof"], [284, 4, 1, "", "get_prover"], [284, 4, 1, "", "proof"], [284, 4, 1, "", "prove"]], "nltk.inference.api.TheoremToolCommand": [[284, 4, 1, "", "add_assumptions"], [284, 4, 1, "", "assumptions"], [284, 4, 1, "", "goal"], [284, 4, 1, "", "print_assumptions"], [284, 4, 1, "", "retract_assumptions"]], "nltk.inference.api.TheoremToolCommandDecorator": [[284, 4, 1, "", "__init__"], [284, 4, 1, "", "add_assumptions"], [284, 4, 1, "", "assumptions"], [284, 4, 1, "", "goal"], [284, 4, 1, "", "print_assumptions"], [284, 4, 1, "", "retract_assumptions"]], "nltk.inference.api.TheoremToolThread": [[284, 4, 1, "", "__init__"], [284, 6, 1, "", "result"], [284, 4, 1, "", "run"]], "nltk.inference.discourse": [[285, 3, 1, "", "CfgReadingCommand"], [285, 3, 1, "", "DiscourseTester"], [285, 3, 1, "", "DrtGlueReadingCommand"], [285, 3, 1, "", "ReadingCommand"], [285, 1, 1, "", "demo"], [285, 1, 1, "", "discourse_demo"], [285, 1, 1, "", "drt_discourse_demo"], [285, 1, 1, "", "load_fol"], [285, 1, 1, "", "spacer"]], "nltk.inference.discourse.CfgReadingCommand": [[285, 4, 1, "", "__init__"], [285, 4, 1, "", "combine_readings"], [285, 4, 1, "", "parse_to_readings"], [285, 4, 1, "", "to_fol"]], "nltk.inference.discourse.DiscourseTester": [[285, 4, 1, "", "__init__"], [285, 4, 1, "", "add_background"], [285, 4, 1, "", "add_sentence"], [285, 4, 1, "", "background"], [285, 4, 1, "", "expand_threads"], [285, 4, 1, "", "grammar"], [285, 4, 1, "", "models"], [285, 4, 1, "", "multiply"], [285, 4, 1, "", "readings"], [285, 4, 1, "", "retract_sentence"], [285, 4, 1, "", "sentences"]], "nltk.inference.discourse.DrtGlueReadingCommand": [[285, 4, 1, "", "__init__"], [285, 4, 1, "", "combine_readings"], [285, 4, 1, "", "parse_to_readings"], [285, 4, 1, "", "process_thread"], [285, 4, 1, "", "to_fol"]], "nltk.inference.discourse.ReadingCommand": [[285, 4, 1, "", "combine_readings"], [285, 4, 1, "", "parse_to_readings"], [285, 4, 1, "", "process_thread"], [285, 4, 1, "", "to_fol"]], "nltk.inference.mace": [[273, 3, 1, "", "Mace"], [273, 3, 1, "", "MaceCommand"], [273, 1, 1, "", "decode_result"], [273, 1, 1, "", "demo"], [273, 1, 1, "", "spacer"], [273, 1, 1, "", "test_build_model"], [273, 1, 1, "", "test_make_relation_set"], [273, 1, 1, "", "test_model_found"], [273, 1, 1, "", "test_transform_output"]], "nltk.inference.mace.Mace": [[273, 4, 1, "", "__init__"]], "nltk.inference.mace.MaceCommand": [[273, 4, 1, "", "__init__"], [273, 6, 1, "", "valuation"]], "nltk.inference.nonmonotonic": [[286, 3, 1, "", "ClosedDomainProver"], [286, 3, 1, "", "ClosedWorldProver"], [286, 3, 1, "", "PredHolder"], [286, 7, 1, "", "ProverParseError"], [286, 3, 1, "", "SetHolder"], [286, 3, 1, "", "UniqueNamesProver"], [286, 1, 1, "", "closed_domain_demo"], [286, 1, 1, "", "closed_world_demo"], [286, 1, 1, "", "combination_prover_demo"], [286, 1, 1, "", "default_reasoning_demo"], [286, 1, 1, "", "demo"], [286, 1, 1, "", "get_domain"], [286, 1, 1, "", "print_proof"], [286, 1, 1, "", "unique_names_demo"]], "nltk.inference.nonmonotonic.ClosedDomainProver": [[286, 4, 1, "", "assumptions"], [286, 4, 1, "", "goal"], [286, 4, 1, "", "replace_quants"]], "nltk.inference.nonmonotonic.ClosedWorldProver": [[286, 4, 1, "", "assumptions"]], "nltk.inference.nonmonotonic.PredHolder": [[286, 4, 1, "", "__init__"], [286, 4, 1, "", "append_prop"], [286, 4, 1, "", "append_sig"], [286, 4, 1, "", "validate_sig_len"]], "nltk.inference.nonmonotonic.UniqueNamesProver": [[286, 4, 1, "", "assumptions"]], "nltk.inference.prover9": [[277, 3, 1, "", "Prover9"], [277, 3, 1, "", "Prover9Command"], [277, 3, 1, "", "Prover9CommandParent"], [277, 7, 1, "", "Prover9Exception"], [277, 7, 1, "", "Prover9FatalException"], [277, 7, 1, "", "Prover9LimitExceededException"], [277, 3, 1, "", "Prover9Parent"], [277, 1, 1, "", "convert_to_prover9"], [277, 1, 1, "", "demo"], [277, 1, 1, "", "spacer"], [277, 1, 1, "", "test_config"], [277, 1, 1, "", "test_convert_to_prover9"], [277, 1, 1, "", "test_prove"]], "nltk.inference.prover9.Prover9": [[277, 4, 1, "", "__init__"], [277, 4, 1, "", "prover9_input"]], "nltk.inference.prover9.Prover9Command": [[277, 4, 1, "", "__init__"], [277, 4, 1, "", "decorate_proof"]], "nltk.inference.prover9.Prover9CommandParent": [[277, 4, 1, "", "print_assumptions"]], "nltk.inference.prover9.Prover9Exception": [[277, 4, 1, "", "__init__"]], "nltk.inference.prover9.Prover9Parent": [[277, 4, 1, "", "binary_locations"], [277, 4, 1, "", "config_prover9"], [277, 4, 1, "", "prover9_input"]], "nltk.inference.resolution": [[287, 3, 1, "", "BindingDict"], [287, 7, 1, "", "BindingException"], [287, 3, 1, "", "Clause"], [287, 3, 1, "", "DebugObject"], [287, 7, 1, "", "ProverParseError"], [287, 3, 1, "", "ResolutionProver"], [287, 3, 1, "", "ResolutionProverCommand"], [287, 7, 1, "", "UnificationException"], [287, 1, 1, "", "clausify"], [287, 1, 1, "", "demo"], [287, 1, 1, "", "most_general_unification"], [287, 1, 1, "", "resolution_test"], [287, 1, 1, "", "testResolutionProver"], [287, 1, 1, "", "test_clausify"]], "nltk.inference.resolution.BindingDict": [[287, 4, 1, "", "__init__"]], "nltk.inference.resolution.BindingException": [[287, 4, 1, "", "__init__"]], "nltk.inference.resolution.Clause": [[287, 4, 1, "", "__init__"], [287, 4, 1, "", "free"], [287, 4, 1, "", "isSubsetOf"], [287, 4, 1, "", "is_tautology"], [287, 4, 1, "", "replace"], [287, 4, 1, "", "substitute_bindings"], [287, 4, 1, "", "subsumes"], [287, 4, 1, "", "unify"]], "nltk.inference.resolution.DebugObject": [[287, 4, 1, "", "__init__"], [287, 4, 1, "", "line"]], "nltk.inference.resolution.ResolutionProver": [[287, 5, 1, "", "ANSWER_KEY"]], "nltk.inference.resolution.ResolutionProverCommand": [[287, 4, 1, "", "__init__"], [287, 4, 1, "", "find_answers"], [287, 4, 1, "", "prove"]], "nltk.inference.resolution.UnificationException": [[287, 4, 1, "", "__init__"]], "nltk.inference.tableau": [[288, 3, 1, "", "Agenda"], [288, 3, 1, "", "Categories"], [288, 3, 1, "", "Debug"], [288, 7, 1, "", "ProverParseError"], [288, 3, 1, "", "TableauProver"], [288, 3, 1, "", "TableauProverCommand"], [288, 1, 1, "", "demo"], [288, 1, 1, "", "tableau_test"], [288, 1, 1, "", "testHigherOrderTableauProver"], [288, 1, 1, "", "testTableauProver"]], "nltk.inference.tableau.Agenda": [[288, 4, 1, "", "__init__"], [288, 4, 1, "", "clone"], [288, 4, 1, "", "mark_alls_fresh"], [288, 4, 1, "", "mark_neqs_fresh"], [288, 4, 1, "", "pop_first"], [288, 4, 1, "", "put"], [288, 4, 1, "", "put_all"], [288, 4, 1, "", "put_atoms"], [288, 4, 1, "", "replace_all"]], "nltk.inference.tableau.Categories": [[288, 5, 1, "", "ALL"], [288, 5, 1, "", "AND"], [288, 5, 1, "", "APP"], [288, 5, 1, "", "ATOM"], [288, 5, 1, "", "D_NEG"], [288, 5, 1, "", "EQ"], [288, 5, 1, "", "EXISTS"], [288, 5, 1, "", "IFF"], [288, 5, 1, "", "IMP"], [288, 5, 1, "", "N_ALL"], [288, 5, 1, "", "N_AND"], [288, 5, 1, "", "N_APP"], [288, 5, 1, "", "N_ATOM"], [288, 5, 1, "", "N_EQ"], [288, 5, 1, "", "N_EXISTS"], [288, 5, 1, "", "N_IFF"], [288, 5, 1, "", "N_IMP"], [288, 5, 1, "", "N_OR"], [288, 5, 1, "", "N_PROP"], [288, 5, 1, "", "OR"], [288, 5, 1, "", "PROP"]], "nltk.inference.tableau.Debug": [[288, 4, 1, "", "__init__"], [288, 4, 1, "", "line"]], "nltk.inference.tableau.TableauProver": [[288, 4, 1, "", "is_atom"]], "nltk.inference.tableau.TableauProverCommand": [[288, 4, 1, "", "__init__"]], "nltk.internals": [[289, 3, 1, "", "Counter"], [289, 3, 1, "", "Deprecated"], [289, 3, 1, "", "ElementWrapper"], [289, 7, 1, "", "ReadError"], [289, 1, 1, "", "config_java"], [289, 1, 1, "", "deprecated"], [289, 1, 1, "", "find_binary"], [289, 1, 1, "", "find_binary_iter"], [289, 1, 1, "", "find_dir"], [289, 1, 1, "", "find_file"], [289, 1, 1, "", "find_file_iter"], [289, 1, 1, "", "find_jar"], [289, 1, 1, "", "find_jar_iter"], [289, 1, 1, "", "find_jars_within_path"], [289, 1, 1, "", "import_from_stdlib"], [289, 1, 1, "", "is_writable"], [289, 1, 1, "", "java"], [289, 1, 1, "", "overridden"], [289, 1, 1, "", "raise_unorderable_types"], [289, 1, 1, "", "read_int"], [289, 1, 1, "", "read_number"], [289, 1, 1, "", "read_str"], [289, 1, 1, "", "slice_bounds"]], "nltk.internals.Counter": [[289, 4, 1, "", "__init__"], [289, 4, 1, "", "get"]], "nltk.internals.Deprecated": [[289, 4, 1, "", "__new__"]], "nltk.internals.ElementWrapper": [[289, 4, 1, "", "__init__"], [289, 4, 1, "", "__new__"], [289, 4, 1, "", "find"], [289, 4, 1, "", "findall"], [289, 4, 1, "", "getchildren"], [289, 4, 1, "", "getiterator"], [289, 4, 1, "", "makeelement"], [289, 4, 1, "", "unwrap"]], "nltk.internals.ReadError": [[289, 4, 1, "", "__init__"]], "nltk.jsontags": [[290, 3, 1, "", "JSONTaggedDecoder"], [290, 3, 1, "", "JSONTaggedEncoder"], [290, 1, 1, "", "register_tag"]], "nltk.jsontags.JSONTaggedDecoder": [[290, 4, 1, "", "decode"], [290, 4, 1, "", "decode_obj"]], "nltk.jsontags.JSONTaggedEncoder": [[290, 4, 1, "", "default"]], "nltk.langnames": [[291, 1, 1, "", "inverse_dict"], [291, 1, 1, "", "lang2q"], [291, 1, 1, "", "langcode"], [291, 1, 1, "", "langname"], [291, 1, 1, "", "q2name"], [291, 1, 1, "", "q2tag"], [291, 1, 1, "", "tag2q"]], "nltk.lazyimport": [[292, 3, 1, "", "LazyModule"]], "nltk.lazyimport.LazyModule": [[292, 4, 1, "", "__init__"]], "nltk.lm": [[294, 3, 1, "", "AbsoluteDiscountingInterpolated"], [295, 3, 1, "", "KneserNeyInterpolated"], [296, 3, 1, "", "Laplace"], [297, 3, 1, "", "Lidstone"], [298, 3, 1, "", "MLE"], [299, 3, 1, "", "NgramCounter"], [300, 3, 1, "", "StupidBackoff"], [293, 3, 1, "", "Vocabulary"], [302, 3, 1, "", "WittenBellInterpolated"], [303, 0, 0, "-", "api"], [304, 0, 0, "-", "counter"], [305, 0, 0, "-", "models"], [306, 0, 0, "-", "preprocessing"], [307, 0, 0, "-", "smoothing"], [308, 0, 0, "-", "util"], [301, 0, 0, "-", "vocabulary"]], "nltk.lm.AbsoluteDiscountingInterpolated": [[294, 4, 1, "", "__init__"], [294, 4, 1, "", "context_counts"], [294, 4, 1, "", "entropy"], [294, 4, 1, "", "fit"], [294, 4, 1, "", "generate"], [294, 4, 1, "", "logscore"], [294, 4, 1, "", "perplexity"], [294, 4, 1, "", "score"], [294, 4, 1, "", "unmasked_score"]], "nltk.lm.KneserNeyInterpolated": [[295, 4, 1, "", "__init__"], [295, 4, 1, "", "context_counts"], [295, 4, 1, "", "entropy"], [295, 4, 1, "", "fit"], [295, 4, 1, "", "generate"], [295, 4, 1, "", "logscore"], [295, 4, 1, "", "perplexity"], [295, 4, 1, "", "score"], [295, 4, 1, "", "unmasked_score"]], "nltk.lm.Laplace": [[296, 4, 1, "", "__init__"], [296, 4, 1, "", "context_counts"], [296, 4, 1, "", "entropy"], [296, 4, 1, "", "fit"], [296, 4, 1, "", "generate"], [296, 4, 1, "", "logscore"], [296, 4, 1, "", "perplexity"], [296, 4, 1, "", "score"], [296, 4, 1, "", "unmasked_score"]], "nltk.lm.Lidstone": [[297, 4, 1, "", "__init__"], [297, 4, 1, "", "context_counts"], [297, 4, 1, "", "entropy"], [297, 4, 1, "", "fit"], [297, 4, 1, "", "generate"], [297, 4, 1, "", "logscore"], [297, 4, 1, "", "perplexity"], [297, 4, 1, "", "score"], [297, 4, 1, "", "unmasked_score"]], "nltk.lm.MLE": [[298, 4, 1, "", "__init__"], [298, 4, 1, "", "context_counts"], [298, 4, 1, "", "entropy"], [298, 4, 1, "", "fit"], [298, 4, 1, "", "generate"], [298, 4, 1, "", "logscore"], [298, 4, 1, "", "perplexity"], [298, 4, 1, "", "score"], [298, 4, 1, "", "unmasked_score"]], "nltk.lm.NgramCounter": [[299, 4, 1, "", "N"], [299, 4, 1, "", "__init__"], [299, 4, 1, "", "update"]], "nltk.lm.StupidBackoff": [[300, 4, 1, "", "__init__"], [300, 4, 1, "", "context_counts"], [300, 4, 1, "", "entropy"], [300, 4, 1, "", "fit"], [300, 4, 1, "", "generate"], [300, 4, 1, "", "logscore"], [300, 4, 1, "", "perplexity"], [300, 4, 1, "", "score"], [300, 4, 1, "", "unmasked_score"]], "nltk.lm.Vocabulary": [[293, 4, 1, "", "__init__"], [293, 6, 1, "", "cutoff"], [293, 4, 1, "", "lookup"], [293, 4, 1, "", "update"]], "nltk.lm.WittenBellInterpolated": [[302, 4, 1, "", "__init__"], [302, 4, 1, "", "context_counts"], [302, 4, 1, "", "entropy"], [302, 4, 1, "", "fit"], [302, 4, 1, "", "generate"], [302, 4, 1, "", "logscore"], [302, 4, 1, "", "perplexity"], [302, 4, 1, "", "score"], [302, 4, 1, "", "unmasked_score"]], "nltk.lm.api": [[303, 3, 1, "", "LanguageModel"], [303, 3, 1, "", "Smoothing"]], "nltk.lm.api.LanguageModel": [[303, 4, 1, "", "__init__"], [303, 4, 1, "", "context_counts"], [303, 4, 1, "", "entropy"], [303, 4, 1, "", "fit"], [303, 4, 1, "", "generate"], [303, 4, 1, "", "logscore"], [303, 4, 1, "", "perplexity"], [303, 4, 1, "", "score"], [303, 4, 1, "", "unmasked_score"]], "nltk.lm.api.Smoothing": [[303, 4, 1, "", "__init__"], [303, 4, 1, "", "alpha_gamma"], [303, 4, 1, "", "unigram_score"]], "nltk.lm.counter": [[304, 3, 1, "", "NgramCounter"]], "nltk.lm.counter.NgramCounter": [[304, 4, 1, "", "N"], [304, 4, 1, "", "__init__"], [304, 4, 1, "", "update"]], "nltk.lm.models": [[305, 3, 1, "", "AbsoluteDiscountingInterpolated"], [305, 3, 1, "", "InterpolatedLanguageModel"], [305, 3, 1, "", "KneserNeyInterpolated"], [305, 3, 1, "", "Laplace"], [305, 3, 1, "", "Lidstone"], [305, 3, 1, "", "MLE"], [305, 3, 1, "", "StupidBackoff"], [305, 3, 1, "", "WittenBellInterpolated"]], "nltk.lm.models.AbsoluteDiscountingInterpolated": [[305, 4, 1, "", "__init__"]], "nltk.lm.models.InterpolatedLanguageModel": [[305, 4, 1, "", "__init__"], [305, 4, 1, "", "unmasked_score"]], "nltk.lm.models.KneserNeyInterpolated": [[305, 4, 1, "", "__init__"]], "nltk.lm.models.Laplace": [[305, 4, 1, "", "__init__"]], "nltk.lm.models.Lidstone": [[305, 4, 1, "", "__init__"], [305, 4, 1, "", "unmasked_score"]], "nltk.lm.models.MLE": [[305, 4, 1, "", "unmasked_score"]], "nltk.lm.models.StupidBackoff": [[305, 4, 1, "", "__init__"], [305, 4, 1, "", "unmasked_score"]], "nltk.lm.models.WittenBellInterpolated": [[305, 4, 1, "", "__init__"]], "nltk.lm.preprocessing": [[306, 1, 1, "", "flatten"], [306, 1, 1, "", "padded_everygram_pipeline"], [306, 1, 1, "", "padded_everygrams"]], "nltk.lm.smoothing": [[307, 3, 1, "", "AbsoluteDiscounting"], [307, 3, 1, "", "KneserNey"], [307, 3, 1, "", "WittenBell"]], "nltk.lm.smoothing.AbsoluteDiscounting": [[307, 4, 1, "", "__init__"], [307, 4, 1, "", "alpha_gamma"], [307, 4, 1, "", "unigram_score"]], "nltk.lm.smoothing.KneserNey": [[307, 4, 1, "", "__init__"], [307, 4, 1, "", "alpha_gamma"], [307, 4, 1, "", "unigram_score"]], "nltk.lm.smoothing.WittenBell": [[307, 4, 1, "", "__init__"], [307, 4, 1, "", "alpha_gamma"], [307, 4, 1, "", "unigram_score"]], "nltk.lm.util": [[308, 1, 1, "", "log_base2"]], "nltk.lm.vocabulary": [[301, 3, 1, "", "Vocabulary"]], "nltk.lm.vocabulary.Vocabulary": [[301, 4, 1, "", "__init__"], [301, 6, 1, "", "cutoff"], [301, 4, 1, "", "lookup"], [301, 4, 1, "", "update"]], "nltk.metrics": [[310, 3, 1, "", "AnnotationTask"], [311, 3, 1, "", "BigramAssocMeasures"], [313, 3, 1, "", "ContingencyMeasures"], [315, 3, 1, "", "QuadgramAssocMeasures"], [316, 3, 1, "", "TrigramAssocMeasures"], [317, 1, 1, "", "accuracy"], [318, 0, 0, "-", "agreement"], [319, 0, 0, "-", "aline"], [320, 1, 1, "", "approxrand"], [321, 0, 0, "-", "association"], [322, 1, 1, "", "binary_distance"], [312, 0, 0, "-", "confusionmatrix"], [323, 1, 1, "", "custom_distance"], [324, 0, 0, "-", "distance"], [325, 1, 1, "", "edit_distance"], [326, 1, 1, "", "edit_distance_align"], [327, 1, 1, "", "f_measure"], [328, 1, 1, "", "fractional_presence"], [329, 1, 1, "", "ghd"], [330, 1, 1, "", "interval_distance"], [331, 1, 1, "", "jaccard_distance"], [332, 1, 1, "", "log_likelihood"], [333, 1, 1, "", "masi_distance"], [314, 0, 0, "-", "paice"], [334, 1, 1, "", "pk"], [335, 1, 1, "", "precision"], [336, 1, 1, "", "presence"], [337, 1, 1, "", "ranks_from_scores"], [338, 1, 1, "", "ranks_from_sequence"], [339, 1, 1, "", "recall"], [340, 0, 0, "-", "scores"], [341, 0, 0, "-", "segmentation"], [342, 0, 0, "-", "spearman"], [343, 1, 1, "", "spearman_correlation"], [344, 1, 1, "", "windowdiff"]], "nltk.metrics.AnnotationTask": [[310, 4, 1, "", "Ae_kappa"], [310, 4, 1, "", "Ao"], [310, 4, 1, "", "Disagreement"], [310, 4, 1, "", "Do_Kw"], [310, 4, 1, "", "Do_Kw_pairwise"], [310, 4, 1, "", "N"], [310, 4, 1, "", "Nck"], [310, 4, 1, "", "Nik"], [310, 4, 1, "", "Nk"], [310, 4, 1, "", "S"], [310, 4, 1, "", "__init__"], [310, 4, 1, "", "agr"], [310, 4, 1, "", "alpha"], [310, 4, 1, "", "avg_Ao"], [310, 4, 1, "", "kappa"], [310, 4, 1, "", "kappa_pairwise"], [310, 4, 1, "", "load_array"], [310, 4, 1, "", "multi_kappa"], [310, 4, 1, "", "pi"], [310, 4, 1, "", "weighted_kappa"], [310, 4, 1, "", "weighted_kappa_pairwise"]], "nltk.metrics.BigramAssocMeasures": [[311, 4, 1, "", "chi_sq"], [311, 4, 1, "", "dice"], [311, 4, 1, "", "fisher"], [311, 4, 1, "", "jaccard"], [311, 4, 1, "", "likelihood_ratio"], [311, 4, 1, "", "mi_like"], [311, 4, 1, "", "phi_sq"], [311, 4, 1, "", "pmi"], [311, 4, 1, "", "poisson_stirling"], [311, 4, 1, "", "raw_freq"], [311, 4, 1, "", "student_t"]], "nltk.metrics.ContingencyMeasures": [[313, 4, 1, "", "__init__"]], "nltk.metrics.QuadgramAssocMeasures": [[315, 4, 1, "", "chi_sq"], [315, 4, 1, "", "jaccard"], [315, 4, 1, "", "likelihood_ratio"], [315, 4, 1, "", "mi_like"], [315, 4, 1, "", "pmi"], [315, 4, 1, "", "poisson_stirling"], [315, 4, 1, "", "raw_freq"], [315, 4, 1, "", "student_t"]], "nltk.metrics.TrigramAssocMeasures": [[316, 4, 1, "", "chi_sq"], [316, 4, 1, "", "jaccard"], [316, 4, 1, "", "likelihood_ratio"], [316, 4, 1, "", "mi_like"], [316, 4, 1, "", "pmi"], [316, 4, 1, "", "poisson_stirling"], [316, 4, 1, "", "raw_freq"], [316, 4, 1, "", "student_t"]], "nltk.metrics.agreement": [[318, 3, 1, "", "AnnotationTask"]], "nltk.metrics.agreement.AnnotationTask": [[318, 4, 1, "", "Ae_kappa"], [318, 4, 1, "", "Ao"], [318, 4, 1, "", "Disagreement"], [318, 4, 1, "", "Do_Kw"], [318, 4, 1, "", "Do_Kw_pairwise"], [318, 4, 1, "", "N"], [318, 4, 1, "", "Nck"], [318, 4, 1, "", "Nik"], [318, 4, 1, "", "Nk"], [318, 4, 1, "", "S"], [318, 4, 1, "", "__init__"], [318, 4, 1, "", "agr"], [318, 4, 1, "", "alpha"], [318, 4, 1, "", "avg_Ao"], [318, 4, 1, "", "kappa"], [318, 4, 1, "", "kappa_pairwise"], [318, 4, 1, "", "load_array"], [318, 4, 1, "", "multi_kappa"], [318, 4, 1, "", "pi"], [318, 4, 1, "", "weighted_kappa"], [318, 4, 1, "", "weighted_kappa_pairwise"]], "nltk.metrics.aline": [[319, 1, 1, "", "R"], [319, 1, 1, "", "V"], [319, 1, 1, "", "align"], [319, 1, 1, "", "delta"], [319, 1, 1, "", "demo"], [319, 1, 1, "", "diff"], [319, 1, 1, "", "sigma_exp"], [319, 1, 1, "", "sigma_skip"], [319, 1, 1, "", "sigma_sub"]], "nltk.metrics.association": [[321, 3, 1, "", "BigramAssocMeasures"], [321, 3, 1, "", "ContingencyMeasures"], [321, 2, 1, "", "NGRAM"], [321, 3, 1, "", "NgramAssocMeasures"], [321, 3, 1, "", "QuadgramAssocMeasures"], [321, 2, 1, "", "TOTAL"], [321, 3, 1, "", "TrigramAssocMeasures"], [321, 2, 1, "", "UNIGRAMS"]], "nltk.metrics.association.BigramAssocMeasures": [[321, 4, 1, "", "chi_sq"], [321, 4, 1, "", "dice"], [321, 4, 1, "", "fisher"], [321, 4, 1, "", "phi_sq"]], "nltk.metrics.association.ContingencyMeasures": [[321, 4, 1, "", "__init__"]], "nltk.metrics.association.NgramAssocMeasures": [[321, 4, 1, "", "chi_sq"], [321, 4, 1, "", "jaccard"], [321, 4, 1, "", "likelihood_ratio"], [321, 4, 1, "", "mi_like"], [321, 4, 1, "", "pmi"], [321, 4, 1, "", "poisson_stirling"], [321, 4, 1, "", "raw_freq"], [321, 4, 1, "", "student_t"]], "nltk.metrics.confusionmatrix": [[312, 3, 1, "", "ConfusionMatrix"], [312, 1, 1, "", "demo"]], "nltk.metrics.confusionmatrix.ConfusionMatrix": [[312, 4, 1, "", "__init__"], [312, 4, 1, "", "evaluate"], [312, 4, 1, "", "f_measure"], [312, 4, 1, "", "key"], [312, 4, 1, "", "precision"], [312, 4, 1, "", "pretty_format"], [312, 4, 1, "", "recall"]], "nltk.metrics.distance": [[324, 1, 1, "", "binary_distance"], [324, 1, 1, "", "custom_distance"], [324, 1, 1, "", "demo"], [324, 1, 1, "", "edit_distance"], [324, 1, 1, "", "edit_distance_align"], [324, 1, 1, "", "fractional_presence"], [324, 1, 1, "", "interval_distance"], [324, 1, 1, "", "jaccard_distance"], [324, 1, 1, "", "jaro_similarity"], [324, 1, 1, "", "jaro_winkler_similarity"], [324, 1, 1, "", "masi_distance"], [324, 1, 1, "", "presence"]], "nltk.metrics.paice": [[314, 3, 1, "", "Paice"], [314, 1, 1, "", "demo"], [314, 1, 1, "", "get_words_from_dictionary"]], "nltk.metrics.paice.Paice": [[314, 4, 1, "", "__init__"], [314, 4, 1, "", "update"]], "nltk.metrics.scores": [[340, 1, 1, "", "accuracy"], [340, 1, 1, "", "approxrand"], [340, 1, 1, "", "demo"], [340, 1, 1, "", "f_measure"], [340, 1, 1, "", "log_likelihood"], [340, 1, 1, "", "precision"], [340, 1, 1, "", "recall"]], "nltk.metrics.segmentation": [[341, 1, 1, "", "ghd"], [341, 1, 1, "", "pk"], [341, 1, 1, "", "windowdiff"]], "nltk.metrics.spearman": [[342, 1, 1, "", "ranks_from_scores"], [342, 1, 1, "", "ranks_from_sequence"], [342, 1, 1, "", "spearman_correlation"]], "nltk.misc": [[346, 0, 0, "-", "babelfish"], [347, 0, 0, "-", "chomsky"], [348, 0, 0, "-", "minimalset"], [349, 0, 0, "-", "sort"], [350, 0, 0, "-", "wordfinder"]], "nltk.misc.babelfish": [[346, 1, 1, "", "babelize_shell"]], "nltk.misc.chomsky": [[347, 1, 1, "", "generate_chomsky"]], "nltk.misc.minimalset": [[348, 3, 1, "", "MinimalSet"]], "nltk.misc.minimalset.MinimalSet": [[348, 4, 1, "", "__init__"], [348, 4, 1, "", "add"], [348, 4, 1, "", "contexts"], [348, 4, 1, "", "display"], [348, 4, 1, "", "display_all"], [348, 4, 1, "", "targets"]], "nltk.misc.sort": [[349, 1, 1, "", "bubble"], [349, 1, 1, "", "demo"], [349, 1, 1, "", "merge"], [349, 1, 1, "", "quick"], [349, 1, 1, "", "selection"]], "nltk.misc.wordfinder": [[350, 1, 1, "", "check"], [350, 1, 1, "", "revword"], [350, 1, 1, "", "step"], [350, 1, 1, "", "word_finder"], [350, 1, 1, "", "wordfinder"]], "nltk.parse": [[352, 3, 1, "", "BllipParser"], [353, 3, 1, "", "BottomUpChartParser"], [354, 3, 1, "", "BottomUpLeftCornerChartParser"], [355, 3, 1, "", "BottomUpProbabilisticChartParser"], [356, 3, 1, "", "CoreNLPDependencyParser"], [357, 3, 1, "", "CoreNLPParser"], [358, 3, 1, "", "DependencyEvaluator"], [360, 3, 1, "", "EarleyChartParser"], [361, 3, 1, "", "FeatureBottomUpChartParser"], [362, 3, 1, "", "FeatureBottomUpLeftCornerChartParser"], [363, 3, 1, "", "FeatureEarleyChartParser"], [364, 3, 1, "", "FeatureIncrementalBottomUpChartParser"], [365, 3, 1, "", "FeatureIncrementalBottomUpLeftCornerChartParser"], [366, 3, 1, "", "FeatureIncrementalChartParser"], [367, 3, 1, "", "FeatureIncrementalTopDownChartParser"], [368, 3, 1, "", "FeatureTopDownChartParser"], [369, 3, 1, "", "IncrementalBottomUpChartParser"], [370, 3, 1, "", "IncrementalBottomUpLeftCornerChartParser"], [371, 3, 1, "", "IncrementalChartParser"], [372, 3, 1, "", "IncrementalLeftCornerChartParser"], [373, 3, 1, "", "IncrementalTopDownChartParser"], [374, 3, 1, "", "InsideChartParser"], [375, 3, 1, "", "LeftCornerChartParser"], [376, 3, 1, "", "LongestChartParser"], [377, 3, 1, "", "MaltParser"], [378, 3, 1, "", "NaiveBayesDependencyScorer"], [380, 3, 1, "", "ProbabilisticNonprojectiveParser"], [381, 3, 1, "", "ProbabilisticProjectiveDependencyParser"], [383, 3, 1, "", "RandomChartParser"], [384, 3, 1, "", "RecursiveDescentParser"], [385, 3, 1, "", "ShiftReduceParser"], [386, 3, 1, "", "SteppingChartParser"], [387, 3, 1, "", "SteppingRecursiveDescentParser"], [388, 3, 1, "", "SteppingShiftReduceParser"], [389, 3, 1, "", "TopDownChartParser"], [391, 3, 1, "", "UnsortedChartParser"], [392, 3, 1, "", "ViterbiParser"], [393, 0, 0, "-", "api"], [394, 0, 0, "-", "bllip"], [395, 0, 0, "-", "chart"], [396, 0, 0, "-", "corenlp"], [359, 0, 0, "-", "dependencygraph"], [397, 0, 0, "-", "earleychart"], [398, 0, 0, "-", "evaluate"], [399, 0, 0, "-", "featurechart"], [400, 0, 0, "-", "generate"], [401, 0, 0, "-", "malt"], [379, 0, 0, "-", "nonprojectivedependencyparser"], [402, 0, 0, "-", "pchart"], [382, 0, 0, "-", "projectivedependencyparser"], [403, 0, 0, "-", "recursivedescent"], [404, 0, 0, "-", "shiftreduce"], [405, 0, 0, "-", "stanford"], [390, 0, 0, "-", "transitionparser"], [406, 0, 0, "-", "util"], [407, 0, 0, "-", "viterbi"]], "nltk.parse.BllipParser": [[352, 4, 1, "", "__init__"], [352, 4, 1, "", "from_unified_model_dir"], [352, 4, 1, "", "grammar"], [352, 4, 1, "", "parse"], [352, 4, 1, "", "parse_all"], [352, 4, 1, "", "parse_one"], [352, 4, 1, "", "parse_sents"], [352, 4, 1, "", "tagged_parse"]], "nltk.parse.BottomUpChartParser": [[353, 4, 1, "", "__init__"], [353, 4, 1, "", "chart_parse"], [353, 4, 1, "", "grammar"], [353, 4, 1, "", "parse"], [353, 4, 1, "", "parse_all"], [353, 4, 1, "", "parse_one"], [353, 4, 1, "", "parse_sents"]], "nltk.parse.BottomUpLeftCornerChartParser": [[354, 4, 1, "", "__init__"], [354, 4, 1, "", "chart_parse"], [354, 4, 1, "", "grammar"], [354, 4, 1, "", "parse"], [354, 4, 1, "", "parse_all"], [354, 4, 1, "", "parse_one"], [354, 4, 1, "", "parse_sents"]], "nltk.parse.BottomUpProbabilisticChartParser": [[355, 4, 1, "", "__init__"], [355, 4, 1, "", "grammar"], [355, 4, 1, "", "parse"], [355, 4, 1, "", "parse_all"], [355, 4, 1, "", "parse_one"], [355, 4, 1, "", "parse_sents"], [355, 4, 1, "", "sort_queue"], [355, 4, 1, "", "trace"]], "nltk.parse.CoreNLPDependencyParser": [[356, 4, 1, "", "__init__"], [356, 4, 1, "", "accuracy"], [356, 4, 1, "", "api_call"], [356, 4, 1, "", "confusion"], [356, 4, 1, "", "evaluate"], [356, 4, 1, "", "evaluate_per_tag"], [356, 4, 1, "", "f_measure"], [356, 4, 1, "", "grammar"], [356, 4, 1, "", "make_tree"], [356, 4, 1, "", "parse"], [356, 4, 1, "", "parse_all"], [356, 4, 1, "", "parse_one"], [356, 4, 1, "", "parse_sents"], [356, 4, 1, "", "parse_text"], [356, 5, 1, "", "parser_annotator"], [356, 4, 1, "", "precision"], [356, 4, 1, "", "raw_parse"], [356, 4, 1, "", "raw_parse_sents"], [356, 4, 1, "", "raw_tag_sents"], [356, 4, 1, "", "recall"], [356, 4, 1, "", "span_tokenize"], [356, 4, 1, "", "span_tokenize_sents"], [356, 4, 1, "", "tag"], [356, 4, 1, "", "tag_sents"], [356, 4, 1, "", "tokenize"], [356, 4, 1, "", "tokenize_sents"]], "nltk.parse.CoreNLPParser": [[357, 4, 1, "", "__init__"], [357, 4, 1, "", "accuracy"], [357, 4, 1, "", "api_call"], [357, 4, 1, "", "confusion"], [357, 4, 1, "", "evaluate"], [357, 4, 1, "", "evaluate_per_tag"], [357, 4, 1, "", "f_measure"], [357, 4, 1, "", "grammar"], [357, 4, 1, "", "make_tree"], [357, 4, 1, "", "parse"], [357, 4, 1, "", "parse_all"], [357, 4, 1, "", "parse_one"], [357, 4, 1, "", "parse_sents"], [357, 4, 1, "", "parse_text"], [357, 5, 1, "", "parser_annotator"], [357, 4, 1, "", "precision"], [357, 4, 1, "", "raw_parse"], [357, 4, 1, "", "raw_parse_sents"], [357, 4, 1, "", "raw_tag_sents"], [357, 4, 1, "", "recall"], [357, 4, 1, "", "span_tokenize"], [357, 4, 1, "", "span_tokenize_sents"], [357, 4, 1, "", "tag"], [357, 4, 1, "", "tag_sents"], [357, 4, 1, "", "tokenize"], [357, 4, 1, "", "tokenize_sents"]], "nltk.parse.DependencyEvaluator": [[358, 4, 1, "", "__init__"], [358, 4, 1, "", "eval"]], "nltk.parse.EarleyChartParser": [[360, 4, 1, "", "__init__"], [360, 4, 1, "", "chart_parse"], [360, 4, 1, "", "grammar"], [360, 4, 1, "", "parse"], [360, 4, 1, "", "parse_all"], [360, 4, 1, "", "parse_one"], [360, 4, 1, "", "parse_sents"]], "nltk.parse.FeatureBottomUpChartParser": [[361, 4, 1, "", "__init__"], [361, 4, 1, "", "chart_parse"], [361, 4, 1, "", "grammar"], [361, 4, 1, "", "parse"], [361, 4, 1, "", "parse_all"], [361, 4, 1, "", "parse_one"], [361, 4, 1, "", "parse_sents"]], "nltk.parse.FeatureBottomUpLeftCornerChartParser": [[362, 4, 1, "", "__init__"], [362, 4, 1, "", "chart_parse"], [362, 4, 1, "", "grammar"], [362, 4, 1, "", "parse"], [362, 4, 1, "", "parse_all"], [362, 4, 1, "", "parse_one"], [362, 4, 1, "", "parse_sents"]], "nltk.parse.FeatureEarleyChartParser": [[363, 4, 1, "", "__init__"], [363, 4, 1, "", "chart_parse"], [363, 4, 1, "", "grammar"], [363, 4, 1, "", "parse"], [363, 4, 1, "", "parse_all"], [363, 4, 1, "", "parse_one"], [363, 4, 1, "", "parse_sents"]], "nltk.parse.FeatureIncrementalBottomUpChartParser": [[364, 4, 1, "", "__init__"], [364, 4, 1, "", "chart_parse"], [364, 4, 1, "", "grammar"], [364, 4, 1, "", "parse"], [364, 4, 1, "", "parse_all"], [364, 4, 1, "", "parse_one"], [364, 4, 1, "", "parse_sents"]], "nltk.parse.FeatureIncrementalBottomUpLeftCornerChartParser": [[365, 4, 1, "", "__init__"], [365, 4, 1, "", "chart_parse"], [365, 4, 1, "", "grammar"], [365, 4, 1, "", "parse"], [365, 4, 1, "", "parse_all"], [365, 4, 1, "", "parse_one"], [365, 4, 1, "", "parse_sents"]], "nltk.parse.FeatureIncrementalChartParser": [[366, 4, 1, "", "__init__"], [366, 4, 1, "", "chart_parse"], [366, 4, 1, "", "grammar"], [366, 4, 1, "", "parse"], [366, 4, 1, "", "parse_all"], [366, 4, 1, "", "parse_one"], [366, 4, 1, "", "parse_sents"]], "nltk.parse.FeatureIncrementalTopDownChartParser": [[367, 4, 1, "", "__init__"], [367, 4, 1, "", "chart_parse"], [367, 4, 1, "", "grammar"], [367, 4, 1, "", "parse"], [367, 4, 1, "", "parse_all"], [367, 4, 1, "", "parse_one"], [367, 4, 1, "", "parse_sents"]], "nltk.parse.FeatureTopDownChartParser": [[368, 4, 1, "", "__init__"], [368, 4, 1, "", "chart_parse"], [368, 4, 1, "", "grammar"], [368, 4, 1, "", "parse"], [368, 4, 1, "", "parse_all"], [368, 4, 1, "", "parse_one"], [368, 4, 1, "", "parse_sents"]], "nltk.parse.IncrementalBottomUpChartParser": [[369, 4, 1, "", "__init__"], [369, 4, 1, "", "chart_parse"], [369, 4, 1, "", "grammar"], [369, 4, 1, "", "parse"], [369, 4, 1, "", "parse_all"], [369, 4, 1, "", "parse_one"], [369, 4, 1, "", "parse_sents"]], "nltk.parse.IncrementalBottomUpLeftCornerChartParser": [[370, 4, 1, "", "__init__"], [370, 4, 1, "", "chart_parse"], [370, 4, 1, "", "grammar"], [370, 4, 1, "", "parse"], [370, 4, 1, "", "parse_all"], [370, 4, 1, "", "parse_one"], [370, 4, 1, "", "parse_sents"]], "nltk.parse.IncrementalChartParser": [[371, 4, 1, "", "__init__"], [371, 4, 1, "", "chart_parse"], [371, 4, 1, "", "grammar"], [371, 4, 1, "", "parse"], [371, 4, 1, "", "parse_all"], [371, 4, 1, "", "parse_one"], [371, 4, 1, "", "parse_sents"]], "nltk.parse.IncrementalLeftCornerChartParser": [[372, 4, 1, "", "__init__"], [372, 4, 1, "", "chart_parse"], [372, 4, 1, "", "grammar"], [372, 4, 1, "", "parse"], [372, 4, 1, "", "parse_all"], [372, 4, 1, "", "parse_one"], [372, 4, 1, "", "parse_sents"]], "nltk.parse.IncrementalTopDownChartParser": [[373, 4, 1, "", "__init__"], [373, 4, 1, "", "chart_parse"], [373, 4, 1, "", "grammar"], [373, 4, 1, "", "parse"], [373, 4, 1, "", "parse_all"], [373, 4, 1, "", "parse_one"], [373, 4, 1, "", "parse_sents"]], "nltk.parse.InsideChartParser": [[374, 4, 1, "", "__init__"], [374, 4, 1, "", "grammar"], [374, 4, 1, "", "parse"], [374, 4, 1, "", "parse_all"], [374, 4, 1, "", "parse_one"], [374, 4, 1, "", "parse_sents"], [374, 4, 1, "", "sort_queue"], [374, 4, 1, "", "trace"]], "nltk.parse.LeftCornerChartParser": [[375, 4, 1, "", "__init__"], [375, 4, 1, "", "chart_parse"], [375, 4, 1, "", "grammar"], [375, 4, 1, "", "parse"], [375, 4, 1, "", "parse_all"], [375, 4, 1, "", "parse_one"], [375, 4, 1, "", "parse_sents"]], "nltk.parse.LongestChartParser": [[376, 4, 1, "", "__init__"], [376, 4, 1, "", "grammar"], [376, 4, 1, "", "parse"], [376, 4, 1, "", "parse_all"], [376, 4, 1, "", "parse_one"], [376, 4, 1, "", "parse_sents"], [376, 4, 1, "", "sort_queue"], [376, 4, 1, "", "trace"]], "nltk.parse.MaltParser": [[377, 4, 1, "", "__init__"], [377, 4, 1, "", "generate_malt_command"], [377, 4, 1, "", "grammar"], [377, 4, 1, "", "parse"], [377, 4, 1, "", "parse_all"], [377, 4, 1, "", "parse_one"], [377, 4, 1, "", "parse_sents"], [377, 4, 1, "", "parse_tagged_sents"], [377, 4, 1, "", "train"], [377, 4, 1, "", "train_from_file"]], "nltk.parse.NaiveBayesDependencyScorer": [[378, 4, 1, "", "__init__"], [378, 4, 1, "", "score"], [378, 4, 1, "", "train"]], "nltk.parse.ProbabilisticNonprojectiveParser": [[380, 4, 1, "", "__init__"], [380, 4, 1, "", "best_incoming_arc"], [380, 4, 1, "", "collapse_nodes"], [380, 4, 1, "", "compute_max_subtract_score"], [380, 4, 1, "", "compute_original_indexes"], [380, 4, 1, "", "initialize_edge_scores"], [380, 4, 1, "", "original_best_arc"], [380, 4, 1, "", "parse"], [380, 4, 1, "", "train"], [380, 4, 1, "", "update_edge_scores"]], "nltk.parse.ProbabilisticProjectiveDependencyParser": [[381, 4, 1, "", "__init__"], [381, 4, 1, "", "compute_prob"], [381, 4, 1, "", "concatenate"], [381, 4, 1, "", "parse"], [381, 4, 1, "", "train"]], "nltk.parse.RandomChartParser": [[383, 4, 1, "", "__init__"], [383, 4, 1, "", "grammar"], [383, 4, 1, "", "parse"], [383, 4, 1, "", "parse_all"], [383, 4, 1, "", "parse_one"], [383, 4, 1, "", "parse_sents"], [383, 4, 1, "", "sort_queue"], [383, 4, 1, "", "trace"]], "nltk.parse.RecursiveDescentParser": [[384, 4, 1, "", "__init__"], [384, 4, 1, "", "grammar"], [384, 4, 1, "", "parse"], [384, 4, 1, "", "parse_all"], [384, 4, 1, "", "parse_one"], [384, 4, 1, "", "parse_sents"], [384, 4, 1, "", "trace"]], "nltk.parse.ShiftReduceParser": [[385, 4, 1, "", "__init__"], [385, 4, 1, "", "grammar"], [385, 4, 1, "", "parse"], [385, 4, 1, "", "parse_all"], [385, 4, 1, "", "parse_one"], [385, 4, 1, "", "parse_sents"], [385, 4, 1, "", "trace"]], "nltk.parse.SteppingChartParser": [[386, 4, 1, "", "__init__"], [386, 4, 1, "", "chart"], [386, 4, 1, "", "chart_parse"], [386, 4, 1, "", "current_chartrule"], [386, 4, 1, "", "grammar"], [386, 4, 1, "", "initialize"], [386, 4, 1, "", "parse"], [386, 4, 1, "", "parse_all"], [386, 4, 1, "", "parse_one"], [386, 4, 1, "", "parse_sents"], [386, 4, 1, "", "parses"], [386, 4, 1, "", "set_chart"], [386, 4, 1, "", "set_grammar"], [386, 4, 1, "", "set_strategy"], [386, 4, 1, "", "step"], [386, 4, 1, "", "strategy"]], "nltk.parse.SteppingRecursiveDescentParser": [[387, 4, 1, "", "__init__"], [387, 4, 1, "", "backtrack"], [387, 4, 1, "", "currently_complete"], [387, 4, 1, "", "expand"], [387, 4, 1, "", "expandable_productions"], [387, 4, 1, "", "frontier"], [387, 4, 1, "", "grammar"], [387, 4, 1, "", "initialize"], [387, 4, 1, "", "match"], [387, 4, 1, "", "parse"], [387, 4, 1, "", "parse_all"], [387, 4, 1, "", "parse_one"], [387, 4, 1, "", "parse_sents"], [387, 4, 1, "", "parses"], [387, 4, 1, "", "remaining_text"], [387, 4, 1, "", "set_grammar"], [387, 4, 1, "", "step"], [387, 4, 1, "", "trace"], [387, 4, 1, "", "tree"], [387, 4, 1, "", "untried_expandable_productions"], [387, 4, 1, "", "untried_match"]], "nltk.parse.SteppingShiftReduceParser": [[388, 4, 1, "", "__init__"], [388, 4, 1, "", "grammar"], [388, 4, 1, "", "initialize"], [388, 4, 1, "", "parse"], [388, 4, 1, "", "parse_all"], [388, 4, 1, "", "parse_one"], [388, 4, 1, "", "parse_sents"], [388, 4, 1, "", "parses"], [388, 4, 1, "", "reduce"], [388, 4, 1, "", "reducible_productions"], [388, 4, 1, "", "remaining_text"], [388, 4, 1, "", "set_grammar"], [388, 4, 1, "", "shift"], [388, 4, 1, "", "stack"], [388, 4, 1, "", "step"], [388, 4, 1, "", "trace"], [388, 4, 1, "", "undo"]], "nltk.parse.TopDownChartParser": [[389, 4, 1, "", "__init__"], [389, 4, 1, "", "chart_parse"], [389, 4, 1, "", "grammar"], [389, 4, 1, "", "parse"], [389, 4, 1, "", "parse_all"], [389, 4, 1, "", "parse_one"], [389, 4, 1, "", "parse_sents"]], "nltk.parse.UnsortedChartParser": [[391, 4, 1, "", "__init__"], [391, 4, 1, "", "grammar"], [391, 4, 1, "", "parse"], [391, 4, 1, "", "parse_all"], [391, 4, 1, "", "parse_one"], [391, 4, 1, "", "parse_sents"], [391, 4, 1, "", "sort_queue"], [391, 4, 1, "", "trace"]], "nltk.parse.ViterbiParser": [[392, 4, 1, "", "__init__"], [392, 4, 1, "", "grammar"], [392, 4, 1, "", "parse"], [392, 4, 1, "", "parse_all"], [392, 4, 1, "", "parse_one"], [392, 4, 1, "", "parse_sents"], [392, 4, 1, "", "trace"]], "nltk.parse.api": [[393, 3, 1, "", "ParserI"]], "nltk.parse.api.ParserI": [[393, 4, 1, "", "grammar"], [393, 4, 1, "", "parse"], [393, 4, 1, "", "parse_all"], [393, 4, 1, "", "parse_one"], [393, 4, 1, "", "parse_sents"]], "nltk.parse.bllip": [[394, 3, 1, "", "BllipParser"]], "nltk.parse.bllip.BllipParser": [[394, 4, 1, "", "__init__"], [394, 4, 1, "", "from_unified_model_dir"], [394, 4, 1, "", "parse"], [394, 4, 1, "", "tagged_parse"]], "nltk.parse.chart": [[395, 3, 1, "", "AbstractChartRule"], [395, 3, 1, "", "BottomUpChartParser"], [395, 3, 1, "", "BottomUpLeftCornerChartParser"], [395, 3, 1, "", "BottomUpPredictCombineRule"], [395, 3, 1, "", "BottomUpPredictRule"], [395, 3, 1, "", "CachedTopDownPredictRule"], [395, 3, 1, "", "Chart"], [395, 3, 1, "", "ChartParser"], [395, 3, 1, "", "ChartRuleI"], [395, 3, 1, "", "EdgeI"], [395, 3, 1, "", "EmptyPredictRule"], [395, 3, 1, "", "FilteredBottomUpPredictCombineRule"], [395, 3, 1, "", "FilteredSingleEdgeFundamentalRule"], [395, 3, 1, "", "FundamentalRule"], [395, 3, 1, "", "LeafEdge"], [395, 3, 1, "", "LeafInitRule"], [395, 3, 1, "", "LeftCornerChartParser"], [395, 3, 1, "", "SingleEdgeFundamentalRule"], [395, 3, 1, "", "SteppingChartParser"], [395, 3, 1, "", "TopDownChartParser"], [395, 3, 1, "", "TopDownInitRule"], [395, 3, 1, "", "TopDownPredictRule"], [395, 3, 1, "", "TreeEdge"], [395, 1, 1, "", "demo"], [395, 1, 1, "", "demo_grammar"]], "nltk.parse.chart.AbstractChartRule": [[395, 4, 1, "", "apply"], [395, 4, 1, "", "apply_everywhere"]], "nltk.parse.chart.BottomUpChartParser": [[395, 4, 1, "", "__init__"]], "nltk.parse.chart.BottomUpLeftCornerChartParser": [[395, 4, 1, "", "__init__"]], "nltk.parse.chart.BottomUpPredictCombineRule": [[395, 5, 1, "", "NUM_EDGES"], [395, 4, 1, "", "apply"]], "nltk.parse.chart.BottomUpPredictRule": [[395, 5, 1, "", "NUM_EDGES"], [395, 4, 1, "", "apply"]], "nltk.parse.chart.CachedTopDownPredictRule": [[395, 4, 1, "", "__init__"], [395, 4, 1, "", "apply"]], "nltk.parse.chart.Chart": [[395, 4, 1, "", "__init__"], [395, 4, 1, "", "child_pointer_lists"], [395, 4, 1, "", "dot_digraph"], [395, 4, 1, "", "edges"], [395, 4, 1, "", "initialize"], [395, 4, 1, "", "insert"], [395, 4, 1, "", "insert_with_backpointer"], [395, 4, 1, "", "iteredges"], [395, 4, 1, "", "leaf"], [395, 4, 1, "", "leaves"], [395, 4, 1, "", "num_edges"], [395, 4, 1, "", "num_leaves"], [395, 4, 1, "", "parses"], [395, 4, 1, "", "pretty_format"], [395, 4, 1, "", "pretty_format_edge"], [395, 4, 1, "", "pretty_format_leaves"], [395, 4, 1, "", "select"], [395, 4, 1, "", "trees"]], "nltk.parse.chart.ChartParser": [[395, 4, 1, "", "__init__"], [395, 4, 1, "", "chart_parse"], [395, 4, 1, "", "grammar"], [395, 4, 1, "", "parse"]], "nltk.parse.chart.ChartRuleI": [[395, 4, 1, "", "apply"], [395, 4, 1, "", "apply_everywhere"]], "nltk.parse.chart.EdgeI": [[395, 4, 1, "", "__init__"], [395, 4, 1, "", "dot"], [395, 4, 1, "", "end"], [395, 4, 1, "", "is_complete"], [395, 4, 1, "", "is_incomplete"], [395, 4, 1, "", "length"], [395, 4, 1, "", "lhs"], [395, 4, 1, "", "nextsym"], [395, 4, 1, "", "rhs"], [395, 4, 1, "", "span"], [395, 4, 1, "", "start"]], "nltk.parse.chart.EmptyPredictRule": [[395, 5, 1, "", "NUM_EDGES"], [395, 4, 1, "", "apply"]], "nltk.parse.chart.FilteredBottomUpPredictCombineRule": [[395, 4, 1, "", "apply"]], "nltk.parse.chart.FundamentalRule": [[395, 5, 1, "", "NUM_EDGES"], [395, 4, 1, "", "apply"]], "nltk.parse.chart.LeafEdge": [[395, 4, 1, "", "__init__"], [395, 4, 1, "", "dot"], [395, 4, 1, "", "end"], [395, 4, 1, "", "is_complete"], [395, 4, 1, "", "is_incomplete"], [395, 4, 1, "", "length"], [395, 4, 1, "", "lhs"], [395, 4, 1, "", "nextsym"], [395, 4, 1, "", "rhs"], [395, 4, 1, "", "span"], [395, 4, 1, "", "start"]], "nltk.parse.chart.LeafInitRule": [[395, 5, 1, "", "NUM_EDGES"], [395, 4, 1, "", "apply"]], "nltk.parse.chart.LeftCornerChartParser": [[395, 4, 1, "", "__init__"]], "nltk.parse.chart.SingleEdgeFundamentalRule": [[395, 5, 1, "", "NUM_EDGES"], [395, 4, 1, "", "apply"]], "nltk.parse.chart.SteppingChartParser": [[395, 4, 1, "", "__init__"], [395, 4, 1, "", "chart"], [395, 4, 1, "", "current_chartrule"], [395, 4, 1, "", "grammar"], [395, 4, 1, "", "initialize"], [395, 4, 1, "", "parse"], [395, 4, 1, "", "parses"], [395, 4, 1, "", "set_chart"], [395, 4, 1, "", "set_grammar"], [395, 4, 1, "", "set_strategy"], [395, 4, 1, "", "step"], [395, 4, 1, "", "strategy"]], "nltk.parse.chart.TopDownChartParser": [[395, 4, 1, "", "__init__"]], "nltk.parse.chart.TopDownInitRule": [[395, 5, 1, "", "NUM_EDGES"], [395, 4, 1, "", "apply"]], "nltk.parse.chart.TopDownPredictRule": [[395, 5, 1, "", "NUM_EDGES"], [395, 4, 1, "", "apply"]], "nltk.parse.chart.TreeEdge": [[395, 4, 1, "", "__init__"], [395, 4, 1, "", "dot"], [395, 4, 1, "", "end"], [395, 4, 1, "", "from_production"], [395, 4, 1, "", "is_complete"], [395, 4, 1, "", "is_incomplete"], [395, 4, 1, "", "length"], [395, 4, 1, "", "lhs"], [395, 4, 1, "", "move_dot_forward"], [395, 4, 1, "", "nextsym"], [395, 4, 1, "", "rhs"], [395, 4, 1, "", "span"], [395, 4, 1, "", "start"]], "nltk.parse.corenlp": [[396, 3, 1, "", "CoreNLPDependencyParser"], [396, 3, 1, "", "CoreNLPParser"], [396, 3, 1, "", "CoreNLPServer"], [396, 7, 1, "", "CoreNLPServerError"], [396, 3, 1, "", "GenericCoreNLPParser"], [396, 1, 1, "", "transform"], [396, 1, 1, "", "try_port"]], "nltk.parse.corenlp.CoreNLPDependencyParser": [[396, 4, 1, "", "make_tree"], [396, 5, 1, "", "parser_annotator"]], "nltk.parse.corenlp.CoreNLPParser": [[396, 4, 1, "", "make_tree"], [396, 5, 1, "", "parser_annotator"]], "nltk.parse.corenlp.CoreNLPServer": [[396, 4, 1, "", "__init__"], [396, 4, 1, "", "start"], [396, 4, 1, "", "stop"]], "nltk.parse.corenlp.GenericCoreNLPParser": [[396, 4, 1, "", "__init__"], [396, 4, 1, "", "api_call"], [396, 4, 1, "", "parse_sents"], [396, 4, 1, "", "parse_text"], [396, 4, 1, "", "raw_parse"], [396, 4, 1, "", "raw_parse_sents"], [396, 4, 1, "", "raw_tag_sents"], [396, 4, 1, "", "tag"], [396, 4, 1, "", "tag_sents"], [396, 4, 1, "", "tokenize"]], "nltk.parse.dependencygraph": [[359, 3, 1, "", "DependencyGraph"], [359, 7, 1, "", "DependencyGraphError"], [359, 1, 1, "", "conll_demo"], [359, 1, 1, "", "conll_file_demo"], [359, 1, 1, "", "cycle_finding_demo"], [359, 1, 1, "", "demo"], [359, 1, 1, "", "dot2img"], [359, 1, 1, "", "malt_demo"]], "nltk.parse.dependencygraph.DependencyGraph": [[359, 4, 1, "", "__init__"], [359, 4, 1, "", "add_arc"], [359, 4, 1, "", "add_node"], [359, 4, 1, "", "connect_graph"], [359, 4, 1, "", "contains_address"], [359, 4, 1, "", "contains_cycle"], [359, 4, 1, "", "get_by_address"], [359, 4, 1, "", "get_cycle_path"], [359, 4, 1, "", "left_children"], [359, 4, 1, "", "load"], [359, 4, 1, "", "nx_graph"], [359, 4, 1, "", "redirect_arcs"], [359, 4, 1, "", "remove_by_address"], [359, 4, 1, "", "right_children"], [359, 4, 1, "", "to_conll"], [359, 4, 1, "", "to_dot"], [359, 4, 1, "", "tree"], [359, 4, 1, "", "triples"]], "nltk.parse.earleychart": [[397, 3, 1, "", "CompleteFundamentalRule"], [397, 3, 1, "", "CompleterRule"], [397, 3, 1, "", "EarleyChartParser"], [397, 3, 1, "", "FeatureCompleteFundamentalRule"], [397, 3, 1, "", "FeatureCompleterRule"], [397, 3, 1, "", "FeatureEarleyChartParser"], [397, 3, 1, "", "FeatureIncrementalBottomUpChartParser"], [397, 3, 1, "", "FeatureIncrementalBottomUpLeftCornerChartParser"], [397, 3, 1, "", "FeatureIncrementalChart"], [397, 3, 1, "", "FeatureIncrementalChartParser"], [397, 3, 1, "", "FeatureIncrementalTopDownChartParser"], [397, 3, 1, "", "FeaturePredictorRule"], [397, 3, 1, "", "FeatureScannerRule"], [397, 3, 1, "", "FilteredCompleteFundamentalRule"], [397, 3, 1, "", "IncrementalBottomUpChartParser"], [397, 3, 1, "", "IncrementalBottomUpLeftCornerChartParser"], [397, 3, 1, "", "IncrementalChart"], [397, 3, 1, "", "IncrementalChartParser"], [397, 3, 1, "", "IncrementalLeftCornerChartParser"], [397, 3, 1, "", "IncrementalTopDownChartParser"], [397, 3, 1, "", "PredictorRule"], [397, 3, 1, "", "ScannerRule"], [397, 1, 1, "", "demo"]], "nltk.parse.earleychart.CompleterRule": [[397, 4, 1, "", "apply"]], "nltk.parse.earleychart.EarleyChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.FeatureEarleyChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.FeatureIncrementalBottomUpChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.FeatureIncrementalBottomUpLeftCornerChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.FeatureIncrementalChart": [[397, 4, 1, "", "select"]], "nltk.parse.earleychart.FeatureIncrementalChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.FeatureIncrementalTopDownChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.FilteredCompleteFundamentalRule": [[397, 4, 1, "", "apply"]], "nltk.parse.earleychart.IncrementalBottomUpChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.IncrementalBottomUpLeftCornerChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.IncrementalChart": [[397, 4, 1, "", "edges"], [397, 4, 1, "", "initialize"], [397, 4, 1, "", "iteredges"], [397, 4, 1, "", "select"]], "nltk.parse.earleychart.IncrementalChartParser": [[397, 4, 1, "", "__init__"], [397, 4, 1, "", "chart_parse"]], "nltk.parse.earleychart.IncrementalLeftCornerChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.IncrementalTopDownChartParser": [[397, 4, 1, "", "__init__"]], "nltk.parse.earleychart.ScannerRule": [[397, 4, 1, "", "apply"]], "nltk.parse.evaluate": [[398, 3, 1, "", "DependencyEvaluator"]], "nltk.parse.evaluate.DependencyEvaluator": [[398, 4, 1, "", "__init__"], [398, 4, 1, "", "eval"]], "nltk.parse.featurechart": [[399, 3, 1, "", "FeatureBottomUpChartParser"], [399, 3, 1, "", "FeatureBottomUpLeftCornerChartParser"], [399, 3, 1, "", "FeatureBottomUpPredictCombineRule"], [399, 3, 1, "", "FeatureBottomUpPredictRule"], [399, 3, 1, "", "FeatureChart"], [399, 3, 1, "", "FeatureChartParser"], [399, 3, 1, "", "FeatureEmptyPredictRule"], [399, 3, 1, "", "FeatureFundamentalRule"], [399, 3, 1, "", "FeatureSingleEdgeFundamentalRule"], [399, 3, 1, "", "FeatureTopDownChartParser"], [399, 3, 1, "", "FeatureTopDownInitRule"], [399, 3, 1, "", "FeatureTopDownPredictRule"], [399, 3, 1, "", "FeatureTreeEdge"], [399, 3, 1, "", "InstantiateVarsChart"], [399, 1, 1, "", "demo"], [399, 1, 1, "", "demo_grammar"], [399, 1, 1, "", "run_profile"]], "nltk.parse.featurechart.FeatureBottomUpChartParser": [[399, 4, 1, "", "__init__"]], "nltk.parse.featurechart.FeatureBottomUpLeftCornerChartParser": [[399, 4, 1, "", "__init__"]], "nltk.parse.featurechart.FeatureBottomUpPredictCombineRule": [[399, 4, 1, "", "apply"]], "nltk.parse.featurechart.FeatureBottomUpPredictRule": [[399, 4, 1, "", "apply"]], "nltk.parse.featurechart.FeatureChart": [[399, 4, 1, "", "parses"], [399, 4, 1, "", "select"]], "nltk.parse.featurechart.FeatureChartParser": [[399, 4, 1, "", "__init__"]], "nltk.parse.featurechart.FeatureEmptyPredictRule": [[399, 4, 1, "", "apply"]], "nltk.parse.featurechart.FeatureFundamentalRule": [[399, 4, 1, "", "apply"]], "nltk.parse.featurechart.FeatureTopDownChartParser": [[399, 4, 1, "", "__init__"]], "nltk.parse.featurechart.FeatureTopDownInitRule": [[399, 4, 1, "", "apply"]], "nltk.parse.featurechart.FeatureTopDownPredictRule": [[399, 4, 1, "", "apply"]], "nltk.parse.featurechart.FeatureTreeEdge": [[399, 4, 1, "", "__init__"], [399, 4, 1, "", "bindings"], [399, 4, 1, "", "from_production"], [399, 4, 1, "", "move_dot_forward"], [399, 4, 1, "", "next_with_bindings"], [399, 4, 1, "", "variables"]], "nltk.parse.featurechart.InstantiateVarsChart": [[399, 4, 1, "", "__init__"], [399, 4, 1, "", "initialize"], [399, 4, 1, "", "insert"], [399, 4, 1, "", "inst_vars"], [399, 4, 1, "", "instantiate_edge"]], "nltk.parse.generate": [[400, 1, 1, "", "demo"], [400, 1, 1, "", "generate"]], "nltk.parse.malt": [[401, 3, 1, "", "MaltParser"], [401, 1, 1, "", "find_malt_model"], [401, 1, 1, "", "find_maltparser"], [401, 1, 1, "", "malt_regex_tagger"]], "nltk.parse.malt.MaltParser": [[401, 4, 1, "", "__init__"], [401, 4, 1, "", "generate_malt_command"], [401, 4, 1, "", "parse_sents"], [401, 4, 1, "", "parse_tagged_sents"], [401, 4, 1, "", "train"], [401, 4, 1, "", "train_from_file"]], "nltk.parse.nonprojectivedependencyparser": [[379, 3, 1, "", "DemoScorer"], [379, 3, 1, "", "DependencyScorerI"], [379, 3, 1, "", "NaiveBayesDependencyScorer"], [379, 3, 1, "", "NonprojectiveDependencyParser"], [379, 3, 1, "", "ProbabilisticNonprojectiveParser"], [379, 1, 1, "", "demo"], [379, 1, 1, "", "hall_demo"], [379, 1, 1, "", "nonprojective_conll_parse_demo"], [379, 1, 1, "", "rule_based_demo"]], "nltk.parse.nonprojectivedependencyparser.DemoScorer": [[379, 4, 1, "", "score"], [379, 4, 1, "", "train"]], "nltk.parse.nonprojectivedependencyparser.DependencyScorerI": [[379, 4, 1, "", "__init__"], [379, 4, 1, "", "score"], [379, 4, 1, "", "train"]], "nltk.parse.nonprojectivedependencyparser.NaiveBayesDependencyScorer": [[379, 4, 1, "", "__init__"], [379, 4, 1, "", "score"], [379, 4, 1, "", "train"]], "nltk.parse.nonprojectivedependencyparser.NonprojectiveDependencyParser": [[379, 4, 1, "", "__init__"], [379, 4, 1, "", "parse"]], "nltk.parse.nonprojectivedependencyparser.ProbabilisticNonprojectiveParser": [[379, 4, 1, "", "__init__"], [379, 4, 1, "", "best_incoming_arc"], [379, 4, 1, "", "collapse_nodes"], [379, 4, 1, "", "compute_max_subtract_score"], [379, 4, 1, "", "compute_original_indexes"], [379, 4, 1, "", "initialize_edge_scores"], [379, 4, 1, "", "original_best_arc"], [379, 4, 1, "", "parse"], [379, 4, 1, "", "train"], [379, 4, 1, "", "update_edge_scores"]], "nltk.parse.pchart": [[402, 3, 1, "", "BottomUpProbabilisticChartParser"], [402, 3, 1, "", "InsideChartParser"], [402, 3, 1, "", "LongestChartParser"], [402, 3, 1, "", "ProbabilisticBottomUpInitRule"], [402, 3, 1, "", "ProbabilisticBottomUpPredictRule"], [402, 3, 1, "", "ProbabilisticFundamentalRule"], [402, 3, 1, "", "ProbabilisticLeafEdge"], [402, 3, 1, "", "ProbabilisticTreeEdge"], [402, 3, 1, "", "RandomChartParser"], [402, 3, 1, "", "SingleEdgeProbabilisticFundamentalRule"], [402, 3, 1, "", "UnsortedChartParser"], [402, 1, 1, "", "demo"]], "nltk.parse.pchart.BottomUpProbabilisticChartParser": [[402, 4, 1, "", "__init__"], [402, 4, 1, "", "grammar"], [402, 4, 1, "", "parse"], [402, 4, 1, "", "sort_queue"], [402, 4, 1, "", "trace"]], "nltk.parse.pchart.InsideChartParser": [[402, 4, 1, "", "sort_queue"]], "nltk.parse.pchart.LongestChartParser": [[402, 4, 1, "", "sort_queue"]], "nltk.parse.pchart.ProbabilisticBottomUpInitRule": [[402, 5, 1, "", "NUM_EDGES"], [402, 4, 1, "", "apply"]], "nltk.parse.pchart.ProbabilisticBottomUpPredictRule": [[402, 5, 1, "", "NUM_EDGES"], [402, 4, 1, "", "apply"]], "nltk.parse.pchart.ProbabilisticFundamentalRule": [[402, 5, 1, "", "NUM_EDGES"], [402, 4, 1, "", "apply"]], "nltk.parse.pchart.ProbabilisticLeafEdge": [[402, 4, 1, "", "prob"]], "nltk.parse.pchart.ProbabilisticTreeEdge": [[402, 4, 1, "", "__init__"], [402, 4, 1, "", "from_production"], [402, 4, 1, "", "prob"]], "nltk.parse.pchart.RandomChartParser": [[402, 4, 1, "", "sort_queue"]], "nltk.parse.pchart.SingleEdgeProbabilisticFundamentalRule": [[402, 5, 1, "", "NUM_EDGES"], [402, 4, 1, "", "apply"]], "nltk.parse.pchart.UnsortedChartParser": [[402, 4, 1, "", "sort_queue"]], "nltk.parse.projectivedependencyparser": [[382, 3, 1, "", "ChartCell"], [382, 3, 1, "", "DependencySpan"], [382, 3, 1, "", "ProbabilisticProjectiveDependencyParser"], [382, 3, 1, "", "ProjectiveDependencyParser"], [382, 1, 1, "", "arity_parse_demo"], [382, 1, 1, "", "demo"], [382, 1, 1, "", "projective_prob_parse_demo"], [382, 1, 1, "", "projective_rule_parse_demo"]], "nltk.parse.projectivedependencyparser.ChartCell": [[382, 4, 1, "", "__init__"], [382, 4, 1, "", "add"]], "nltk.parse.projectivedependencyparser.DependencySpan": [[382, 4, 1, "", "__init__"], [382, 4, 1, "", "head_index"]], "nltk.parse.projectivedependencyparser.ProbabilisticProjectiveDependencyParser": [[382, 4, 1, "", "__init__"], [382, 4, 1, "", "compute_prob"], [382, 4, 1, "", "concatenate"], [382, 4, 1, "", "parse"], [382, 4, 1, "", "train"]], "nltk.parse.projectivedependencyparser.ProjectiveDependencyParser": [[382, 4, 1, "", "__init__"], [382, 4, 1, "", "concatenate"], [382, 4, 1, "", "parse"]], "nltk.parse.recursivedescent": [[403, 3, 1, "", "RecursiveDescentParser"], [403, 3, 1, "", "SteppingRecursiveDescentParser"], [403, 1, 1, "", "demo"]], "nltk.parse.recursivedescent.RecursiveDescentParser": [[403, 4, 1, "", "__init__"], [403, 4, 1, "", "grammar"], [403, 4, 1, "", "parse"], [403, 4, 1, "", "trace"]], "nltk.parse.recursivedescent.SteppingRecursiveDescentParser": [[403, 4, 1, "", "__init__"], [403, 4, 1, "", "backtrack"], [403, 4, 1, "", "currently_complete"], [403, 4, 1, "", "expand"], [403, 4, 1, "", "expandable_productions"], [403, 4, 1, "", "frontier"], [403, 4, 1, "", "initialize"], [403, 4, 1, "", "match"], [403, 4, 1, "", "parse"], [403, 4, 1, "", "parses"], [403, 4, 1, "", "remaining_text"], [403, 4, 1, "", "set_grammar"], [403, 4, 1, "", "step"], [403, 4, 1, "", "tree"], [403, 4, 1, "", "untried_expandable_productions"], [403, 4, 1, "", "untried_match"]], "nltk.parse.shiftreduce": [[404, 3, 1, "", "ShiftReduceParser"], [404, 3, 1, "", "SteppingShiftReduceParser"], [404, 1, 1, "", "demo"]], "nltk.parse.shiftreduce.ShiftReduceParser": [[404, 4, 1, "", "__init__"], [404, 4, 1, "", "grammar"], [404, 4, 1, "", "parse"], [404, 4, 1, "", "trace"]], "nltk.parse.shiftreduce.SteppingShiftReduceParser": [[404, 4, 1, "", "__init__"], [404, 4, 1, "", "initialize"], [404, 4, 1, "", "parse"], [404, 4, 1, "", "parses"], [404, 4, 1, "", "reduce"], [404, 4, 1, "", "reducible_productions"], [404, 4, 1, "", "remaining_text"], [404, 4, 1, "", "set_grammar"], [404, 4, 1, "", "shift"], [404, 4, 1, "", "stack"], [404, 4, 1, "", "step"], [404, 4, 1, "", "undo"]], "nltk.parse.stanford": [[405, 3, 1, "", "GenericStanfordParser"], [405, 3, 1, "", "StanfordDependencyParser"], [405, 3, 1, "", "StanfordNeuralDependencyParser"], [405, 3, 1, "", "StanfordParser"]], "nltk.parse.stanford.GenericStanfordParser": [[405, 4, 1, "", "__init__"], [405, 4, 1, "", "parse_sents"], [405, 4, 1, "", "raw_parse"], [405, 4, 1, "", "raw_parse_sents"], [405, 4, 1, "", "tagged_parse"], [405, 4, 1, "", "tagged_parse_sents"]], "nltk.parse.stanford.StanfordDependencyParser": [[405, 4, 1, "", "__init__"]], "nltk.parse.stanford.StanfordNeuralDependencyParser": [[405, 4, 1, "", "__init__"], [405, 4, 1, "", "tagged_parse_sents"]], "nltk.parse.stanford.StanfordParser": [[405, 4, 1, "", "__init__"]], "nltk.parse.transitionparser": [[390, 3, 1, "", "Configuration"], [390, 3, 1, "", "Transition"], [390, 3, 1, "", "TransitionParser"], [390, 1, 1, "", "demo"]], "nltk.parse.transitionparser.Configuration": [[390, 4, 1, "", "__init__"], [390, 4, 1, "", "extract_features"]], "nltk.parse.transitionparser.Transition": [[390, 5, 1, "", "LEFT_ARC"], [390, 5, 1, "", "REDUCE"], [390, 5, 1, "", "RIGHT_ARC"], [390, 5, 1, "", "SHIFT"], [390, 4, 1, "", "__init__"], [390, 4, 1, "", "left_arc"], [390, 4, 1, "", "reduce"], [390, 4, 1, "", "right_arc"], [390, 4, 1, "", "shift"]], "nltk.parse.transitionparser.TransitionParser": [[390, 5, 1, "", "ARC_EAGER"], [390, 5, 1, "", "ARC_STANDARD"], [390, 4, 1, "", "__init__"], [390, 4, 1, "", "parse"], [390, 4, 1, "", "train"]], "nltk.parse.util": [[406, 3, 1, "", "TestGrammar"], [406, 1, 1, "", "extract_test_sentences"], [406, 1, 1, "", "load_parser"], [406, 1, 1, "", "taggedsent_to_conll"], [406, 1, 1, "", "taggedsents_to_conll"]], "nltk.parse.util.TestGrammar": [[406, 4, 1, "", "__init__"], [406, 4, 1, "", "run"]], "nltk.parse.viterbi": [[407, 3, 1, "", "ViterbiParser"], [407, 1, 1, "", "demo"]], "nltk.parse.viterbi.ViterbiParser": [[407, 4, 1, "", "__init__"], [407, 4, 1, "", "grammar"], [407, 4, 1, "", "parse"], [407, 4, 1, "", "trace"]], "nltk.probability": [[409, 3, 1, "", "ConditionalFreqDist"], [410, 3, 1, "", "ConditionalProbDist"], [408, 3, 1, "", "ConditionalProbDistI"], [411, 3, 1, "", "CrossValidationProbDist"], [412, 3, 1, "", "DictionaryConditionalProbDist"], [413, 3, 1, "", "DictionaryProbDist"], [414, 3, 1, "", "ELEProbDist"], [415, 3, 1, "", "FreqDist"], [416, 3, 1, "", "HeldoutProbDist"], [408, 3, 1, "", "ImmutableProbabilisticMixIn"], [417, 3, 1, "", "KneserNeyProbDist"], [418, 3, 1, "", "LaplaceProbDist"], [419, 3, 1, "", "LidstoneProbDist"], [420, 3, 1, "", "MLEProbDist"], [421, 3, 1, "", "MutableProbDist"], [408, 3, 1, "", "ProbDistI"], [408, 3, 1, "", "ProbabilisticMixIn"], [422, 3, 1, "", "SimpleGoodTuringProbDist"], [423, 3, 1, "", "UniformProbDist"], [424, 3, 1, "", "WittenBellProbDist"], [425, 1, 1, "", "add_logs"], [426, 1, 1, "", "entropy"], [427, 1, 1, "", "log_likelihood"], [428, 1, 1, "", "sum_logs"]], "nltk.probability.ConditionalFreqDist": [[409, 4, 1, "", "N"], [409, 4, 1, "", "__init__"], [409, 4, 1, "", "__new__"], [409, 4, 1, "", "clear"], [409, 4, 1, "", "conditions"], [409, 4, 1, "", "copy"], [409, 4, 1, "", "deepcopy"], [409, 5, 1, "", "default_factory"], [409, 4, 1, "", "fromkeys"], [409, 4, 1, "", "get"], [409, 4, 1, "", "items"], [409, 4, 1, "", "keys"], [409, 4, 1, "", "plot"], [409, 4, 1, "", "pop"], [409, 4, 1, "", "popitem"], [409, 4, 1, "", "setdefault"], [409, 4, 1, "", "tabulate"], [409, 4, 1, "", "update"], [409, 4, 1, "", "values"]], "nltk.probability.ConditionalProbDist": [[410, 4, 1, "", "__init__"], [410, 4, 1, "", "__new__"], [410, 4, 1, "", "clear"], [410, 4, 1, "", "conditions"], [410, 4, 1, "", "copy"], [410, 4, 1, "", "fromkeys"], [410, 4, 1, "", "get"], [410, 4, 1, "", "items"], [410, 4, 1, "", "keys"], [410, 4, 1, "", "pop"], [410, 4, 1, "", "popitem"], [410, 4, 1, "", "setdefault"], [410, 4, 1, "", "update"], [410, 4, 1, "", "values"]], "nltk.probability.ConditionalProbDistI": [[408, 4, 1, "", "__init__"], [408, 4, 1, "", "conditions"]], "nltk.probability.CrossValidationProbDist": [[411, 5, 1, "", "SUM_TO_ONE"], [411, 4, 1, "", "__init__"], [411, 4, 1, "", "discount"], [411, 4, 1, "", "freqdists"], [411, 4, 1, "", "generate"], [411, 4, 1, "", "logprob"], [411, 4, 1, "", "max"], [411, 4, 1, "", "prob"], [411, 4, 1, "", "samples"]], "nltk.probability.DictionaryConditionalProbDist": [[412, 4, 1, "", "__init__"], [412, 4, 1, "", "__new__"], [412, 4, 1, "", "clear"], [412, 4, 1, "", "conditions"], [412, 4, 1, "", "copy"], [412, 4, 1, "", "fromkeys"], [412, 4, 1, "", "get"], [412, 4, 1, "", "items"], [412, 4, 1, "", "keys"], [412, 4, 1, "", "pop"], [412, 4, 1, "", "popitem"], [412, 4, 1, "", "setdefault"], [412, 4, 1, "", "update"], [412, 4, 1, "", "values"]], "nltk.probability.DictionaryProbDist": [[413, 5, 1, "", "SUM_TO_ONE"], [413, 4, 1, "", "__init__"], [413, 4, 1, "", "discount"], [413, 4, 1, "", "generate"], [413, 4, 1, "", "logprob"], [413, 4, 1, "", "max"], [413, 4, 1, "", "prob"], [413, 4, 1, "", "samples"]], "nltk.probability.ELEProbDist": [[414, 5, 1, "", "SUM_TO_ONE"], [414, 4, 1, "", "__init__"], [414, 4, 1, "", "discount"], [414, 4, 1, "", "freqdist"], [414, 4, 1, "", "generate"], [414, 4, 1, "", "logprob"], [414, 4, 1, "", "max"], [414, 4, 1, "", "prob"], [414, 4, 1, "", "samples"]], "nltk.probability.FreqDist": [[415, 4, 1, "", "B"], [415, 4, 1, "", "N"], [415, 4, 1, "", "Nr"], [415, 4, 1, "", "__init__"], [415, 4, 1, "", "__new__"], [415, 4, 1, "", "clear"], [415, 4, 1, "", "copy"], [415, 4, 1, "", "elements"], [415, 4, 1, "", "freq"], [415, 4, 1, "", "fromkeys"], [415, 4, 1, "", "get"], [415, 4, 1, "", "hapaxes"], [415, 4, 1, "", "items"], [415, 4, 1, "", "keys"], [415, 4, 1, "", "max"], [415, 4, 1, "", "most_common"], [415, 4, 1, "", "pformat"], [415, 4, 1, "", "plot"], [415, 4, 1, "", "pop"], [415, 4, 1, "", "popitem"], [415, 4, 1, "", "pprint"], [415, 4, 1, "", "r_Nr"], [415, 4, 1, "", "setdefault"], [415, 4, 1, "", "subtract"], [415, 4, 1, "", "tabulate"], [415, 4, 1, "", "update"], [415, 4, 1, "", "values"]], "nltk.probability.HeldoutProbDist": [[416, 5, 1, "", "SUM_TO_ONE"], [416, 4, 1, "", "__init__"], [416, 4, 1, "", "base_fdist"], [416, 4, 1, "", "discount"], [416, 4, 1, "", "generate"], [416, 4, 1, "", "heldout_fdist"], [416, 4, 1, "", "logprob"], [416, 4, 1, "", "max"], [416, 4, 1, "", "prob"], [416, 4, 1, "", "samples"]], "nltk.probability.ImmutableProbabilisticMixIn": [[408, 4, 1, "", "set_logprob"], [408, 4, 1, "", "set_prob"]], "nltk.probability.KneserNeyProbDist": [[417, 5, 1, "", "SUM_TO_ONE"], [417, 4, 1, "", "__init__"], [417, 4, 1, "", "discount"], [417, 4, 1, "", "generate"], [417, 4, 1, "", "logprob"], [417, 4, 1, "", "max"], [417, 4, 1, "", "prob"], [417, 4, 1, "", "samples"], [417, 4, 1, "", "set_discount"]], "nltk.probability.LaplaceProbDist": [[418, 5, 1, "", "SUM_TO_ONE"], [418, 4, 1, "", "__init__"], [418, 4, 1, "", "discount"], [418, 4, 1, "", "freqdist"], [418, 4, 1, "", "generate"], [418, 4, 1, "", "logprob"], [418, 4, 1, "", "max"], [418, 4, 1, "", "prob"], [418, 4, 1, "", "samples"]], "nltk.probability.LidstoneProbDist": [[419, 5, 1, "", "SUM_TO_ONE"], [419, 4, 1, "", "__init__"], [419, 4, 1, "", "discount"], [419, 4, 1, "", "freqdist"], [419, 4, 1, "", "generate"], [419, 4, 1, "", "logprob"], [419, 4, 1, "", "max"], [419, 4, 1, "", "prob"], [419, 4, 1, "", "samples"]], "nltk.probability.MLEProbDist": [[420, 5, 1, "", "SUM_TO_ONE"], [420, 4, 1, "", "__init__"], [420, 4, 1, "", "discount"], [420, 4, 1, "", "freqdist"], [420, 4, 1, "", "generate"], [420, 4, 1, "", "logprob"], [420, 4, 1, "", "max"], [420, 4, 1, "", "prob"], [420, 4, 1, "", "samples"]], "nltk.probability.MutableProbDist": [[421, 5, 1, "", "SUM_TO_ONE"], [421, 4, 1, "", "__init__"], [421, 4, 1, "", "discount"], [421, 4, 1, "", "generate"], [421, 4, 1, "", "logprob"], [421, 4, 1, "", "max"], [421, 4, 1, "", "prob"], [421, 4, 1, "", "samples"], [421, 4, 1, "", "update"]], "nltk.probability.ProbDistI": [[408, 5, 1, "", "SUM_TO_ONE"], [408, 4, 1, "", "__init__"], [408, 4, 1, "", "discount"], [408, 4, 1, "", "generate"], [408, 4, 1, "", "logprob"], [408, 4, 1, "", "max"], [408, 4, 1, "", "prob"], [408, 4, 1, "", "samples"]], "nltk.probability.ProbabilisticMixIn": [[408, 4, 1, "", "__init__"], [408, 4, 1, "", "logprob"], [408, 4, 1, "", "prob"], [408, 4, 1, "", "set_logprob"], [408, 4, 1, "", "set_prob"]], "nltk.probability.SimpleGoodTuringProbDist": [[422, 5, 1, "", "SUM_TO_ONE"], [422, 4, 1, "", "__init__"], [422, 4, 1, "", "check"], [422, 4, 1, "", "discount"], [422, 4, 1, "", "find_best_fit"], [422, 4, 1, "", "freqdist"], [422, 4, 1, "", "generate"], [422, 4, 1, "", "logprob"], [422, 4, 1, "", "max"], [422, 4, 1, "", "prob"], [422, 4, 1, "", "samples"], [422, 4, 1, "", "smoothedNr"]], "nltk.probability.UniformProbDist": [[423, 5, 1, "", "SUM_TO_ONE"], [423, 4, 1, "", "__init__"], [423, 4, 1, "", "discount"], [423, 4, 1, "", "generate"], [423, 4, 1, "", "logprob"], [423, 4, 1, "", "max"], [423, 4, 1, "", "prob"], [423, 4, 1, "", "samples"]], "nltk.probability.WittenBellProbDist": [[424, 5, 1, "", "SUM_TO_ONE"], [424, 4, 1, "", "__init__"], [424, 4, 1, "", "discount"], [424, 4, 1, "", "freqdist"], [424, 4, 1, "", "generate"], [424, 4, 1, "", "logprob"], [424, 4, 1, "", "max"], [424, 4, 1, "", "prob"], [424, 4, 1, "", "samples"]], "nltk.sem": [[430, 3, 1, "", "ApplicationExpression"], [431, 3, 1, "", "Assignment"], [433, 3, 1, "", "DRS"], [434, 3, 1, "", "DrtExpression"], [435, 3, 1, "", "Expression"], [436, 3, 1, "", "FStructure"], [437, 7, 1, "", "LogicalExpressionException"], [438, 3, 1, "", "Model"], [439, 7, 1, "", "Undefined"], [440, 3, 1, "", "Valuation"], [441, 3, 1, "", "Variable"], [442, 1, 1, "", "arity"], [443, 1, 1, "", "binding_ops"], [444, 1, 1, "", "boolean_ops"], [432, 0, 0, "-", "boxer"], [445, 0, 0, "-", "chat80"], [446, 1, 1, "", "clause"], [447, 0, 0, "-", "cooper_storage"], [448, 0, 0, "-", "drt"], [449, 0, 0, "-", "drt_glue_demo"], [450, 1, 1, "", "equality_preds"], [451, 0, 0, "-", "evaluate"], [452, 1, 1, "", "evaluate_sents"], [453, 1, 1, "", "extract_rels"], [454, 0, 0, "-", "glue"], [455, 0, 0, "-", "hole"], [456, 1, 1, "", "interpret_sents"], [457, 1, 1, "", "is_rel"], [458, 0, 0, "-", "lfg"], [459, 0, 0, "-", "linearlogic"], [460, 0, 0, "-", "logic"], [461, 1, 1, "", "parse_sents"], [462, 1, 1, "", "read_logic"], [463, 1, 1, "", "read_valuation"], [464, 0, 0, "-", "relextract"], [465, 1, 1, "", "root_semrep"], [466, 1, 1, "", "rtuple"], [467, 1, 1, "", "set2rel"], [468, 0, 0, "-", "skolemize"], [469, 0, 0, "-", "util"]], "nltk.sem.ApplicationExpression": [[430, 4, 1, "", "__init__"], [430, 4, 1, "", "applyto"], [430, 6, 1, "", "args"], [430, 4, 1, "", "constants"], [430, 4, 1, "", "equiv"], [430, 4, 1, "", "findtype"], [430, 4, 1, "", "free"], [430, 4, 1, "", "fromstring"], [430, 4, 1, "", "is_atom"], [430, 4, 1, "", "make_VariableExpression"], [430, 4, 1, "", "negate"], [430, 4, 1, "", "normalize"], [430, 6, 1, "", "pred"], [430, 4, 1, "", "predicates"], [430, 4, 1, "", "replace"], [430, 4, 1, "", "simplify"], [430, 4, 1, "", "substitute_bindings"], [430, 6, 1, "", "type"], [430, 4, 1, "", "typecheck"], [430, 4, 1, "", "uncurry"], [430, 4, 1, "", "variables"], [430, 4, 1, "", "visit"], [430, 4, 1, "", "visit_structured"]], "nltk.sem.Assignment": [[431, 4, 1, "", "__init__"], [431, 4, 1, "", "__new__"], [431, 4, 1, "", "add"], [431, 4, 1, "", "clear"], [431, 4, 1, "", "copy"], [431, 4, 1, "", "fromkeys"], [431, 4, 1, "", "get"], [431, 4, 1, "", "items"], [431, 4, 1, "", "keys"], [431, 4, 1, "", "pop"], [431, 4, 1, "", "popitem"], [431, 4, 1, "", "purge"], [431, 4, 1, "", "setdefault"], [431, 4, 1, "", "update"], [431, 4, 1, "", "values"]], "nltk.sem.DRS": [[433, 4, 1, "", "__init__"], [433, 4, 1, "", "applyto"], [433, 4, 1, "", "constants"], [433, 4, 1, "", "draw"], [433, 4, 1, "", "eliminate_equality"], [433, 4, 1, "", "equiv"], [433, 4, 1, "", "findtype"], [433, 4, 1, "", "fol"], [433, 4, 1, "", "free"], [433, 4, 1, "", "fromstring"], [433, 4, 1, "", "get_refs"], [433, 4, 1, "", "is_pronoun_function"], [433, 4, 1, "", "make_EqualityExpression"], [433, 4, 1, "", "make_VariableExpression"], [433, 4, 1, "", "negate"], [433, 4, 1, "", "normalize"], [433, 4, 1, "", "predicates"], [433, 4, 1, "", "pretty_format"], [433, 4, 1, "", "pretty_print"], [433, 4, 1, "", "replace"], [433, 4, 1, "", "resolve_anaphora"], [433, 4, 1, "", "simplify"], [433, 4, 1, "", "substitute_bindings"], [433, 6, 1, "", "type"], [433, 4, 1, "", "typecheck"], [433, 4, 1, "", "variables"], [433, 4, 1, "", "visit"], [433, 4, 1, "", "visit_structured"]], "nltk.sem.DrtExpression": [[434, 4, 1, "", "applyto"], [434, 4, 1, "", "draw"], [434, 4, 1, "", "eliminate_equality"], [434, 4, 1, "", "equiv"], [434, 4, 1, "", "fromstring"], [434, 4, 1, "", "get_refs"], [434, 4, 1, "", "is_pronoun_function"], [434, 4, 1, "", "make_EqualityExpression"], [434, 4, 1, "", "make_VariableExpression"], [434, 4, 1, "", "pretty_format"], [434, 4, 1, "", "pretty_print"], [434, 4, 1, "", "resolve_anaphora"], [434, 6, 1, "", "type"], [434, 4, 1, "", "typecheck"]], "nltk.sem.Expression": [[435, 4, 1, "", "applyto"], [435, 4, 1, "", "constants"], [435, 4, 1, "", "equiv"], [435, 4, 1, "", "findtype"], [435, 4, 1, "", "free"], [435, 4, 1, "", "fromstring"], [435, 4, 1, "", "make_VariableExpression"], [435, 4, 1, "", "negate"], [435, 4, 1, "", "normalize"], [435, 4, 1, "", "predicates"], [435, 4, 1, "", "replace"], [435, 4, 1, "", "simplify"], [435, 4, 1, "", "substitute_bindings"], [435, 4, 1, "", "typecheck"], [435, 4, 1, "", "variables"], [435, 4, 1, "", "visit"], [435, 4, 1, "", "visit_structured"]], "nltk.sem.FStructure": [[436, 4, 1, "", "__init__"], [436, 4, 1, "", "__new__"], [436, 4, 1, "", "clear"], [436, 4, 1, "", "copy"], [436, 4, 1, "", "fromkeys"], [436, 4, 1, "", "get"], [436, 4, 1, "", "items"], [436, 4, 1, "", "keys"], [436, 4, 1, "", "pop"], [436, 4, 1, "", "popitem"], [436, 4, 1, "", "pretty_format"], [436, 4, 1, "", "read_depgraph"], [436, 4, 1, "", "safeappend"], [436, 4, 1, "", "setdefault"], [436, 4, 1, "", "to_depgraph"], [436, 4, 1, "", "to_glueformula_list"], [436, 4, 1, "", "update"], [436, 4, 1, "", "values"]], "nltk.sem.LogicalExpressionException": [[437, 4, 1, "", "__init__"], [437, 4, 1, "", "__new__"]], "nltk.sem.Model": [[438, 4, 1, "", "__init__"], [438, 4, 1, "", "evaluate"], [438, 4, 1, "", "i"], [438, 4, 1, "", "satisfiers"], [438, 4, 1, "", "satisfy"]], "nltk.sem.Undefined": [[439, 4, 1, "", "__init__"], [439, 4, 1, "", "__new__"]], "nltk.sem.Valuation": [[440, 4, 1, "", "__init__"], [440, 4, 1, "", "__new__"], [440, 4, 1, "", "clear"], [440, 4, 1, "", "copy"], [440, 6, 1, "", "domain"], [440, 4, 1, "", "fromkeys"], [440, 4, 1, "", "fromstring"], [440, 4, 1, "", "get"], [440, 4, 1, "", "items"], [440, 4, 1, "", "keys"], [440, 4, 1, "", "pop"], [440, 4, 1, "", "popitem"], [440, 4, 1, "", "setdefault"], [440, 6, 1, "", "symbols"], [440, 4, 1, "", "update"], [440, 4, 1, "", "values"]], "nltk.sem.Variable": [[441, 4, 1, "", "__init__"], [441, 4, 1, "", "substitute_bindings"]], "nltk.sem.boxer": [[432, 3, 1, "", "AbstractBoxerDrs"], [432, 3, 1, "", "Boxer"], [432, 3, 1, "", "BoxerCard"], [432, 3, 1, "", "BoxerDrs"], [432, 3, 1, "", "BoxerDrsParser"], [432, 3, 1, "", "BoxerEq"], [432, 3, 1, "", "BoxerIndexed"], [432, 3, 1, "", "BoxerNamed"], [432, 3, 1, "", "BoxerNot"], [432, 3, 1, "", "BoxerOr"], [432, 3, 1, "", "BoxerOutputDrsParser"], [432, 3, 1, "", "BoxerPred"], [432, 3, 1, "", "BoxerProp"], [432, 3, 1, "", "BoxerRel"], [432, 3, 1, "", "BoxerWhq"], [432, 3, 1, "", "NltkDrtBoxerDrsInterpreter"], [432, 3, 1, "", "PassthroughBoxerDrsInterpreter"], [432, 7, 1, "", "UnparseableInputException"]], "nltk.sem.boxer.AbstractBoxerDrs": [[432, 4, 1, "", "atoms"], [432, 4, 1, "", "clean"], [432, 4, 1, "", "renumber_sentences"], [432, 4, 1, "", "variable_types"], [432, 4, 1, "", "variables"]], "nltk.sem.boxer.Boxer": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "interpret"], [432, 4, 1, "", "interpret_multi"], [432, 4, 1, "", "interpret_multi_sents"], [432, 4, 1, "", "interpret_sents"], [432, 4, 1, "", "set_bin_dir"]], "nltk.sem.boxer.BoxerCard": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.BoxerDrs": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "atoms"], [432, 4, 1, "", "clean"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.BoxerDrsParser": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "attempt_adjuncts"], [432, 4, 1, "", "get_all_symbols"], [432, 4, 1, "", "get_next_token_variable"], [432, 4, 1, "", "handle"], [432, 4, 1, "", "nullableIntToken"]], "nltk.sem.boxer.BoxerEq": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "atoms"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.BoxerIndexed": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "atoms"]], "nltk.sem.boxer.BoxerNamed": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "change_var"], [432, 4, 1, "", "clean"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.BoxerNot": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "atoms"], [432, 4, 1, "", "clean"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.BoxerOr": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "atoms"], [432, 4, 1, "", "clean"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.BoxerOutputDrsParser": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "attempt_adjuncts"], [432, 4, 1, "", "get_all_symbols"], [432, 4, 1, "", "handle"], [432, 4, 1, "", "handle_condition"], [432, 4, 1, "", "handle_drs"], [432, 4, 1, "", "parse"], [432, 4, 1, "", "parse_condition"], [432, 4, 1, "", "parse_drs"], [432, 4, 1, "", "parse_index"], [432, 4, 1, "", "parse_variable"]], "nltk.sem.boxer.BoxerPred": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "change_var"], [432, 4, 1, "", "clean"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.BoxerProp": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "atoms"], [432, 4, 1, "", "clean"], [432, 4, 1, "", "referenced_labels"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.BoxerRel": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "clean"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.BoxerWhq": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "atoms"], [432, 4, 1, "", "clean"], [432, 4, 1, "", "renumber_sentences"]], "nltk.sem.boxer.NltkDrtBoxerDrsInterpreter": [[432, 4, 1, "", "__init__"], [432, 4, 1, "", "interpret"]], "nltk.sem.boxer.PassthroughBoxerDrsInterpreter": [[432, 4, 1, "", "interpret"]], "nltk.sem.chat80": [[445, 3, 1, "", "Concept"], [445, 1, 1, "", "binary_concept"], [445, 1, 1, "", "cities2table"], [445, 1, 1, "", "clause2concepts"], [445, 1, 1, "", "concepts"], [445, 1, 1, "", "label_indivs"], [445, 1, 1, "", "main"], [445, 1, 1, "", "make_lex"], [445, 1, 1, "", "make_valuation"], [445, 1, 1, "", "process_bundle"], [445, 1, 1, "", "sql_demo"], [445, 1, 1, "", "sql_query"], [445, 1, 1, "", "unary_concept"], [445, 1, 1, "", "val_dump"], [445, 1, 1, "", "val_load"]], "nltk.sem.chat80.Concept": [[445, 4, 1, "", "__init__"], [445, 4, 1, "", "augment"], [445, 4, 1, "", "close"]], "nltk.sem.cooper_storage": [[447, 3, 1, "", "CooperStore"], [447, 1, 1, "", "demo"], [447, 1, 1, "", "parse_with_bindops"]], "nltk.sem.cooper_storage.CooperStore": [[447, 4, 1, "", "__init__"], [447, 4, 1, "", "s_retrieve"]], "nltk.sem.drt": [[448, 7, 1, "", "AnaphoraResolutionException"], [448, 3, 1, "", "DRS"], [448, 3, 1, "", "DrsDrawer"], [448, 3, 1, "", "DrtAbstractVariableExpression"], [448, 3, 1, "", "DrtApplicationExpression"], [448, 3, 1, "", "DrtBinaryExpression"], [448, 3, 1, "", "DrtBooleanExpression"], [448, 3, 1, "", "DrtConcatenation"], [448, 3, 1, "", "DrtConstantExpression"], [448, 3, 1, "", "DrtEqualityExpression"], [448, 3, 1, "", "DrtEventVariableExpression"], [448, 3, 1, "", "DrtExpression"], [448, 3, 1, "", "DrtFunctionVariableExpression"], [448, 3, 1, "", "DrtIndividualVariableExpression"], [448, 3, 1, "", "DrtLambdaExpression"], [448, 3, 1, "", "DrtNegatedExpression"], [448, 3, 1, "", "DrtOrExpression"], [448, 3, 1, "", "DrtParser"], [448, 3, 1, "", "DrtProposition"], [448, 3, 1, "", "DrtTokens"], [448, 1, 1, "", "DrtVariableExpression"], [448, 3, 1, "", "PossibleAntecedents"], [448, 1, 1, "", "demo"], [448, 1, 1, "", "resolve_anaphora"], [448, 1, 1, "", "test_draw"]], "nltk.sem.drt.DRS": [[448, 4, 1, "", "__init__"], [448, 4, 1, "", "eliminate_equality"], [448, 4, 1, "", "fol"], [448, 4, 1, "", "free"], [448, 4, 1, "", "get_refs"], [448, 4, 1, "", "replace"], [448, 4, 1, "", "visit"], [448, 4, 1, "", "visit_structured"]], "nltk.sem.drt.DrsDrawer": [[448, 5, 1, "", "BUFFER"], [448, 5, 1, "", "OUTERSPACE"], [448, 5, 1, "", "TOPSPACE"], [448, 4, 1, "", "__init__"], [448, 4, 1, "", "draw"]], "nltk.sem.drt.DrtAbstractVariableExpression": [[448, 4, 1, "", "eliminate_equality"], [448, 4, 1, "", "fol"], [448, 4, 1, "", "get_refs"]], "nltk.sem.drt.DrtApplicationExpression": [[448, 4, 1, "", "fol"], [448, 4, 1, "", "get_refs"]], "nltk.sem.drt.DrtBinaryExpression": [[448, 4, 1, "", "get_refs"]], "nltk.sem.drt.DrtConcatenation": [[448, 4, 1, "", "__init__"], [448, 4, 1, "", "eliminate_equality"], [448, 4, 1, "", "fol"], [448, 4, 1, "", "getOp"], [448, 4, 1, "", "get_refs"], [448, 4, 1, "", "replace"], [448, 4, 1, "", "simplify"], [448, 4, 1, "", "visit"]], "nltk.sem.drt.DrtEqualityExpression": [[448, 4, 1, "", "fol"]], "nltk.sem.drt.DrtExpression": [[448, 4, 1, "", "applyto"], [448, 4, 1, "", "draw"], [448, 4, 1, "", "eliminate_equality"], [448, 4, 1, "", "equiv"], [448, 4, 1, "", "fromstring"], [448, 4, 1, "", "get_refs"], [448, 4, 1, "", "is_pronoun_function"], [448, 4, 1, "", "make_EqualityExpression"], [448, 4, 1, "", "make_VariableExpression"], [448, 4, 1, "", "pretty_format"], [448, 4, 1, "", "pretty_print"], [448, 4, 1, "", "resolve_anaphora"], [448, 6, 1, "", "type"], [448, 4, 1, "", "typecheck"]], "nltk.sem.drt.DrtLambdaExpression": [[448, 4, 1, "", "alpha_convert"], [448, 4, 1, "", "fol"], [448, 4, 1, "", "get_refs"]], "nltk.sem.drt.DrtNegatedExpression": [[448, 4, 1, "", "fol"], [448, 4, 1, "", "get_refs"]], "nltk.sem.drt.DrtOrExpression": [[448, 4, 1, "", "fol"]], "nltk.sem.drt.DrtParser": [[448, 4, 1, "", "__init__"], [448, 4, 1, "", "get_BooleanExpression_factory"], [448, 4, 1, "", "get_all_symbols"], [448, 4, 1, "", "handle"], [448, 4, 1, "", "handle_DRS"], [448, 4, 1, "", "handle_conds"], [448, 4, 1, "", "handle_prop"], [448, 4, 1, "", "handle_refs"], [448, 4, 1, "", "isvariable"], [448, 4, 1, "", "make_ApplicationExpression"], [448, 4, 1, "", "make_BooleanExpression"], [448, 4, 1, "", "make_EqualityExpression"], [448, 4, 1, "", "make_LambdaExpression"], [448, 4, 1, "", "make_NegatedExpression"], [448, 4, 1, "", "make_VariableExpression"]], "nltk.sem.drt.DrtProposition": [[448, 4, 1, "", "__init__"], [448, 4, 1, "", "eliminate_equality"], [448, 4, 1, "", "fol"], [448, 4, 1, "", "get_refs"], [448, 4, 1, "", "replace"], [448, 4, 1, "", "visit"], [448, 4, 1, "", "visit_structured"]], "nltk.sem.drt.DrtTokens": [[448, 5, 1, "", "CLOSE_BRACKET"], [448, 5, 1, "", "COLON"], [448, 5, 1, "", "DRS"], [448, 5, 1, "", "DRS_CONC"], [448, 5, 1, "", "OPEN_BRACKET"], [448, 5, 1, "", "PRONOUN"], [448, 5, 1, "", "PUNCT"], [448, 5, 1, "", "SYMBOLS"], [448, 5, 1, "", "TOKENS"]], "nltk.sem.drt.PossibleAntecedents": [[448, 4, 1, "", "free"], [448, 4, 1, "", "replace"]], "nltk.sem.drt_glue_demo": [[449, 3, 1, "", "DrsWidget"], [449, 3, 1, "", "DrtGlueDemo"], [449, 1, 1, "", "demo"]], "nltk.sem.drt_glue_demo.DrsWidget": [[449, 4, 1, "", "__init__"], [449, 4, 1, "", "clear"], [449, 4, 1, "", "draw"]], "nltk.sem.drt_glue_demo.DrtGlueDemo": [[449, 4, 1, "", "__init__"], [449, 4, 1, "", "about"], [449, 4, 1, "", "destroy"], [449, 4, 1, "", "mainloop"], [449, 4, 1, "", "next"], [449, 4, 1, "", "postscript"], [449, 4, 1, "", "prev"], [449, 4, 1, "", "resize"]], "nltk.sem.evaluate": [[451, 3, 1, "", "Assignment"], [451, 7, 1, "", "Error"], [451, 3, 1, "", "Model"], [451, 7, 1, "", "Undefined"], [451, 3, 1, "", "Valuation"], [451, 1, 1, "", "arity"], [451, 1, 1, "", "demo"], [451, 1, 1, "", "foldemo"], [451, 1, 1, "", "folmodel"], [451, 1, 1, "", "is_rel"], [451, 1, 1, "", "propdemo"], [451, 1, 1, "", "read_valuation"], [451, 1, 1, "", "satdemo"], [451, 1, 1, "", "set2rel"], [451, 1, 1, "", "trace"]], "nltk.sem.evaluate.Assignment": [[451, 4, 1, "", "__init__"], [451, 4, 1, "", "add"], [451, 4, 1, "", "copy"], [451, 4, 1, "", "purge"]], "nltk.sem.evaluate.Model": [[451, 4, 1, "", "__init__"], [451, 4, 1, "", "evaluate"], [451, 4, 1, "", "i"], [451, 4, 1, "", "satisfiers"], [451, 4, 1, "", "satisfy"]], "nltk.sem.evaluate.Valuation": [[451, 4, 1, "", "__init__"], [451, 6, 1, "", "domain"], [451, 4, 1, "", "fromstring"], [451, 6, 1, "", "symbols"]], "nltk.sem.glue": [[454, 3, 1, "", "DrtGlue"], [454, 3, 1, "", "DrtGlueDict"], [454, 3, 1, "", "DrtGlueFormula"], [454, 3, 1, "", "Glue"], [454, 3, 1, "", "GlueDict"], [454, 3, 1, "", "GlueFormula"], [454, 1, 1, "", "demo"]], "nltk.sem.glue.DrtGlue": [[454, 4, 1, "", "__init__"], [454, 4, 1, "", "get_glue_dict"]], "nltk.sem.glue.DrtGlueDict": [[454, 4, 1, "", "get_GlueFormula_factory"]], "nltk.sem.glue.DrtGlueFormula": [[454, 4, 1, "", "__init__"], [454, 4, 1, "", "make_LambdaExpression"], [454, 4, 1, "", "make_VariableExpression"]], "nltk.sem.glue.Glue": [[454, 4, 1, "", "__init__"], [454, 4, 1, "", "dep_parse"], [454, 4, 1, "", "depgraph_to_glue"], [454, 4, 1, "", "get_glue_dict"], [454, 4, 1, "", "get_pos_tagger"], [454, 4, 1, "", "get_readings"], [454, 4, 1, "", "gfl_to_compiled"], [454, 4, 1, "", "parse_to_compiled"], [454, 4, 1, "", "parse_to_meaning"], [454, 4, 1, "", "train_depparser"]], "nltk.sem.glue.GlueDict": [[454, 4, 1, "", "__init__"], [454, 4, 1, "", "add_missing_dependencies"], [454, 4, 1, "", "find_label_name"], [454, 4, 1, "", "get_GlueFormula_factory"], [454, 4, 1, "", "get_glueformulas_from_semtype_entry"], [454, 4, 1, "", "get_label"], [454, 4, 1, "", "get_meaning_formula"], [454, 4, 1, "", "get_semtypes"], [454, 4, 1, "", "initialize_labels"], [454, 4, 1, "", "lookup"], [454, 4, 1, "", "lookup_unique"], [454, 4, 1, "", "read_file"], [454, 4, 1, "", "to_glueformula_list"]], "nltk.sem.glue.GlueFormula": [[454, 4, 1, "", "__init__"], [454, 4, 1, "", "applyto"], [454, 4, 1, "", "compile"], [454, 4, 1, "", "lambda_abstract"], [454, 4, 1, "", "make_LambdaExpression"], [454, 4, 1, "", "make_VariableExpression"], [454, 4, 1, "", "simplify"]], "nltk.sem.hole": [[455, 3, 1, "", "Constants"], [455, 3, 1, "", "Constraint"], [455, 3, 1, "", "HoleSemantics"], [455, 1, 1, "", "hole_readings"]], "nltk.sem.hole.Constants": [[455, 5, 1, "", "ALL"], [455, 5, 1, "", "AND"], [455, 5, 1, "", "EXISTS"], [455, 5, 1, "", "HOLE"], [455, 5, 1, "", "IFF"], [455, 5, 1, "", "IMP"], [455, 5, 1, "", "LABEL"], [455, 5, 1, "", "LEQ"], [455, 5, 1, "", "MAP"], [455, 5, 1, "", "NOT"], [455, 5, 1, "", "OR"], [455, 5, 1, "", "PRED"]], "nltk.sem.hole.Constraint": [[455, 4, 1, "", "__init__"]], "nltk.sem.hole.HoleSemantics": [[455, 4, 1, "", "__init__"], [455, 4, 1, "", "formula_tree"], [455, 4, 1, "", "is_node"], [455, 4, 1, "", "pluggings"]], "nltk.sem.lfg": [[458, 3, 1, "", "FStructure"], [458, 1, 1, "", "demo_read_depgraph"]], "nltk.sem.lfg.FStructure": [[458, 4, 1, "", "pretty_format"], [458, 4, 1, "", "read_depgraph"], [458, 4, 1, "", "safeappend"], [458, 4, 1, "", "to_depgraph"], [458, 4, 1, "", "to_glueformula_list"]], "nltk.sem.linearlogic": [[459, 3, 1, "", "ApplicationExpression"], [459, 3, 1, "", "AtomicExpression"], [459, 3, 1, "", "BindingDict"], [459, 3, 1, "", "ConstantExpression"], [459, 3, 1, "", "Expression"], [459, 3, 1, "", "ImpExpression"], [459, 7, 1, "", "LinearLogicApplicationException"], [459, 3, 1, "", "LinearLogicParser"], [459, 3, 1, "", "Tokens"], [459, 7, 1, "", "UnificationException"], [459, 7, 1, "", "VariableBindingException"], [459, 3, 1, "", "VariableExpression"], [459, 1, 1, "", "demo"]], "nltk.sem.linearlogic.ApplicationExpression": [[459, 4, 1, "", "__init__"], [459, 4, 1, "", "simplify"]], "nltk.sem.linearlogic.AtomicExpression": [[459, 4, 1, "", "__init__"], [459, 4, 1, "", "compile_neg"], [459, 4, 1, "", "compile_pos"], [459, 4, 1, "", "initialize_labels"], [459, 4, 1, "", "simplify"]], "nltk.sem.linearlogic.BindingDict": [[459, 4, 1, "", "__init__"]], "nltk.sem.linearlogic.ConstantExpression": [[459, 4, 1, "", "unify"]], "nltk.sem.linearlogic.Expression": [[459, 4, 1, "", "applyto"], [459, 4, 1, "", "fromstring"]], "nltk.sem.linearlogic.ImpExpression": [[459, 4, 1, "", "__init__"], [459, 4, 1, "", "compile_neg"], [459, 4, 1, "", "compile_pos"], [459, 4, 1, "", "initialize_labels"], [459, 4, 1, "", "simplify"], [459, 4, 1, "", "unify"]], "nltk.sem.linearlogic.LinearLogicParser": [[459, 4, 1, "", "__init__"], [459, 4, 1, "", "attempt_ApplicationExpression"], [459, 4, 1, "", "get_BooleanExpression_factory"], [459, 4, 1, "", "get_all_symbols"], [459, 4, 1, "", "handle"], [459, 4, 1, "", "make_BooleanExpression"], [459, 4, 1, "", "make_VariableExpression"]], "nltk.sem.linearlogic.Tokens": [[459, 5, 1, "", "CLOSE"], [459, 5, 1, "", "IMP"], [459, 5, 1, "", "OPEN"], [459, 5, 1, "", "PUNCT"], [459, 5, 1, "", "TOKENS"]], "nltk.sem.linearlogic.UnificationException": [[459, 4, 1, "", "__init__"]], "nltk.sem.linearlogic.VariableExpression": [[459, 4, 1, "", "unify"]], "nltk.sem.logic": [[460, 3, 1, "", "AbstractVariableExpression"], [460, 3, 1, "", "AllExpression"], [460, 3, 1, "", "AndExpression"], [460, 3, 1, "", "AnyType"], [460, 3, 1, "", "ApplicationExpression"], [460, 3, 1, "", "BasicType"], [460, 3, 1, "", "BinaryExpression"], [460, 3, 1, "", "BooleanExpression"], [460, 3, 1, "", "ComplexType"], [460, 3, 1, "", "ConstantExpression"], [460, 3, 1, "", "EntityType"], [460, 3, 1, "", "EqualityExpression"], [460, 3, 1, "", "EventType"], [460, 3, 1, "", "EventVariableExpression"], [460, 3, 1, "", "ExistsExpression"], [460, 7, 1, "", "ExpectedMoreTokensException"], [460, 3, 1, "", "Expression"], [460, 3, 1, "", "FunctionVariableExpression"], [460, 3, 1, "", "IffExpression"], [460, 7, 1, "", "IllegalTypeException"], [460, 3, 1, "", "ImpExpression"], [460, 7, 1, "", "InconsistentTypeHierarchyException"], [460, 3, 1, "", "IndividualVariableExpression"], [460, 3, 1, "", "IotaExpression"], [460, 3, 1, "", "LambdaExpression"], [460, 3, 1, "", "LogicParser"], [460, 7, 1, "", "LogicalExpressionException"], [460, 3, 1, "", "NegatedExpression"], [460, 3, 1, "", "OrExpression"], [460, 3, 1, "", "QuantifiedExpression"], [460, 3, 1, "", "SubstituteBindingsI"], [460, 3, 1, "", "Tokens"], [460, 3, 1, "", "TruthValueType"], [460, 3, 1, "", "Type"], [460, 7, 1, "", "TypeException"], [460, 7, 1, "", "TypeResolutionException"], [460, 7, 1, "", "UnexpectedTokenException"], [460, 3, 1, "", "Variable"], [460, 3, 1, "", "VariableBinderExpression"], [460, 1, 1, "", "VariableExpression"], [460, 1, 1, "", "binding_ops"], [460, 1, 1, "", "boolean_ops"], [460, 1, 1, "", "demo"], [460, 1, 1, "", "demoException"], [460, 1, 1, "", "demo_errors"], [460, 1, 1, "", "equality_preds"], [460, 1, 1, "", "is_eventvar"], [460, 1, 1, "", "is_funcvar"], [460, 1, 1, "", "is_indvar"], [460, 1, 1, "", "printtype"], [460, 1, 1, "", "read_logic"], [460, 1, 1, "", "read_type"], [460, 1, 1, "", "skolem_function"], [460, 1, 1, "", "typecheck"], [460, 1, 1, "", "unique_variable"]], "nltk.sem.logic.AbstractVariableExpression": [[460, 4, 1, "", "__init__"], [460, 4, 1, "", "findtype"], [460, 4, 1, "", "predicates"], [460, 4, 1, "", "replace"], [460, 4, 1, "", "simplify"]], "nltk.sem.logic.AllExpression": [[460, 4, 1, "", "getQuantifier"]], "nltk.sem.logic.AndExpression": [[460, 4, 1, "", "getOp"]], "nltk.sem.logic.AnyType": [[460, 4, 1, "", "__init__"], [460, 6, 1, "", "first"], [460, 4, 1, "", "matches"], [460, 4, 1, "", "resolve"], [460, 6, 1, "", "second"], [460, 4, 1, "", "str"]], "nltk.sem.logic.ApplicationExpression": [[460, 4, 1, "", "__init__"], [460, 6, 1, "", "args"], [460, 4, 1, "", "constants"], [460, 4, 1, "", "findtype"], [460, 4, 1, "", "is_atom"], [460, 6, 1, "", "pred"], [460, 4, 1, "", "predicates"], [460, 4, 1, "", "simplify"], [460, 6, 1, "", "type"], [460, 4, 1, "", "uncurry"], [460, 4, 1, "", "visit"]], "nltk.sem.logic.BasicType": [[460, 4, 1, "", "matches"], [460, 4, 1, "", "resolve"]], "nltk.sem.logic.BinaryExpression": [[460, 4, 1, "", "__init__"], [460, 4, 1, "", "findtype"], [460, 6, 1, "", "type"], [460, 4, 1, "", "visit"]], "nltk.sem.logic.ComplexType": [[460, 4, 1, "", "__init__"], [460, 4, 1, "", "matches"], [460, 4, 1, "", "resolve"], [460, 4, 1, "", "str"]], "nltk.sem.logic.ConstantExpression": [[460, 4, 1, "", "constants"], [460, 4, 1, "", "free"], [460, 5, 1, "", "type"]], "nltk.sem.logic.EntityType": [[460, 4, 1, "", "str"]], "nltk.sem.logic.EqualityExpression": [[460, 4, 1, "", "getOp"]], "nltk.sem.logic.EventType": [[460, 4, 1, "", "str"]], "nltk.sem.logic.EventVariableExpression": [[460, 5, 1, "", "type"]], "nltk.sem.logic.ExistsExpression": [[460, 4, 1, "", "getQuantifier"]], "nltk.sem.logic.ExpectedMoreTokensException": [[460, 4, 1, "", "__init__"]], "nltk.sem.logic.Expression": [[460, 4, 1, "", "applyto"], [460, 4, 1, "", "constants"], [460, 4, 1, "", "equiv"], [460, 4, 1, "", "findtype"], [460, 4, 1, "", "free"], [460, 4, 1, "", "fromstring"], [460, 4, 1, "", "make_VariableExpression"], [460, 4, 1, "", "negate"], [460, 4, 1, "", "normalize"], [460, 4, 1, "", "predicates"], [460, 4, 1, "", "replace"], [460, 4, 1, "", "simplify"], [460, 4, 1, "", "substitute_bindings"], [460, 4, 1, "", "typecheck"], [460, 4, 1, "", "variables"], [460, 4, 1, "", "visit"], [460, 4, 1, "", "visit_structured"]], "nltk.sem.logic.FunctionVariableExpression": [[460, 4, 1, "", "constants"], [460, 4, 1, "", "free"], [460, 5, 1, "", "type"]], "nltk.sem.logic.IffExpression": [[460, 4, 1, "", "getOp"]], "nltk.sem.logic.IllegalTypeException": [[460, 4, 1, "", "__init__"]], "nltk.sem.logic.ImpExpression": [[460, 4, 1, "", "getOp"]], "nltk.sem.logic.InconsistentTypeHierarchyException": [[460, 4, 1, "", "__init__"]], "nltk.sem.logic.IndividualVariableExpression": [[460, 4, 1, "", "constants"], [460, 4, 1, "", "free"], [460, 6, 1, "", "type"]], "nltk.sem.logic.IotaExpression": [[460, 4, 1, "", "getQuantifier"]], "nltk.sem.logic.LambdaExpression": [[460, 6, 1, "", "type"]], "nltk.sem.logic.LogicParser": [[460, 4, 1, "", "__init__"], [460, 4, 1, "", "assertNextToken"], [460, 4, 1, "", "assertToken"], [460, 4, 1, "", "attempt_ApplicationExpression"], [460, 4, 1, "", "attempt_BooleanExpression"], [460, 4, 1, "", "attempt_EqualityExpression"], [460, 4, 1, "", "attempt_adjuncts"], [460, 4, 1, "", "get_BooleanExpression_factory"], [460, 4, 1, "", "get_QuantifiedExpression_factory"], [460, 4, 1, "", "get_all_symbols"], [460, 4, 1, "", "get_next_token_variable"], [460, 4, 1, "", "handle"], [460, 4, 1, "", "handle_lambda"], [460, 4, 1, "", "handle_negation"], [460, 4, 1, "", "handle_open"], [460, 4, 1, "", "handle_quant"], [460, 4, 1, "", "handle_variable"], [460, 4, 1, "", "has_priority"], [460, 4, 1, "", "inRange"], [460, 4, 1, "", "isvariable"], [460, 4, 1, "", "make_ApplicationExpression"], [460, 4, 1, "", "make_BooleanExpression"], [460, 4, 1, "", "make_EqualityExpression"], [460, 4, 1, "", "make_LambdaExpression"], [460, 4, 1, "", "make_NegatedExpression"], [460, 4, 1, "", "make_QuanifiedExpression"], [460, 4, 1, "", "make_VariableExpression"], [460, 4, 1, "", "parse"], [460, 4, 1, "", "process"], [460, 4, 1, "", "process_next_expression"], [460, 4, 1, "", "process_quoted_token"], [460, 4, 1, "", "token"], [460, 5, 1, "", "type_check"]], "nltk.sem.logic.LogicalExpressionException": [[460, 4, 1, "", "__init__"]], "nltk.sem.logic.NegatedExpression": [[460, 4, 1, "", "__init__"], [460, 4, 1, "", "findtype"], [460, 4, 1, "", "negate"], [460, 6, 1, "", "type"], [460, 4, 1, "", "visit"]], "nltk.sem.logic.OrExpression": [[460, 4, 1, "", "getOp"]], "nltk.sem.logic.QuantifiedExpression": [[460, 6, 1, "", "type"]], "nltk.sem.logic.SubstituteBindingsI": [[460, 4, 1, "", "substitute_bindings"], [460, 4, 1, "", "variables"]], "nltk.sem.logic.Tokens": [[460, 5, 1, "", "ALL"], [460, 5, 1, "", "ALL_LIST"], [460, 5, 1, "", "AND"], [460, 5, 1, "", "AND_LIST"], [460, 5, 1, "", "BINOPS"], [460, 5, 1, "", "CLOSE"], [460, 5, 1, "", "COMMA"], [460, 5, 1, "", "DOT"], [460, 5, 1, "", "EQ"], [460, 5, 1, "", "EQ_LIST"], [460, 5, 1, "", "EXISTS"], [460, 5, 1, "", "EXISTS_LIST"], [460, 5, 1, "", "IFF"], [460, 5, 1, "", "IFF_LIST"], [460, 5, 1, "", "IMP"], [460, 5, 1, "", "IMP_LIST"], [460, 5, 1, "", "IOTA"], [460, 5, 1, "", "IOTA_LIST"], [460, 5, 1, "", "LAMBDA"], [460, 5, 1, "", "LAMBDA_LIST"], [460, 5, 1, "", "NEQ"], [460, 5, 1, "", "NEQ_LIST"], [460, 5, 1, "", "NOT"], [460, 5, 1, "", "NOT_LIST"], [460, 5, 1, "", "OPEN"], [460, 5, 1, "", "OR"], [460, 5, 1, "", "OR_LIST"], [460, 5, 1, "", "PUNCT"], [460, 5, 1, "", "QUANTS"], [460, 5, 1, "", "SYMBOLS"], [460, 5, 1, "", "TOKENS"]], "nltk.sem.logic.TruthValueType": [[460, 4, 1, "", "str"]], "nltk.sem.logic.Type": [[460, 4, 1, "", "fromstring"]], "nltk.sem.logic.TypeException": [[460, 4, 1, "", "__init__"]], "nltk.sem.logic.TypeResolutionException": [[460, 4, 1, "", "__init__"]], "nltk.sem.logic.UnexpectedTokenException": [[460, 4, 1, "", "__init__"]], "nltk.sem.logic.Variable": [[460, 4, 1, "", "__init__"], [460, 4, 1, "", "substitute_bindings"]], "nltk.sem.logic.VariableBinderExpression": [[460, 4, 1, "", "__init__"], [460, 4, 1, "", "alpha_convert"], [460, 4, 1, "", "findtype"], [460, 4, 1, "", "free"], [460, 4, 1, "", "replace"], [460, 4, 1, "", "visit"], [460, 4, 1, "", "visit_structured"]], "nltk.sem.relextract": [[464, 1, 1, "", "class_abbrev"], [464, 1, 1, "", "clause"], [464, 1, 1, "", "conllesp"], [464, 1, 1, "", "conllned"], [464, 1, 1, "", "descape_entity"], [464, 1, 1, "", "extract_rels"], [464, 1, 1, "", "ieer_headlines"], [464, 1, 1, "", "in_demo"], [464, 1, 1, "", "list2sym"], [464, 1, 1, "", "ne_chunked"], [464, 1, 1, "", "roles_demo"], [464, 1, 1, "", "rtuple"], [464, 1, 1, "", "semi_rel2reldict"], [464, 1, 1, "", "tree2semi_rel"]], "nltk.sem.skolemize": [[468, 1, 1, "", "skolemize"], [468, 1, 1, "", "to_cnf"]], "nltk.sem.util": [[469, 1, 1, "", "demo"], [469, 1, 1, "", "demo_legacy_grammar"], [469, 1, 1, "", "demo_model0"], [469, 1, 1, "", "evaluate_sents"], [469, 1, 1, "", "interpret_sents"], [469, 1, 1, "", "parse_sents"], [469, 1, 1, "", "read_sents"], [469, 1, 1, "", "root_semrep"]], "nltk.sentiment": [[471, 3, 1, "", "SentimentAnalyzer"], [472, 3, 1, "", "SentimentIntensityAnalyzer"], [473, 0, 0, "-", "sentiment_analyzer"], [474, 0, 0, "-", "util"], [475, 0, 0, "-", "vader"]], "nltk.sentiment.SentimentAnalyzer": [[471, 4, 1, "", "__init__"], [471, 4, 1, "", "add_feat_extractor"], [471, 4, 1, "", "all_words"], [471, 4, 1, "", "apply_features"], [471, 4, 1, "", "bigram_collocation_feats"], [471, 4, 1, "", "classify"], [471, 4, 1, "", "evaluate"], [471, 4, 1, "", "extract_features"], [471, 4, 1, "", "save_file"], [471, 4, 1, "", "train"], [471, 4, 1, "", "unigram_word_feats"]], "nltk.sentiment.SentimentIntensityAnalyzer": [[472, 4, 1, "", "__init__"], [472, 4, 1, "", "make_lex_dict"], [472, 4, 1, "", "polarity_scores"], [472, 4, 1, "", "score_valence"], [472, 4, 1, "", "sentiment_valence"]], "nltk.sentiment.sentiment_analyzer": [[473, 3, 1, "", "SentimentAnalyzer"]], "nltk.sentiment.sentiment_analyzer.SentimentAnalyzer": [[473, 4, 1, "", "__init__"], [473, 4, 1, "", "add_feat_extractor"], [473, 4, 1, "", "all_words"], [473, 4, 1, "", "apply_features"], [473, 4, 1, "", "bigram_collocation_feats"], [473, 4, 1, "", "classify"], [473, 4, 1, "", "evaluate"], [473, 4, 1, "", "extract_features"], [473, 4, 1, "", "save_file"], [473, 4, 1, "", "train"], [473, 4, 1, "", "unigram_word_feats"]], "nltk.sentiment.util": [[474, 1, 1, "", "demo_liu_hu_lexicon"], [474, 1, 1, "", "demo_movie_reviews"], [474, 1, 1, "", "demo_sent_subjectivity"], [474, 1, 1, "", "demo_subjectivity"], [474, 1, 1, "", "demo_tweets"], [474, 1, 1, "", "demo_vader_instance"], [474, 1, 1, "", "demo_vader_tweets"], [474, 1, 1, "", "extract_bigram_feats"], [474, 1, 1, "", "extract_unigram_feats"], [474, 1, 1, "", "json2csv_preprocess"], [474, 1, 1, "", "mark_negation"], [474, 1, 1, "", "output_markdown"], [474, 1, 1, "", "parse_tweets_set"], [474, 1, 1, "", "split_train_test"], [474, 1, 1, "", "timer"]], "nltk.sentiment.vader": [[475, 3, 1, "", "SentiText"], [475, 3, 1, "", "SentimentIntensityAnalyzer"], [475, 3, 1, "", "VaderConstants"]], "nltk.sentiment.vader.SentiText": [[475, 4, 1, "", "__init__"], [475, 4, 1, "", "allcap_differential"]], "nltk.sentiment.vader.SentimentIntensityAnalyzer": [[475, 4, 1, "", "__init__"], [475, 4, 1, "", "make_lex_dict"], [475, 4, 1, "", "polarity_scores"], [475, 4, 1, "", "score_valence"], [475, 4, 1, "", "sentiment_valence"]], "nltk.sentiment.vader.VaderConstants": [[475, 5, 1, "", "BOOSTER_DICT"], [475, 5, 1, "", "B_DECR"], [475, 5, 1, "", "B_INCR"], [475, 5, 1, "", "C_INCR"], [475, 5, 1, "", "NEGATE"], [475, 5, 1, "", "N_SCALAR"], [475, 5, 1, "", "PUNC_LIST"], [475, 5, 1, "", "REGEX_REMOVE_PUNCTUATION"], [475, 5, 1, "", "SPECIAL_CASE_IDIOMS"], [475, 4, 1, "", "__init__"], [475, 4, 1, "", "negated"], [475, 4, 1, "", "normalize"], [475, 4, 1, "", "scalar_inc_dec"]], "nltk.stem": [[480, 3, 1, "", "ISRIStemmer"], [481, 3, 1, "", "LancasterStemmer"], [482, 3, 1, "", "PorterStemmer"], [483, 3, 1, "", "RSLPStemmer"], [484, 3, 1, "", "RegexpStemmer"], [485, 3, 1, "", "SnowballStemmer"], [486, 3, 1, "", "WordNetLemmatizer"], [487, 0, 0, "-", "api"], [477, 0, 0, "-", "arlstem"], [478, 0, 0, "-", "arlstem2"], [479, 0, 0, "-", "cistem"], [488, 0, 0, "-", "isri"], [489, 0, 0, "-", "lancaster"], [490, 0, 0, "-", "porter"], [491, 0, 0, "-", "regexp"], [492, 0, 0, "-", "rslp"], [493, 0, 0, "-", "snowball"], [494, 0, 0, "-", "util"], [495, 0, 0, "-", "wordnet"]], "nltk.stem.ISRIStemmer": [[480, 4, 1, "", "__init__"], [480, 4, 1, "", "end_w5"], [480, 4, 1, "", "end_w6"], [480, 4, 1, "", "norm"], [480, 4, 1, "", "pre1"], [480, 4, 1, "", "pre32"], [480, 4, 1, "", "pro_w4"], [480, 4, 1, "", "pro_w53"], [480, 4, 1, "", "pro_w54"], [480, 4, 1, "", "pro_w6"], [480, 4, 1, "", "pro_w64"], [480, 4, 1, "", "stem"], [480, 4, 1, "", "suf1"], [480, 4, 1, "", "suf32"], [480, 4, 1, "", "waw"]], "nltk.stem.LancasterStemmer": [[481, 4, 1, "", "__init__"], [481, 5, 1, "", "default_rule_tuple"], [481, 4, 1, "", "parseRules"], [481, 4, 1, "", "stem"]], "nltk.stem.PorterStemmer": [[482, 5, 1, "", "MARTIN_EXTENSIONS"], [482, 5, 1, "", "NLTK_EXTENSIONS"], [482, 5, 1, "", "ORIGINAL_ALGORITHM"], [482, 4, 1, "", "__init__"], [482, 4, 1, "", "stem"]], "nltk.stem.RSLPStemmer": [[483, 4, 1, "", "__init__"], [483, 4, 1, "", "apply_rule"], [483, 4, 1, "", "read_rule"], [483, 4, 1, "", "stem"]], "nltk.stem.RegexpStemmer": [[484, 4, 1, "", "__init__"], [484, 4, 1, "", "stem"]], "nltk.stem.SnowballStemmer": [[485, 4, 1, "", "__init__"], [485, 5, 1, "", "languages"], [485, 4, 1, "", "stem"]], "nltk.stem.WordNetLemmatizer": [[486, 4, 1, "", "lemmatize"]], "nltk.stem.api": [[487, 3, 1, "", "StemmerI"]], "nltk.stem.api.StemmerI": [[487, 4, 1, "", "stem"]], "nltk.stem.arlstem": [[477, 3, 1, "", "ARLSTem"]], "nltk.stem.arlstem.ARLSTem": [[477, 4, 1, "", "__init__"], [477, 4, 1, "", "fem2masc"], [477, 4, 1, "", "norm"], [477, 4, 1, "", "plur2sing"], [477, 4, 1, "", "pref"], [477, 4, 1, "", "stem"], [477, 4, 1, "", "suff"], [477, 4, 1, "", "verb"], [477, 4, 1, "", "verb_t1"], [477, 4, 1, "", "verb_t2"], [477, 4, 1, "", "verb_t3"], [477, 4, 1, "", "verb_t4"], [477, 4, 1, "", "verb_t5"], [477, 4, 1, "", "verb_t6"]], "nltk.stem.arlstem2": [[478, 3, 1, "", "ARLSTem2"]], "nltk.stem.arlstem2.ARLSTem2": [[478, 4, 1, "", "__init__"], [478, 4, 1, "", "adjective"], [478, 4, 1, "", "fem2masc"], [478, 4, 1, "", "norm"], [478, 4, 1, "", "plur2sing"], [478, 4, 1, "", "pref"], [478, 4, 1, "", "stem"], [478, 4, 1, "", "stem1"], [478, 4, 1, "", "suff"], [478, 4, 1, "", "verb"], [478, 4, 1, "", "verb_t1"], [478, 4, 1, "", "verb_t2"], [478, 4, 1, "", "verb_t3"], [478, 4, 1, "", "verb_t4"], [478, 4, 1, "", "verb_t5"], [478, 4, 1, "", "verb_t6"]], "nltk.stem.cistem": [[479, 3, 1, "", "Cistem"]], "nltk.stem.cistem.Cistem": [[479, 4, 1, "", "__init__"], [479, 5, 1, "", "repl_xx"], [479, 5, 1, "", "repl_xx_back"], [479, 4, 1, "", "replace_back"], [479, 4, 1, "", "replace_to"], [479, 4, 1, "", "segment"], [479, 4, 1, "", "stem"], [479, 5, 1, "", "strip_emr"], [479, 5, 1, "", "strip_esn"], [479, 5, 1, "", "strip_ge"], [479, 5, 1, "", "strip_nd"], [479, 5, 1, "", "strip_t"]], "nltk.stem.isri": [[488, 3, 1, "", "ISRIStemmer"]], "nltk.stem.isri.ISRIStemmer": [[488, 4, 1, "", "__init__"], [488, 4, 1, "", "end_w5"], [488, 4, 1, "", "end_w6"], [488, 4, 1, "", "norm"], [488, 4, 1, "", "pre1"], [488, 4, 1, "", "pre32"], [488, 4, 1, "", "pro_w4"], [488, 4, 1, "", "pro_w53"], [488, 4, 1, "", "pro_w54"], [488, 4, 1, "", "pro_w6"], [488, 4, 1, "", "pro_w64"], [488, 4, 1, "", "stem"], [488, 4, 1, "", "suf1"], [488, 4, 1, "", "suf32"], [488, 4, 1, "", "waw"]], "nltk.stem.lancaster": [[489, 3, 1, "", "LancasterStemmer"]], "nltk.stem.lancaster.LancasterStemmer": [[489, 4, 1, "", "__init__"], [489, 5, 1, "", "default_rule_tuple"], [489, 4, 1, "", "parseRules"], [489, 4, 1, "", "stem"]], "nltk.stem.porter": [[490, 3, 1, "", "PorterStemmer"], [490, 1, 1, "", "demo"]], "nltk.stem.porter.PorterStemmer": [[490, 5, 1, "", "MARTIN_EXTENSIONS"], [490, 5, 1, "", "NLTK_EXTENSIONS"], [490, 5, 1, "", "ORIGINAL_ALGORITHM"], [490, 4, 1, "", "__init__"], [490, 4, 1, "", "stem"]], "nltk.stem.regexp": [[491, 3, 1, "", "RegexpStemmer"]], "nltk.stem.regexp.RegexpStemmer": [[491, 4, 1, "", "__init__"], [491, 4, 1, "", "stem"]], "nltk.stem.rslp": [[492, 3, 1, "", "RSLPStemmer"]], "nltk.stem.rslp.RSLPStemmer": [[492, 4, 1, "", "__init__"], [492, 4, 1, "", "apply_rule"], [492, 4, 1, "", "read_rule"], [492, 4, 1, "", "stem"]], "nltk.stem.snowball": [[493, 3, 1, "", "ArabicStemmer"], [493, 3, 1, "", "DanishStemmer"], [493, 3, 1, "", "DutchStemmer"], [493, 3, 1, "", "EnglishStemmer"], [493, 3, 1, "", "FinnishStemmer"], [493, 3, 1, "", "FrenchStemmer"], [493, 3, 1, "", "GermanStemmer"], [493, 3, 1, "", "HungarianStemmer"], [493, 3, 1, "", "ItalianStemmer"], [493, 3, 1, "", "NorwegianStemmer"], [493, 3, 1, "", "PorterStemmer"], [493, 3, 1, "", "PortugueseStemmer"], [493, 3, 1, "", "RomanianStemmer"], [493, 3, 1, "", "RussianStemmer"], [493, 3, 1, "", "SnowballStemmer"], [493, 3, 1, "", "SpanishStemmer"], [493, 3, 1, "", "SwedishStemmer"], [493, 1, 1, "", "demo"]], "nltk.stem.snowball.ArabicStemmer": [[493, 5, 1, "", "is_defined"], [493, 5, 1, "", "is_noun"], [493, 5, 1, "", "is_verb"], [493, 5, 1, "", "prefix_step2a_success"], [493, 5, 1, "", "prefix_step3a_noun_success"], [493, 5, 1, "", "prefix_step3b_noun_success"], [493, 4, 1, "", "stem"], [493, 5, 1, "", "suffix_noun_step1a_success"], [493, 5, 1, "", "suffix_noun_step2a_success"], [493, 5, 1, "", "suffix_noun_step2b_success"], [493, 5, 1, "", "suffix_noun_step2c2_success"], [493, 5, 1, "", "suffix_verb_step2a_success"], [493, 5, 1, "", "suffix_verb_step2b_success"], [493, 5, 1, "", "suffixe_noun_step1b_success"], [493, 5, 1, "", "suffixes_verb_step1_success"]], "nltk.stem.snowball.DanishStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.DutchStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.EnglishStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.FinnishStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.FrenchStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.GermanStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.HungarianStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.ItalianStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.NorwegianStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.PorterStemmer": [[493, 4, 1, "", "__init__"]], "nltk.stem.snowball.PortugueseStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.RomanianStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.RussianStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.SnowballStemmer": [[493, 4, 1, "", "__init__"], [493, 5, 1, "", "languages"], [493, 4, 1, "", "stem"]], "nltk.stem.snowball.SpanishStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.snowball.SwedishStemmer": [[493, 4, 1, "", "stem"]], "nltk.stem.util": [[494, 1, 1, "", "prefix_replace"], [494, 1, 1, "", "suffix_replace"]], "nltk.stem.wordnet": [[495, 3, 1, "", "WordNetLemmatizer"]], "nltk.stem.wordnet.WordNetLemmatizer": [[495, 4, 1, "", "lemmatize"]], "nltk.tag": [[497, 3, 1, "", "AffixTagger"], [498, 3, 1, "", "BigramTagger"], [499, 3, 1, "", "BrillTagger"], [500, 3, 1, "", "BrillTaggerTrainer"], [501, 3, 1, "", "CRFTagger"], [502, 3, 1, "", "ClassifierBasedPOSTagger"], [503, 3, 1, "", "ClassifierBasedTagger"], [504, 3, 1, "", "DefaultTagger"], [505, 3, 1, "", "HiddenMarkovModelTagger"], [506, 3, 1, "", "HiddenMarkovModelTrainer"], [507, 3, 1, "", "HunposTagger"], [508, 3, 1, "", "NgramTagger"], [509, 3, 1, "", "PerceptronTagger"], [510, 3, 1, "", "RegexpTagger"], [511, 3, 1, "", "SennaChunkTagger"], [512, 3, 1, "", "SennaNERTagger"], [513, 3, 1, "", "SennaTagger"], [515, 3, 1, "", "TrigramTagger"], [516, 3, 1, "", "UnigramTagger"], [517, 0, 0, "-", "api"], [518, 0, 0, "-", "brill"], [519, 0, 0, "-", "brill_trainer"], [520, 0, 0, "-", "crf"], [521, 0, 0, "-", "hmm"], [522, 0, 0, "-", "hunpos"], [523, 0, 0, "-", "mapping"], [524, 0, 0, "-", "perceptron"], [525, 1, 1, "", "pos_tag"], [526, 1, 1, "", "pos_tag_sents"], [527, 0, 0, "-", "senna"], [528, 0, 0, "-", "sequential"], [529, 0, 0, "-", "stanford"], [514, 0, 0, "-", "tnt"], [530, 0, 0, "-", "util"]], "nltk.tag.AffixTagger": [[497, 4, 1, "", "__init__"], [497, 4, 1, "", "accuracy"], [497, 6, 1, "", "backoff"], [497, 4, 1, "", "choose_tag"], [497, 4, 1, "", "confusion"], [497, 4, 1, "", "context"], [497, 4, 1, "", "decode_json_obj"], [497, 4, 1, "", "encode_json_obj"], [497, 4, 1, "", "evaluate"], [497, 4, 1, "", "evaluate_per_tag"], [497, 4, 1, "", "f_measure"], [497, 5, 1, "", "json_tag"], [497, 4, 1, "", "precision"], [497, 4, 1, "", "recall"], [497, 4, 1, "", "size"], [497, 4, 1, "", "tag"], [497, 4, 1, "", "tag_one"], [497, 4, 1, "", "tag_sents"]], "nltk.tag.BigramTagger": [[498, 4, 1, "", "__init__"], [498, 4, 1, "", "accuracy"], [498, 6, 1, "", "backoff"], [498, 4, 1, "", "choose_tag"], [498, 4, 1, "", "confusion"], [498, 4, 1, "", "context"], [498, 4, 1, "", "decode_json_obj"], [498, 4, 1, "", "encode_json_obj"], [498, 4, 1, "", "evaluate"], [498, 4, 1, "", "evaluate_per_tag"], [498, 4, 1, "", "f_measure"], [498, 5, 1, "", "json_tag"], [498, 4, 1, "", "precision"], [498, 4, 1, "", "recall"], [498, 4, 1, "", "size"], [498, 4, 1, "", "tag"], [498, 4, 1, "", "tag_one"], [498, 4, 1, "", "tag_sents"]], "nltk.tag.BrillTagger": [[499, 4, 1, "", "__init__"], [499, 4, 1, "", "accuracy"], [499, 4, 1, "", "batch_tag_incremental"], [499, 4, 1, "", "confusion"], [499, 4, 1, "", "decode_json_obj"], [499, 4, 1, "", "encode_json_obj"], [499, 4, 1, "", "evaluate"], [499, 4, 1, "", "evaluate_per_tag"], [499, 4, 1, "", "f_measure"], [499, 5, 1, "", "json_tag"], [499, 4, 1, "", "precision"], [499, 4, 1, "", "print_template_statistics"], [499, 4, 1, "", "recall"], [499, 4, 1, "", "rules"], [499, 4, 1, "", "tag"], [499, 4, 1, "", "tag_sents"], [499, 4, 1, "", "train_stats"]], "nltk.tag.BrillTaggerTrainer": [[500, 4, 1, "", "__init__"], [500, 4, 1, "", "train"]], "nltk.tag.CRFTagger": [[501, 4, 1, "", "__init__"], [501, 4, 1, "", "accuracy"], [501, 4, 1, "", "confusion"], [501, 4, 1, "", "evaluate"], [501, 4, 1, "", "evaluate_per_tag"], [501, 4, 1, "", "f_measure"], [501, 4, 1, "", "precision"], [501, 4, 1, "", "recall"], [501, 4, 1, "", "set_model_file"], [501, 4, 1, "", "tag"], [501, 4, 1, "", "tag_sents"], [501, 4, 1, "", "train"]], "nltk.tag.ClassifierBasedPOSTagger": [[502, 4, 1, "", "__init__"], [502, 4, 1, "", "accuracy"], [502, 6, 1, "", "backoff"], [502, 4, 1, "", "choose_tag"], [502, 4, 1, "", "classifier"], [502, 4, 1, "", "confusion"], [502, 4, 1, "", "evaluate"], [502, 4, 1, "", "evaluate_per_tag"], [502, 4, 1, "", "f_measure"], [502, 4, 1, "", "feature_detector"], [502, 4, 1, "", "precision"], [502, 4, 1, "", "recall"], [502, 4, 1, "", "tag"], [502, 4, 1, "", "tag_one"], [502, 4, 1, "", "tag_sents"]], "nltk.tag.ClassifierBasedTagger": [[503, 4, 1, "", "__init__"], [503, 4, 1, "", "accuracy"], [503, 6, 1, "", "backoff"], [503, 4, 1, "", "choose_tag"], [503, 4, 1, "", "classifier"], [503, 4, 1, "", "confusion"], [503, 4, 1, "", "evaluate"], [503, 4, 1, "", "evaluate_per_tag"], [503, 4, 1, "", "f_measure"], [503, 4, 1, "", "feature_detector"], [503, 4, 1, "", "precision"], [503, 4, 1, "", "recall"], [503, 4, 1, "", "tag"], [503, 4, 1, "", "tag_one"], [503, 4, 1, "", "tag_sents"]], "nltk.tag.DefaultTagger": [[504, 4, 1, "", "__init__"], [504, 4, 1, "", "accuracy"], [504, 6, 1, "", "backoff"], [504, 4, 1, "", "choose_tag"], [504, 4, 1, "", "confusion"], [504, 4, 1, "", "decode_json_obj"], [504, 4, 1, "", "encode_json_obj"], [504, 4, 1, "", "evaluate"], [504, 4, 1, "", "evaluate_per_tag"], [504, 4, 1, "", "f_measure"], [504, 5, 1, "", "json_tag"], [504, 4, 1, "", "precision"], [504, 4, 1, "", "recall"], [504, 4, 1, "", "tag"], [504, 4, 1, "", "tag_one"], [504, 4, 1, "", "tag_sents"]], "nltk.tag.HiddenMarkovModelTagger": [[505, 4, 1, "", "__init__"], [505, 4, 1, "", "accuracy"], [505, 4, 1, "", "best_path"], [505, 4, 1, "", "best_path_simple"], [505, 4, 1, "", "confusion"], [505, 4, 1, "", "entropy"], [505, 4, 1, "", "evaluate"], [505, 4, 1, "", "evaluate_per_tag"], [505, 4, 1, "", "f_measure"], [505, 4, 1, "", "log_probability"], [505, 4, 1, "", "point_entropy"], [505, 4, 1, "", "precision"], [505, 4, 1, "", "probability"], [505, 4, 1, "", "random_sample"], [505, 4, 1, "", "recall"], [505, 4, 1, "", "reset_cache"], [505, 4, 1, "", "tag"], [505, 4, 1, "", "tag_sents"], [505, 4, 1, "", "test"], [505, 4, 1, "", "train"]], "nltk.tag.HiddenMarkovModelTrainer": [[506, 4, 1, "", "__init__"], [506, 4, 1, "", "train"], [506, 4, 1, "", "train_supervised"], [506, 4, 1, "", "train_unsupervised"]], "nltk.tag.HunposTagger": [[507, 4, 1, "", "__init__"], [507, 4, 1, "", "accuracy"], [507, 4, 1, "", "close"], [507, 4, 1, "", "confusion"], [507, 4, 1, "", "evaluate"], [507, 4, 1, "", "evaluate_per_tag"], [507, 4, 1, "", "f_measure"], [507, 4, 1, "", "precision"], [507, 4, 1, "", "recall"], [507, 4, 1, "", "tag"], [507, 4, 1, "", "tag_sents"]], "nltk.tag.NgramTagger": [[508, 4, 1, "", "__init__"], [508, 4, 1, "", "accuracy"], [508, 6, 1, "", "backoff"], [508, 4, 1, "", "choose_tag"], [508, 4, 1, "", "confusion"], [508, 4, 1, "", "context"], [508, 4, 1, "", "decode_json_obj"], [508, 4, 1, "", "encode_json_obj"], [508, 4, 1, "", "evaluate"], [508, 4, 1, "", "evaluate_per_tag"], [508, 4, 1, "", "f_measure"], [508, 5, 1, "", "json_tag"], [508, 4, 1, "", "precision"], [508, 4, 1, "", "recall"], [508, 4, 1, "", "size"], [508, 4, 1, "", "tag"], [508, 4, 1, "", "tag_one"], [508, 4, 1, "", "tag_sents"]], "nltk.tag.PerceptronTagger": [[509, 5, 1, "", "END"], [509, 5, 1, "", "START"], [509, 4, 1, "", "__init__"], [509, 4, 1, "", "accuracy"], [509, 4, 1, "", "confusion"], [509, 4, 1, "", "decode_json_obj"], [509, 4, 1, "", "encode_json_obj"], [509, 4, 1, "", "evaluate"], [509, 4, 1, "", "evaluate_per_tag"], [509, 4, 1, "", "f_measure"], [509, 5, 1, "", "json_tag"], [509, 4, 1, "", "load"], [509, 4, 1, "", "normalize"], [509, 4, 1, "", "precision"], [509, 4, 1, "", "recall"], [509, 4, 1, "", "tag"], [509, 4, 1, "", "tag_sents"], [509, 4, 1, "", "train"]], "nltk.tag.RegexpTagger": [[510, 4, 1, "", "__init__"], [510, 4, 1, "", "accuracy"], [510, 6, 1, "", "backoff"], [510, 4, 1, "", "choose_tag"], [510, 4, 1, "", "confusion"], [510, 4, 1, "", "decode_json_obj"], [510, 4, 1, "", "encode_json_obj"], [510, 4, 1, "", "evaluate"], [510, 4, 1, "", "evaluate_per_tag"], [510, 4, 1, "", "f_measure"], [510, 5, 1, "", "json_tag"], [510, 4, 1, "", "precision"], [510, 4, 1, "", "recall"], [510, 4, 1, "", "tag"], [510, 4, 1, "", "tag_one"], [510, 4, 1, "", "tag_sents"]], "nltk.tag.SennaChunkTagger": [[511, 5, 1, "", "SUPPORTED_OPERATIONS"], [511, 4, 1, "", "__init__"], [511, 4, 1, "", "accuracy"], [511, 4, 1, "", "bio_to_chunks"], [511, 4, 1, "", "confusion"], [511, 4, 1, "", "evaluate"], [511, 4, 1, "", "evaluate_per_tag"], [511, 4, 1, "", "executable"], [511, 4, 1, "", "f_measure"], [511, 4, 1, "", "precision"], [511, 4, 1, "", "recall"], [511, 4, 1, "", "tag"], [511, 4, 1, "", "tag_sents"]], "nltk.tag.SennaNERTagger": [[512, 5, 1, "", "SUPPORTED_OPERATIONS"], [512, 4, 1, "", "__init__"], [512, 4, 1, "", "accuracy"], [512, 4, 1, "", "confusion"], [512, 4, 1, "", "evaluate"], [512, 4, 1, "", "evaluate_per_tag"], [512, 4, 1, "", "executable"], [512, 4, 1, "", "f_measure"], [512, 4, 1, "", "precision"], [512, 4, 1, "", "recall"], [512, 4, 1, "", "tag"], [512, 4, 1, "", "tag_sents"]], "nltk.tag.SennaTagger": [[513, 5, 1, "", "SUPPORTED_OPERATIONS"], [513, 4, 1, "", "__init__"], [513, 4, 1, "", "accuracy"], [513, 4, 1, "", "confusion"], [513, 4, 1, "", "evaluate"], [513, 4, 1, "", "evaluate_per_tag"], [513, 4, 1, "", "executable"], [513, 4, 1, "", "f_measure"], [513, 4, 1, "", "precision"], [513, 4, 1, "", "recall"], [513, 4, 1, "", "tag"], [513, 4, 1, "", "tag_sents"]], "nltk.tag.TrigramTagger": [[515, 4, 1, "", "__init__"], [515, 4, 1, "", "accuracy"], [515, 6, 1, "", "backoff"], [515, 4, 1, "", "choose_tag"], [515, 4, 1, "", "confusion"], [515, 4, 1, "", "context"], [515, 4, 1, "", "decode_json_obj"], [515, 4, 1, "", "encode_json_obj"], [515, 4, 1, "", "evaluate"], [515, 4, 1, "", "evaluate_per_tag"], [515, 4, 1, "", "f_measure"], [515, 5, 1, "", "json_tag"], [515, 4, 1, "", "precision"], [515, 4, 1, "", "recall"], [515, 4, 1, "", "size"], [515, 4, 1, "", "tag"], [515, 4, 1, "", "tag_one"], [515, 4, 1, "", "tag_sents"]], "nltk.tag.UnigramTagger": [[516, 4, 1, "", "__init__"], [516, 4, 1, "", "accuracy"], [516, 6, 1, "", "backoff"], [516, 4, 1, "", "choose_tag"], [516, 4, 1, "", "confusion"], [516, 4, 1, "", "context"], [516, 4, 1, "", "decode_json_obj"], [516, 4, 1, "", "encode_json_obj"], [516, 4, 1, "", "evaluate"], [516, 4, 1, "", "evaluate_per_tag"], [516, 4, 1, "", "f_measure"], [516, 5, 1, "", "json_tag"], [516, 4, 1, "", "precision"], [516, 4, 1, "", "recall"], [516, 4, 1, "", "size"], [516, 4, 1, "", "tag"], [516, 4, 1, "", "tag_one"], [516, 4, 1, "", "tag_sents"]], "nltk.tag.api": [[517, 3, 1, "", "FeaturesetTaggerI"], [517, 3, 1, "", "TaggerI"]], "nltk.tag.api.TaggerI": [[517, 4, 1, "", "accuracy"], [517, 4, 1, "", "confusion"], [517, 4, 1, "", "evaluate"], [517, 4, 1, "", "evaluate_per_tag"], [517, 4, 1, "", "f_measure"], [517, 4, 1, "", "precision"], [517, 4, 1, "", "recall"], [517, 4, 1, "", "tag"], [517, 4, 1, "", "tag_sents"]], "nltk.tag.brill": [[518, 3, 1, "", "BrillTagger"], [518, 3, 1, "", "Pos"], [518, 3, 1, "", "Word"], [518, 1, 1, "", "brill24"], [518, 1, 1, "", "describe_template_sets"], [518, 1, 1, "", "fntbl37"], [518, 1, 1, "", "nltkdemo18"], [518, 1, 1, "", "nltkdemo18plus"]], "nltk.tag.brill.BrillTagger": [[518, 4, 1, "", "__init__"], [518, 4, 1, "", "batch_tag_incremental"], [518, 4, 1, "", "decode_json_obj"], [518, 4, 1, "", "encode_json_obj"], [518, 5, 1, "", "json_tag"], [518, 4, 1, "", "print_template_statistics"], [518, 4, 1, "", "rules"], [518, 4, 1, "", "tag"], [518, 4, 1, "", "train_stats"]], "nltk.tag.brill.Pos": [[518, 4, 1, "", "extract_property"], [518, 5, 1, "", "json_tag"]], "nltk.tag.brill.Word": [[518, 4, 1, "", "extract_property"], [518, 5, 1, "", "json_tag"]], "nltk.tag.brill_trainer": [[519, 3, 1, "", "BrillTaggerTrainer"]], "nltk.tag.brill_trainer.BrillTaggerTrainer": [[519, 4, 1, "", "__init__"], [519, 4, 1, "", "train"]], "nltk.tag.crf": [[520, 3, 1, "", "CRFTagger"]], "nltk.tag.crf.CRFTagger": [[520, 4, 1, "", "__init__"], [520, 4, 1, "", "set_model_file"], [520, 4, 1, "", "tag"], [520, 4, 1, "", "tag_sents"], [520, 4, 1, "", "train"]], "nltk.tag.hmm": [[521, 3, 1, "", "HiddenMarkovModelTagger"], [521, 3, 1, "", "HiddenMarkovModelTrainer"], [521, 1, 1, "", "demo"], [521, 1, 1, "", "demo_bw"], [521, 1, 1, "", "demo_pos"], [521, 1, 1, "", "demo_pos_bw"], [521, 1, 1, "", "load_pos"], [521, 1, 1, "", "logsumexp2"]], "nltk.tag.hmm.HiddenMarkovModelTagger": [[521, 4, 1, "", "__init__"], [521, 4, 1, "", "best_path"], [521, 4, 1, "", "best_path_simple"], [521, 4, 1, "", "entropy"], [521, 4, 1, "", "log_probability"], [521, 4, 1, "", "point_entropy"], [521, 4, 1, "", "probability"], [521, 4, 1, "", "random_sample"], [521, 4, 1, "", "reset_cache"], [521, 4, 1, "", "tag"], [521, 4, 1, "", "test"], [521, 4, 1, "", "train"]], "nltk.tag.hmm.HiddenMarkovModelTrainer": [[521, 4, 1, "", "__init__"], [521, 4, 1, "", "train"], [521, 4, 1, "", "train_supervised"], [521, 4, 1, "", "train_unsupervised"]], "nltk.tag.hunpos": [[522, 3, 1, "", "HunposTagger"]], "nltk.tag.hunpos.HunposTagger": [[522, 4, 1, "", "__init__"], [522, 4, 1, "", "close"], [522, 4, 1, "", "tag"]], "nltk.tag.mapping": [[523, 1, 1, "", "map_tag"], [523, 1, 1, "", "tagset_mapping"]], "nltk.tag.perceptron": [[524, 3, 1, "", "AveragedPerceptron"], [524, 3, 1, "", "PerceptronTagger"]], "nltk.tag.perceptron.AveragedPerceptron": [[524, 4, 1, "", "__init__"], [524, 4, 1, "", "average_weights"], [524, 4, 1, "", "decode_json_obj"], [524, 4, 1, "", "encode_json_obj"], [524, 5, 1, "", "json_tag"], [524, 4, 1, "", "load"], [524, 4, 1, "", "predict"], [524, 4, 1, "", "save"], [524, 4, 1, "", "update"]], "nltk.tag.perceptron.PerceptronTagger": [[524, 5, 1, "", "END"], [524, 5, 1, "", "START"], [524, 4, 1, "", "__init__"], [524, 4, 1, "", "decode_json_obj"], [524, 4, 1, "", "encode_json_obj"], [524, 5, 1, "", "json_tag"], [524, 4, 1, "", "load"], [524, 4, 1, "", "normalize"], [524, 4, 1, "", "tag"], [524, 4, 1, "", "train"]], "nltk.tag.senna": [[527, 3, 1, "", "SennaChunkTagger"], [527, 3, 1, "", "SennaNERTagger"], [527, 3, 1, "", "SennaTagger"]], "nltk.tag.senna.SennaChunkTagger": [[527, 4, 1, "", "__init__"], [527, 4, 1, "", "bio_to_chunks"], [527, 4, 1, "", "tag_sents"]], "nltk.tag.senna.SennaNERTagger": [[527, 4, 1, "", "__init__"], [527, 4, 1, "", "tag_sents"]], "nltk.tag.senna.SennaTagger": [[527, 4, 1, "", "__init__"], [527, 4, 1, "", "tag_sents"]], "nltk.tag.sequential": [[528, 3, 1, "", "AffixTagger"], [528, 3, 1, "", "BigramTagger"], [528, 3, 1, "", "ClassifierBasedPOSTagger"], [528, 3, 1, "", "ClassifierBasedTagger"], [528, 3, 1, "", "ContextTagger"], [528, 3, 1, "", "DefaultTagger"], [528, 3, 1, "", "NgramTagger"], [528, 3, 1, "", "RegexpTagger"], [528, 3, 1, "", "SequentialBackoffTagger"], [528, 3, 1, "", "TrigramTagger"], [528, 3, 1, "", "UnigramTagger"]], "nltk.tag.sequential.AffixTagger": [[528, 4, 1, "", "__init__"], [528, 4, 1, "", "context"], [528, 4, 1, "", "decode_json_obj"], [528, 4, 1, "", "encode_json_obj"], [528, 5, 1, "", "json_tag"]], "nltk.tag.sequential.BigramTagger": [[528, 4, 1, "", "__init__"], [528, 5, 1, "", "json_tag"]], "nltk.tag.sequential.ClassifierBasedPOSTagger": [[528, 4, 1, "", "feature_detector"]], "nltk.tag.sequential.ClassifierBasedTagger": [[528, 4, 1, "", "__init__"], [528, 4, 1, "", "choose_tag"], [528, 4, 1, "", "classifier"], [528, 4, 1, "", "feature_detector"]], "nltk.tag.sequential.ContextTagger": [[528, 4, 1, "", "__init__"], [528, 4, 1, "", "choose_tag"], [528, 4, 1, "", "context"], [528, 4, 1, "", "size"]], "nltk.tag.sequential.DefaultTagger": [[528, 4, 1, "", "__init__"], [528, 4, 1, "", "choose_tag"], [528, 4, 1, "", "decode_json_obj"], [528, 4, 1, "", "encode_json_obj"], [528, 5, 1, "", "json_tag"]], "nltk.tag.sequential.NgramTagger": [[528, 4, 1, "", "__init__"], [528, 4, 1, "", "context"], [528, 4, 1, "", "decode_json_obj"], [528, 4, 1, "", "encode_json_obj"], [528, 5, 1, "", "json_tag"]], "nltk.tag.sequential.RegexpTagger": [[528, 4, 1, "", "__init__"], [528, 4, 1, "", "choose_tag"], [528, 4, 1, "", "decode_json_obj"], [528, 4, 1, "", "encode_json_obj"], [528, 5, 1, "", "json_tag"]], "nltk.tag.sequential.SequentialBackoffTagger": [[528, 4, 1, "", "__init__"], [528, 6, 1, "", "backoff"], [528, 4, 1, "", "choose_tag"], [528, 4, 1, "", "tag"], [528, 4, 1, "", "tag_one"]], "nltk.tag.sequential.TrigramTagger": [[528, 4, 1, "", "__init__"], [528, 5, 1, "", "json_tag"]], "nltk.tag.sequential.UnigramTagger": [[528, 4, 1, "", "__init__"], [528, 4, 1, "", "context"], [528, 5, 1, "", "json_tag"]], "nltk.tag.stanford": [[529, 3, 1, "", "StanfordNERTagger"], [529, 3, 1, "", "StanfordPOSTagger"], [529, 3, 1, "", "StanfordTagger"]], "nltk.tag.stanford.StanfordNERTagger": [[529, 4, 1, "", "__init__"], [529, 4, 1, "", "parse_output"]], "nltk.tag.stanford.StanfordPOSTagger": [[529, 4, 1, "", "__init__"]], "nltk.tag.stanford.StanfordTagger": [[529, 4, 1, "", "__init__"], [529, 4, 1, "", "parse_output"], [529, 4, 1, "", "tag"], [529, 4, 1, "", "tag_sents"]], "nltk.tag.tnt": [[514, 3, 1, "", "TnT"], [514, 1, 1, "", "basic_sent_chop"], [514, 1, 1, "", "demo"], [514, 1, 1, "", "demo2"], [514, 1, 1, "", "demo3"]], "nltk.tag.tnt.TnT": [[514, 4, 1, "", "__init__"], [514, 4, 1, "", "tag"], [514, 4, 1, "", "tagdata"], [514, 4, 1, "", "train"]], "nltk.tag.util": [[530, 1, 1, "", "str2tuple"], [530, 1, 1, "", "tuple2str"], [530, 1, 1, "", "untag"]], "nltk.tbl": [[532, 0, 0, "-", "api"], [533, 0, 0, "-", "demo"], [534, 0, 0, "-", "erroranalysis"], [535, 0, 0, "-", "feature"], [536, 0, 0, "-", "rule"], [537, 0, 0, "-", "template"]], "nltk.tbl.demo": [[533, 1, 1, "", "corpus_size"], [533, 1, 1, "", "demo"], [533, 1, 1, "", "demo_error_analysis"], [533, 1, 1, "", "demo_generated_templates"], [533, 1, 1, "", "demo_high_accuracy_rules"], [533, 1, 1, "", "demo_learning_curve"], [533, 1, 1, "", "demo_multifeature_template"], [533, 1, 1, "", "demo_multiposition_feature"], [533, 1, 1, "", "demo_repr_rule_format"], [533, 1, 1, "", "demo_serialize_tagger"], [533, 1, 1, "", "demo_str_rule_format"], [533, 1, 1, "", "demo_template_statistics"], [533, 1, 1, "", "demo_verbose_rule_format"], [533, 1, 1, "", "postag"]], "nltk.tbl.erroranalysis": [[534, 1, 1, "", "error_list"]], "nltk.tbl.feature": [[535, 3, 1, "", "Feature"]], "nltk.tbl.feature.Feature": [[535, 5, 1, "", "PROPERTY_NAME"], [535, 4, 1, "", "__init__"], [535, 4, 1, "", "decode_json_obj"], [535, 4, 1, "", "encode_json_obj"], [535, 4, 1, "", "expand"], [535, 4, 1, "", "extract_property"], [535, 4, 1, "", "intersects"], [535, 4, 1, "", "issuperset"], [535, 5, 1, "", "json_tag"]], "nltk.tbl.rule": [[536, 3, 1, "", "Rule"], [536, 3, 1, "", "TagRule"]], "nltk.tbl.rule.Rule": [[536, 4, 1, "", "__init__"], [536, 4, 1, "", "applies"], [536, 4, 1, "", "decode_json_obj"], [536, 4, 1, "", "encode_json_obj"], [536, 4, 1, "", "format"], [536, 5, 1, "", "json_tag"]], "nltk.tbl.rule.TagRule": [[536, 4, 1, "", "__init__"], [536, 4, 1, "", "applies"], [536, 4, 1, "", "apply"], [536, 5, 1, "", "original_tag"], [536, 5, 1, "", "replacement_tag"]], "nltk.tbl.template": [[537, 3, 1, "", "BrillTemplateI"], [537, 3, 1, "", "Template"]], "nltk.tbl.template.BrillTemplateI": [[537, 4, 1, "", "applicable_rules"], [537, 4, 1, "", "get_neighborhood"]], "nltk.tbl.template.Template": [[537, 5, 1, "", "ALLTEMPLATES"], [537, 4, 1, "", "__init__"], [537, 4, 1, "", "applicable_rules"], [537, 4, 1, "", "expand"], [537, 4, 1, "", "get_neighborhood"]], "nltk.test": [[539, 0, 0, "-", "all"], [540, 0, 0, "-", "childes_fixt"], [541, 0, 0, "-", "classify_fixt"], [542, 0, 0, "-", "conftest"], [543, 0, 0, "-", "gensim_fixt"], [544, 0, 0, "-", "gluesemantics_malt_fixt"], [545, 0, 0, "-", "portuguese_en_fixt"], [546, 0, 0, "-", "probability_fixt"], [547, 0, 0, "-", "setup_fixt"], [548, 0, 0, "-", "unit"]], "nltk.test.all": [[539, 1, 1, "", "additional_tests"]], "nltk.test.childes_fixt": [[540, 1, 1, "", "setup_module"]], "nltk.test.classify_fixt": [[541, 1, 1, "", "setup_module"]], "nltk.test.conftest": [[542, 1, 1, "", "mock_plot"], [542, 1, 1, "", "teardown_loaded_corpora"]], "nltk.test.gensim_fixt": [[543, 1, 1, "", "setup_module"]], "nltk.test.gluesemantics_malt_fixt": [[544, 1, 1, "", "setup_module"]], "nltk.test.portuguese_en_fixt": [[545, 1, 1, "", "setup_module"]], "nltk.test.probability_fixt": [[546, 1, 1, "", "setup_module"]], "nltk.test.setup_fixt": [[547, 1, 1, "", "check_binary"], [547, 1, 1, "", "check_jar"]], "nltk.test.unit": [[549, 0, 0, "-", "lm"], [554, 0, 0, "-", "test_aline"], [555, 0, 0, "-", "test_bllip"], [556, 0, 0, "-", "test_brill"], [557, 0, 0, "-", "test_cfd_mutation"], [558, 0, 0, "-", "test_cfg2chomsky"], [559, 0, 0, "-", "test_chunk"], [560, 0, 0, "-", "test_classify"], [561, 0, 0, "-", "test_collocations"], [562, 0, 0, "-", "test_concordance"], [563, 0, 0, "-", "test_corenlp"], [564, 0, 0, "-", "test_corpora"], [565, 0, 0, "-", "test_corpus_views"], [566, 0, 0, "-", "test_data"], [567, 0, 0, "-", "test_disagreement"], [568, 0, 0, "-", "test_distance"], [569, 0, 0, "-", "test_downloader"], [570, 0, 0, "-", "test_freqdist"], [571, 0, 0, "-", "test_hmm"], [572, 0, 0, "-", "test_json2csv_corpus"], [573, 0, 0, "-", "test_json_serialization"], [574, 0, 0, "-", "test_metrics"], [575, 0, 0, "-", "test_naivebayes"], [576, 0, 0, "-", "test_nombank"], [577, 0, 0, "-", "test_pl196x"], [578, 0, 0, "-", "test_pos_tag"], [579, 0, 0, "-", "test_ribes"], [580, 0, 0, "-", "test_rte_classify"], [581, 0, 0, "-", "test_seekable_unicode_stream_reader"], [582, 0, 0, "-", "test_senna"], [583, 0, 0, "-", "test_stem"], [584, 0, 0, "-", "test_tag"], [585, 0, 0, "-", "test_tgrep"], [586, 0, 0, "-", "test_tokenize"], [587, 0, 0, "-", "test_twitter_auth"], [588, 0, 0, "-", "test_util"], [589, 0, 0, "-", "test_wordnet"], [590, 0, 0, "-", "translate"]], "nltk.test.unit.lm": [[550, 0, 0, "-", "test_counter"], [551, 0, 0, "-", "test_models"], [552, 0, 0, "-", "test_preprocessing"], [553, 0, 0, "-", "test_vocabulary"]], "nltk.test.unit.lm.test_counter": [[550, 3, 1, "", "TestNgramCounter"], [550, 3, 1, "", "TestNgramCounterTraining"]], "nltk.test.unit.lm.test_counter.TestNgramCounter": [[550, 4, 1, "", "setup_class"], [550, 4, 1, "", "test_N"], [550, 4, 1, "", "test_bigram_counts_seen_ngrams"], [550, 4, 1, "", "test_bigram_counts_unseen_ngrams"], [550, 4, 1, "", "test_counter_len_changes_with_lookup"], [550, 4, 1, "", "test_ngram_conditional_freqdist"], [550, 4, 1, "", "test_ngram_order_access_unigrams"], [550, 4, 1, "", "test_unigram_counts_completely_unseen_words"], [550, 4, 1, "", "test_unigram_counts_seen_words"]], "nltk.test.unit.lm.test_counter.TestNgramCounterTraining": [[550, 4, 1, "", "setup_class"], [550, 4, 1, "", "test_empty_inputs"], [550, 4, 1, "", "test_train_on_bigrams"], [550, 4, 1, "", "test_train_on_illegal_sentences"], [550, 4, 1, "", "test_train_on_mix"], [550, 4, 1, "", "test_train_on_unigrams"]], "nltk.test.unit.lm.test_models": [[551, 1, 1, "", "absolute_discounting_trigram_model"], [551, 1, 1, "", "bigram_training_data"], [551, 1, 1, "", "kneserney_bigram_model"], [551, 1, 1, "", "kneserney_trigram_model"], [551, 1, 1, "", "laplace_bigram_model"], [551, 1, 1, "", "lidstone_bigram_model"], [551, 1, 1, "", "lidstone_trigram_model"], [551, 1, 1, "", "mle_bigram_model"], [551, 1, 1, "", "mle_trigram_model"], [551, 1, 1, "", "stupid_backoff_trigram_model"], [551, 1, 1, "", "test_absolute_discounting_trigram_score"], [551, 1, 1, "", "test_generate_None_text_seed"], [551, 1, 1, "", "test_generate_cycle"], [551, 1, 1, "", "test_generate_one_from_limiting_context"], [551, 1, 1, "", "test_generate_one_from_varied_context"], [551, 1, 1, "", "test_generate_one_no_context"], [551, 1, 1, "", "test_generate_oov_text_seed"], [551, 1, 1, "", "test_generate_with_text_seed"], [551, 1, 1, "", "test_kneserney_trigram_score"], [551, 1, 1, "", "test_laplace_bigram_entropy_perplexity"], [551, 1, 1, "", "test_laplace_bigram_score"], [551, 1, 1, "", "test_laplace_gamma"], [551, 1, 1, "", "test_lidstone_bigram_score"], [551, 1, 1, "", "test_lidstone_entropy_perplexity"], [551, 1, 1, "", "test_lidstone_trigram_score"], [551, 1, 1, "", "test_mle_bigram_entropy_perplexity_seen"], [551, 1, 1, "", "test_mle_bigram_entropy_perplexity_unigrams"], [551, 1, 1, "", "test_mle_bigram_entropy_perplexity_unseen"], [551, 1, 1, "", "test_mle_bigram_logscore_for_zero_score"], [551, 1, 1, "", "test_mle_bigram_scores"], [551, 1, 1, "", "test_mle_trigram_scores"], [551, 1, 1, "", "test_stupid_backoff_trigram_score"], [551, 1, 1, "", "test_sums_to_1"], [551, 1, 1, "", "test_wittenbell_trigram_score"], [551, 1, 1, "", "training_data"], [551, 1, 1, "", "trigram_training_data"], [551, 1, 1, "", "vocabulary"], [551, 1, 1, "", "wittenbell_trigram_model"]], "nltk.test.unit.lm.test_preprocessing": [[552, 3, 1, "", "TestPreprocessing"]], "nltk.test.unit.lm.test_preprocessing.TestPreprocessing": [[552, 4, 1, "", "test_padded_everygram_pipeline"]], "nltk.test.unit.lm.test_vocabulary": [[553, 3, 1, "", "NgramModelVocabularyTests"]], "nltk.test.unit.lm.test_vocabulary.NgramModelVocabularyTests": [[553, 4, 1, "", "setUpClass"], [553, 4, 1, "", "test_counts_set_correctly"], [553, 4, 1, "", "test_creation_with_counter"], [553, 4, 1, "", "test_cutoff_setter_checks_value"], [553, 4, 1, "", "test_cutoff_value_set_correctly"], [553, 4, 1, "", "test_eqality"], [553, 4, 1, "", "test_len_is_constant"], [553, 4, 1, "", "test_lookup"], [553, 4, 1, "", "test_lookup_None"], [553, 4, 1, "", "test_lookup_empty_iterables"], [553, 4, 1, "", "test_lookup_empty_str"], [553, 4, 1, "", "test_lookup_int"], [553, 4, 1, "", "test_lookup_iterables"], [553, 4, 1, "", "test_lookup_recursive"], [553, 4, 1, "", "test_membership_check_respects_cutoff"], [553, 4, 1, "", "test_str"], [553, 4, 1, "", "test_truthiness"], [553, 4, 1, "", "test_unable_to_change_cutoff"], [553, 4, 1, "", "test_update_empty_vocab"], [553, 4, 1, "", "test_vocab_iter_respects_cutoff"], [553, 4, 1, "", "test_vocab_len_respects_cutoff"]], "nltk.test.unit.test_aline": [[554, 1, 1, "", "test_aline"], [554, 1, 1, "", "test_aline_delta"]], "nltk.test.unit.test_bllip": [[555, 3, 1, "", "TestBllipParser"], [555, 1, 1, "", "parser"], [555, 1, 1, "", "setup_module"]], "nltk.test.unit.test_bllip.TestBllipParser": [[555, 4, 1, "", "test_parser_loads_a_valid_tree"], [555, 4, 1, "", "test_tagged_parse_finds_matching_element"]], "nltk.test.unit.test_brill": [[556, 3, 1, "", "TestBrill"]], "nltk.test.unit.test_brill.TestBrill": [[556, 4, 1, "", "test_brill_demo"], [556, 4, 1, "", "test_pos_template"]], "nltk.test.unit.test_cfd_mutation": [[557, 3, 1, "", "TestEmptyCondFreq"]], "nltk.test.unit.test_cfd_mutation.TestEmptyCondFreq": [[557, 4, 1, "", "test_increment"], [557, 4, 1, "", "test_plot"], [557, 4, 1, "", "test_tabulate"]], "nltk.test.unit.test_cfg2chomsky": [[558, 3, 1, "", "ChomskyNormalFormForCFGTest"]], "nltk.test.unit.test_cfg2chomsky.ChomskyNormalFormForCFGTest": [[558, 4, 1, "", "test_complex"], [558, 4, 1, "", "test_simple"]], "nltk.test.unit.test_chunk": [[559, 3, 1, "", "TestChunkRule"]], "nltk.test.unit.test_chunk.TestChunkRule": [[559, 4, 1, "", "test_tag_pattern2re_pattern_quantifier"]], "nltk.test.unit.test_classify": [[560, 1, 1, "", "assert_classifier_correct"], [560, 1, 1, "", "test_megam"], [560, 1, 1, "", "test_tadm"]], "nltk.test.unit.test_collocations": [[561, 1, 1, "", "close_enough"], [561, 1, 1, "", "test_bigram2"], [561, 1, 1, "", "test_bigram3"], [561, 1, 1, "", "test_bigram5"]], "nltk.test.unit.test_concordance": [[562, 3, 1, "", "TestConcordance"], [562, 1, 1, "", "stdout_redirect"]], "nltk.test.unit.test_concordance.TestConcordance": [[562, 4, 1, "", "setUp"], [562, 4, 1, "", "setUpClass"], [562, 4, 1, "", "tearDown"], [562, 4, 1, "", "tearDownClass"], [562, 4, 1, "", "test_concordance_lines"], [562, 4, 1, "", "test_concordance_list"], [562, 4, 1, "", "test_concordance_print"], [562, 4, 1, "", "test_concordance_width"]], "nltk.test.unit.test_corenlp": [[563, 3, 1, "", "TestParserAPI"], [563, 3, 1, "", "TestTaggerAPI"], [563, 3, 1, "", "TestTokenizerAPI"], [563, 1, 1, "", "setup_module"], [563, 1, 1, "", "teardown_module"]], "nltk.test.unit.test_corenlp.TestParserAPI": [[563, 4, 1, "", "test_dependency_parser"], [563, 4, 1, "", "test_parse"]], "nltk.test.unit.test_corenlp.TestTaggerAPI": [[563, 4, 1, "", "test_ner_tagger"], [563, 4, 1, "", "test_pos_tagger"], [563, 4, 1, "", "test_unexpected_tagtype"]], "nltk.test.unit.test_corenlp.TestTokenizerAPI": [[563, 4, 1, "", "test_tokenize"]], "nltk.test.unit.test_corpora": [[564, 3, 1, "", "TestCess"], [564, 3, 1, "", "TestCoNLL2007"], [564, 3, 1, "", "TestFloresta"], [564, 3, 1, "", "TestIndian"], [564, 3, 1, "", "TestMWAPPDB"], [564, 3, 1, "", "TestPTB"], [564, 3, 1, "", "TestSinicaTreebank"], [564, 3, 1, "", "TestUdhr"]], "nltk.test.unit.test_corpora.TestCess": [[564, 4, 1, "", "test_catalan"], [564, 4, 1, "", "test_esp"]], "nltk.test.unit.test_corpora.TestCoNLL2007": [[564, 4, 1, "", "test_parsed_sents"], [564, 4, 1, "", "test_sents"]], "nltk.test.unit.test_corpora.TestFloresta": [[564, 4, 1, "", "test_words"]], "nltk.test.unit.test_corpora.TestIndian": [[564, 4, 1, "", "test_tagged_words"], [564, 4, 1, "", "test_words"]], "nltk.test.unit.test_corpora.TestMWAPPDB": [[564, 5, 1, "", "pytestmark"], [564, 4, 1, "", "test_entries"], [564, 4, 1, "", "test_fileids"]], "nltk.test.unit.test_corpora.TestPTB": [[564, 5, 1, "", "pytestmark"], [564, 4, 1, "", "test_categories"], [564, 4, 1, "", "test_category_words"], [564, 4, 1, "", "test_fileids"], [564, 4, 1, "", "test_news_fileids"], [564, 4, 1, "", "test_tagged_words"], [564, 4, 1, "", "test_words"]], "nltk.test.unit.test_corpora.TestSinicaTreebank": [[564, 4, 1, "", "test_parsed_sents"], [564, 4, 1, "", "test_sents"]], "nltk.test.unit.test_corpora.TestUdhr": [[564, 4, 1, "", "test_polish_encoding"], [564, 4, 1, "", "test_raw_unicode"], [564, 4, 1, "", "test_words"]], "nltk.test.unit.test_corpus_views": [[565, 3, 1, "", "TestCorpusViews"]], "nltk.test.unit.test_corpus_views.TestCorpusViews": [[565, 4, 1, "", "data"], [565, 5, 1, "", "linetok"], [565, 5, 1, "", "names"], [565, 4, 1, "", "test_correct_length"], [565, 4, 1, "", "test_correct_values"]], "nltk.test.unit.test_data": [[566, 1, 1, "", "test_find_raises_exception"], [566, 1, 1, "", "test_find_raises_exception_with_full_resource_name"]], "nltk.test.unit.test_disagreement": [[567, 3, 1, "", "TestDisagreement"]], "nltk.test.unit.test_disagreement.TestDisagreement": [[567, 4, 1, "", "test_advanced"], [567, 4, 1, "", "test_advanced2"], [567, 4, 1, "", "test_easy"], [567, 4, 1, "", "test_easy2"]], "nltk.test.unit.test_distance": [[568, 3, 1, "", "TestEditDistance"]], "nltk.test.unit.test_distance.TestEditDistance": [[568, 4, 1, "", "test_with_transpositions"]], "nltk.test.unit.test_downloader": [[569, 1, 1, "", "test_downloader_using_existing_parent_download_dir"], [569, 1, 1, "", "test_downloader_using_non_existing_parent_download_dir"]], "nltk.test.unit.test_freqdist": [[570, 1, 1, "", "test_iterating_returns_an_iterator_ordered_by_frequency"]], "nltk.test.unit.test_hmm": [[571, 1, 1, "", "setup_module"], [571, 1, 1, "", "test_backward_probability"], [571, 1, 1, "", "test_forward_probability"], [571, 1, 1, "", "test_forward_probability2"]], "nltk.test.unit.test_json2csv_corpus": [[572, 1, 1, "", "files_are_identical"], [572, 1, 1, "", "infile"], [572, 1, 1, "", "test_file_is_wrong"], [572, 1, 1, "", "test_retweet_original_tweet"], [572, 1, 1, "", "test_textoutput"], [572, 1, 1, "", "test_tweet_hashtag"], [572, 1, 1, "", "test_tweet_media"], [572, 1, 1, "", "test_tweet_metadata"], [572, 1, 1, "", "test_tweet_place"], [572, 1, 1, "", "test_tweet_place_boundingbox"], [572, 1, 1, "", "test_tweet_url"], [572, 1, 1, "", "test_tweet_usermention"], [572, 1, 1, "", "test_user_metadata"], [572, 1, 1, "", "test_userurl"]], "nltk.test.unit.test_json_serialization": [[573, 3, 1, "", "TestJSONSerialization"]], "nltk.test.unit.test_json_serialization.TestJSONSerialization": [[573, 4, 1, "", "setUp"], [573, 4, 1, "", "test_affix_tagger"], [573, 4, 1, "", "test_brill_tagger"], [573, 4, 1, "", "test_default_tagger"], [573, 4, 1, "", "test_ngram_taggers"], [573, 4, 1, "", "test_perceptron_tagger"], [573, 4, 1, "", "test_regexp_tagger"]], "nltk.test.unit.test_metrics": [[574, 3, 1, "", "TestLikelihoodRatio"]], "nltk.test.unit.test_metrics.TestLikelihoodRatio": [[574, 4, 1, "", "test_lr_bigram"], [574, 4, 1, "", "test_lr_quadgram"], [574, 4, 1, "", "test_lr_trigram"]], "nltk.test.unit.test_naivebayes": [[575, 3, 1, "", "NaiveBayesClassifierTest"]], "nltk.test.unit.test_naivebayes.NaiveBayesClassifierTest": [[575, 4, 1, "", "test_simple"]], "nltk.test.unit.test_nombank": [[576, 3, 1, "", "NombankDemo"]], "nltk.test.unit.test_nombank.NombankDemo": [[576, 4, 1, "", "test_framefiles_fileids"], [576, 4, 1, "", "test_instance"], [576, 4, 1, "", "test_numbers"]], "nltk.test.unit.test_pl196x": [[577, 3, 1, "", "TestCorpusViews"]], "nltk.test.unit.test_pl196x.TestCorpusViews": [[577, 4, 1, "", "test_corpus_reader"]], "nltk.test.unit.test_pos_tag": [[578, 3, 1, "", "TestPosTag"]], "nltk.test.unit.test_pos_tag.TestPosTag": [[578, 4, 1, "", "test_pos_tag_eng"], [578, 4, 1, "", "test_pos_tag_eng_universal"], [578, 4, 1, "", "test_pos_tag_rus"], [578, 4, 1, "", "test_pos_tag_rus_universal"], [578, 4, 1, "", "test_pos_tag_unknown_lang"], [578, 4, 1, "", "test_unspecified_lang"]], "nltk.test.unit.test_ribes": [[579, 1, 1, "", "test_no_zero_div"], [579, 1, 1, "", "test_ribes"], [579, 1, 1, "", "test_ribes_empty_worder"], [579, 1, 1, "", "test_ribes_one_worder"], [579, 1, 1, "", "test_ribes_two_worder"]], "nltk.test.unit.test_rte_classify": [[580, 3, 1, "", "TestRTEClassifier"]], "nltk.test.unit.test_rte_classify.TestRTEClassifier": [[580, 4, 1, "", "test_feature_extractor_object"], [580, 4, 1, "", "test_rte_classification_with_megam"], [580, 4, 1, "", "test_rte_classification_without_megam"], [580, 4, 1, "", "test_rte_feature_extraction"]], "nltk.test.unit.test_seekable_unicode_stream_reader": [[581, 1, 1, "", "check_reader"], [581, 1, 1, "", "teardown_module"], [581, 1, 1, "", "test_reader"], [581, 1, 1, "", "test_reader_stream_closes_when_deleted"]], "nltk.test.unit.test_senna": [[582, 3, 1, "", "TestSennaPipeline"], [582, 3, 1, "", "TestSennaTagger"]], "nltk.test.unit.test_senna.TestSennaPipeline": [[582, 4, 1, "", "test_senna_pipeline"]], "nltk.test.unit.test_senna.TestSennaTagger": [[582, 4, 1, "", "test_senna_chunk_tagger"], [582, 4, 1, "", "test_senna_ner_tagger"], [582, 4, 1, "", "test_senna_tagger"]], "nltk.test.unit.test_stem": [[583, 3, 1, "", "PorterTest"], [583, 3, 1, "", "SnowballTest"]], "nltk.test.unit.test_stem.PorterTest": [[583, 4, 1, "", "test_lowercase_option"], [583, 4, 1, "", "test_oed_bug"], [583, 4, 1, "", "test_vocabulary_martin_mode"], [583, 4, 1, "", "test_vocabulary_nltk_mode"], [583, 4, 1, "", "test_vocabulary_original_mode"]], "nltk.test.unit.test_stem.SnowballTest": [[583, 4, 1, "", "test_arabic"], [583, 4, 1, "", "test_german"], [583, 4, 1, "", "test_russian"], [583, 4, 1, "", "test_short_strings_bug"], [583, 4, 1, "", "test_spanish"]], "nltk.test.unit.test_tag": [[584, 1, 1, "", "setup_module"], [584, 1, 1, "", "test_basic"]], "nltk.test.unit.test_tgrep": [[585, 3, 1, "", "TestSequenceFunctions"]], "nltk.test.unit.test_tgrep.TestSequenceFunctions": [[585, 4, 1, "", "test_bad_operator"], [585, 4, 1, "", "test_comments"], [585, 4, 1, "", "test_examples"], [585, 4, 1, "", "test_labeled_nodes"], [585, 4, 1, "", "test_multiple_conjs"], [585, 4, 1, "", "test_node_encoding"], [585, 4, 1, "", "test_node_nocase"], [585, 4, 1, "", "test_node_noleaves"], [585, 4, 1, "", "test_node_printing"], [585, 4, 1, "", "test_node_quoted"], [585, 4, 1, "", "test_node_regex"], [585, 4, 1, "", "test_node_regex_2"], [585, 4, 1, "", "test_node_simple"], [585, 4, 1, "", "test_node_tree_position"], [585, 4, 1, "", "test_rel_precedence"], [585, 4, 1, "", "test_rel_sister_nodes"], [585, 4, 1, "", "test_tokenize_encoding"], [585, 4, 1, "", "test_tokenize_examples"], [585, 4, 1, "", "test_tokenize_link_types"], [585, 4, 1, "", "test_tokenize_macros"], [585, 4, 1, "", "test_tokenize_node_labels"], [585, 4, 1, "", "test_tokenize_nodenames"], [585, 4, 1, "", "test_tokenize_quoting"], [585, 4, 1, "", "test_tokenize_segmented_patterns"], [585, 4, 1, "", "test_tokenize_simple"], [585, 4, 1, "", "test_trailing_semicolon"], [585, 4, 1, "", "test_use_macros"], [585, 4, 1, "", "tests_rel_dominance"], [585, 4, 1, "", "tests_rel_indexed_children"]], "nltk.test.unit.test_tokenize": [[586, 3, 1, "", "TestTokenize"], [586, 1, 1, "", "load_stanford_segmenter"]], "nltk.test.unit.test_tokenize.TestTokenize": [[586, 4, 1, "", "punkt_debug_decisions"], [586, 4, 1, "", "test_emoji_tokenizer"], [586, 4, 1, "", "test_legality_principle_syllable_tokenizer"], [586, 4, 1, "", "test_pad_asterisk"], [586, 4, 1, "", "test_pad_dotdot"], [586, 4, 1, "", "test_phone_tokenizer"], [586, 4, 1, "", "test_punkt_debug_decisions_custom_end"], [586, 4, 1, "", "test_punkt_pair_iter"], [586, 4, 1, "", "test_punkt_pair_iter_handles_stop_iteration_exception"], [586, 4, 1, "", "test_punkt_tokenize_custom_lang_vars"], [586, 4, 1, "", "test_punkt_tokenize_no_custom_lang_vars"], [586, 4, 1, "", "test_punkt_tokenize_words_handles_stop_iteration_exception"], [586, 4, 1, "", "test_remove_handle"], [586, 4, 1, "", "test_sent_tokenize"], [586, 4, 1, "", "test_sonority_sequencing_syllable_tokenizer"], [586, 4, 1, "", "test_stanford_segmenter_arabic"], [586, 4, 1, "", "test_stanford_segmenter_chinese"], [586, 4, 1, "", "test_syllable_tokenizer_numbers"], [586, 4, 1, "", "test_treebank_span_tokenizer"], [586, 4, 1, "", "test_tweet_tokenizer"], [586, 4, 1, "", "test_tweet_tokenizer_expanded"], [586, 4, 1, "", "test_word_tokenize"]], "nltk.test.unit.test_twitter_auth": [[587, 3, 1, "", "TestCredentials"], [587, 1, 1, "", "auth"]], "nltk.test.unit.test_twitter_auth.TestCredentials": [[587, 4, 1, "", "setup_class"], [587, 4, 1, "", "test_correct_file"], [587, 4, 1, "", "test_environment"], [587, 4, 1, "", "test_scenarios_that_should_raise_errors"]], "nltk.test.unit.test_util": [[588, 1, 1, "", "everygram_input"], [588, 1, 1, "", "test_everygrams_max_len"], [588, 1, 1, "", "test_everygrams_min_len"], [588, 1, 1, "", "test_everygrams_pad_left"], [588, 1, 1, "", "test_everygrams_pad_right"], [588, 1, 1, "", "test_everygrams_without_padding"]], "nltk.test.unit.test_wordnet": [[589, 3, 1, "", "WordnNetDemo"]], "nltk.test.unit.test_wordnet.WordnNetDemo": [[589, 4, 1, "", "test_antonyms"], [589, 4, 1, "", "test_derivationally_related_forms"], [589, 4, 1, "", "test_domains"], [589, 4, 1, "", "test_hyperhyponyms"], [589, 4, 1, "", "test_in_topic_domains"], [589, 4, 1, "", "test_iterable_type_for_all_lemma_names"], [589, 4, 1, "", "test_lch"], [589, 4, 1, "", "test_meronyms_holonyms"], [589, 4, 1, "", "test_misc_relations"], [589, 4, 1, "", "test_omw_lemma_no_trailing_underscore"], [589, 4, 1, "", "test_retrieve_synset"], [589, 4, 1, "", "test_retrieve_synsets"], [589, 4, 1, "", "test_wordnet_similarities"]], "nltk.test.unit.translate": [[591, 0, 0, "-", "test_bleu"], [592, 0, 0, "-", "test_gdfa"], [593, 0, 0, "-", "test_ibm1"], [594, 0, 0, "-", "test_ibm2"], [595, 0, 0, "-", "test_ibm3"], [596, 0, 0, "-", "test_ibm4"], [597, 0, 0, "-", "test_ibm5"], [598, 0, 0, "-", "test_ibm_model"], [599, 0, 0, "-", "test_meteor"], [600, 0, 0, "-", "test_nist"], [601, 0, 0, "-", "test_stack_decoder"]], "nltk.test.unit.translate.test_bleu": [[591, 3, 1, "", "TestBLEU"], [591, 3, 1, "", "TestBLEUFringeCases"], [591, 3, 1, "", "TestBLEUWithBadSentence"], [591, 3, 1, "", "TestBLEUWithMultipleWeights"], [591, 3, 1, "", "TestBLEUvsMteval13a"]], "nltk.test.unit.translate.test_bleu.TestBLEU": [[591, 4, 1, "", "test_brevity_penalty"], [591, 4, 1, "", "test_full_matches"], [591, 4, 1, "", "test_modified_precision"], [591, 4, 1, "", "test_partial_matches_hypothesis_longer_than_reference"], [591, 4, 1, "", "test_zero_matches"]], "nltk.test.unit.translate.test_bleu.TestBLEUFringeCases": [[591, 4, 1, "", "test_case_where_n_is_bigger_than_hypothesis_length"], [591, 4, 1, "", "test_empty_hypothesis"], [591, 4, 1, "", "test_empty_references"], [591, 4, 1, "", "test_empty_references_and_hypothesis"], [591, 4, 1, "", "test_length_one_hypothesis"], [591, 4, 1, "", "test_reference_or_hypothesis_shorter_than_fourgrams"]], "nltk.test.unit.translate.test_bleu.TestBLEUWithBadSentence": [[591, 4, 1, "", "test_corpus_bleu_with_bad_sentence"]], "nltk.test.unit.translate.test_bleu.TestBLEUWithMultipleWeights": [[591, 4, 1, "", "test_corpus_bleu_with_multiple_weights"]], "nltk.test.unit.translate.test_bleu.TestBLEUvsMteval13a": [[591, 4, 1, "", "test_corpus_bleu"]], "nltk.test.unit.translate.test_gdfa": [[592, 3, 1, "", "TestGDFA"]], "nltk.test.unit.translate.test_gdfa.TestGDFA": [[592, 4, 1, "", "test_from_eflomal_outputs"]], "nltk.test.unit.translate.test_ibm1": [[593, 3, 1, "", "TestIBMModel1"]], "nltk.test.unit.translate.test_ibm1.TestIBMModel1": [[593, 4, 1, "", "test_prob_t_a_given_s"], [593, 4, 1, "", "test_set_uniform_translation_probabilities"], [593, 4, 1, "", "test_set_uniform_translation_probabilities_of_non_domain_values"]], "nltk.test.unit.translate.test_ibm2": [[594, 3, 1, "", "TestIBMModel2"]], "nltk.test.unit.translate.test_ibm2.TestIBMModel2": [[594, 4, 1, "", "test_prob_t_a_given_s"], [594, 4, 1, "", "test_set_uniform_alignment_probabilities"], [594, 4, 1, "", "test_set_uniform_alignment_probabilities_of_non_domain_values"]], "nltk.test.unit.translate.test_ibm3": [[595, 3, 1, "", "TestIBMModel3"]], "nltk.test.unit.translate.test_ibm3.TestIBMModel3": [[595, 4, 1, "", "test_prob_t_a_given_s"], [595, 4, 1, "", "test_set_uniform_distortion_probabilities"], [595, 4, 1, "", "test_set_uniform_distortion_probabilities_of_non_domain_values"]], "nltk.test.unit.translate.test_ibm4": [[596, 3, 1, "", "TestIBMModel4"]], "nltk.test.unit.translate.test_ibm4.TestIBMModel4": [[596, 4, 1, "", "test_prob_t_a_given_s"], [596, 4, 1, "", "test_set_uniform_distortion_probabilities_of_max_displacements"], [596, 4, 1, "", "test_set_uniform_distortion_probabilities_of_non_domain_values"]], "nltk.test.unit.translate.test_ibm5": [[597, 3, 1, "", "TestIBMModel5"]], "nltk.test.unit.translate.test_ibm5.TestIBMModel5": [[597, 4, 1, "", "test_prob_t_a_given_s"], [597, 4, 1, "", "test_prune"], [597, 4, 1, "", "test_set_uniform_vacancy_probabilities_of_max_displacements"], [597, 4, 1, "", "test_set_uniform_vacancy_probabilities_of_non_domain_values"]], "nltk.test.unit.translate.test_ibm_model": [[598, 3, 1, "", "TestIBMModel"]], "nltk.test.unit.translate.test_ibm_model.TestIBMModel": [[598, 4, 1, "", "test_best_model2_alignment"], [598, 4, 1, "", "test_best_model2_alignment_does_not_change_pegged_alignment"], [598, 4, 1, "", "test_best_model2_alignment_handles_empty_src_sentence"], [598, 4, 1, "", "test_best_model2_alignment_handles_empty_trg_sentence"], [598, 4, 1, "", "test_best_model2_alignment_handles_fertile_words"], [598, 4, 1, "", "test_hillclimb"], [598, 4, 1, "", "test_neighboring_finds_neighbor_alignments"], [598, 4, 1, "", "test_neighboring_returns_neighbors_with_pegged_alignment"], [598, 4, 1, "", "test_neighboring_sets_neighbor_alignment_info"], [598, 4, 1, "", "test_sample"], [598, 4, 1, "", "test_vocabularies_are_initialized"], [598, 4, 1, "", "test_vocabularies_are_initialized_even_with_empty_corpora"]], "nltk.test.unit.translate.test_meteor": [[599, 3, 1, "", "TestMETEOR"]], "nltk.test.unit.translate.test_meteor.TestMETEOR": [[599, 5, 1, "", "candidate"], [599, 5, 1, "", "reference"], [599, 4, 1, "", "test_candidate_type_check"], [599, 4, 1, "", "test_meteor"], [599, 4, 1, "", "test_reference_type_check"]], "nltk.test.unit.translate.test_nist": [[600, 3, 1, "", "TestNIST"]], "nltk.test.unit.translate.test_nist.TestNIST": [[600, 4, 1, "", "test_sentence_nist"]], "nltk.test.unit.translate.test_stack_decoder": [[601, 3, 1, "", "TestHypothesis"], [601, 3, 1, "", "TestStack"], [601, 3, 1, "", "TestStackDecoder"]], "nltk.test.unit.translate.test_stack_decoder.TestHypothesis": [[601, 4, 1, "", "setUp"], [601, 4, 1, "", "test_total_translated_words"], [601, 4, 1, "", "test_translated_positions"], [601, 4, 1, "", "test_translation_so_far"], [601, 4, 1, "", "test_translation_so_far_for_empty_hypothesis"], [601, 4, 1, "", "test_untranslated_spans"], [601, 4, 1, "", "test_untranslated_spans_for_empty_hypothesis"]], "nltk.test.unit.translate.test_stack_decoder.TestStack": [[601, 4, 1, "", "test_best_returns_none_when_stack_is_empty"], [601, 4, 1, "", "test_best_returns_the_best_hypothesis"], [601, 4, 1, "", "test_push_bumps_off_worst_hypothesis_when_stack_is_full"], [601, 4, 1, "", "test_push_does_not_add_hypothesis_that_falls_below_beam_threshold"], [601, 4, 1, "", "test_push_removes_hypotheses_that_fall_below_beam_threshold"]], "nltk.test.unit.translate.test_stack_decoder.TestStackDecoder": [[601, 4, 1, "", "create_fake_language_model"], [601, 4, 1, "", "create_fake_phrase_table"], [601, 4, 1, "", "test_compute_future_costs"], [601, 4, 1, "", "test_compute_future_costs_for_phrases_not_in_phrase_table"], [601, 4, 1, "", "test_distortion_score"], [601, 4, 1, "", "test_distortion_score_of_first_expansion"], [601, 4, 1, "", "test_find_all_src_phrases"], [601, 4, 1, "", "test_future_score"], [601, 4, 1, "", "test_valid_phrases"]], "nltk.text": [[603, 3, 1, "", "ConcordanceIndex"], [604, 3, 1, "", "ContextIndex"], [605, 3, 1, "", "Text"], [606, 3, 1, "", "TextCollection"], [607, 3, 1, "", "TokenSearcher"]], "nltk.text.ConcordanceIndex": [[603, 4, 1, "", "__init__"], [603, 4, 1, "", "find_concordance"], [603, 4, 1, "", "offsets"], [603, 4, 1, "", "print_concordance"], [603, 4, 1, "", "tokens"]], "nltk.text.ContextIndex": [[604, 4, 1, "", "__init__"], [604, 4, 1, "", "common_contexts"], [604, 4, 1, "", "similar_words"], [604, 4, 1, "", "tokens"], [604, 4, 1, "", "word_similarity_dict"]], "nltk.text.Text": [[605, 4, 1, "", "__init__"], [605, 4, 1, "", "collocation_list"], [605, 4, 1, "", "collocations"], [605, 4, 1, "", "common_contexts"], [605, 4, 1, "", "concordance"], [605, 4, 1, "", "concordance_list"], [605, 4, 1, "", "count"], [605, 4, 1, "", "dispersion_plot"], [605, 4, 1, "", "findall"], [605, 4, 1, "", "generate"], [605, 4, 1, "", "index"], [605, 4, 1, "", "plot"], [605, 4, 1, "", "readability"], [605, 4, 1, "", "similar"], [605, 4, 1, "", "vocab"]], "nltk.text.TextCollection": [[606, 4, 1, "", "__init__"], [606, 4, 1, "", "collocation_list"], [606, 4, 1, "", "collocations"], [606, 4, 1, "", "common_contexts"], [606, 4, 1, "", "concordance"], [606, 4, 1, "", "concordance_list"], [606, 4, 1, "", "count"], [606, 4, 1, "", "dispersion_plot"], [606, 4, 1, "", "findall"], [606, 4, 1, "", "generate"], [606, 4, 1, "", "idf"], [606, 4, 1, "", "index"], [606, 4, 1, "", "plot"], [606, 4, 1, "", "readability"], [606, 4, 1, "", "similar"], [606, 4, 1, "", "tf"], [606, 4, 1, "", "tf_idf"], [606, 4, 1, "", "vocab"]], "nltk.text.TokenSearcher": [[607, 4, 1, "", "__init__"], [607, 4, 1, "", "findall"]], "nltk.tgrep": [[608, 7, 1, "", "TgrepException"], [609, 1, 1, "", "ancestors"], [610, 1, 1, "", "tgrep_compile"], [611, 1, 1, "", "tgrep_nodes"], [612, 1, 1, "", "tgrep_positions"], [613, 1, 1, "", "tgrep_tokenize"], [614, 1, 1, "", "treepositions_no_leaves"], [615, 1, 1, "", "unique_ancestors"]], "nltk.tokenize": [[617, 3, 1, "", "BlanklineTokenizer"], [618, 3, 1, "", "LegalitySyllableTokenizer"], [619, 3, 1, "", "LineTokenizer"], [620, 3, 1, "", "MWETokenizer"], [621, 3, 1, "", "NLTKWordTokenizer"], [622, 3, 1, "", "PunktSentenceTokenizer"], [623, 3, 1, "", "RegexpTokenizer"], [624, 3, 1, "", "ReppTokenizer"], [625, 3, 1, "", "SExprTokenizer"], [626, 3, 1, "", "SpaceTokenizer"], [627, 3, 1, "", "StanfordSegmenter"], [628, 3, 1, "", "SyllableTokenizer"], [629, 3, 1, "", "TabTokenizer"], [630, 3, 1, "", "TextTilingTokenizer"], [631, 3, 1, "", "ToktokTokenizer"], [632, 3, 1, "", "TreebankWordDetokenizer"], [633, 3, 1, "", "TreebankWordTokenizer"], [634, 3, 1, "", "TweetTokenizer"], [635, 3, 1, "", "WhitespaceTokenizer"], [636, 3, 1, "", "WordPunctTokenizer"], [637, 0, 0, "-", "api"], [638, 1, 1, "", "blankline_tokenize"], [639, 0, 0, "-", "casual"], [640, 1, 1, "", "casual_tokenize"], [641, 0, 0, "-", "destructive"], [642, 0, 0, "-", "legality_principle"], [643, 1, 1, "", "line_tokenize"], [644, 0, 0, "-", "mwe"], [645, 0, 0, "-", "nist"], [646, 0, 0, "-", "punkt"], [647, 0, 0, "-", "regexp"], [648, 1, 1, "", "regexp_tokenize"], [649, 0, 0, "-", "repp"], [650, 1, 1, "", "sent_tokenize"], [651, 0, 0, "-", "sexpr"], [652, 1, 1, "", "sexpr_tokenize"], [653, 0, 0, "-", "simple"], [654, 0, 0, "-", "sonority_sequencing"], [655, 0, 0, "-", "stanford"], [656, 0, 0, "-", "stanford_segmenter"], [657, 0, 0, "-", "texttiling"], [658, 0, 0, "-", "toktok"], [659, 0, 0, "-", "treebank"], [660, 0, 0, "-", "util"], [661, 1, 1, "", "word_tokenize"], [662, 1, 1, "", "wordpunct_tokenize"]], "nltk.tokenize.BlanklineTokenizer": [[617, 4, 1, "", "__init__"], [617, 4, 1, "", "span_tokenize"], [617, 4, 1, "", "span_tokenize_sents"], [617, 4, 1, "", "tokenize"], [617, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.LegalitySyllableTokenizer": [[618, 4, 1, "", "__init__"], [618, 4, 1, "", "find_legal_onsets"], [618, 4, 1, "", "onset"], [618, 4, 1, "", "span_tokenize"], [618, 4, 1, "", "span_tokenize_sents"], [618, 4, 1, "", "tokenize"], [618, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.LineTokenizer": [[619, 4, 1, "", "__init__"], [619, 4, 1, "", "span_tokenize"], [619, 4, 1, "", "span_tokenize_sents"], [619, 4, 1, "", "tokenize"], [619, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.MWETokenizer": [[620, 4, 1, "", "__init__"], [620, 4, 1, "", "add_mwe"], [620, 4, 1, "", "span_tokenize"], [620, 4, 1, "", "span_tokenize_sents"], [620, 4, 1, "", "tokenize"], [620, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.NLTKWordTokenizer": [[621, 5, 1, "", "CONTRACTIONS2"], [621, 5, 1, "", "CONTRACTIONS3"], [621, 5, 1, "", "CONVERT_PARENTHESES"], [621, 5, 1, "", "DOUBLE_DASHES"], [621, 5, 1, "", "ENDING_QUOTES"], [621, 5, 1, "", "PARENS_BRACKETS"], [621, 5, 1, "", "PUNCTUATION"], [621, 5, 1, "", "STARTING_QUOTES"], [621, 4, 1, "", "span_tokenize"], [621, 4, 1, "", "span_tokenize_sents"], [621, 4, 1, "", "tokenize"], [621, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.PunktSentenceTokenizer": [[622, 5, 1, "", "PUNCTUATION"], [622, 4, 1, "", "__init__"], [622, 4, 1, "", "debug_decisions"], [622, 4, 1, "", "dump"], [622, 4, 1, "", "sentences_from_text"], [622, 4, 1, "", "sentences_from_text_legacy"], [622, 4, 1, "", "sentences_from_tokens"], [622, 4, 1, "", "span_tokenize"], [622, 4, 1, "", "span_tokenize_sents"], [622, 4, 1, "", "text_contains_sentbreak"], [622, 4, 1, "", "tokenize"], [622, 4, 1, "", "tokenize_sents"], [622, 4, 1, "", "train"]], "nltk.tokenize.RegexpTokenizer": [[623, 4, 1, "", "__init__"], [623, 4, 1, "", "span_tokenize"], [623, 4, 1, "", "span_tokenize_sents"], [623, 4, 1, "", "tokenize"], [623, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.ReppTokenizer": [[624, 4, 1, "", "__init__"], [624, 4, 1, "", "find_repptokenizer"], [624, 4, 1, "", "generate_repp_command"], [624, 4, 1, "", "parse_repp_outputs"], [624, 4, 1, "", "span_tokenize"], [624, 4, 1, "", "span_tokenize_sents"], [624, 4, 1, "", "tokenize"], [624, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.SExprTokenizer": [[625, 4, 1, "", "__init__"], [625, 4, 1, "", "span_tokenize"], [625, 4, 1, "", "span_tokenize_sents"], [625, 4, 1, "", "tokenize"], [625, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.SpaceTokenizer": [[626, 4, 1, "", "span_tokenize"], [626, 4, 1, "", "span_tokenize_sents"], [626, 4, 1, "", "tokenize"], [626, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.StanfordSegmenter": [[627, 4, 1, "", "__init__"], [627, 4, 1, "", "default_config"], [627, 4, 1, "", "segment"], [627, 4, 1, "", "segment_file"], [627, 4, 1, "", "segment_sents"], [627, 4, 1, "", "span_tokenize"], [627, 4, 1, "", "span_tokenize_sents"], [627, 4, 1, "", "tokenize"], [627, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.SyllableTokenizer": [[628, 4, 1, "", "__init__"], [628, 4, 1, "", "assign_values"], [628, 4, 1, "", "span_tokenize"], [628, 4, 1, "", "span_tokenize_sents"], [628, 4, 1, "", "tokenize"], [628, 4, 1, "", "tokenize_sents"], [628, 4, 1, "", "validate_syllables"]], "nltk.tokenize.TabTokenizer": [[629, 4, 1, "", "span_tokenize"], [629, 4, 1, "", "span_tokenize_sents"], [629, 4, 1, "", "tokenize"], [629, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.TextTilingTokenizer": [[630, 4, 1, "", "__init__"], [630, 4, 1, "", "span_tokenize"], [630, 4, 1, "", "span_tokenize_sents"], [630, 4, 1, "", "tokenize"], [630, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.ToktokTokenizer": [[631, 5, 1, "", "AMPERCENT"], [631, 5, 1, "", "CLOSE_PUNCT"], [631, 5, 1, "", "CLOSE_PUNCT_RE"], [631, 5, 1, "", "COMMA_IN_NUM"], [631, 5, 1, "", "CURRENCY_SYM"], [631, 5, 1, "", "CURRENCY_SYM_RE"], [631, 5, 1, "", "EN_EM_DASHES"], [631, 5, 1, "", "FINAL_PERIOD_1"], [631, 5, 1, "", "FINAL_PERIOD_2"], [631, 5, 1, "", "FUNKY_PUNCT_1"], [631, 5, 1, "", "FUNKY_PUNCT_2"], [631, 5, 1, "", "LSTRIP"], [631, 5, 1, "", "MULTI_COMMAS"], [631, 5, 1, "", "MULTI_DASHES"], [631, 5, 1, "", "MULTI_DOTS"], [631, 5, 1, "", "NON_BREAKING"], [631, 5, 1, "", "ONE_SPACE"], [631, 5, 1, "", "OPEN_PUNCT"], [631, 5, 1, "", "OPEN_PUNCT_RE"], [631, 5, 1, "", "PIPE"], [631, 5, 1, "", "PROB_SINGLE_QUOTES"], [631, 5, 1, "", "RSTRIP"], [631, 5, 1, "", "STUPID_QUOTES_1"], [631, 5, 1, "", "STUPID_QUOTES_2"], [631, 5, 1, "", "TAB"], [631, 5, 1, "", "TOKTOK_REGEXES"], [631, 5, 1, "", "URL_FOE_1"], [631, 5, 1, "", "URL_FOE_2"], [631, 5, 1, "", "URL_FOE_3"], [631, 5, 1, "", "URL_FOE_4"], [631, 4, 1, "", "span_tokenize"], [631, 4, 1, "", "span_tokenize_sents"], [631, 4, 1, "", "tokenize"], [631, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.TreebankWordDetokenizer": [[632, 5, 1, "", "CONTRACTIONS2"], [632, 5, 1, "", "CONTRACTIONS3"], [632, 5, 1, "", "CONVERT_PARENTHESES"], [632, 5, 1, "", "DOUBLE_DASHES"], [632, 5, 1, "", "ENDING_QUOTES"], [632, 5, 1, "", "PARENS_BRACKETS"], [632, 5, 1, "", "PUNCTUATION"], [632, 5, 1, "", "STARTING_QUOTES"], [632, 4, 1, "", "detokenize"], [632, 4, 1, "", "span_tokenize"], [632, 4, 1, "", "span_tokenize_sents"], [632, 4, 1, "", "tokenize"], [632, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.TreebankWordTokenizer": [[633, 5, 1, "", "CONTRACTIONS2"], [633, 5, 1, "", "CONTRACTIONS3"], [633, 5, 1, "", "CONVERT_PARENTHESES"], [633, 5, 1, "", "DOUBLE_DASHES"], [633, 5, 1, "", "ENDING_QUOTES"], [633, 5, 1, "", "PARENS_BRACKETS"], [633, 5, 1, "", "PUNCTUATION"], [633, 5, 1, "", "STARTING_QUOTES"], [633, 4, 1, "", "span_tokenize"], [633, 4, 1, "", "span_tokenize_sents"], [633, 4, 1, "", "tokenize"], [633, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.TweetTokenizer": [[634, 6, 1, "", "PHONE_WORD_RE"], [634, 6, 1, "", "WORD_RE"], [634, 4, 1, "", "__init__"], [634, 4, 1, "", "span_tokenize"], [634, 4, 1, "", "span_tokenize_sents"], [634, 4, 1, "", "tokenize"], [634, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.WhitespaceTokenizer": [[635, 4, 1, "", "__init__"], [635, 4, 1, "", "span_tokenize"], [635, 4, 1, "", "span_tokenize_sents"], [635, 4, 1, "", "tokenize"], [635, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.WordPunctTokenizer": [[636, 4, 1, "", "__init__"], [636, 4, 1, "", "span_tokenize"], [636, 4, 1, "", "span_tokenize_sents"], [636, 4, 1, "", "tokenize"], [636, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.api": [[637, 3, 1, "", "StringTokenizer"], [637, 3, 1, "", "TokenizerI"]], "nltk.tokenize.api.StringTokenizer": [[637, 4, 1, "", "span_tokenize"], [637, 4, 1, "", "tokenize"]], "nltk.tokenize.api.TokenizerI": [[637, 4, 1, "", "span_tokenize"], [637, 4, 1, "", "span_tokenize_sents"], [637, 4, 1, "", "tokenize"], [637, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.casual": [[639, 3, 1, "", "TweetTokenizer"], [639, 1, 1, "", "casual_tokenize"], [639, 1, 1, "", "reduce_lengthening"], [639, 1, 1, "", "remove_handles"]], "nltk.tokenize.casual.TweetTokenizer": [[639, 6, 1, "", "PHONE_WORD_RE"], [639, 6, 1, "", "WORD_RE"], [639, 4, 1, "", "__init__"], [639, 4, 1, "", "tokenize"]], "nltk.tokenize.destructive": [[641, 3, 1, "", "MacIntyreContractions"], [641, 3, 1, "", "NLTKWordTokenizer"]], "nltk.tokenize.destructive.MacIntyreContractions": [[641, 5, 1, "", "CONTRACTIONS2"], [641, 5, 1, "", "CONTRACTIONS3"], [641, 5, 1, "", "CONTRACTIONS4"]], "nltk.tokenize.destructive.NLTKWordTokenizer": [[641, 5, 1, "", "CONTRACTIONS2"], [641, 5, 1, "", "CONTRACTIONS3"], [641, 5, 1, "", "CONVERT_PARENTHESES"], [641, 5, 1, "", "DOUBLE_DASHES"], [641, 5, 1, "", "ENDING_QUOTES"], [641, 5, 1, "", "PARENS_BRACKETS"], [641, 5, 1, "", "PUNCTUATION"], [641, 5, 1, "", "STARTING_QUOTES"], [641, 4, 1, "", "span_tokenize"], [641, 4, 1, "", "tokenize"]], "nltk.tokenize.legality_principle": [[642, 3, 1, "", "LegalitySyllableTokenizer"]], "nltk.tokenize.legality_principle.LegalitySyllableTokenizer": [[642, 4, 1, "", "__init__"], [642, 4, 1, "", "find_legal_onsets"], [642, 4, 1, "", "onset"], [642, 4, 1, "", "tokenize"]], "nltk.tokenize.mwe": [[644, 3, 1, "", "MWETokenizer"]], "nltk.tokenize.mwe.MWETokenizer": [[644, 4, 1, "", "__init__"], [644, 4, 1, "", "add_mwe"], [644, 4, 1, "", "tokenize"]], "nltk.tokenize.nist": [[645, 3, 1, "", "NISTTokenizer"]], "nltk.tokenize.nist.NISTTokenizer": [[645, 5, 1, "", "DASH_PRECEED_DIGIT"], [645, 5, 1, "", "INTERNATIONAL_REGEXES"], [645, 5, 1, "", "LANG_DEPENDENT_REGEXES"], [645, 5, 1, "", "NONASCII"], [645, 5, 1, "", "PERIOD_COMMA_FOLLOW"], [645, 5, 1, "", "PERIOD_COMMA_PRECEED"], [645, 5, 1, "", "PUNCT"], [645, 5, 1, "", "PUNCT_1"], [645, 5, 1, "", "PUNCT_2"], [645, 5, 1, "", "STRIP_EOL_HYPHEN"], [645, 5, 1, "", "STRIP_SKIP"], [645, 5, 1, "", "SYMBOLS"], [645, 4, 1, "", "international_tokenize"], [645, 4, 1, "", "lang_independent_sub"], [645, 5, 1, "", "number_regex"], [645, 5, 1, "", "punct_regex"], [645, 5, 1, "", "pup_number"], [645, 5, 1, "", "pup_punct"], [645, 5, 1, "", "pup_symbol"], [645, 5, 1, "", "symbol_regex"], [645, 4, 1, "", "tokenize"]], "nltk.tokenize.punkt": [[646, 3, 1, "", "PunktBaseClass"], [646, 3, 1, "", "PunktLanguageVars"], [646, 3, 1, "", "PunktParameters"], [646, 3, 1, "", "PunktSentenceTokenizer"], [646, 3, 1, "", "PunktToken"], [646, 3, 1, "", "PunktTrainer"], [646, 1, 1, "", "demo"], [646, 1, 1, "", "format_debug_decision"]], "nltk.tokenize.punkt.PunktBaseClass": [[646, 4, 1, "", "__init__"]], "nltk.tokenize.punkt.PunktLanguageVars": [[646, 5, 1, "", "internal_punctuation"], [646, 4, 1, "", "period_context_re"], [646, 5, 1, "", "re_boundary_realignment"], [646, 5, 1, "", "sent_end_chars"], [646, 4, 1, "", "word_tokenize"]], "nltk.tokenize.punkt.PunktParameters": [[646, 4, 1, "", "__init__"], [646, 5, 1, "", "abbrev_types"], [646, 4, 1, "", "add_ortho_context"], [646, 4, 1, "", "clear_abbrevs"], [646, 4, 1, "", "clear_collocations"], [646, 4, 1, "", "clear_ortho_context"], [646, 4, 1, "", "clear_sent_starters"], [646, 5, 1, "", "collocations"], [646, 5, 1, "", "ortho_context"], [646, 5, 1, "", "sent_starters"]], "nltk.tokenize.punkt.PunktSentenceTokenizer": [[646, 5, 1, "", "PUNCTUATION"], [646, 4, 1, "", "__init__"], [646, 4, 1, "", "debug_decisions"], [646, 4, 1, "", "dump"], [646, 4, 1, "", "sentences_from_text"], [646, 4, 1, "", "sentences_from_text_legacy"], [646, 4, 1, "", "sentences_from_tokens"], [646, 4, 1, "", "span_tokenize"], [646, 4, 1, "", "text_contains_sentbreak"], [646, 4, 1, "", "tokenize"], [646, 4, 1, "", "train"]], "nltk.tokenize.punkt.PunktToken": [[646, 4, 1, "", "__init__"], [646, 5, 1, "", "abbr"], [646, 5, 1, "", "ellipsis"], [646, 6, 1, "", "first_case"], [646, 6, 1, "", "first_lower"], [646, 6, 1, "", "first_upper"], [646, 6, 1, "", "is_alpha"], [646, 6, 1, "", "is_ellipsis"], [646, 6, 1, "", "is_initial"], [646, 6, 1, "", "is_non_punct"], [646, 6, 1, "", "is_number"], [646, 5, 1, "", "linestart"], [646, 5, 1, "", "parastart"], [646, 5, 1, "", "period_final"], [646, 5, 1, "", "sentbreak"], [646, 5, 1, "", "tok"], [646, 5, 1, "", "type"], [646, 6, 1, "", "type_no_period"], [646, 6, 1, "", "type_no_sentperiod"]], "nltk.tokenize.punkt.PunktTrainer": [[646, 5, 1, "", "ABBREV"], [646, 5, 1, "", "ABBREV_BACKOFF"], [646, 5, 1, "", "COLLOCATION"], [646, 5, 1, "", "IGNORE_ABBREV_PENALTY"], [646, 5, 1, "", "INCLUDE_ABBREV_COLLOCS"], [646, 5, 1, "", "INCLUDE_ALL_COLLOCS"], [646, 5, 1, "", "MIN_COLLOC_FREQ"], [646, 5, 1, "", "SENT_STARTER"], [646, 4, 1, "", "__init__"], [646, 4, 1, "", "finalize_training"], [646, 4, 1, "", "find_abbrev_types"], [646, 4, 1, "", "freq_threshold"], [646, 4, 1, "", "get_params"], [646, 4, 1, "", "train"], [646, 4, 1, "", "train_tokens"]], "nltk.tokenize.regexp": [[647, 3, 1, "", "BlanklineTokenizer"], [647, 3, 1, "", "RegexpTokenizer"], [647, 3, 1, "", "WhitespaceTokenizer"], [647, 3, 1, "", "WordPunctTokenizer"], [647, 1, 1, "", "blankline_tokenize"], [647, 1, 1, "", "regexp_tokenize"], [647, 1, 1, "", "wordpunct_tokenize"]], "nltk.tokenize.regexp.BlanklineTokenizer": [[647, 4, 1, "", "__init__"]], "nltk.tokenize.regexp.RegexpTokenizer": [[647, 4, 1, "", "__init__"], [647, 4, 1, "", "span_tokenize"], [647, 4, 1, "", "tokenize"]], "nltk.tokenize.regexp.WhitespaceTokenizer": [[647, 4, 1, "", "__init__"]], "nltk.tokenize.regexp.WordPunctTokenizer": [[647, 4, 1, "", "__init__"]], "nltk.tokenize.repp": [[649, 3, 1, "", "ReppTokenizer"]], "nltk.tokenize.repp.ReppTokenizer": [[649, 4, 1, "", "__init__"], [649, 4, 1, "", "find_repptokenizer"], [649, 4, 1, "", "generate_repp_command"], [649, 4, 1, "", "parse_repp_outputs"], [649, 4, 1, "", "tokenize"], [649, 4, 1, "", "tokenize_sents"]], "nltk.tokenize.sexpr": [[651, 3, 1, "", "SExprTokenizer"], [651, 1, 1, "", "sexpr_tokenize"]], "nltk.tokenize.sexpr.SExprTokenizer": [[651, 4, 1, "", "__init__"], [651, 4, 1, "", "tokenize"]], "nltk.tokenize.simple": [[653, 3, 1, "", "CharTokenizer"], [653, 3, 1, "", "LineTokenizer"], [653, 3, 1, "", "SpaceTokenizer"], [653, 3, 1, "", "TabTokenizer"], [653, 1, 1, "", "line_tokenize"]], "nltk.tokenize.simple.CharTokenizer": [[653, 4, 1, "", "span_tokenize"], [653, 4, 1, "", "tokenize"]], "nltk.tokenize.simple.LineTokenizer": [[653, 4, 1, "", "__init__"], [653, 4, 1, "", "span_tokenize"], [653, 4, 1, "", "tokenize"]], "nltk.tokenize.sonority_sequencing": [[654, 3, 1, "", "SyllableTokenizer"]], "nltk.tokenize.sonority_sequencing.SyllableTokenizer": [[654, 4, 1, "", "__init__"], [654, 4, 1, "", "assign_values"], [654, 4, 1, "", "tokenize"], [654, 4, 1, "", "validate_syllables"]], "nltk.tokenize.stanford": [[655, 3, 1, "", "StanfordTokenizer"]], "nltk.tokenize.stanford.StanfordTokenizer": [[655, 4, 1, "", "__init__"], [655, 4, 1, "", "tokenize"]], "nltk.tokenize.stanford_segmenter": [[656, 3, 1, "", "StanfordSegmenter"]], "nltk.tokenize.stanford_segmenter.StanfordSegmenter": [[656, 4, 1, "", "__init__"], [656, 4, 1, "", "default_config"], [656, 4, 1, "", "segment"], [656, 4, 1, "", "segment_file"], [656, 4, 1, "", "segment_sents"], [656, 4, 1, "", "tokenize"]], "nltk.tokenize.texttiling": [[657, 3, 1, "", "TextTilingTokenizer"], [657, 3, 1, "", "TokenSequence"], [657, 3, 1, "", "TokenTableField"], [657, 1, 1, "", "demo"], [657, 1, 1, "", "smooth"]], "nltk.tokenize.texttiling.TextTilingTokenizer": [[657, 4, 1, "", "__init__"], [657, 4, 1, "", "tokenize"]], "nltk.tokenize.texttiling.TokenSequence": [[657, 4, 1, "", "__init__"]], "nltk.tokenize.texttiling.TokenTableField": [[657, 4, 1, "", "__init__"]], "nltk.tokenize.toktok": [[658, 3, 1, "", "ToktokTokenizer"]], "nltk.tokenize.toktok.ToktokTokenizer": [[658, 5, 1, "", "AMPERCENT"], [658, 5, 1, "", "CLOSE_PUNCT"], [658, 5, 1, "", "CLOSE_PUNCT_RE"], [658, 5, 1, "", "COMMA_IN_NUM"], [658, 5, 1, "", "CURRENCY_SYM"], [658, 5, 1, "", "CURRENCY_SYM_RE"], [658, 5, 1, "", "EN_EM_DASHES"], [658, 5, 1, "", "FINAL_PERIOD_1"], [658, 5, 1, "", "FINAL_PERIOD_2"], [658, 5, 1, "", "FUNKY_PUNCT_1"], [658, 5, 1, "", "FUNKY_PUNCT_2"], [658, 5, 1, "", "LSTRIP"], [658, 5, 1, "", "MULTI_COMMAS"], [658, 5, 1, "", "MULTI_DASHES"], [658, 5, 1, "", "MULTI_DOTS"], [658, 5, 1, "", "NON_BREAKING"], [658, 5, 1, "", "ONE_SPACE"], [658, 5, 1, "", "OPEN_PUNCT"], [658, 5, 1, "", "OPEN_PUNCT_RE"], [658, 5, 1, "", "PIPE"], [658, 5, 1, "", "PROB_SINGLE_QUOTES"], [658, 5, 1, "", "RSTRIP"], [658, 5, 1, "", "STUPID_QUOTES_1"], [658, 5, 1, "", "STUPID_QUOTES_2"], [658, 5, 1, "", "TAB"], [658, 5, 1, "", "TOKTOK_REGEXES"], [658, 5, 1, "", "URL_FOE_1"], [658, 5, 1, "", "URL_FOE_2"], [658, 5, 1, "", "URL_FOE_3"], [658, 5, 1, "", "URL_FOE_4"], [658, 4, 1, "", "tokenize"]], "nltk.tokenize.treebank": [[659, 3, 1, "", "TreebankWordDetokenizer"], [659, 3, 1, "", "TreebankWordTokenizer"]], "nltk.tokenize.treebank.TreebankWordDetokenizer": [[659, 5, 1, "", "CONTRACTIONS2"], [659, 5, 1, "", "CONTRACTIONS3"], [659, 5, 1, "", "CONVERT_PARENTHESES"], [659, 5, 1, "", "DOUBLE_DASHES"], [659, 5, 1, "", "ENDING_QUOTES"], [659, 5, 1, "", "PARENS_BRACKETS"], [659, 5, 1, "", "PUNCTUATION"], [659, 5, 1, "", "STARTING_QUOTES"], [659, 4, 1, "", "detokenize"], [659, 4, 1, "", "tokenize"]], "nltk.tokenize.treebank.TreebankWordTokenizer": [[659, 5, 1, "", "CONTRACTIONS2"], [659, 5, 1, "", "CONTRACTIONS3"], [659, 5, 1, "", "CONVERT_PARENTHESES"], [659, 5, 1, "", "DOUBLE_DASHES"], [659, 5, 1, "", "ENDING_QUOTES"], [659, 5, 1, "", "PARENS_BRACKETS"], [659, 5, 1, "", "PUNCTUATION"], [659, 5, 1, "", "STARTING_QUOTES"], [659, 4, 1, "", "span_tokenize"], [659, 4, 1, "", "tokenize"]], "nltk.tokenize.util": [[660, 3, 1, "", "CJKChars"], [660, 1, 1, "", "align_tokens"], [660, 1, 1, "", "is_cjk"], [660, 1, 1, "", "regexp_span_tokenize"], [660, 1, 1, "", "spans_to_relative"], [660, 1, 1, "", "string_span_tokenize"], [660, 1, 1, "", "xml_escape"], [660, 1, 1, "", "xml_unescape"]], "nltk.tokenize.util.CJKChars": [[660, 5, 1, "", "CJK_Compatibility_Forms"], [660, 5, 1, "", "CJK_Compatibility_Ideographs"], [660, 5, 1, "", "CJK_Radicals"], [660, 5, 1, "", "Hangul_Jamo"], [660, 5, 1, "", "Hangul_Syllables"], [660, 5, 1, "", "Katakana_Hangul_Halfwidth"], [660, 5, 1, "", "Phags_Pa"], [660, 5, 1, "", "Supplementary_Ideographic_Plane"], [660, 5, 1, "", "ranges"]], "nltk.toolbox": [[664, 3, 1, "", "StandardFormat"], [665, 3, 1, "", "ToolboxData"], [666, 3, 1, "", "ToolboxSettings"], [663, 1, 1, "", "add_blank_lines"], [663, 1, 1, "", "add_default_fields"], [663, 1, 1, "", "demo"], [663, 1, 1, "", "remove_blanks"], [663, 1, 1, "", "sort_fields"], [663, 1, 1, "", "to_settings_string"], [663, 1, 1, "", "to_sfm_string"]], "nltk.toolbox.StandardFormat": [[664, 4, 1, "", "__init__"], [664, 4, 1, "", "close"], [664, 4, 1, "", "fields"], [664, 4, 1, "", "open"], [664, 4, 1, "", "open_string"], [664, 4, 1, "", "raw_fields"]], "nltk.toolbox.ToolboxData": [[665, 4, 1, "", "__init__"], [665, 4, 1, "", "close"], [665, 4, 1, "", "fields"], [665, 4, 1, "", "open"], [665, 4, 1, "", "open_string"], [665, 4, 1, "", "parse"], [665, 4, 1, "", "raw_fields"]], "nltk.toolbox.ToolboxSettings": [[666, 4, 1, "", "__init__"], [666, 4, 1, "", "close"], [666, 4, 1, "", "fields"], [666, 4, 1, "", "open"], [666, 4, 1, "", "open_string"], [666, 4, 1, "", "parse"], [666, 4, 1, "", "raw_fields"]], "nltk.translate": [[668, 3, 1, "", "AlignedSent"], [669, 3, 1, "", "Alignment"], [670, 3, 1, "", "IBMModel"], [671, 3, 1, "", "IBMModel1"], [672, 3, 1, "", "IBMModel2"], [673, 3, 1, "", "IBMModel3"], [674, 3, 1, "", "IBMModel4"], [675, 3, 1, "", "IBMModel5"], [676, 3, 1, "", "PhraseTable"], [677, 3, 1, "", "StackDecoder"], [678, 1, 1, "", "alignment_error_rate"], [679, 0, 0, "-", "api"], [680, 1, 1, "", "bleu"], [681, 0, 0, "-", "bleu_score"], [682, 1, 1, "", "chrf"], [683, 0, 0, "-", "chrf_score"], [684, 1, 1, "", "extract"], [685, 0, 0, "-", "gale_church"], [686, 0, 0, "-", "gdfa"], [687, 1, 1, "", "gleu"], [688, 0, 0, "-", "gleu_score"], [689, 1, 1, "", "grow_diag_final_and"], [690, 0, 0, "-", "ibm1"], [691, 0, 0, "-", "ibm2"], [692, 0, 0, "-", "ibm3"], [693, 0, 0, "-", "ibm4"], [694, 0, 0, "-", "ibm5"], [695, 0, 0, "-", "ibm_model"], [696, 1, 1, "", "meteor"], [697, 0, 0, "-", "meteor_score"], [698, 0, 0, "-", "metrics"], [699, 1, 1, "", "nist"], [700, 0, 0, "-", "nist_score"], [701, 0, 0, "-", "phrase_based"], [702, 1, 1, "", "ribes"], [703, 0, 0, "-", "ribes_score"], [704, 0, 0, "-", "stack_decoder"], [705, 1, 1, "", "trace"]], "nltk.translate.AlignedSent": [[668, 4, 1, "", "__init__"], [668, 6, 1, "", "alignment"], [668, 4, 1, "", "invert"], [668, 6, 1, "", "mots"], [668, 6, 1, "", "words"]], "nltk.translate.Alignment": [[669, 4, 1, "", "__new__"], [669, 4, 1, "", "copy"], [669, 4, 1, "", "difference"], [669, 4, 1, "", "fromstring"], [669, 4, 1, "", "intersection"], [669, 4, 1, "", "invert"], [669, 4, 1, "", "isdisjoint"], [669, 4, 1, "", "issubset"], [669, 4, 1, "", "issuperset"], [669, 4, 1, "", "range"], [669, 4, 1, "", "symmetric_difference"], [669, 4, 1, "", "union"]], "nltk.translate.IBMModel": [[670, 5, 1, "", "MIN_PROB"], [670, 4, 1, "", "__init__"], [670, 4, 1, "", "best_model2_alignment"], [670, 4, 1, "", "hillclimb"], [670, 4, 1, "", "init_vocab"], [670, 4, 1, "", "maximize_fertility_probabilities"], [670, 4, 1, "", "maximize_lexical_translation_probabilities"], [670, 4, 1, "", "maximize_null_generation_probabilities"], [670, 4, 1, "", "neighboring"], [670, 4, 1, "", "prob_of_alignments"], [670, 4, 1, "", "prob_t_a_given_s"], [670, 4, 1, "", "reset_probabilities"], [670, 4, 1, "", "sample"], [670, 4, 1, "", "set_uniform_probabilities"]], "nltk.translate.IBMModel1": [[671, 5, 1, "", "MIN_PROB"], [671, 4, 1, "", "__init__"], [671, 4, 1, "", "align"], [671, 4, 1, "", "align_all"], [671, 4, 1, "", "best_model2_alignment"], [671, 4, 1, "", "hillclimb"], [671, 4, 1, "", "init_vocab"], [671, 4, 1, "", "maximize_fertility_probabilities"], [671, 4, 1, "", "maximize_lexical_translation_probabilities"], [671, 4, 1, "", "maximize_null_generation_probabilities"], [671, 4, 1, "", "neighboring"], [671, 4, 1, "", "prob_alignment_point"], [671, 4, 1, "", "prob_all_alignments"], [671, 4, 1, "", "prob_of_alignments"], [671, 4, 1, "", "prob_t_a_given_s"], [671, 4, 1, "", "reset_probabilities"], [671, 4, 1, "", "sample"], [671, 4, 1, "", "set_uniform_probabilities"], [671, 4, 1, "", "train"]], "nltk.translate.IBMModel2": [[672, 5, 1, "", "MIN_PROB"], [672, 4, 1, "", "__init__"], [672, 4, 1, "", "align"], [672, 4, 1, "", "align_all"], [672, 4, 1, "", "best_model2_alignment"], [672, 4, 1, "", "hillclimb"], [672, 4, 1, "", "init_vocab"], [672, 4, 1, "", "maximize_alignment_probabilities"], [672, 4, 1, "", "maximize_fertility_probabilities"], [672, 4, 1, "", "maximize_lexical_translation_probabilities"], [672, 4, 1, "", "maximize_null_generation_probabilities"], [672, 4, 1, "", "neighboring"], [672, 4, 1, "", "prob_alignment_point"], [672, 4, 1, "", "prob_all_alignments"], [672, 4, 1, "", "prob_of_alignments"], [672, 4, 1, "", "prob_t_a_given_s"], [672, 4, 1, "", "reset_probabilities"], [672, 4, 1, "", "sample"], [672, 4, 1, "", "set_uniform_probabilities"], [672, 4, 1, "", "train"]], "nltk.translate.IBMModel3": [[673, 5, 1, "", "MIN_PROB"], [673, 4, 1, "", "__init__"], [673, 4, 1, "", "best_model2_alignment"], [673, 4, 1, "", "hillclimb"], [673, 4, 1, "", "init_vocab"], [673, 4, 1, "", "maximize_distortion_probabilities"], [673, 4, 1, "", "maximize_fertility_probabilities"], [673, 4, 1, "", "maximize_lexical_translation_probabilities"], [673, 4, 1, "", "maximize_null_generation_probabilities"], [673, 4, 1, "", "neighboring"], [673, 4, 1, "", "prob_of_alignments"], [673, 4, 1, "", "prob_t_a_given_s"], [673, 4, 1, "", "reset_probabilities"], [673, 4, 1, "", "sample"], [673, 4, 1, "", "set_uniform_probabilities"], [673, 4, 1, "", "train"]], "nltk.translate.IBMModel4": [[674, 5, 1, "", "MIN_PROB"], [674, 4, 1, "", "__init__"], [674, 4, 1, "", "best_model2_alignment"], [674, 4, 1, "", "hillclimb"], [674, 4, 1, "", "init_vocab"], [674, 4, 1, "", "maximize_distortion_probabilities"], [674, 4, 1, "", "maximize_fertility_probabilities"], [674, 4, 1, "", "maximize_lexical_translation_probabilities"], [674, 4, 1, "", "maximize_null_generation_probabilities"], [674, 4, 1, "", "model4_prob_t_a_given_s"], [674, 4, 1, "", "neighboring"], [674, 4, 1, "", "prob_of_alignments"], [674, 4, 1, "", "prob_t_a_given_s"], [674, 4, 1, "", "reset_probabilities"], [674, 4, 1, "", "sample"], [674, 4, 1, "", "set_uniform_probabilities"], [674, 4, 1, "", "train"]], "nltk.translate.IBMModel5": [[675, 5, 1, "", "MIN_PROB"], [675, 5, 1, "", "MIN_SCORE_FACTOR"], [675, 4, 1, "", "__init__"], [675, 4, 1, "", "best_model2_alignment"], [675, 4, 1, "", "hillclimb"], [675, 4, 1, "", "init_vocab"], [675, 4, 1, "", "maximize_fertility_probabilities"], [675, 4, 1, "", "maximize_lexical_translation_probabilities"], [675, 4, 1, "", "maximize_null_generation_probabilities"], [675, 4, 1, "", "maximize_vacancy_probabilities"], [675, 4, 1, "", "neighboring"], [675, 4, 1, "", "prob_of_alignments"], [675, 4, 1, "", "prob_t_a_given_s"], [675, 4, 1, "", "prune"], [675, 4, 1, "", "reset_probabilities"], [675, 4, 1, "", "sample"], [675, 4, 1, "", "set_uniform_probabilities"], [675, 4, 1, "", "train"]], "nltk.translate.PhraseTable": [[676, 4, 1, "", "__init__"], [676, 4, 1, "", "add"], [676, 4, 1, "", "translations_for"]], "nltk.translate.StackDecoder": [[677, 4, 1, "", "__init__"], [677, 5, 1, "", "beam_threshold"], [677, 4, 1, "", "compute_future_scores"], [677, 6, 1, "", "distortion_factor"], [677, 4, 1, "", "distortion_score"], [677, 4, 1, "", "expansion_score"], [677, 4, 1, "", "find_all_src_phrases"], [677, 4, 1, "", "future_score"], [677, 5, 1, "", "stack_size"], [677, 4, 1, "", "translate"], [677, 4, 1, "", "valid_phrases"], [677, 5, 1, "", "word_penalty"]], "nltk.translate.api": [[679, 3, 1, "", "AlignedSent"], [679, 3, 1, "", "Alignment"], [679, 3, 1, "", "PhraseTable"], [679, 3, 1, "", "PhraseTableEntry"]], "nltk.translate.api.AlignedSent": [[679, 4, 1, "", "__init__"], [679, 6, 1, "", "alignment"], [679, 4, 1, "", "invert"], [679, 6, 1, "", "mots"], [679, 6, 1, "", "words"]], "nltk.translate.api.Alignment": [[679, 4, 1, "", "__new__"], [679, 4, 1, "", "fromstring"], [679, 4, 1, "", "invert"], [679, 4, 1, "", "range"]], "nltk.translate.api.PhraseTable": [[679, 4, 1, "", "__init__"], [679, 4, 1, "", "add"], [679, 4, 1, "", "translations_for"]], "nltk.translate.api.PhraseTableEntry": [[679, 4, 1, "", "__new__"], [679, 5, 1, "", "log_prob"], [679, 5, 1, "", "trg_phrase"]], "nltk.translate.bleu_score": [[681, 3, 1, "", "SmoothingFunction"], [681, 1, 1, "", "brevity_penalty"], [681, 1, 1, "", "closest_ref_length"], [681, 1, 1, "", "corpus_bleu"], [681, 1, 1, "", "modified_precision"], [681, 1, 1, "", "sentence_bleu"]], "nltk.translate.bleu_score.SmoothingFunction": [[681, 4, 1, "", "__init__"], [681, 4, 1, "", "method0"], [681, 4, 1, "", "method1"], [681, 4, 1, "", "method2"], [681, 4, 1, "", "method3"], [681, 4, 1, "", "method4"], [681, 4, 1, "", "method5"], [681, 4, 1, "", "method6"], [681, 4, 1, "", "method7"]], "nltk.translate.chrf_score": [[683, 1, 1, "", "chrf_precision_recall_fscore_support"], [683, 1, 1, "", "corpus_chrf"], [683, 1, 1, "", "sentence_chrf"]], "nltk.translate.gale_church": [[685, 3, 1, "", "LanguageIndependent"], [685, 1, 1, "", "align_blocks"], [685, 1, 1, "", "align_log_prob"], [685, 1, 1, "", "align_texts"], [685, 1, 1, "", "erfcc"], [685, 1, 1, "", "norm_cdf"], [685, 1, 1, "", "norm_logsf"], [685, 1, 1, "", "parse_token_stream"], [685, 1, 1, "", "split_at"], [685, 1, 1, "", "trace"]], "nltk.translate.gale_church.LanguageIndependent": [[685, 5, 1, "", "AVERAGE_CHARACTERS"], [685, 5, 1, "", "PRIORS"], [685, 5, 1, "", "VARIANCE_CHARACTERS"]], "nltk.translate.gdfa": [[686, 1, 1, "", "grow_diag_final_and"]], "nltk.translate.gleu_score": [[688, 1, 1, "", "corpus_gleu"], [688, 1, 1, "", "sentence_gleu"]], "nltk.translate.ibm1": [[690, 3, 1, "", "IBMModel1"]], "nltk.translate.ibm1.IBMModel1": [[690, 4, 1, "", "__init__"], [690, 4, 1, "", "align"], [690, 4, 1, "", "align_all"], [690, 4, 1, "", "prob_alignment_point"], [690, 4, 1, "", "prob_all_alignments"], [690, 4, 1, "", "prob_t_a_given_s"], [690, 4, 1, "", "set_uniform_probabilities"], [690, 4, 1, "", "train"]], "nltk.translate.ibm2": [[691, 3, 1, "", "IBMModel2"], [691, 3, 1, "", "Model2Counts"]], "nltk.translate.ibm2.IBMModel2": [[691, 4, 1, "", "__init__"], [691, 4, 1, "", "align"], [691, 4, 1, "", "align_all"], [691, 4, 1, "", "maximize_alignment_probabilities"], [691, 4, 1, "", "prob_alignment_point"], [691, 4, 1, "", "prob_all_alignments"], [691, 4, 1, "", "prob_t_a_given_s"], [691, 4, 1, "", "set_uniform_probabilities"], [691, 4, 1, "", "train"]], "nltk.translate.ibm2.Model2Counts": [[691, 4, 1, "", "__init__"], [691, 4, 1, "", "update_alignment"], [691, 4, 1, "", "update_lexical_translation"]], "nltk.translate.ibm3": [[692, 3, 1, "", "IBMModel3"], [692, 3, 1, "", "Model3Counts"]], "nltk.translate.ibm3.IBMModel3": [[692, 4, 1, "", "__init__"], [692, 4, 1, "", "maximize_distortion_probabilities"], [692, 4, 1, "", "prob_t_a_given_s"], [692, 4, 1, "", "reset_probabilities"], [692, 4, 1, "", "set_uniform_probabilities"], [692, 4, 1, "", "train"]], "nltk.translate.ibm3.Model3Counts": [[692, 4, 1, "", "__init__"], [692, 4, 1, "", "update_distortion"]], "nltk.translate.ibm4": [[693, 3, 1, "", "IBMModel4"], [693, 3, 1, "", "Model4Counts"]], "nltk.translate.ibm4.IBMModel4": [[693, 4, 1, "", "__init__"], [693, 4, 1, "", "maximize_distortion_probabilities"], [693, 4, 1, "", "model4_prob_t_a_given_s"], [693, 4, 1, "", "prob_t_a_given_s"], [693, 4, 1, "", "reset_probabilities"], [693, 4, 1, "", "set_uniform_probabilities"], [693, 4, 1, "", "train"]], "nltk.translate.ibm4.Model4Counts": [[693, 4, 1, "", "__init__"], [693, 4, 1, "", "update_distortion"]], "nltk.translate.ibm5": [[694, 3, 1, "", "IBMModel5"], [694, 3, 1, "", "Model5Counts"], [694, 3, 1, "", "Slots"]], "nltk.translate.ibm5.IBMModel5": [[694, 5, 1, "", "MIN_SCORE_FACTOR"], [694, 4, 1, "", "__init__"], [694, 4, 1, "", "hillclimb"], [694, 4, 1, "", "maximize_vacancy_probabilities"], [694, 4, 1, "", "prob_t_a_given_s"], [694, 4, 1, "", "prune"], [694, 4, 1, "", "reset_probabilities"], [694, 4, 1, "", "sample"], [694, 4, 1, "", "set_uniform_probabilities"], [694, 4, 1, "", "train"]], "nltk.translate.ibm5.Model5Counts": [[694, 4, 1, "", "__init__"], [694, 4, 1, "", "update_vacancy"]], "nltk.translate.ibm5.Slots": [[694, 4, 1, "", "__init__"], [694, 4, 1, "", "occupy"], [694, 4, 1, "", "vacancies_at"]], "nltk.translate.ibm_model": [[695, 3, 1, "", "AlignmentInfo"], [695, 3, 1, "", "Counts"], [695, 3, 1, "", "IBMModel"], [695, 1, 1, "", "longest_target_sentence_length"]], "nltk.translate.ibm_model.AlignmentInfo": [[695, 4, 1, "", "__init__"], [695, 5, 1, "", "alignment"], [695, 4, 1, "", "center_of_cept"], [695, 5, 1, "", "cepts"], [695, 4, 1, "", "fertility_of_i"], [695, 4, 1, "", "is_head_word"], [695, 4, 1, "", "previous_cept"], [695, 4, 1, "", "previous_in_tablet"], [695, 5, 1, "", "score"], [695, 5, 1, "", "src_sentence"], [695, 5, 1, "", "trg_sentence"], [695, 4, 1, "", "zero_indexed_alignment"]], "nltk.translate.ibm_model.Counts": [[695, 4, 1, "", "__init__"], [695, 4, 1, "", "update_fertility"], [695, 4, 1, "", "update_lexical_translation"], [695, 4, 1, "", "update_null_generation"]], "nltk.translate.ibm_model.IBMModel": [[695, 5, 1, "", "MIN_PROB"], [695, 4, 1, "", "__init__"], [695, 4, 1, "", "best_model2_alignment"], [695, 4, 1, "", "hillclimb"], [695, 4, 1, "", "init_vocab"], [695, 4, 1, "", "maximize_fertility_probabilities"], [695, 4, 1, "", "maximize_lexical_translation_probabilities"], [695, 4, 1, "", "maximize_null_generation_probabilities"], [695, 4, 1, "", "neighboring"], [695, 4, 1, "", "prob_of_alignments"], [695, 4, 1, "", "prob_t_a_given_s"], [695, 4, 1, "", "reset_probabilities"], [695, 4, 1, "", "sample"], [695, 4, 1, "", "set_uniform_probabilities"]], "nltk.translate.meteor_score": [[697, 1, 1, "", "align_words"], [697, 1, 1, "", "exact_match"], [697, 1, 1, "", "meteor_score"], [697, 1, 1, "", "single_meteor_score"], [697, 1, 1, "", "stem_match"], [697, 1, 1, "", "wordnetsyn_match"]], "nltk.translate.metrics": [[698, 1, 1, "", "alignment_error_rate"]], "nltk.translate.nist_score": [[700, 1, 1, "", "corpus_nist"], [700, 1, 1, "", "nist_length_penalty"], [700, 1, 1, "", "sentence_nist"]], "nltk.translate.phrase_based": [[701, 1, 1, "", "extract"], [701, 1, 1, "", "phrase_extraction"]], "nltk.translate.ribes_score": [[703, 1, 1, "", "corpus_ribes"], [703, 1, 1, "", "find_increasing_sequences"], [703, 1, 1, "", "kendall_tau"], [703, 1, 1, "", "position_of_ngram"], [703, 1, 1, "", "sentence_ribes"], [703, 1, 1, "", "spearman_rho"], [703, 1, 1, "", "word_rank_alignment"]], "nltk.translate.stack_decoder": [[704, 3, 1, "", "StackDecoder"]], "nltk.translate.stack_decoder.StackDecoder": [[704, 4, 1, "", "__init__"], [704, 5, 1, "", "beam_threshold"], [704, 4, 1, "", "compute_future_scores"], [704, 6, 1, "", "distortion_factor"], [704, 4, 1, "", "distortion_score"], [704, 4, 1, "", "expansion_score"], [704, 4, 1, "", "find_all_src_phrases"], [704, 4, 1, "", "future_score"], [704, 5, 1, "", "stack_size"], [704, 4, 1, "", "translate"], [704, 4, 1, "", "valid_phrases"], [704, 5, 1, "", "word_penalty"]], "nltk.tree": [[707, 3, 1, "", "ImmutableMultiParentedTree"], [708, 3, 1, "", "ImmutableParentedTree"], [709, 3, 1, "", "ImmutableProbabilisticTree"], [710, 3, 1, "", "ImmutableTree"], [711, 3, 1, "", "MultiParentedTree"], [712, 3, 1, "", "ParentedTree"], [713, 3, 1, "", "ProbabilisticTree"], [706, 3, 1, "", "Tree"], [715, 3, 1, "", "TreePrettyPrinter"], [716, 1, 1, "", "bracket_parse"], [717, 1, 1, "", "chomsky_normal_form"], [718, 1, 1, "", "collapse_unary"], [719, 0, 0, "-", "immutable"], [720, 0, 0, "-", "parented"], [721, 0, 0, "-", "parsing"], [722, 0, 0, "-", "prettyprinter"], [723, 0, 0, "-", "probabilistic"], [724, 1, 1, "", "sinica_parse"], [725, 0, 0, "-", "transforms"], [714, 0, 0, "-", "tree"], [726, 1, 1, "", "un_chomsky_normal_form"]], "nltk.tree.ImmutableMultiParentedTree": [[707, 4, 1, "", "__init__"], [707, 4, 1, "", "__new__"], [707, 4, 1, "", "append"], [707, 4, 1, "", "chomsky_normal_form"], [707, 4, 1, "", "clear"], [707, 4, 1, "", "collapse_unary"], [707, 4, 1, "", "convert"], [707, 4, 1, "", "copy"], [707, 4, 1, "", "count"], [707, 4, 1, "", "draw"], [707, 4, 1, "", "extend"], [707, 4, 1, "", "flatten"], [707, 4, 1, "", "freeze"], [707, 4, 1, "", "fromlist"], [707, 4, 1, "", "fromstring"], [707, 4, 1, "", "height"], [707, 4, 1, "", "index"], [707, 4, 1, "", "insert"], [707, 4, 1, "", "label"], [707, 4, 1, "", "leaf_treeposition"], [707, 4, 1, "", "leaves"], [707, 4, 1, "", "left_siblings"], [707, 6, 1, "", "node"], [707, 4, 1, "", "parent_indices"], [707, 4, 1, "", "parents"], [707, 4, 1, "", "pformat"], [707, 4, 1, "", "pformat_latex_qtree"], [707, 4, 1, "", "pop"], [707, 4, 1, "", "pos"], [707, 4, 1, "", "pprint"], [707, 4, 1, "", "pretty_print"], [707, 4, 1, "", "productions"], [707, 4, 1, "", "remove"], [707, 4, 1, "", "reverse"], [707, 4, 1, "", "right_siblings"], [707, 4, 1, "", "roots"], [707, 4, 1, "", "set_label"], [707, 4, 1, "", "sort"], [707, 4, 1, "", "subtrees"], [707, 4, 1, "", "treeposition_spanning_leaves"], [707, 4, 1, "", "treepositions"], [707, 4, 1, "", "un_chomsky_normal_form"]], "nltk.tree.ImmutableParentedTree": [[708, 4, 1, "", "__init__"], [708, 4, 1, "", "__new__"], [708, 4, 1, "", "append"], [708, 4, 1, "", "chomsky_normal_form"], [708, 4, 1, "", "clear"], [708, 4, 1, "", "collapse_unary"], [708, 4, 1, "", "convert"], [708, 4, 1, "", "copy"], [708, 4, 1, "", "count"], [708, 4, 1, "", "draw"], [708, 4, 1, "", "extend"], [708, 4, 1, "", "flatten"], [708, 4, 1, "", "freeze"], [708, 4, 1, "", "fromlist"], [708, 4, 1, "", "fromstring"], [708, 4, 1, "", "height"], [708, 4, 1, "", "index"], [708, 4, 1, "", "insert"], [708, 4, 1, "", "label"], [708, 4, 1, "", "leaf_treeposition"], [708, 4, 1, "", "leaves"], [708, 4, 1, "", "left_sibling"], [708, 6, 1, "", "node"], [708, 4, 1, "", "parent"], [708, 4, 1, "", "parent_index"], [708, 4, 1, "", "pformat"], [708, 4, 1, "", "pformat_latex_qtree"], [708, 4, 1, "", "pop"], [708, 4, 1, "", "pos"], [708, 4, 1, "", "pprint"], [708, 4, 1, "", "pretty_print"], [708, 4, 1, "", "productions"], [708, 4, 1, "", "remove"], [708, 4, 1, "", "reverse"], [708, 4, 1, "", "right_sibling"], [708, 4, 1, "", "root"], [708, 4, 1, "", "set_label"], [708, 4, 1, "", "sort"], [708, 4, 1, "", "subtrees"], [708, 4, 1, "", "treeposition"], [708, 4, 1, "", "treeposition_spanning_leaves"], [708, 4, 1, "", "treepositions"], [708, 4, 1, "", "un_chomsky_normal_form"]], "nltk.tree.ImmutableProbabilisticTree": [[709, 4, 1, "", "__init__"], [709, 4, 1, "", "__new__"], [709, 4, 1, "", "append"], [709, 4, 1, "", "chomsky_normal_form"], [709, 4, 1, "", "clear"], [709, 4, 1, "", "collapse_unary"], [709, 4, 1, "", "convert"], [709, 4, 1, "", "copy"], [709, 4, 1, "", "count"], [709, 4, 1, "", "draw"], [709, 4, 1, "", "extend"], [709, 4, 1, "", "flatten"], [709, 4, 1, "", "freeze"], [709, 4, 1, "", "fromlist"], [709, 4, 1, "", "fromstring"], [709, 4, 1, "", "height"], [709, 4, 1, "", "index"], [709, 4, 1, "", "insert"], [709, 4, 1, "", "label"], [709, 4, 1, "", "leaf_treeposition"], [709, 4, 1, "", "leaves"], [709, 4, 1, "", "logprob"], [709, 6, 1, "", "node"], [709, 4, 1, "", "pformat"], [709, 4, 1, "", "pformat_latex_qtree"], [709, 4, 1, "", "pop"], [709, 4, 1, "", "pos"], [709, 4, 1, "", "pprint"], [709, 4, 1, "", "pretty_print"], [709, 4, 1, "", "prob"], [709, 4, 1, "", "productions"], [709, 4, 1, "", "remove"], [709, 4, 1, "", "reverse"], [709, 4, 1, "", "set_label"], [709, 4, 1, "", "set_logprob"], [709, 4, 1, "", "set_prob"], [709, 4, 1, "", "sort"], [709, 4, 1, "", "subtrees"], [709, 4, 1, "", "treeposition_spanning_leaves"], [709, 4, 1, "", "treepositions"], [709, 4, 1, "", "un_chomsky_normal_form"]], "nltk.tree.ImmutableTree": [[710, 4, 1, "", "__init__"], [710, 4, 1, "", "__new__"], [710, 4, 1, "", "append"], [710, 4, 1, "", "chomsky_normal_form"], [710, 4, 1, "", "clear"], [710, 4, 1, "", "collapse_unary"], [710, 4, 1, "", "convert"], [710, 4, 1, "", "copy"], [710, 4, 1, "", "count"], [710, 4, 1, "", "draw"], [710, 4, 1, "", "extend"], [710, 4, 1, "", "flatten"], [710, 4, 1, "", "freeze"], [710, 4, 1, "", "fromlist"], [710, 4, 1, "", "fromstring"], [710, 4, 1, "", "height"], [710, 4, 1, "", "index"], [710, 4, 1, "", "insert"], [710, 4, 1, "", "label"], [710, 4, 1, "", "leaf_treeposition"], [710, 4, 1, "", "leaves"], [710, 6, 1, "", "node"], [710, 4, 1, "", "pformat"], [710, 4, 1, "", "pformat_latex_qtree"], [710, 4, 1, "", "pop"], [710, 4, 1, "", "pos"], [710, 4, 1, "", "pprint"], [710, 4, 1, "", "pretty_print"], [710, 4, 1, "", "productions"], [710, 4, 1, "", "remove"], [710, 4, 1, "", "reverse"], [710, 4, 1, "", "set_label"], [710, 4, 1, "", "sort"], [710, 4, 1, "", "subtrees"], [710, 4, 1, "", "treeposition_spanning_leaves"], [710, 4, 1, "", "treepositions"], [710, 4, 1, "", "un_chomsky_normal_form"]], "nltk.tree.MultiParentedTree": [[711, 4, 1, "", "__init__"], [711, 4, 1, "", "__new__"], [711, 4, 1, "", "append"], [711, 4, 1, "", "chomsky_normal_form"], [711, 4, 1, "", "clear"], [711, 4, 1, "", "collapse_unary"], [711, 4, 1, "", "convert"], [711, 4, 1, "", "copy"], [711, 4, 1, "", "count"], [711, 4, 1, "", "draw"], [711, 4, 1, "", "extend"], [711, 4, 1, "", "flatten"], [711, 4, 1, "", "freeze"], [711, 4, 1, "", "fromlist"], [711, 4, 1, "", "fromstring"], [711, 4, 1, "", "height"], [711, 4, 1, "", "index"], [711, 4, 1, "", "insert"], [711, 4, 1, "", "label"], [711, 4, 1, "", "leaf_treeposition"], [711, 4, 1, "", "leaves"], [711, 4, 1, "", "left_siblings"], [711, 6, 1, "", "node"], [711, 4, 1, "", "parent_indices"], [711, 4, 1, "", "parents"], [711, 4, 1, "", "pformat"], [711, 4, 1, "", "pformat_latex_qtree"], [711, 4, 1, "", "pop"], [711, 4, 1, "", "pos"], [711, 4, 1, "", "pprint"], [711, 4, 1, "", "pretty_print"], [711, 4, 1, "", "productions"], [711, 4, 1, "", "remove"], [711, 4, 1, "", "reverse"], [711, 4, 1, "", "right_siblings"], [711, 4, 1, "", "roots"], [711, 4, 1, "", "set_label"], [711, 4, 1, "", "sort"], [711, 4, 1, "", "subtrees"], [711, 4, 1, "", "treeposition_spanning_leaves"], [711, 4, 1, "", "treepositions"], [711, 4, 1, "", "un_chomsky_normal_form"]], "nltk.tree.ParentedTree": [[712, 4, 1, "", "__init__"], [712, 4, 1, "", "__new__"], [712, 4, 1, "", "append"], [712, 4, 1, "", "chomsky_normal_form"], [712, 4, 1, "", "clear"], [712, 4, 1, "", "collapse_unary"], [712, 4, 1, "", "convert"], [712, 4, 1, "", "copy"], [712, 4, 1, "", "count"], [712, 4, 1, "", "draw"], [712, 4, 1, "", "extend"], [712, 4, 1, "", "flatten"], [712, 4, 1, "", "freeze"], [712, 4, 1, "", "fromlist"], [712, 4, 1, "", "fromstring"], [712, 4, 1, "", "height"], [712, 4, 1, "", "index"], [712, 4, 1, "", "insert"], [712, 4, 1, "", "label"], [712, 4, 1, "", "leaf_treeposition"], [712, 4, 1, "", "leaves"], [712, 4, 1, "", "left_sibling"], [712, 6, 1, "", "node"], [712, 4, 1, "", "parent"], [712, 4, 1, "", "parent_index"], [712, 4, 1, "", "pformat"], [712, 4, 1, "", "pformat_latex_qtree"], [712, 4, 1, "", "pop"], [712, 4, 1, "", "pos"], [712, 4, 1, "", "pprint"], [712, 4, 1, "", "pretty_print"], [712, 4, 1, "", "productions"], [712, 4, 1, "", "remove"], [712, 4, 1, "", "reverse"], [712, 4, 1, "", "right_sibling"], [712, 4, 1, "", "root"], [712, 4, 1, "", "set_label"], [712, 4, 1, "", "sort"], [712, 4, 1, "", "subtrees"], [712, 4, 1, "", "treeposition"], [712, 4, 1, "", "treeposition_spanning_leaves"], [712, 4, 1, "", "treepositions"], [712, 4, 1, "", "un_chomsky_normal_form"]], "nltk.tree.ProbabilisticTree": [[713, 4, 1, "", "__init__"], [713, 4, 1, "", "__new__"], [713, 4, 1, "", "append"], [713, 4, 1, "", "chomsky_normal_form"], [713, 4, 1, "", "clear"], [713, 4, 1, "", "collapse_unary"], [713, 4, 1, "", "convert"], [713, 4, 1, "", "copy"], [713, 4, 1, "", "count"], [713, 4, 1, "", "draw"], [713, 4, 1, "", "extend"], [713, 4, 1, "", "flatten"], [713, 4, 1, "", "freeze"], [713, 4, 1, "", "fromlist"], [713, 4, 1, "", "fromstring"], [713, 4, 1, "", "height"], [713, 4, 1, "", "index"], [713, 4, 1, "", "insert"], [713, 4, 1, "", "label"], [713, 4, 1, "", "leaf_treeposition"], [713, 4, 1, "", "leaves"], [713, 4, 1, "", "logprob"], [713, 6, 1, "", "node"], [713, 4, 1, "", "pformat"], [713, 4, 1, "", "pformat_latex_qtree"], [713, 4, 1, "", "pop"], [713, 4, 1, "", "pos"], [713, 4, 1, "", "pprint"], [713, 4, 1, "", "pretty_print"], [713, 4, 1, "", "prob"], [713, 4, 1, "", "productions"], [713, 4, 1, "", "remove"], [713, 4, 1, "", "reverse"], [713, 4, 1, "", "set_label"], [713, 4, 1, "", "set_logprob"], [713, 4, 1, "", "set_prob"], [713, 4, 1, "", "sort"], [713, 4, 1, "", "subtrees"], [713, 4, 1, "", "treeposition_spanning_leaves"], [713, 4, 1, "", "treepositions"], [713, 4, 1, "", "un_chomsky_normal_form"]], "nltk.tree.Tree": [[706, 4, 1, "", "__init__"], [706, 4, 1, "", "chomsky_normal_form"], [706, 4, 1, "", "collapse_unary"], [706, 4, 1, "", "convert"], [706, 4, 1, "", "copy"], [706, 4, 1, "", "draw"], [706, 4, 1, "", "flatten"], [706, 4, 1, "", "freeze"], [706, 4, 1, "", "fromlist"], [706, 4, 1, "", "fromstring"], [706, 4, 1, "", "height"], [706, 4, 1, "", "label"], [706, 4, 1, "", "leaf_treeposition"], [706, 4, 1, "", "leaves"], [706, 6, 1, "", "node"], [706, 4, 1, "", "pformat"], [706, 4, 1, "", "pformat_latex_qtree"], [706, 4, 1, "", "pos"], [706, 4, 1, "", "pprint"], [706, 4, 1, "", "pretty_print"], [706, 4, 1, "", "productions"], [706, 4, 1, "", "set_label"], [706, 4, 1, "", "subtrees"], [706, 4, 1, "", "treeposition_spanning_leaves"], [706, 4, 1, "", "treepositions"], [706, 4, 1, "", "un_chomsky_normal_form"]], "nltk.tree.TreePrettyPrinter": [[715, 4, 1, "", "__init__"], [715, 4, 1, "", "nodecoords"], [715, 4, 1, "", "svg"], [715, 4, 1, "", "text"]], "nltk.tree.immutable": [[719, 3, 1, "", "ImmutableMultiParentedTree"], [719, 3, 1, "", "ImmutableParentedTree"], [719, 3, 1, "", "ImmutableProbabilisticTree"], [719, 3, 1, "", "ImmutableTree"]], "nltk.tree.immutable.ImmutableProbabilisticTree": [[719, 4, 1, "", "__init__"], [719, 4, 1, "", "convert"], [719, 4, 1, "", "copy"]], "nltk.tree.immutable.ImmutableTree": [[719, 4, 1, "", "__init__"], [719, 4, 1, "", "append"], [719, 4, 1, "", "extend"], [719, 4, 1, "", "pop"], [719, 4, 1, "", "remove"], [719, 4, 1, "", "reverse"], [719, 4, 1, "", "set_label"], [719, 4, 1, "", "sort"]], "nltk.tree.parented": [[720, 3, 1, "", "MultiParentedTree"], [720, 3, 1, "", "ParentedTree"]], "nltk.tree.parented.MultiParentedTree": [[720, 4, 1, "", "__init__"], [720, 4, 1, "", "left_siblings"], [720, 4, 1, "", "parent_indices"], [720, 4, 1, "", "parents"], [720, 4, 1, "", "right_siblings"], [720, 4, 1, "", "roots"], [720, 4, 1, "", "treepositions"]], "nltk.tree.parented.ParentedTree": [[720, 4, 1, "", "__init__"], [720, 4, 1, "", "copy"], [720, 4, 1, "", "left_sibling"], [720, 4, 1, "", "parent"], [720, 4, 1, "", "parent_index"], [720, 4, 1, "", "right_sibling"], [720, 4, 1, "", "root"], [720, 4, 1, "", "treeposition"]], "nltk.tree.parsing": [[721, 1, 1, "", "bracket_parse"], [721, 1, 1, "", "sinica_parse"]], "nltk.tree.prettyprinter": [[722, 3, 1, "", "TreePrettyPrinter"]], "nltk.tree.prettyprinter.TreePrettyPrinter": [[722, 4, 1, "", "__init__"], [722, 4, 1, "", "nodecoords"], [722, 4, 1, "", "svg"], [722, 4, 1, "", "text"]], "nltk.tree.probabilistic": [[723, 3, 1, "", "ProbabilisticTree"]], "nltk.tree.probabilistic.ProbabilisticTree": [[723, 4, 1, "", "__init__"], [723, 4, 1, "", "convert"], [723, 4, 1, "", "copy"]], "nltk.tree.transforms": [[725, 1, 1, "", "chomsky_normal_form"], [725, 1, 1, "", "collapse_unary"], [725, 1, 1, "", "un_chomsky_normal_form"]], "nltk.tree.tree": [[714, 3, 1, "", "Tree"]], "nltk.tree.tree.Tree": [[714, 4, 1, "", "__init__"], [714, 4, 1, "", "chomsky_normal_form"], [714, 4, 1, "", "collapse_unary"], [714, 4, 1, "", "convert"], [714, 4, 1, "", "copy"], [714, 4, 1, "", "draw"], [714, 4, 1, "", "flatten"], [714, 4, 1, "", "freeze"], [714, 4, 1, "", "fromlist"], [714, 4, 1, "", "fromstring"], [714, 4, 1, "", "height"], [714, 4, 1, "", "label"], [714, 4, 1, "", "leaf_treeposition"], [714, 4, 1, "", "leaves"], [714, 6, 1, "", "node"], [714, 4, 1, "", "pformat"], [714, 4, 1, "", "pformat_latex_qtree"], [714, 4, 1, "", "pos"], [714, 4, 1, "", "pprint"], [714, 4, 1, "", "pretty_print"], [714, 4, 1, "", "productions"], [714, 4, 1, "", "set_label"], [714, 4, 1, "", "subtrees"], [714, 4, 1, "", "treeposition_spanning_leaves"], [714, 4, 1, "", "treepositions"], [714, 4, 1, "", "un_chomsky_normal_form"]], "nltk.treeprettyprinter": [[727, 3, 1, "", "TreePrettyPrinter"]], "nltk.treetransforms": [[728, 1, 1, "", "chomsky_normal_form"], [728, 1, 1, "", "collapse_unary"], [728, 1, 1, "", "un_chomsky_normal_form"]], "nltk.twitter": [[730, 3, 1, "", "Authenticate"], [731, 3, 1, "", "Query"], [732, 3, 1, "", "Streamer"], [733, 3, 1, "", "TweetViewer"], [734, 3, 1, "", "TweetWriter"], [735, 3, 1, "", "Twitter"], [736, 0, 0, "-", "api"], [737, 0, 0, "-", "common"], [738, 1, 1, "", "credsfromfile"], [739, 0, 0, "-", "twitter_demo"], [740, 0, 0, "-", "twitterclient"], [741, 0, 0, "-", "util"]], "nltk.twitter.Authenticate": [[730, 4, 1, "", "__init__"], [730, 4, 1, "", "load_creds"]], "nltk.twitter.Query": [[731, 4, 1, "", "__init__"], [731, 4, 1, "", "add_list_member"], [731, 4, 1, "", "construct_api_url"], [731, 4, 1, "", "create_block"], [731, 4, 1, "", "create_favorite"], [731, 4, 1, "", "create_friendship"], [731, 4, 1, "", "create_list"], [731, 4, 1, "", "create_list_members"], [731, 4, 1, "", "create_metadata"], [731, 4, 1, "", "create_mute"], [731, 4, 1, "", "create_place"], [731, 4, 1, "", "create_saved_search"], [731, 4, 1, "", "cursor"], [731, 4, 1, "", "delete"], [731, 4, 1, "", "delete_list"], [731, 4, 1, "", "delete_list_member"], [731, 4, 1, "", "delete_list_members"], [731, 4, 1, "", "destroy_block"], [731, 4, 1, "", "destroy_direct_message"], [731, 4, 1, "", "destroy_favorite"], [731, 4, 1, "", "destroy_friendship"], [731, 4, 1, "", "destroy_mute"], [731, 4, 1, "", "destroy_saved_search"], [731, 4, 1, "", "destroy_status"], [731, 4, 1, "", "encode"], [731, 4, 1, "", "expand_tweetids"], [731, 4, 1, "", "get"], [731, 4, 1, "", "get_account_settings"], [731, 4, 1, "", "get_application_rate_limit_status"], [731, 4, 1, "", "get_authentication_tokens"], [731, 4, 1, "", "get_authorized_tokens"], [731, 4, 1, "", "get_available_trends"], [731, 4, 1, "", "get_closest_trends"], [731, 4, 1, "", "get_contributees"], [731, 4, 1, "", "get_contributors"], [731, 4, 1, "", "get_direct_message"], [731, 4, 1, "", "get_direct_messages"], [731, 4, 1, "", "get_favorites"], [731, 4, 1, "", "get_followers_ids"], [731, 4, 1, "", "get_followers_list"], [731, 4, 1, "", "get_friends_ids"], [731, 4, 1, "", "get_friends_list"], [731, 4, 1, "", "get_geo_info"], [731, 4, 1, "", "get_home_timeline"], [731, 4, 1, "", "get_incoming_friendship_ids"], [731, 4, 1, "", "get_lastfunction_header"], [731, 4, 1, "", "get_list_members"], [731, 4, 1, "", "get_list_memberships"], [731, 4, 1, "", "get_list_statuses"], [731, 4, 1, "", "get_list_subscribers"], [731, 4, 1, "", "get_list_subscriptions"], [731, 4, 1, "", "get_mentions_timeline"], [731, 4, 1, "", "get_oembed_tweet"], [731, 4, 1, "", "get_outgoing_friendship_ids"], [731, 4, 1, "", "get_place_trends"], [731, 4, 1, "", "get_privacy_policy"], [731, 4, 1, "", "get_profile_banner_sizes"], [731, 4, 1, "", "get_retweeters_ids"], [731, 4, 1, "", "get_retweets"], [731, 4, 1, "", "get_saved_searches"], [731, 4, 1, "", "get_sent_messages"], [731, 4, 1, "", "get_similar_places"], [731, 4, 1, "", "get_specific_list"], [731, 4, 1, "", "get_supported_languages"], [731, 4, 1, "", "get_tos"], [731, 4, 1, "", "get_twitter_configuration"], [731, 4, 1, "", "get_user_ids_of_blocked_retweets"], [731, 4, 1, "", "get_user_suggestions"], [731, 4, 1, "", "get_user_suggestions_by_slug"], [731, 4, 1, "", "get_user_suggestions_statuses_by_slug"], [731, 4, 1, "", "get_user_timeline"], [731, 4, 1, "", "html_for_tweet"], [731, 4, 1, "", "invalidate_token"], [731, 4, 1, "", "is_list_member"], [731, 4, 1, "", "is_list_subscriber"], [731, 4, 1, "", "list_block_ids"], [731, 4, 1, "", "list_blocks"], [731, 4, 1, "", "list_mute_ids"], [731, 4, 1, "", "list_mutes"], [731, 4, 1, "", "lookup_friendships"], [731, 4, 1, "", "lookup_status"], [731, 4, 1, "", "lookup_user"], [731, 4, 1, "", "obtain_access_token"], [731, 4, 1, "", "post"], [731, 4, 1, "", "register"], [731, 4, 1, "", "remove_profile_banner"], [731, 4, 1, "", "report_spam"], [731, 4, 1, "", "request"], [731, 4, 1, "", "retweet"], [731, 4, 1, "", "retweeted_of_me"], [731, 4, 1, "", "reverse_geocode"], [731, 4, 1, "", "search"], [731, 4, 1, "", "search_gen"], [731, 4, 1, "", "search_geo"], [731, 4, 1, "", "search_tweets"], [731, 4, 1, "", "search_users"], [731, 4, 1, "", "send_direct_message"], [731, 4, 1, "", "show_friendship"], [731, 4, 1, "", "show_lists"], [731, 4, 1, "", "show_owned_lists"], [731, 4, 1, "", "show_saved_search"], [731, 4, 1, "", "show_status"], [731, 4, 1, "", "show_user"], [731, 4, 1, "", "subscribe_to_list"], [731, 4, 1, "", "unicode2utf8"], [731, 4, 1, "", "unsubscribe_from_list"], [731, 4, 1, "", "update_account_settings"], [731, 4, 1, "", "update_delivery_service"], [731, 4, 1, "", "update_friendship"], [731, 4, 1, "", "update_list"], [731, 4, 1, "", "update_profile"], [731, 4, 1, "", "update_profile_background_image"], [731, 4, 1, "", "update_profile_banner_image"], [731, 4, 1, "", "update_profile_colors"], [731, 4, 1, "", "update_profile_image"], [731, 4, 1, "", "update_status"], [731, 4, 1, "", "update_status_with_media"], [731, 4, 1, "", "upload_media"], [731, 4, 1, "", "upload_video"], [731, 4, 1, "", "user_info_from_id"], [731, 4, 1, "", "user_tweets"], [731, 4, 1, "", "verify_credentials"]], "nltk.twitter.Streamer": [[732, 4, 1, "", "__init__"], [732, 4, 1, "", "disconnect"], [732, 4, 1, "", "filter"], [732, 4, 1, "", "on_error"], [732, 4, 1, "", "on_success"], [732, 4, 1, "", "on_timeout"], [732, 4, 1, "", "register"], [732, 4, 1, "", "sample"]], "nltk.twitter.TweetViewer": [[733, 4, 1, "", "__init__"], [733, 4, 1, "", "check_date_limit"], [733, 5, 1, "", "counter"], [733, 4, 1, "", "do_continue"], [733, 5, 1, "", "do_stop"], [733, 4, 1, "", "handle"], [733, 4, 1, "", "on_finish"]], "nltk.twitter.TweetWriter": [[734, 4, 1, "", "__init__"], [734, 4, 1, "", "check_date_limit"], [734, 5, 1, "", "counter"], [734, 4, 1, "", "do_continue"], [734, 5, 1, "", "do_stop"], [734, 4, 1, "", "handle"], [734, 4, 1, "", "on_finish"], [734, 4, 1, "", "timestamped_file"]], "nltk.twitter.Twitter": [[735, 4, 1, "", "__init__"], [735, 4, 1, "", "tweets"]], "nltk.twitter.api": [[736, 3, 1, "", "BasicTweetHandler"], [736, 3, 1, "", "LocalTimezoneOffsetWithUTC"], [736, 3, 1, "", "TweetHandlerI"]], "nltk.twitter.api.BasicTweetHandler": [[736, 4, 1, "", "__init__"], [736, 5, 1, "", "counter"], [736, 4, 1, "", "do_continue"], [736, 5, 1, "", "do_stop"]], "nltk.twitter.api.LocalTimezoneOffsetWithUTC": [[736, 5, 1, "", "DSTOFFSET"], [736, 5, 1, "", "STDOFFSET"], [736, 4, 1, "", "utcoffset"]], "nltk.twitter.api.TweetHandlerI": [[736, 4, 1, "", "__init__"], [736, 4, 1, "", "check_date_limit"], [736, 4, 1, "", "handle"], [736, 4, 1, "", "on_finish"]], "nltk.twitter.common": [[737, 1, 1, "", "extract_fields"], [737, 1, 1, "", "get_header_field_list"], [737, 1, 1, "", "json2csv"], [737, 1, 1, "", "json2csv_entities"]], "nltk.twitter.twitter_demo": [[739, 2, 1, "", "ALL"], [739, 1, 1, "", "corpusreader_demo"], [739, 1, 1, "", "expand_tweetids_demo"], [739, 1, 1, "", "followtoscreen_demo"], [739, 1, 1, "", "limit_by_time_demo"], [739, 1, 1, "", "lookup_by_userid_demo"], [739, 1, 1, "", "sampletoscreen_demo"], [739, 1, 1, "", "search_demo"], [739, 1, 1, "", "setup"], [739, 1, 1, "", "streamtofile_demo"], [739, 1, 1, "", "tracktoscreen_demo"], [739, 1, 1, "", "tweets_by_user_demo"], [739, 1, 1, "", "twitterclass_demo"], [739, 1, 1, "", "verbose"], [739, 1, 1, "", "yesterday"]], "nltk.twitter.twitterclient": [[740, 3, 1, "", "Query"], [740, 3, 1, "", "Streamer"], [740, 3, 1, "", "TweetViewer"], [740, 3, 1, "", "TweetWriter"], [740, 3, 1, "", "Twitter"]], "nltk.twitter.twitterclient.Query": [[740, 4, 1, "", "__init__"], [740, 4, 1, "", "expand_tweetids"], [740, 4, 1, "", "register"], [740, 4, 1, "", "search_tweets"], [740, 4, 1, "", "user_info_from_id"], [740, 4, 1, "", "user_tweets"]], "nltk.twitter.twitterclient.Streamer": [[740, 4, 1, "", "__init__"], [740, 4, 1, "", "filter"], [740, 4, 1, "", "on_error"], [740, 4, 1, "", "on_success"], [740, 4, 1, "", "register"], [740, 4, 1, "", "sample"]], "nltk.twitter.twitterclient.TweetViewer": [[740, 4, 1, "", "handle"], [740, 4, 1, "", "on_finish"]], "nltk.twitter.twitterclient.TweetWriter": [[740, 4, 1, "", "__init__"], [740, 4, 1, "", "do_continue"], [740, 4, 1, "", "handle"], [740, 4, 1, "", "on_finish"], [740, 4, 1, "", "timestamped_file"]], "nltk.twitter.twitterclient.Twitter": [[740, 4, 1, "", "__init__"], [740, 4, 1, "", "tweets"]], "nltk.twitter.util": [[741, 3, 1, "", "Authenticate"], [741, 1, 1, "", "add_access_token"], [741, 1, 1, "", "credsfromfile"], [741, 1, 1, "", "guess_path"]], "nltk.twitter.util.Authenticate": [[741, 4, 1, "", "__init__"], [741, 4, 1, "", "load_creds"]], "nltk.util": [[742, 3, 1, "", "Index"], [742, 1, 1, "", "acyclic_branches_depth_first"], [742, 1, 1, "", "acyclic_breadth_first"], [742, 1, 1, "", "acyclic_depth_first"], [742, 1, 1, "", "acyclic_dic2tree"], [742, 1, 1, "", "bigrams"], [742, 1, 1, "", "binary_search_file"], [742, 1, 1, "", "breadth_first"], [742, 1, 1, "", "choose"], [742, 1, 1, "", "clean_html"], [742, 1, 1, "", "clean_url"], [742, 1, 1, "", "edge_closure"], [742, 1, 1, "", "edges2dot"], [742, 1, 1, "", "elementtree_indent"], [742, 1, 1, "", "everygrams"], [742, 1, 1, "", "filestring"], [742, 1, 1, "", "flatten"], [742, 1, 1, "", "guess_encoding"], [742, 1, 1, "", "in_idle"], [742, 1, 1, "", "invert_dict"], [742, 1, 1, "", "invert_graph"], [742, 1, 1, "", "ngrams"], [742, 1, 1, "", "pad_sequence"], [742, 1, 1, "", "pairwise"], [742, 1, 1, "", "parallelize_preprocess"], [742, 1, 1, "", "pr"], [742, 1, 1, "", "print_string"], [742, 1, 1, "", "re_show"], [742, 1, 1, "", "set_proxy"], [742, 1, 1, "", "skipgrams"], [742, 1, 1, "", "tokenwrap"], [742, 1, 1, "", "transitive_closure"], [742, 1, 1, "", "trigrams"], [742, 1, 1, "", "unique_list"], [742, 1, 1, "", "unweighted_minimum_spanning_dict"], [742, 1, 1, "", "unweighted_minimum_spanning_digraph"], [742, 1, 1, "", "unweighted_minimum_spanning_tree"]], "nltk.util.Index": [[742, 4, 1, "", "__init__"]], "nltk.wsd": [[744, 1, 1, "", "lesk"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:attribute", "6": "py:property", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"nltk": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 761, 774, 775, 799, 800, 806, 807, 810], "packag": [0, 1, 20, 48, 60, 77, 93, 105, 107, 227, 231, 269, 293, 309, 345, 351, 429, 470, 476, 496, 531, 538, 548, 549, 590, 616, 667, 706, 729, 761], "subpackag": [0, 105, 538, 548], "submodul": [0, 1, 20, 48, 60, 77, 93, 105, 107, 231, 269, 293, 309, 345, 351, 429, 470, 476, 496, 531, 538, 548, 549, 590, 616, 667, 706, 729], "modul": [0, 1, 3, 5, 7, 9, 11, 13, 15, 16, 18, 19, 20, 43, 44, 45, 46, 47, 48, 49, 51, 53, 55, 57, 58, 60, 65, 69, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 236, 237, 240, 241, 242, 243, 256, 268, 269, 273, 277, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 301, 303, 304, 305, 306, 307, 308, 309, 312, 314, 318, 319, 321, 324, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 359, 379, 382, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 429, 432, 445, 447, 448, 449, 451, 454, 455, 458, 459, 460, 464, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 514, 517, 518, 519, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 608, 616, 637, 639, 641, 642, 644, 645, 646, 647, 649, 651, 653, 654, 655, 656, 657, 658, 659, 660, 663, 667, 679, 681, 683, 685, 686, 688, 690, 691, 692, 693, 694, 695, 697, 698, 700, 701, 703, 704, 706, 714, 719, 720, 721, 722, 723, 725, 727, 728, 729, 736, 737, 739, 740, 741, 742, 743, 747, 775], "content": [0, 1, 20, 48, 60, 77, 93, 105, 107, 214, 231, 269, 293, 309, 345, 351, 429, 470, 476, 496, 531, 616, 667, 706, 729, 759], "app": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "chartpars": 2, "chartparser_app": 3, "chunkpars": 4, "chunkparser_app": 5, "colloc": [6, 100, 101, 102, 103, 757], "collocations_app": 7, "concord": [8, 758], "concordance_app": 9, "nemo": 10, "nemo_app": 11, "rdparser": 12, "rdparser_app": 13, "srparser": 14, "srparser_app": 15, "wordfreq_app": 16, "wordnet": [17, 221, 495, 759, 803, 804], "wordnet_app": 18, "book": [19, 763], "ccg": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 750, 751], "backwardappl": 21, "backwardbx": 22, "backwardcombin": 23, "backwardcomposit": 24, "backwardsx": 25, "backwardt": 26, "ccgchart": 27, "ccgchartpars": 28, "ccgedg": 29, "ccgleafedg": 30, "ccglexicon": 31, "directedbinarycombin": 32, "forwardappl": 33, "forwardcombin": 34, "forwardcomposit": 35, "forwardsubstitut": 36, "forwardt": 37, "undirectedbinarycombin": 38, "undirectedcomposit": 39, "undirectedfunctionappl": 40, "undirectedsubstitut": 41, "undirectedtyperais": 42, "api": [43, 65, 78, 94, 173, 284, 303, 393, 487, 517, 532, 637, 679, 736], "chart": [44, 395, 751, 784], "combin": [45, 751], "lexicon": [46, 197, 751, 759], "logic": [47, 460, 770, 774, 778], "chat": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 445, 752], "eliza": 49, "eliza_chat": 50, "iesha": 51, "iesha_chat": 52, "rude": 53, "rude_chat": 54, "suntsu": 55, "suntsu_chat": 56, "util": [57, 76, 90, 98, 218, 224, 242, 308, 406, 469, 474, 494, 530, 660, 741, 742, 775, 802], "zen": 58, "zen_chat": 59, "chunk": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 180, 754, 759], "regexpchunkpars": [60, 62, 754], "regexpchunkrul": 60, "tag": [60, 213, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 759, 785, 795], "pattern": 60, "effici": 60, "emac": 60, "tip": 60, "unresolv": 60, "issu": [60, 608, 758, 777, 795], "chunkscor": 61, "regexppars": [63, 754], "accuraci": [64, 317], "conllstr2tre": 66, "conlltags2tre": 67, "ieerstr2tre": 68, "named_ent": 69, "ne_chunk": 70, "ne_chunk_s": 71, "regexp": [72, 491, 647, 796], "tagstr2tre": 73, "tree2conllstr": 74, "tree2conlltag": 75, "classifi": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 755], "featur": [77, 80, 243, 248, 535, 765, 766, 784, 793], "featureset": 77, "train": [77, 293, 769], "decisiontre": 79, "maxent": 80, "terminolog": [80, 693, 694], "convert": 80, "input": 80, "joint": 80, "megam": 81, "naivebay": 82, "positivenaivebay": 83, "rte_classifi": 84, "scikitlearn": 85, "senna": [86, 527], "svm": 87, "tadm": 88, "textcat": 89, "weka": 91, "cli": 92, "cluster": [93, 94, 95, 96, 97, 98], "em": [95, 798], "gaac": 96, "kmean": 97, "collect": [99, 756], "bigramcollocationfind": 101, "quadgramcollocationfind": 102, "trigramcollocationfind": 103, "compat": 104, "corpu": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 753, 759, 760, 776, 785, 798], "avail": 105, "corpora": [105, 759, 785], "reader": [105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 753, 759, 760, 798], "function": [105, 107, 781, 790, 797, 802], "europarl_raw": 106, "alignedcorpusread": 108, "alpinocorpusread": 109, "bnccorpusread": 110, "bracketparsecorpusread": 111, "childescorpusread": [112, 753], "cmudictcorpusread": 113, "categorizedbracketparsecorpusread": 114, "categorizedplaintextcorpusread": 115, "categorizedsentencescorpusread": 116, "categorizedtaggedcorpusread": 117, "chasencorpusread": 118, "chunkedcorpusread": 119, "comparativesentencescorpusread": 120, "conllchunkcorpusread": 121, "conllcorpusread": 122, "crubadancorpusread": 123, "dependencycorpusread": 124, "europarlcorpusread": 125, "framenetcorpusread": 126, "ieercorpusread": 127, "ipipancorpusread": 128, "indiancorpusread": 129, "knbcorpusread": 130, "linthesauruscorpusread": 131, "mtecorpusread": 132, "mwappdbcorpusread": 133, "macmorphocorpusread": 134, "nkjpcorpusread": 135, "npschatcorpusread": 136, "nombankcorpusread": 137, "nonbreakingprefixescorpusread": 138, "opinionlexiconcorpusread": 139, "ppattachmentcorpusread": 140, "panlexlitecorpusread": 141, "panlexswadeshcorpusread": 142, "pl196xcorpusread": 143, "plaintextcorpusread": 144, "portuguesecategorizedplaintextcorpusread": 145, "propbankcorpusread": 146, "prosconscorpusread": 147, "rtecorpusread": 148, "reviewscorpusread": 149, "semcorcorpusread": 150, "sensevalcorpusread": 151, "sentisynset": [152, 792], "sentiwordnetcorpusread": 153, "sinicatreebankcorpusread": 154, "stringcategorycorpusread": 155, "swadeshcorpusread": 156, "switchboardcorpusread": 157, "teicorpusview": 158, "taggedcorpusread": 159, "timitcorpusread": 160, "timittaggedcorpusread": 161, "toolboxcorpusread": 162, "twittercorpusread": 163, "udhrcorpusread": 164, "unicharscorpusread": 165, "verbnetcorpusread": 166, "wordlistcorpusread": 167, "wordnetcorpusread": 168, "wordneticcorpusread": 169, "xmlcorpusread": 170, "ycoecorpusread": 171, "align": [172, 669, 779, 798], "bcp47": 174, "bnc": [175, 749], "bracket_pars": [176, 716], "categorized_s": 177, "chasen": 178, "child": [179, 753], "cmudict": 181, "comparative_s": 182, "conll": [183, 762], "crubadan": [184, 760], "depend": [185, 762, 770, 771], "framenet": [186, 759, 767], "ieer": 187, "indian": 188, "ipipan": 189, "knbc": 190, "lin": 191, "markdown": 192, "mte": 193, "nkjp": 194, "nombank": 195, "nps_chat": [196, 759], "opinion_lexicon": [197, 759], "opinion": 197, "inform": [197, 205, 763, 788], "panlex_lit": 198, "panlex_swadesh": 199, "pl196x": 200, "plaintext": [201, 759], "ppattach": [202, 759], "propbank": [203, 759, 787], "pros_con": [204, 759], "review": 205, "custom": [205, 766], "rte": [206, 759], "semcor": [207, 759], "sensev": [208, 759], "sentiwordnet": [209, 759, 792], "sinica_treebank": 210, "string_categori": 211, "switchboard": 212, "timit": [214, 759], "toolbox": [215, 663, 664, 665, 666, 759, 797], "twitter": [216, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741], "udhr": 217, "verbnet": [219, 759], "wordlist": 220, "xmldoc": 222, "ycoe": 223, "data": [225, 293, 746, 759, 761, 762, 807], "decor": [226, 782], "download": [227, 228, 229, 230], "directori": 227, "server": [227, 746], "download_gui": 229, "download_shel": 230, "draw": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "cfgdemo": 232, "cfgeditor": 233, "productionlist": 234, "treeview": 235, "cfg": [236, 257, 784], "dispers": 237, "dispersion_plot": 238, "draw_tre": 239, "tabl": [240, 757, 759], "tree": [241, 608, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 799, 800, 803], "featstruct": [243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 766], "lightweight": 243, "structur": [243, 765, 766, 770, 793], "featdict": 244, "featlist": 245, "featstructread": 247, "rangefeatur": 249, "slash": 250, "slashfeatur": 251, "type": [252, 759, 766, 778], "conflict": [253, 766], "subsum": [254, 789], "unifi": [255, 789], "grammar": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 750, 751, 762, 765, 768, 772, 773, 784], "dependencygrammar": 258, "dependencyproduct": 259, "nontermin": [260, 266], "pcfg": 261, "probabilisticdependencygrammar": 262, "probabilisticproduct": 263, "product": 264, "induce_pcfg": 265, "read_grammar": 267, "help": 268, "infer": [269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 771, 774], "cfgreadingcommand": 270, "discoursetest": 271, "drtgluereadingcommand": 272, "mace": 273, "macecommand": 274, "parallelproverbuild": 275, "parallelproverbuildercommand": 276, "prover9": [277, 774], "prover9command": 278, "readingcommand": 279, "resolutionprov": 280, "resolutionprovercommand": 281, "tableauprov": 282, "tableauprovercommand": 283, "discours": [285, 763, 764], "nonmonoton": [286, 782], "resolut": [287, 789], "tableau": 288, "intern": [289, 775], "jsontag": 290, "langnam": 291, "lazyimport": 292, "lm": [293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 549, 550, 551, 552, 553, 777], "languag": [293, 304, 760, 776, 806], "model": [293, 304, 305, 438, 769, 774, 790, 798], "prepar": 293, "us": [293, 751, 752, 753, 757, 769, 770, 774], "absolutediscountinginterpol": 294, "kneserneyinterpol": 295, "laplac": 296, "lidston": 297, "mle": 298, "ngramcount": 299, "stupidbackoff": 300, "vocabulari": 301, "wittenbellinterpol": 302, "counter": 304, "preprocess": 306, "smooth": 307, "metric": [309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 698, 780, 793], "annotationtask": 310, "bigramassocmeasur": 311, "confusionmatrix": 312, "contingencymeasur": 313, "paic": [314, 783], "quadgramassocmeasur": 315, "trigramassocmeasur": 316, "agreement": 318, "alin": 319, "exampl": [319, 747, 758, 779, 782, 785], "usag": [319, 432, 608, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805], "approxrand": 320, "associ": [321, 757, 780], "binary_dist": 322, "custom_dist": 323, "distanc": [324, 780], "edit_dist": 325, "edit_distance_align": 326, "f_measur": 327, "fractional_pres": 328, "ghd": 329, "interval_dist": 330, "jaccard_dist": 331, "log_likelihood": [332, 427], "masi_dist": 333, "pk": 334, "precis": [335, 798], "presenc": 336, "ranks_from_scor": 337, "ranks_from_sequ": 338, "recal": [339, 798], "score": [340, 780], "segment": [341, 785], "spearman": 342, "spearman_correl": 343, "windowdiff": 344, "misc": [345, 346, 347, 348, 349, 350, 781], "babelfish": 346, "chomski": 347, "minimalset": 348, "sort": [349, 781], "wordfind": [350, 781], "pars": [351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 721, 759, 762, 764, 765, 766, 772, 778, 784, 793, 797, 799], "bllippars": 352, "bottomupchartpars": 353, "bottomupleftcornerchartpars": 354, "bottomupprobabilisticchartpars": 355, "corenlpdependencypars": 356, "corenlppars": 357, "dependencyevalu": 358, "dependencygraph": 359, "earleychartpars": 360, "featurebottomupchartpars": 361, "featurebottomupleftcornerchartpars": 362, "featureearleychartpars": 363, "featureincrementalbottomupchartpars": 364, "featureincrementalbottomupleftcornerchartpars": 365, "featureincrementalchartpars": 366, "featureincrementaltopdownchartpars": 367, "featuretopdownchartpars": 368, "incrementalbottomupchartpars": 369, "incrementalbottomupleftcornerchartpars": 370, "incrementalchartpars": 371, "incrementalleftcornerchartpars": 372, "incrementaltopdownchartpars": 373, "insidechartpars": 374, "leftcornerchartpars": 375, "longestchartpars": 376, "maltpars": 377, "naivebayesdependencyscor": 378, "nonprojectivedependencypars": 379, "probabilisticnonprojectivepars": 380, "probabilisticprojectivedependencypars": 381, "projectivedependencypars": 382, "randomchartpars": 383, "recursivedescentpars": 384, "shiftreducepars": 385, "steppingchartpars": 386, "steppingrecursivedescentpars": 387, "steppingshiftreducepars": 388, "topdownchartpars": 389, "transitionpars": 390, "unsortedchartpars": 391, "viterbipars": 392, "bllip": 394, "corenlp": 396, "earleychart": 397, "evalu": [398, 451, 783, 790, 795, 798], "featurechart": 399, "gener": [400, 768], "malt": [401, 762], "pchart": 402, "recursivedesc": 403, "shiftreduc": 404, "stanford": [405, 529, 655], "viterbi": [407, 784], "probabl": [408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 786], "conditionalfreqdist": [409, 786], "conditionalprobdist": 410, "crossvalidationprobdist": 411, "dictionaryconditionalprobdist": 412, "dictionaryprobdist": 413, "eleprobdist": 414, "freqdist": [415, 786], "heldoutprobdist": 416, "kneserneyprobdist": 417, "laplaceprobdist": 418, "lidstoneprobdist": 419, "mleprobdist": 420, "mutableprobdist": 421, "simplegoodturingprobdist": 422, "uniformprobdist": 423, "wittenbellprobdist": 424, "add_log": 425, "entropi": 426, "sum_log": 428, "sem": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "applicationexpress": 430, "assign": 431, "boxer": 432, "dr": 433, "drtexpress": 434, "express": [435, 766], "fstructur": 436, "logicalexpressionexcept": 437, "undefin": 439, "valuat": [440, 752, 790], "variabl": [441, 766, 778], "ariti": 442, "binding_op": 443, "boolean_op": 444, "chat80": [445, 752], "overview": [445, 757, 759, 761, 764, 766, 778, 794], "read": [445, 752, 759, 761, 763, 766, 785], "80": [445, 752], "file": [445, 752, 761, 784], "concept": [445, 752], "persist": [445, 752], "individu": [445, 752], "lexic": [445, 752, 767], "item": [445, 752], "claus": [446, 750], "cooper_storag": 447, "drt": [448, 764], "drt_glue_demo": 449, "equality_pr": 450, "evaluate_s": 452, "extract_rel": 453, "glue": [454, 770, 771], "hole": 455, "interpret_s": 456, "is_rel": 457, "lfg": [458, 770], "linearlog": 459, "parse_s": 461, "read_log": 462, "read_valu": 463, "relextract": [464, 788], "root_semrep": 465, "rtupl": 466, "set2rel": 467, "skolem": 468, "sentiment": [470, 471, 472, 473, 474, 475, 791], "sentimentanalyz": 471, "sentimentintensityanalyz": 472, "sentiment_analyz": 473, "vader": [475, 791], "stem": [476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 783, 785, 794], "arlstem": [477, 794], "arlstem2": [478, 794], "cistem": 479, "isristemm": 480, "lancasterstemm": 481, "porterstemm": 482, "rslpstemmer": 483, "regexpstemm": 484, "snowballstemm": 485, "wordnetlemmat": 486, "isri": 488, "lancast": 489, "porter": [490, 794], "rslp": 492, "snowbal": [493, 794], "affixtagg": 497, "bigramtagg": 498, "brilltagg": 499, "brilltaggertrain": 500, "crftagger": 501, "classifierbasedpostagg": 502, "classifierbasedtagg": 503, "defaulttagg": 504, "hiddenmarkovmodeltagg": 505, "hiddenmarkovmodeltrain": 506, "hunpostagg": 507, "ngramtagg": 508, "perceptrontagg": 509, "regexptagg": 510, "sennachunktagg": 511, "sennanertagg": 512, "sennatagg": 513, "tnt": 514, "trigramtagg": 515, "unigramtagg": 516, "brill": [518, 795], "brill_train": 519, "crf": 520, "hmm": [521, 786], "hunpo": 522, "map": [523, 760, 790], "perceptron": 524, "pos_tag": 525, "pos_tag_s": 526, "sequenti": [528, 795], "tbl": [531, 532, 533, 534, 535, 536, 537], "demo": [533, 770], "erroranalysi": 534, "rule": [536, 754], "templat": 537, "test": [538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 748, 749, 751, 754, 755, 759, 761, 763, 764, 766, 773, 775, 777, 778, 779, 781, 784, 786, 789, 790, 793, 794, 795, 796, 797, 799, 800, 801, 803], "all": [539, 803], "childes_fixt": 540, "classify_fixt": 541, "conftest": 542, "gensim_fixt": 543, "gluesemantics_malt_fixt": 544, "portuguese_en_fixt": 545, "probability_fixt": 546, "setup_fixt": 547, "unit": [548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 764, 767, 775, 781, 784, 790, 794, 797, 799, 800, 801], "test_count": 550, "test_model": 551, "test_preprocess": 552, "test_vocabulari": 553, "test_alin": 554, "test_bllip": 555, "test_bril": 556, "test_cfd_mut": 557, "test_cfg2chomski": 558, "test_chunk": 559, "test_classifi": 560, "test_colloc": 561, "test_concord": 562, "test_corenlp": 563, "test_corpora": 564, "test_corpus_view": 565, "test_data": 566, "test_disagr": 567, "test_dist": 568, "test_download": 569, "test_freqdist": 570, "test_hmm": 571, "test_json2csv_corpu": 572, "test_json_seri": 573, "test_metr": 574, "test_naivebay": 575, "test_nombank": 576, "test_pl196x": 577, "test_pos_tag": 578, "test_rib": 579, "test_rte_classifi": 580, "test_seekable_unicode_stream_read": 581, "test_senna": 582, "test_stem": 583, "test_tag": 584, "test_tgrep": 585, "test_token": 586, "test_twitter_auth": 587, "test_util": 588, "test_wordnet": 589, "translat": [590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 798], "test_bleu": 591, "test_gdfa": 592, "test_ibm1": 593, "test_ibm2": 594, "test_ibm3": 595, "test_ibm4": 596, "test_ibm5": 597, "test_ibm_model": 598, "test_meteor": 599, "test_nist": 600, "test_stack_decod": 601, "text": [602, 603, 604, 605, 606, 607, 785], "concordanceindex": 603, "contextindex": 604, "textcollect": 606, "tokensearch": 607, "tgrep": [608, 609, 610, 611, 612, 613, 614, 615], "search": [608, 785], "implement": [608, 759], "caveat": 608, "known": 608, "note": [608, 808], "ancestor": 609, "tgrep_compil": 610, "tgrep_nod": 611, "tgrep_posit": 612, "tgrep_token": 613, "treepositions_no_leav": 614, "unique_ancestor": 615, "token": [616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 793, 796], "blanklinetoken": 617, "legalitysyllabletoken": 618, "linetoken": 619, "mwetoken": [620, 796], "nltkwordtoken": [621, 796], "punktsentencetoken": [622, 796], "regexptoken": 623, "repptoken": 624, "sexprtoken": 625, "spacetoken": 626, "stanfordsegment": 627, "syllabletoken": 628, "tabtoken": 629, "texttilingtoken": [630, 796], "toktoktoken": 631, "treebankworddetoken": 632, "treebankwordtoken": 633, "tweettoken": [634, 796], "whitespacetoken": 635, "wordpuncttoken": 636, "blankline_token": 638, "casual": 639, "casual_token": 640, "destruct": 641, "legality_principl": 642, "line_token": 643, "mwe": 644, "nist": [645, 699], "punkt": 646, "regexp_token": 648, "repp": 649, "sent_token": 650, "sexpr": 651, "sexpr_token": 652, "simpl": [653, 751, 785, 793, 806], "sonority_sequenc": 654, "stanford_segment": 656, "texttil": 657, "toktok": 658, "treebank": [659, 785], "word_token": 661, "wordpunct_token": 662, "standardformat": [664, 797], "toolboxdata": [665, 797], "toolboxset": 666, "aligneds": 668, "ibmmodel": 670, "ibmmodel1": 671, "ibmmodel2": 672, "ibmmodel3": 673, "ibmmodel4": 674, "ibmmodel5": 675, "phraset": 676, "stackdecod": 677, "alignment_error_r": 678, "bleu": [680, 748], "bleu_scor": 681, "chrf": 682, "chrf_score": 683, "extract": [684, 788], "gale_church": 685, "gdfa": 686, "gleu": 687, "gleu_scor": 688, "grow_diag_final_and": 689, "ibm1": 690, "notat": [690, 691, 692, 693, 694], "refer": [690, 691, 692, 693, 694], "ibm2": 691, "ibm3": 692, "ibm4": 693, "ibm5": 694, "ibm_model": 695, "meteor": [696, 779], "meteor_scor": 697, "nist_scor": 700, "phrase_bas": 701, "ribe": 702, "ribes_scor": 703, "stack_decod": 704, "trace": [705, 766, 784], "immutablemultiparentedtre": [707, 799], "immutableparentedtre": [708, 799], "immutableprobabilistictre": 709, "immutabletre": 710, "multiparentedtre": [711, 799], "parentedtre": [712, 799], "probabilistictre": [713, 799], "treeprettyprint": [715, 727, 800], "chomsky_normal_form": 717, "collapse_unari": 718, "immut": 719, "parent": [720, 799], "prettyprint": [722, 800], "probabilist": [723, 784], "sinica_pars": 724, "transform": 725, "un_chomsky_normal_form": 726, "treetransform": [728, 801], "authent": 730, "queri": [731, 752], "streamer": 732, "tweetview": 733, "tweetwrit": 734, "common": [737, 759, 804], "credsfromfil": 738, "twitter_demo": 739, "twittercli": 740, "wsd": [743, 744, 805], "lesk": [744, 805], "contribut": 745, "instal": [746, 774, 807], "interact": 746, "via": 746, "proxi": 746, "web": 746, "command": 746, "line": 746, "manual": 746, "sampl": [748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805], "check": [749, 763], "word": [749, 759, 769, 785, 803, 805], "access": [749, 759, 760, 766, 776, 785, 803], "sentenc": [749, 768, 785], "A": [749, 770], "lazi": [749, 761], "loader": [749, 761], "combinatori": [750, 751], "categori": [750, 751], "rel": 750, "conjunct": [750, 751], "unicod": 750, "support": 750, "ccg_semant": 751, "semant": [751, 764, 770, 771, 790], "No": [751, 779], "complex": 751, "from": [751, 761, 763, 768, 790], "publish": 751, "paper": 751, "comput": 751, "sql": 752, "setup": [753, 763, 780], "how": 753, "basic": 753, "stuff": 753, "regress": [754, 755, 759, 761, 763, 764, 766, 777, 778, 795, 796, 799, 803], "chunkparseri": 754, "chunkstr": 754, "typedmaxentfeatureencod": 755, "trie": 756, "lazyiteratorlist": 756, "finder": 757, "filter": 757, "candid": 757, "measur": [757, 780], "conting": 757, "valu": [757, 766, 783], "rank": 757, "correl": 757, "keyword": 757, "list": [758, 759, 766, 785], "patch": 758, "2088": 758, "object": [759, 798], "categor": 759, "other": [759, 761, 764], "comparative_sent": 759, "product_reviews_1": 759, "product_reviews_2": 759, "sentence_polar": 759, "shakespear": 759, "subject": 759, "twitter_sampl": 759, "multext_east": 759, "class": [759, 781, 784, 801], "automat": 759, "creat": 759, "instanc": 759, "new": 759, "method": [759, 760, 766, 774, 799], "stream": 759, "back": 759, "view": 759, "write": [759, 761], "don": 759, "t": 759, "reinvent": 759, "wheel": 759, "design": 759, "constructor": 759, "concaten": 759, "slice": 759, "multipl": 759, "iter": 759, "seekableunicodestreamread": 759, "size": 759, "argument": [759, 790], "seek": 759, "tell": 759, "squash": [759, 766, 786, 799], "bug": [759, 766, 786, 799], "code": 760, "helper": 760, "ngram": 760, "frequenc": 760, "load": [761, 784, 803], "resourc": 761, "make": 761, "local": 761, "copi": 761, "find": [761, 766], "cach": 761, "retriev": 761, "sourc": 761, "buffer": 761, "gzip": 761, "json": 761, "encod": [761, 785], "decod": 761, "project": 762, "non": [762, 766], "integr": 762, "parser": [762, 764, 771, 778, 784], "introduct": [763, 774], "thread": 763, "consist": 763, "ad": 763, "background": 763, "knowledg": 763, "represent": 764, "theori": 764, "simplifi": [764, 778], "fol": 764, "resolve_anaphora": 764, "equiv": [764, 774], "replac": [764, 778], "bound": 764, "unbound": 764, "same": 764, "side": 764, "doubl": 764, "error": [764, 778, 798], "pretti": 764, "print": 764, "featgram": 765, "graph": [765, 770], "bind": [765, 766], "oper": 765, "unif": 766, "string": 766, "path": 766, "reentranc": 766, "equal": [766, 778], "set": [766, 807], "tupl": 766, "light": 766, "weight": 766, "dictionari": 766, "mutat": 766, "remov": 766, "hash": 766, "dict": 766, "retract": 766, "frame": [767, 803], "annot": 767, "document": 767, "context": [768, 784], "free": [768, 778, 784], "gensim": 769, "demonstr": 769, "embed": 769, "pre": 769, "prune": 769, "binari": [769, 807], "gluesemant": 770, "linear": 770, "john": 770, "walk": 770, "dog": 770, "everi": 770, "girl": 770, "chase": 770, "compil": 770, "man": 770, "formula": [770, 790], "f": 770, "gluesemantics_malt": 771, "initi": 771, "autom": 771, "deriv": 771, "With": 771, "grammartestsuit": 773, "suit": 773, "build": 774, "interfac": [774, 792, 803], "theorem": [774, 789], "prover": [774, 789], "The": 774, "provercommand": 774, "builder": 774, "mace4": 774, "overridden": 775, "read_str": 775, "japanes": 776, "process": [776, 785, 790], "knb": 776, "jeita": 776, "167": 777, "367": 777, "380": 777, "lambda": 778, "calculu": 778, "untyp": 778, "under": 778, "alpha": 778, "convers": 778, "numer": 778, "betaconversiontestsuit": 778, "pl": 778, "dure": 778, "base": [779, 790], "wikipedia": 779, "standard": 780, "ir": 780, "miscellan": [780, 781], "confus": 780, "matrix": 780, "reason": 782, "close": [782, 797], "domain": 782, "assumpt": 782, "uniqu": 782, "name": [782, 788], "world": 782, "multi": 782, "default": 782, "s": 783, "statist": 783, "algorithm": [783, 798, 805], "understem": 783, "overstem": 783, "rd": 784, "recurs": 784, "descent": 784, "sr": 784, "shift": 784, "reduc": 784, "increment": 784, "larg": 784, "featstructnontermin": 784, "portuguese_en": 785, "portugues": 785, "python": [785, 807], "program": 785, "machado": 785, "macmorpho": 785, "floresta": 785, "charact": 785, "task": 785, "concordanc": 785, "part": 785, "speech": 785, "stopword": 785, "some": [786, 806], "estim": 786, "maximum": 786, "likelihood": 786, "witten": 786, "bell": 786, "kneser": 786, "nei": 786, "entiti": 788, "relat": [788, 790, 803], "most_general_unif": 789, "is_tautolog": 789, "prove": 789, "proof": 789, "question": 789, "answer": 789, "batch": 790, "applic": 790, "proposit": 790, "i": 790, "satisfi": 790, "blackburn": 790, "bo": 790, "testsuit": 790, "syntax": 790, "cooper": 790, "storag": 790, "analysi": 791, "lookup": 792, "easyinstal": 793, "stemmer": 794, "tagger": 795, "trainer": 795, "1025": 795, "2483": 795, "align_token": 796, "case": 797, "open": 797, "open_str": 797, "line_num": 797, "raw_field": 797, "field": 797, "marker": 797, "to_sfm_str": 797, "ibm": 798, "1": [798, 803], "rate": 798, "aer": 798, "fromlist": 799, "import": 800, "synset": 803, "lemma": 803, "verb": 803, "similar": 803, "morphi": 803, "closur": 803, "endless": 803, "vs": 803, "intract": 803, "2": 803, "first": 803, "solut": 803, "acyclic_tre": 803, "better": 803, "mst": 803, "altern": 803, "version": 803, "teardown": 803, "wordnet_lch": 804, "lowest": 804, "hypernym": 804, "sens": 805, "disambigu": 805, "natur": 806, "toolkit": 806, "thing": 806, "you": 806, "can": 806, "do": 806, "next": 806, "step": 806, "up": 807, "environ": 807, "mac": 807, "unix": 807, "window": 807, "32": 807, "bit": 807, "third": 807, "parti": 807, "softwar": 807, "releas": 808, "2023": 808, "2022": 808, "2021": 808, "2020": 808, "2019": 808, "2018": 808, "2017": 808, "2016": 808, "2015": 808, "2014": 808, "2013": 808, "2012": 808, "2011": 808, "2010": 808, "2009": 808, "2008": 808, "2007": 808, "2006": 808, "2005": 808, "index": 809, "team": 810, "former": 810, "member": 810}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})